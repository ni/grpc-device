name: Create Client Artifacts

on:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows Artifacts", artifact: "Windows.tar.xz",
            os: windows-latest,
          }
        - {
            name: "Linux Artifacts", artifact: "Linux.tar.xz",
            os: ubuntu-18.04,
          }

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2

    - name: Setup python3
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install build dependencies
      run: python -m pip install -r python_build_requirements.txt

    - name: Stage Client Files
      run: |
        python source/codegen/stage_client_files.py -o ${{ runner.temp }}/staging/

    - name: Tar Linux Client Files
      if: ${{ (runner.os == 'Linux') }}
      run: |
        tar -cvzf ni-grpc-device-client.tar.gz -C ${{ runner.temp }}/staging/ .

    - name: Upload Linux Client Files Artifact
      uses: actions/upload-artifact@v2
      if: ${{ (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/releases')) && (runner.os == 'Linux') }}
      with:
        name: ni-grpc-device-client-Linux
        path: ni-grpc-device-client.tar.gz
        retention-days: 5

    - name: Upload Windows Client Files Artifact
      uses: actions/upload-artifact@v2
      if: ${{ (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/releases')) && (runner.os == 'Windows') }}
      with:
        name: ni-grpc-device-client
        path: |
          ${{ runner.temp }}/staging
        retention-days: 5
