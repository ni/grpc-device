# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import nixnet_pb2 as nixnet__pb2


class NiXnetStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Blink = channel.unary_unary(
                '/nixnet_grpc.NiXnet/Blink',
                request_serializer=nixnet__pb2.BlinkRequest.SerializeToString,
                response_deserializer=nixnet__pb2.BlinkResponse.FromString,
                )
        self.Clear = channel.unary_unary(
                '/nixnet_grpc.NiXnet/Clear',
                request_serializer=nixnet__pb2.ClearRequest.SerializeToString,
                response_deserializer=nixnet__pb2.ClearResponse.FromString,
                )
        self.ConnectTerminals = channel.unary_unary(
                '/nixnet_grpc.NiXnet/ConnectTerminals',
                request_serializer=nixnet__pb2.ConnectTerminalsRequest.SerializeToString,
                response_deserializer=nixnet__pb2.ConnectTerminalsResponse.FromString,
                )
        self.ConvertTimestamp100nsTo1ns = channel.unary_unary(
                '/nixnet_grpc.NiXnet/ConvertTimestamp100nsTo1ns',
                request_serializer=nixnet__pb2.ConvertTimestamp100nsTo1nsRequest.SerializeToString,
                response_deserializer=nixnet__pb2.ConvertTimestamp100nsTo1nsResponse.FromString,
                )
        self.ConvertTimestamp1nsTo100ns = channel.unary_unary(
                '/nixnet_grpc.NiXnet/ConvertTimestamp1nsTo100ns',
                request_serializer=nixnet__pb2.ConvertTimestamp1nsTo100nsRequest.SerializeToString,
                response_deserializer=nixnet__pb2.ConvertTimestamp1nsTo100nsResponse.FromString,
                )
        self.CreateSession = channel.unary_unary(
                '/nixnet_grpc.NiXnet/CreateSession',
                request_serializer=nixnet__pb2.CreateSessionRequest.SerializeToString,
                response_deserializer=nixnet__pb2.CreateSessionResponse.FromString,
                )
        self.CreateSessionByRef = channel.unary_unary(
                '/nixnet_grpc.NiXnet/CreateSessionByRef',
                request_serializer=nixnet__pb2.CreateSessionByRefRequest.SerializeToString,
                response_deserializer=nixnet__pb2.CreateSessionByRefResponse.FromString,
                )
        self.DbAddAlias = channel.unary_unary(
                '/nixnet_grpc.NiXnet/DbAddAlias',
                request_serializer=nixnet__pb2.DbAddAliasRequest.SerializeToString,
                response_deserializer=nixnet__pb2.DbAddAliasResponse.FromString,
                )
        self.DbAddAlias64 = channel.unary_unary(
                '/nixnet_grpc.NiXnet/DbAddAlias64',
                request_serializer=nixnet__pb2.DbAddAlias64Request.SerializeToString,
                response_deserializer=nixnet__pb2.DbAddAlias64Response.FromString,
                )
        self.DbCloseDatabase = channel.unary_unary(
                '/nixnet_grpc.NiXnet/DbCloseDatabase',
                request_serializer=nixnet__pb2.DbCloseDatabaseRequest.SerializeToString,
                response_deserializer=nixnet__pb2.DbCloseDatabaseResponse.FromString,
                )
        self.DbCreateObject = channel.unary_unary(
                '/nixnet_grpc.NiXnet/DbCreateObject',
                request_serializer=nixnet__pb2.DbCreateObjectRequest.SerializeToString,
                response_deserializer=nixnet__pb2.DbCreateObjectResponse.FromString,
                )
        self.DbDeleteObject = channel.unary_unary(
                '/nixnet_grpc.NiXnet/DbDeleteObject',
                request_serializer=nixnet__pb2.DbDeleteObjectRequest.SerializeToString,
                response_deserializer=nixnet__pb2.DbDeleteObjectResponse.FromString,
                )
        self.DbDeploy = channel.unary_unary(
                '/nixnet_grpc.NiXnet/DbDeploy',
                request_serializer=nixnet__pb2.DbDeployRequest.SerializeToString,
                response_deserializer=nixnet__pb2.DbDeployResponse.FromString,
                )
        self.DbFindObject = channel.unary_unary(
                '/nixnet_grpc.NiXnet/DbFindObject',
                request_serializer=nixnet__pb2.DbFindObjectRequest.SerializeToString,
                response_deserializer=nixnet__pb2.DbFindObjectResponse.FromString,
                )
        self.DbGetDatabaseListSizes = channel.unary_unary(
                '/nixnet_grpc.NiXnet/DbGetDatabaseListSizes',
                request_serializer=nixnet__pb2.DbGetDatabaseListSizesRequest.SerializeToString,
                response_deserializer=nixnet__pb2.DbGetDatabaseListSizesResponse.FromString,
                )
        self.DbGetPropertySize = channel.unary_unary(
                '/nixnet_grpc.NiXnet/DbGetPropertySize',
                request_serializer=nixnet__pb2.DbGetPropertySizeRequest.SerializeToString,
                response_deserializer=nixnet__pb2.DbGetPropertySizeResponse.FromString,
                )
        self.DbMerge = channel.unary_unary(
                '/nixnet_grpc.NiXnet/DbMerge',
                request_serializer=nixnet__pb2.DbMergeRequest.SerializeToString,
                response_deserializer=nixnet__pb2.DbMergeResponse.FromString,
                )
        self.DbOpenDatabase = channel.unary_unary(
                '/nixnet_grpc.NiXnet/DbOpenDatabase',
                request_serializer=nixnet__pb2.DbOpenDatabaseRequest.SerializeToString,
                response_deserializer=nixnet__pb2.DbOpenDatabaseResponse.FromString,
                )
        self.DbRemoveAlias = channel.unary_unary(
                '/nixnet_grpc.NiXnet/DbRemoveAlias',
                request_serializer=nixnet__pb2.DbRemoveAliasRequest.SerializeToString,
                response_deserializer=nixnet__pb2.DbRemoveAliasResponse.FromString,
                )
        self.DbSaveDatabase = channel.unary_unary(
                '/nixnet_grpc.NiXnet/DbSaveDatabase',
                request_serializer=nixnet__pb2.DbSaveDatabaseRequest.SerializeToString,
                response_deserializer=nixnet__pb2.DbSaveDatabaseResponse.FromString,
                )
        self.DbUndeploy = channel.unary_unary(
                '/nixnet_grpc.NiXnet/DbUndeploy',
                request_serializer=nixnet__pb2.DbUndeployRequest.SerializeToString,
                response_deserializer=nixnet__pb2.DbUndeployResponse.FromString,
                )
        self.DisconnectTerminals = channel.unary_unary(
                '/nixnet_grpc.NiXnet/DisconnectTerminals',
                request_serializer=nixnet__pb2.DisconnectTerminalsRequest.SerializeToString,
                response_deserializer=nixnet__pb2.DisconnectTerminalsResponse.FromString,
                )
        self.Flush = channel.unary_unary(
                '/nixnet_grpc.NiXnet/Flush',
                request_serializer=nixnet__pb2.FlushRequest.SerializeToString,
                response_deserializer=nixnet__pb2.FlushResponse.FromString,
                )
        self.FutureTimeTrigger = channel.unary_unary(
                '/nixnet_grpc.NiXnet/FutureTimeTrigger',
                request_serializer=nixnet__pb2.FutureTimeTriggerRequest.SerializeToString,
                response_deserializer=nixnet__pb2.FutureTimeTriggerResponse.FromString,
                )
        self.GetPropertySize = channel.unary_unary(
                '/nixnet_grpc.NiXnet/GetPropertySize',
                request_serializer=nixnet__pb2.GetPropertySizeRequest.SerializeToString,
                response_deserializer=nixnet__pb2.GetPropertySizeResponse.FromString,
                )
        self.GetSubPropertySize = channel.unary_unary(
                '/nixnet_grpc.NiXnet/GetSubPropertySize',
                request_serializer=nixnet__pb2.GetSubPropertySizeRequest.SerializeToString,
                response_deserializer=nixnet__pb2.GetSubPropertySizeResponse.FromString,
                )
        self.ReadSignalSinglePoint = channel.unary_unary(
                '/nixnet_grpc.NiXnet/ReadSignalSinglePoint',
                request_serializer=nixnet__pb2.ReadSignalSinglePointRequest.SerializeToString,
                response_deserializer=nixnet__pb2.ReadSignalSinglePointResponse.FromString,
                )
        self.ReadSignalWaveform = channel.unary_unary(
                '/nixnet_grpc.NiXnet/ReadSignalWaveform',
                request_serializer=nixnet__pb2.ReadSignalWaveformRequest.SerializeToString,
                response_deserializer=nixnet__pb2.ReadSignalWaveformResponse.FromString,
                )
        self.Start = channel.unary_unary(
                '/nixnet_grpc.NiXnet/Start',
                request_serializer=nixnet__pb2.StartRequest.SerializeToString,
                response_deserializer=nixnet__pb2.StartResponse.FromString,
                )
        self.Stop = channel.unary_unary(
                '/nixnet_grpc.NiXnet/Stop',
                request_serializer=nixnet__pb2.StopRequest.SerializeToString,
                response_deserializer=nixnet__pb2.StopResponse.FromString,
                )
        self.SystemClose = channel.unary_unary(
                '/nixnet_grpc.NiXnet/SystemClose',
                request_serializer=nixnet__pb2.SystemCloseRequest.SerializeToString,
                response_deserializer=nixnet__pb2.SystemCloseResponse.FromString,
                )
        self.SystemOpen = channel.unary_unary(
                '/nixnet_grpc.NiXnet/SystemOpen',
                request_serializer=nixnet__pb2.SystemOpenRequest.SerializeToString,
                response_deserializer=nixnet__pb2.SystemOpenResponse.FromString,
                )
        self.Wait = channel.unary_unary(
                '/nixnet_grpc.NiXnet/Wait',
                request_serializer=nixnet__pb2.WaitRequest.SerializeToString,
                response_deserializer=nixnet__pb2.WaitResponse.FromString,
                )
        self.WriteSignalSinglePoint = channel.unary_unary(
                '/nixnet_grpc.NiXnet/WriteSignalSinglePoint',
                request_serializer=nixnet__pb2.WriteSignalSinglePointRequest.SerializeToString,
                response_deserializer=nixnet__pb2.WriteSignalSinglePointResponse.FromString,
                )
        self.WriteSignalWaveform = channel.unary_unary(
                '/nixnet_grpc.NiXnet/WriteSignalWaveform',
                request_serializer=nixnet__pb2.WriteSignalWaveformRequest.SerializeToString,
                response_deserializer=nixnet__pb2.WriteSignalWaveformResponse.FromString,
                )
        self.WriteSignalXY = channel.unary_unary(
                '/nixnet_grpc.NiXnet/WriteSignalXY',
                request_serializer=nixnet__pb2.WriteSignalXYRequest.SerializeToString,
                response_deserializer=nixnet__pb2.WriteSignalXYResponse.FromString,
                )


class NiXnetServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Blink(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Clear(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConnectTerminals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConvertTimestamp100nsTo1ns(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConvertTimestamp1nsTo100ns(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSessionByRef(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DbAddAlias(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DbAddAlias64(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DbCloseDatabase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DbCreateObject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DbDeleteObject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DbDeploy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DbFindObject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DbGetDatabaseListSizes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DbGetPropertySize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DbMerge(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DbOpenDatabase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DbRemoveAlias(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DbSaveDatabase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DbUndeploy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisconnectTerminals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Flush(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FutureTimeTrigger(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPropertySize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSubPropertySize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadSignalSinglePoint(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadSignalWaveform(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Start(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SystemClose(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SystemOpen(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Wait(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteSignalSinglePoint(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteSignalWaveform(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteSignalXY(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NiXnetServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Blink': grpc.unary_unary_rpc_method_handler(
                    servicer.Blink,
                    request_deserializer=nixnet__pb2.BlinkRequest.FromString,
                    response_serializer=nixnet__pb2.BlinkResponse.SerializeToString,
            ),
            'Clear': grpc.unary_unary_rpc_method_handler(
                    servicer.Clear,
                    request_deserializer=nixnet__pb2.ClearRequest.FromString,
                    response_serializer=nixnet__pb2.ClearResponse.SerializeToString,
            ),
            'ConnectTerminals': grpc.unary_unary_rpc_method_handler(
                    servicer.ConnectTerminals,
                    request_deserializer=nixnet__pb2.ConnectTerminalsRequest.FromString,
                    response_serializer=nixnet__pb2.ConnectTerminalsResponse.SerializeToString,
            ),
            'ConvertTimestamp100nsTo1ns': grpc.unary_unary_rpc_method_handler(
                    servicer.ConvertTimestamp100nsTo1ns,
                    request_deserializer=nixnet__pb2.ConvertTimestamp100nsTo1nsRequest.FromString,
                    response_serializer=nixnet__pb2.ConvertTimestamp100nsTo1nsResponse.SerializeToString,
            ),
            'ConvertTimestamp1nsTo100ns': grpc.unary_unary_rpc_method_handler(
                    servicer.ConvertTimestamp1nsTo100ns,
                    request_deserializer=nixnet__pb2.ConvertTimestamp1nsTo100nsRequest.FromString,
                    response_serializer=nixnet__pb2.ConvertTimestamp1nsTo100nsResponse.SerializeToString,
            ),
            'CreateSession': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSession,
                    request_deserializer=nixnet__pb2.CreateSessionRequest.FromString,
                    response_serializer=nixnet__pb2.CreateSessionResponse.SerializeToString,
            ),
            'CreateSessionByRef': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSessionByRef,
                    request_deserializer=nixnet__pb2.CreateSessionByRefRequest.FromString,
                    response_serializer=nixnet__pb2.CreateSessionByRefResponse.SerializeToString,
            ),
            'DbAddAlias': grpc.unary_unary_rpc_method_handler(
                    servicer.DbAddAlias,
                    request_deserializer=nixnet__pb2.DbAddAliasRequest.FromString,
                    response_serializer=nixnet__pb2.DbAddAliasResponse.SerializeToString,
            ),
            'DbAddAlias64': grpc.unary_unary_rpc_method_handler(
                    servicer.DbAddAlias64,
                    request_deserializer=nixnet__pb2.DbAddAlias64Request.FromString,
                    response_serializer=nixnet__pb2.DbAddAlias64Response.SerializeToString,
            ),
            'DbCloseDatabase': grpc.unary_unary_rpc_method_handler(
                    servicer.DbCloseDatabase,
                    request_deserializer=nixnet__pb2.DbCloseDatabaseRequest.FromString,
                    response_serializer=nixnet__pb2.DbCloseDatabaseResponse.SerializeToString,
            ),
            'DbCreateObject': grpc.unary_unary_rpc_method_handler(
                    servicer.DbCreateObject,
                    request_deserializer=nixnet__pb2.DbCreateObjectRequest.FromString,
                    response_serializer=nixnet__pb2.DbCreateObjectResponse.SerializeToString,
            ),
            'DbDeleteObject': grpc.unary_unary_rpc_method_handler(
                    servicer.DbDeleteObject,
                    request_deserializer=nixnet__pb2.DbDeleteObjectRequest.FromString,
                    response_serializer=nixnet__pb2.DbDeleteObjectResponse.SerializeToString,
            ),
            'DbDeploy': grpc.unary_unary_rpc_method_handler(
                    servicer.DbDeploy,
                    request_deserializer=nixnet__pb2.DbDeployRequest.FromString,
                    response_serializer=nixnet__pb2.DbDeployResponse.SerializeToString,
            ),
            'DbFindObject': grpc.unary_unary_rpc_method_handler(
                    servicer.DbFindObject,
                    request_deserializer=nixnet__pb2.DbFindObjectRequest.FromString,
                    response_serializer=nixnet__pb2.DbFindObjectResponse.SerializeToString,
            ),
            'DbGetDatabaseListSizes': grpc.unary_unary_rpc_method_handler(
                    servicer.DbGetDatabaseListSizes,
                    request_deserializer=nixnet__pb2.DbGetDatabaseListSizesRequest.FromString,
                    response_serializer=nixnet__pb2.DbGetDatabaseListSizesResponse.SerializeToString,
            ),
            'DbGetPropertySize': grpc.unary_unary_rpc_method_handler(
                    servicer.DbGetPropertySize,
                    request_deserializer=nixnet__pb2.DbGetPropertySizeRequest.FromString,
                    response_serializer=nixnet__pb2.DbGetPropertySizeResponse.SerializeToString,
            ),
            'DbMerge': grpc.unary_unary_rpc_method_handler(
                    servicer.DbMerge,
                    request_deserializer=nixnet__pb2.DbMergeRequest.FromString,
                    response_serializer=nixnet__pb2.DbMergeResponse.SerializeToString,
            ),
            'DbOpenDatabase': grpc.unary_unary_rpc_method_handler(
                    servicer.DbOpenDatabase,
                    request_deserializer=nixnet__pb2.DbOpenDatabaseRequest.FromString,
                    response_serializer=nixnet__pb2.DbOpenDatabaseResponse.SerializeToString,
            ),
            'DbRemoveAlias': grpc.unary_unary_rpc_method_handler(
                    servicer.DbRemoveAlias,
                    request_deserializer=nixnet__pb2.DbRemoveAliasRequest.FromString,
                    response_serializer=nixnet__pb2.DbRemoveAliasResponse.SerializeToString,
            ),
            'DbSaveDatabase': grpc.unary_unary_rpc_method_handler(
                    servicer.DbSaveDatabase,
                    request_deserializer=nixnet__pb2.DbSaveDatabaseRequest.FromString,
                    response_serializer=nixnet__pb2.DbSaveDatabaseResponse.SerializeToString,
            ),
            'DbUndeploy': grpc.unary_unary_rpc_method_handler(
                    servicer.DbUndeploy,
                    request_deserializer=nixnet__pb2.DbUndeployRequest.FromString,
                    response_serializer=nixnet__pb2.DbUndeployResponse.SerializeToString,
            ),
            'DisconnectTerminals': grpc.unary_unary_rpc_method_handler(
                    servicer.DisconnectTerminals,
                    request_deserializer=nixnet__pb2.DisconnectTerminalsRequest.FromString,
                    response_serializer=nixnet__pb2.DisconnectTerminalsResponse.SerializeToString,
            ),
            'Flush': grpc.unary_unary_rpc_method_handler(
                    servicer.Flush,
                    request_deserializer=nixnet__pb2.FlushRequest.FromString,
                    response_serializer=nixnet__pb2.FlushResponse.SerializeToString,
            ),
            'FutureTimeTrigger': grpc.unary_unary_rpc_method_handler(
                    servicer.FutureTimeTrigger,
                    request_deserializer=nixnet__pb2.FutureTimeTriggerRequest.FromString,
                    response_serializer=nixnet__pb2.FutureTimeTriggerResponse.SerializeToString,
            ),
            'GetPropertySize': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPropertySize,
                    request_deserializer=nixnet__pb2.GetPropertySizeRequest.FromString,
                    response_serializer=nixnet__pb2.GetPropertySizeResponse.SerializeToString,
            ),
            'GetSubPropertySize': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSubPropertySize,
                    request_deserializer=nixnet__pb2.GetSubPropertySizeRequest.FromString,
                    response_serializer=nixnet__pb2.GetSubPropertySizeResponse.SerializeToString,
            ),
            'ReadSignalSinglePoint': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadSignalSinglePoint,
                    request_deserializer=nixnet__pb2.ReadSignalSinglePointRequest.FromString,
                    response_serializer=nixnet__pb2.ReadSignalSinglePointResponse.SerializeToString,
            ),
            'ReadSignalWaveform': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadSignalWaveform,
                    request_deserializer=nixnet__pb2.ReadSignalWaveformRequest.FromString,
                    response_serializer=nixnet__pb2.ReadSignalWaveformResponse.SerializeToString,
            ),
            'Start': grpc.unary_unary_rpc_method_handler(
                    servicer.Start,
                    request_deserializer=nixnet__pb2.StartRequest.FromString,
                    response_serializer=nixnet__pb2.StartResponse.SerializeToString,
            ),
            'Stop': grpc.unary_unary_rpc_method_handler(
                    servicer.Stop,
                    request_deserializer=nixnet__pb2.StopRequest.FromString,
                    response_serializer=nixnet__pb2.StopResponse.SerializeToString,
            ),
            'SystemClose': grpc.unary_unary_rpc_method_handler(
                    servicer.SystemClose,
                    request_deserializer=nixnet__pb2.SystemCloseRequest.FromString,
                    response_serializer=nixnet__pb2.SystemCloseResponse.SerializeToString,
            ),
            'SystemOpen': grpc.unary_unary_rpc_method_handler(
                    servicer.SystemOpen,
                    request_deserializer=nixnet__pb2.SystemOpenRequest.FromString,
                    response_serializer=nixnet__pb2.SystemOpenResponse.SerializeToString,
            ),
            'Wait': grpc.unary_unary_rpc_method_handler(
                    servicer.Wait,
                    request_deserializer=nixnet__pb2.WaitRequest.FromString,
                    response_serializer=nixnet__pb2.WaitResponse.SerializeToString,
            ),
            'WriteSignalSinglePoint': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteSignalSinglePoint,
                    request_deserializer=nixnet__pb2.WriteSignalSinglePointRequest.FromString,
                    response_serializer=nixnet__pb2.WriteSignalSinglePointResponse.SerializeToString,
            ),
            'WriteSignalWaveform': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteSignalWaveform,
                    request_deserializer=nixnet__pb2.WriteSignalWaveformRequest.FromString,
                    response_serializer=nixnet__pb2.WriteSignalWaveformResponse.SerializeToString,
            ),
            'WriteSignalXY': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteSignalXY,
                    request_deserializer=nixnet__pb2.WriteSignalXYRequest.FromString,
                    response_serializer=nixnet__pb2.WriteSignalXYResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'nixnet_grpc.NiXnet', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NiXnet(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Blink(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/Blink',
            nixnet__pb2.BlinkRequest.SerializeToString,
            nixnet__pb2.BlinkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Clear(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/Clear',
            nixnet__pb2.ClearRequest.SerializeToString,
            nixnet__pb2.ClearResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConnectTerminals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/ConnectTerminals',
            nixnet__pb2.ConnectTerminalsRequest.SerializeToString,
            nixnet__pb2.ConnectTerminalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConvertTimestamp100nsTo1ns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/ConvertTimestamp100nsTo1ns',
            nixnet__pb2.ConvertTimestamp100nsTo1nsRequest.SerializeToString,
            nixnet__pb2.ConvertTimestamp100nsTo1nsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConvertTimestamp1nsTo100ns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/ConvertTimestamp1nsTo100ns',
            nixnet__pb2.ConvertTimestamp1nsTo100nsRequest.SerializeToString,
            nixnet__pb2.ConvertTimestamp1nsTo100nsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/CreateSession',
            nixnet__pb2.CreateSessionRequest.SerializeToString,
            nixnet__pb2.CreateSessionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSessionByRef(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/CreateSessionByRef',
            nixnet__pb2.CreateSessionByRefRequest.SerializeToString,
            nixnet__pb2.CreateSessionByRefResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DbAddAlias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/DbAddAlias',
            nixnet__pb2.DbAddAliasRequest.SerializeToString,
            nixnet__pb2.DbAddAliasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DbAddAlias64(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/DbAddAlias64',
            nixnet__pb2.DbAddAlias64Request.SerializeToString,
            nixnet__pb2.DbAddAlias64Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DbCloseDatabase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/DbCloseDatabase',
            nixnet__pb2.DbCloseDatabaseRequest.SerializeToString,
            nixnet__pb2.DbCloseDatabaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DbCreateObject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/DbCreateObject',
            nixnet__pb2.DbCreateObjectRequest.SerializeToString,
            nixnet__pb2.DbCreateObjectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DbDeleteObject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/DbDeleteObject',
            nixnet__pb2.DbDeleteObjectRequest.SerializeToString,
            nixnet__pb2.DbDeleteObjectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DbDeploy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/DbDeploy',
            nixnet__pb2.DbDeployRequest.SerializeToString,
            nixnet__pb2.DbDeployResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DbFindObject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/DbFindObject',
            nixnet__pb2.DbFindObjectRequest.SerializeToString,
            nixnet__pb2.DbFindObjectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DbGetDatabaseListSizes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/DbGetDatabaseListSizes',
            nixnet__pb2.DbGetDatabaseListSizesRequest.SerializeToString,
            nixnet__pb2.DbGetDatabaseListSizesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DbGetPropertySize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/DbGetPropertySize',
            nixnet__pb2.DbGetPropertySizeRequest.SerializeToString,
            nixnet__pb2.DbGetPropertySizeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DbMerge(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/DbMerge',
            nixnet__pb2.DbMergeRequest.SerializeToString,
            nixnet__pb2.DbMergeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DbOpenDatabase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/DbOpenDatabase',
            nixnet__pb2.DbOpenDatabaseRequest.SerializeToString,
            nixnet__pb2.DbOpenDatabaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DbRemoveAlias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/DbRemoveAlias',
            nixnet__pb2.DbRemoveAliasRequest.SerializeToString,
            nixnet__pb2.DbRemoveAliasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DbSaveDatabase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/DbSaveDatabase',
            nixnet__pb2.DbSaveDatabaseRequest.SerializeToString,
            nixnet__pb2.DbSaveDatabaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DbUndeploy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/DbUndeploy',
            nixnet__pb2.DbUndeployRequest.SerializeToString,
            nixnet__pb2.DbUndeployResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisconnectTerminals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/DisconnectTerminals',
            nixnet__pb2.DisconnectTerminalsRequest.SerializeToString,
            nixnet__pb2.DisconnectTerminalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Flush(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/Flush',
            nixnet__pb2.FlushRequest.SerializeToString,
            nixnet__pb2.FlushResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FutureTimeTrigger(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/FutureTimeTrigger',
            nixnet__pb2.FutureTimeTriggerRequest.SerializeToString,
            nixnet__pb2.FutureTimeTriggerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPropertySize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/GetPropertySize',
            nixnet__pb2.GetPropertySizeRequest.SerializeToString,
            nixnet__pb2.GetPropertySizeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSubPropertySize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/GetSubPropertySize',
            nixnet__pb2.GetSubPropertySizeRequest.SerializeToString,
            nixnet__pb2.GetSubPropertySizeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadSignalSinglePoint(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/ReadSignalSinglePoint',
            nixnet__pb2.ReadSignalSinglePointRequest.SerializeToString,
            nixnet__pb2.ReadSignalSinglePointResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadSignalWaveform(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/ReadSignalWaveform',
            nixnet__pb2.ReadSignalWaveformRequest.SerializeToString,
            nixnet__pb2.ReadSignalWaveformResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Start(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/Start',
            nixnet__pb2.StartRequest.SerializeToString,
            nixnet__pb2.StartResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/Stop',
            nixnet__pb2.StopRequest.SerializeToString,
            nixnet__pb2.StopResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SystemClose(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/SystemClose',
            nixnet__pb2.SystemCloseRequest.SerializeToString,
            nixnet__pb2.SystemCloseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SystemOpen(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/SystemOpen',
            nixnet__pb2.SystemOpenRequest.SerializeToString,
            nixnet__pb2.SystemOpenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Wait(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/Wait',
            nixnet__pb2.WaitRequest.SerializeToString,
            nixnet__pb2.WaitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteSignalSinglePoint(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/WriteSignalSinglePoint',
            nixnet__pb2.WriteSignalSinglePointRequest.SerializeToString,
            nixnet__pb2.WriteSignalSinglePointResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteSignalWaveform(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/WriteSignalWaveform',
            nixnet__pb2.WriteSignalWaveformRequest.SerializeToString,
            nixnet__pb2.WriteSignalWaveformResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteSignalXY(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nixnet_grpc.NiXnet/WriteSignalXY',
            nixnet__pb2.WriteSignalXYRequest.SerializeToString,
            nixnet__pb2.WriteSignalXYResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
