<%
import common_helpers
import proto_helpers

config = data["config"]
attributes = data["attributes"]
enums = data["enums"]
functions = data["functions"]

service_class_prefix = config["service_class_prefix"]
used_enums = common_helpers.get_used_enums(functions, attributes)
%>\
<%namespace name="mako_helper" file="/proto_helpers.mako"/>\

//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Proto file for the ${config["driver_name"]} Metadata
//---------------------------------------------------------------------
syntax = "proto3";

option java_multiple_files = true;
option java_package = "${config["java_package"]}";
option java_outer_classname = "${service_class_prefix}";
option csharp_namespace = "${config["csharp_namespace"]}";

package ${config["namespace_component"]}_grpc;

import "session.proto";

service ${service_class_prefix} {
% for function in common_helpers.filter_proto_rpc_functions(functions):
<%
  method_name = common_helpers.snake_to_pascal(function)
%>\
  rpc ${method_name}(${method_name}Request) returns (${method_name}Response);
% endfor
}

${mako_helper.define_attribute_enum(attributes)}\

${mako_helper.define_enums(used_enums)}\
${mako_helper.insert_custom_template_if_found()}\
% for function in common_helpers.filter_proto_rpc_functions(functions):
<%
  parameter_array = proto_helpers.filter_parameters_for_grpc_fields(functions[function]["parameters"])
  input_parameters = [p for p in parameter_array if common_helpers.is_input_parameter(p)]
  if common_helpers.is_init_method(functions[function]):
    session_name_param = {'direction': 'in','name': 'session_name','type': 'ViString'}
    input_parameters.insert(0, session_name_param)
  output_parameters = [p for p in parameter_array if common_helpers.is_output_parameter(p)]
%>\
${mako_helper.define_request_message(function, input_parameters)}\

${mako_helper.define_response_message(function, output_parameters)}\

% endfor