
//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Proto file for the NI-DAQMX Metadata
//---------------------------------------------------------------------
syntax = "proto3";
option optimize_for = CODE_SIZE;

option java_multiple_files = true;
option java_package = "com.ni.grpc.nidaqmx";
option java_outer_classname = "NiDAQmx";
option csharp_namespace = "NationalInstruments.Grpc.NiDAQmx";

package nidaqmx_grpc;

import "session.proto";
import "google/protobuf/timestamp.proto";

service NiDAQmx {
  rpc AddCDAQSyncConnection(AddCDAQSyncConnectionRequest) returns (AddCDAQSyncConnectionResponse);
  rpc AddGlobalChansToTask(AddGlobalChansToTaskRequest) returns (AddGlobalChansToTaskResponse);
  rpc AddNetworkDevice(AddNetworkDeviceRequest) returns (AddNetworkDeviceResponse);
  rpc AreConfiguredCDAQSyncPortsDisconnected(AreConfiguredCDAQSyncPortsDisconnectedRequest) returns (AreConfiguredCDAQSyncPortsDisconnectedResponse);
  rpc AutoConfigureCDAQSyncConnections(AutoConfigureCDAQSyncConnectionsRequest) returns (AutoConfigureCDAQSyncConnectionsResponse);
  rpc CalculateReversePolyCoeff(CalculateReversePolyCoeffRequest) returns (CalculateReversePolyCoeffResponse);
  rpc CfgAnlgEdgeRefTrig(CfgAnlgEdgeRefTrigRequest) returns (CfgAnlgEdgeRefTrigResponse);
  rpc CfgAnlgEdgeStartTrig(CfgAnlgEdgeStartTrigRequest) returns (CfgAnlgEdgeStartTrigResponse);
  rpc CfgAnlgMultiEdgeRefTrig(CfgAnlgMultiEdgeRefTrigRequest) returns (CfgAnlgMultiEdgeRefTrigResponse);
  rpc CfgAnlgMultiEdgeStartTrig(CfgAnlgMultiEdgeStartTrigRequest) returns (CfgAnlgMultiEdgeStartTrigResponse);
  rpc CfgAnlgWindowRefTrig(CfgAnlgWindowRefTrigRequest) returns (CfgAnlgWindowRefTrigResponse);
  rpc CfgAnlgWindowStartTrig(CfgAnlgWindowStartTrigRequest) returns (CfgAnlgWindowStartTrigResponse);
  rpc CfgBurstHandshakingTimingExportClock(CfgBurstHandshakingTimingExportClockRequest) returns (CfgBurstHandshakingTimingExportClockResponse);
  rpc CfgBurstHandshakingTimingImportClock(CfgBurstHandshakingTimingImportClockRequest) returns (CfgBurstHandshakingTimingImportClockResponse);
  rpc CfgChangeDetectionTiming(CfgChangeDetectionTimingRequest) returns (CfgChangeDetectionTimingResponse);
  rpc CfgDigEdgeRefTrig(CfgDigEdgeRefTrigRequest) returns (CfgDigEdgeRefTrigResponse);
  rpc CfgDigEdgeStartTrig(CfgDigEdgeStartTrigRequest) returns (CfgDigEdgeStartTrigResponse);
  rpc CfgDigPatternRefTrig(CfgDigPatternRefTrigRequest) returns (CfgDigPatternRefTrigResponse);
  rpc CfgDigPatternStartTrig(CfgDigPatternStartTrigRequest) returns (CfgDigPatternStartTrigResponse);
  rpc CfgHandshakingTiming(CfgHandshakingTimingRequest) returns (CfgHandshakingTimingResponse);
  rpc CfgImplicitTiming(CfgImplicitTimingRequest) returns (CfgImplicitTimingResponse);
  rpc CfgInputBuffer(CfgInputBufferRequest) returns (CfgInputBufferResponse);
  rpc CfgOutputBuffer(CfgOutputBufferRequest) returns (CfgOutputBufferResponse);
  rpc CfgPipelinedSampClkTiming(CfgPipelinedSampClkTimingRequest) returns (CfgPipelinedSampClkTimingResponse);
  rpc CfgSampClkTiming(CfgSampClkTimingRequest) returns (CfgSampClkTimingResponse);
  rpc CfgTimeStartTrig(CfgTimeStartTrigRequest) returns (CfgTimeStartTrigResponse);
  rpc CfgWatchdogAOExpirStates(CfgWatchdogAOExpirStatesRequest) returns (CfgWatchdogAOExpirStatesResponse);
  rpc CfgWatchdogCOExpirStates(CfgWatchdogCOExpirStatesRequest) returns (CfgWatchdogCOExpirStatesResponse);
  rpc CfgWatchdogDOExpirStates(CfgWatchdogDOExpirStatesRequest) returns (CfgWatchdogDOExpirStatesResponse);
  rpc ClearTEDS(ClearTEDSRequest) returns (ClearTEDSResponse);
  rpc ClearTask(ClearTaskRequest) returns (ClearTaskResponse);
  rpc ConfigureLogging(ConfigureLoggingRequest) returns (ConfigureLoggingResponse);
  rpc ConfigureTEDS(ConfigureTEDSRequest) returns (ConfigureTEDSResponse);
  rpc ConnectTerms(ConnectTermsRequest) returns (ConnectTermsResponse);
  rpc ControlWatchdogTask(ControlWatchdogTaskRequest) returns (ControlWatchdogTaskResponse);
  rpc CreateAIAccel4WireDCVoltageChan(CreateAIAccel4WireDCVoltageChanRequest) returns (CreateAIAccel4WireDCVoltageChanResponse);
  rpc CreateAIAccelChan(CreateAIAccelChanRequest) returns (CreateAIAccelChanResponse);
  rpc CreateAIAccelChargeChan(CreateAIAccelChargeChanRequest) returns (CreateAIAccelChargeChanResponse);
  rpc CreateAIBridgeChan(CreateAIBridgeChanRequest) returns (CreateAIBridgeChanResponse);
  rpc CreateAIChargeChan(CreateAIChargeChanRequest) returns (CreateAIChargeChanResponse);
  rpc CreateAICurrentChan(CreateAICurrentChanRequest) returns (CreateAICurrentChanResponse);
  rpc CreateAICurrentRMSChan(CreateAICurrentRMSChanRequest) returns (CreateAICurrentRMSChanResponse);
  rpc CreateAIForceBridgePolynomialChan(CreateAIForceBridgePolynomialChanRequest) returns (CreateAIForceBridgePolynomialChanResponse);
  rpc CreateAIForceBridgeTableChan(CreateAIForceBridgeTableChanRequest) returns (CreateAIForceBridgeTableChanResponse);
  rpc CreateAIForceBridgeTwoPointLinChan(CreateAIForceBridgeTwoPointLinChanRequest) returns (CreateAIForceBridgeTwoPointLinChanResponse);
  rpc CreateAIForceIEPEChan(CreateAIForceIEPEChanRequest) returns (CreateAIForceIEPEChanResponse);
  rpc CreateAIFreqVoltageChan(CreateAIFreqVoltageChanRequest) returns (CreateAIFreqVoltageChanResponse);
  rpc CreateAIMicrophoneChan(CreateAIMicrophoneChanRequest) returns (CreateAIMicrophoneChanResponse);
  rpc CreateAIPosEddyCurrProxProbeChan(CreateAIPosEddyCurrProxProbeChanRequest) returns (CreateAIPosEddyCurrProxProbeChanResponse);
  rpc CreateAIPosLVDTChan(CreateAIPosLVDTChanRequest) returns (CreateAIPosLVDTChanResponse);
  rpc CreateAIPosRVDTChan(CreateAIPosRVDTChanRequest) returns (CreateAIPosRVDTChanResponse);
  rpc CreateAIPressureBridgePolynomialChan(CreateAIPressureBridgePolynomialChanRequest) returns (CreateAIPressureBridgePolynomialChanResponse);
  rpc CreateAIPressureBridgeTableChan(CreateAIPressureBridgeTableChanRequest) returns (CreateAIPressureBridgeTableChanResponse);
  rpc CreateAIPressureBridgeTwoPointLinChan(CreateAIPressureBridgeTwoPointLinChanRequest) returns (CreateAIPressureBridgeTwoPointLinChanResponse);
  rpc CreateAIRTDChan(CreateAIRTDChanRequest) returns (CreateAIRTDChanResponse);
  rpc CreateAIResistanceChan(CreateAIResistanceChanRequest) returns (CreateAIResistanceChanResponse);
  rpc CreateAIRosetteStrainGageChan(CreateAIRosetteStrainGageChanRequest) returns (CreateAIRosetteStrainGageChanResponse);
  rpc CreateAIStrainGageChan(CreateAIStrainGageChanRequest) returns (CreateAIStrainGageChanResponse);
  rpc CreateAITempBuiltInSensorChan(CreateAITempBuiltInSensorChanRequest) returns (CreateAITempBuiltInSensorChanResponse);
  rpc CreateAIThrmcplChan(CreateAIThrmcplChanRequest) returns (CreateAIThrmcplChanResponse);
  rpc CreateAIThrmstrChanIex(CreateAIThrmstrChanIexRequest) returns (CreateAIThrmstrChanIexResponse);
  rpc CreateAIThrmstrChanVex(CreateAIThrmstrChanVexRequest) returns (CreateAIThrmstrChanVexResponse);
  rpc CreateAITorqueBridgePolynomialChan(CreateAITorqueBridgePolynomialChanRequest) returns (CreateAITorqueBridgePolynomialChanResponse);
  rpc CreateAITorqueBridgeTableChan(CreateAITorqueBridgeTableChanRequest) returns (CreateAITorqueBridgeTableChanResponse);
  rpc CreateAITorqueBridgeTwoPointLinChan(CreateAITorqueBridgeTwoPointLinChanRequest) returns (CreateAITorqueBridgeTwoPointLinChanResponse);
  rpc CreateAIVelocityIEPEChan(CreateAIVelocityIEPEChanRequest) returns (CreateAIVelocityIEPEChanResponse);
  rpc CreateAIVoltageChan(CreateAIVoltageChanRequest) returns (CreateAIVoltageChanResponse);
  rpc CreateAIVoltageChanWithExcit(CreateAIVoltageChanWithExcitRequest) returns (CreateAIVoltageChanWithExcitResponse);
  rpc CreateAIVoltageRMSChan(CreateAIVoltageRMSChanRequest) returns (CreateAIVoltageRMSChanResponse);
  rpc CreateAOCurrentChan(CreateAOCurrentChanRequest) returns (CreateAOCurrentChanResponse);
  rpc CreateAOFuncGenChan(CreateAOFuncGenChanRequest) returns (CreateAOFuncGenChanResponse);
  rpc CreateAOVoltageChan(CreateAOVoltageChanRequest) returns (CreateAOVoltageChanResponse);
  rpc CreateCIAngEncoderChan(CreateCIAngEncoderChanRequest) returns (CreateCIAngEncoderChanResponse);
  rpc CreateCIAngVelocityChan(CreateCIAngVelocityChanRequest) returns (CreateCIAngVelocityChanResponse);
  rpc CreateCICountEdgesChan(CreateCICountEdgesChanRequest) returns (CreateCICountEdgesChanResponse);
  rpc CreateCIDutyCycleChan(CreateCIDutyCycleChanRequest) returns (CreateCIDutyCycleChanResponse);
  rpc CreateCIFreqChan(CreateCIFreqChanRequest) returns (CreateCIFreqChanResponse);
  rpc CreateCIGPSTimestampChan(CreateCIGPSTimestampChanRequest) returns (CreateCIGPSTimestampChanResponse);
  rpc CreateCILinEncoderChan(CreateCILinEncoderChanRequest) returns (CreateCILinEncoderChanResponse);
  rpc CreateCILinVelocityChan(CreateCILinVelocityChanRequest) returns (CreateCILinVelocityChanResponse);
  rpc CreateCIPeriodChan(CreateCIPeriodChanRequest) returns (CreateCIPeriodChanResponse);
  rpc CreateCIPulseChanFreq(CreateCIPulseChanFreqRequest) returns (CreateCIPulseChanFreqResponse);
  rpc CreateCIPulseChanTicks(CreateCIPulseChanTicksRequest) returns (CreateCIPulseChanTicksResponse);
  rpc CreateCIPulseChanTime(CreateCIPulseChanTimeRequest) returns (CreateCIPulseChanTimeResponse);
  rpc CreateCIPulseWidthChan(CreateCIPulseWidthChanRequest) returns (CreateCIPulseWidthChanResponse);
  rpc CreateCISemiPeriodChan(CreateCISemiPeriodChanRequest) returns (CreateCISemiPeriodChanResponse);
  rpc CreateCITwoEdgeSepChan(CreateCITwoEdgeSepChanRequest) returns (CreateCITwoEdgeSepChanResponse);
  rpc CreateCOPulseChanFreq(CreateCOPulseChanFreqRequest) returns (CreateCOPulseChanFreqResponse);
  rpc CreateCOPulseChanTicks(CreateCOPulseChanTicksRequest) returns (CreateCOPulseChanTicksResponse);
  rpc CreateCOPulseChanTime(CreateCOPulseChanTimeRequest) returns (CreateCOPulseChanTimeResponse);
  rpc CreateDIChan(CreateDIChanRequest) returns (CreateDIChanResponse);
  rpc CreateDOChan(CreateDOChanRequest) returns (CreateDOChanResponse);
  rpc CreateLinScale(CreateLinScaleRequest) returns (CreateLinScaleResponse);
  rpc CreateMapScale(CreateMapScaleRequest) returns (CreateMapScaleResponse);
  rpc CreatePolynomialScale(CreatePolynomialScaleRequest) returns (CreatePolynomialScaleResponse);
  rpc CreateTEDSAIAccelChan(CreateTEDSAIAccelChanRequest) returns (CreateTEDSAIAccelChanResponse);
  rpc CreateTEDSAIBridgeChan(CreateTEDSAIBridgeChanRequest) returns (CreateTEDSAIBridgeChanResponse);
  rpc CreateTEDSAICurrentChan(CreateTEDSAICurrentChanRequest) returns (CreateTEDSAICurrentChanResponse);
  rpc CreateTEDSAIForceBridgeChan(CreateTEDSAIForceBridgeChanRequest) returns (CreateTEDSAIForceBridgeChanResponse);
  rpc CreateTEDSAIForceIEPEChan(CreateTEDSAIForceIEPEChanRequest) returns (CreateTEDSAIForceIEPEChanResponse);
  rpc CreateTEDSAIMicrophoneChan(CreateTEDSAIMicrophoneChanRequest) returns (CreateTEDSAIMicrophoneChanResponse);
  rpc CreateTEDSAIPosLVDTChan(CreateTEDSAIPosLVDTChanRequest) returns (CreateTEDSAIPosLVDTChanResponse);
  rpc CreateTEDSAIPosRVDTChan(CreateTEDSAIPosRVDTChanRequest) returns (CreateTEDSAIPosRVDTChanResponse);
  rpc CreateTEDSAIPressureBridgeChan(CreateTEDSAIPressureBridgeChanRequest) returns (CreateTEDSAIPressureBridgeChanResponse);
  rpc CreateTEDSAIRTDChan(CreateTEDSAIRTDChanRequest) returns (CreateTEDSAIRTDChanResponse);
  rpc CreateTEDSAIResistanceChan(CreateTEDSAIResistanceChanRequest) returns (CreateTEDSAIResistanceChanResponse);
  rpc CreateTEDSAIStrainGageChan(CreateTEDSAIStrainGageChanRequest) returns (CreateTEDSAIStrainGageChanResponse);
  rpc CreateTEDSAIThrmcplChan(CreateTEDSAIThrmcplChanRequest) returns (CreateTEDSAIThrmcplChanResponse);
  rpc CreateTEDSAIThrmstrChanIex(CreateTEDSAIThrmstrChanIexRequest) returns (CreateTEDSAIThrmstrChanIexResponse);
  rpc CreateTEDSAIThrmstrChanVex(CreateTEDSAIThrmstrChanVexRequest) returns (CreateTEDSAIThrmstrChanVexResponse);
  rpc CreateTEDSAITorqueBridgeChan(CreateTEDSAITorqueBridgeChanRequest) returns (CreateTEDSAITorqueBridgeChanResponse);
  rpc CreateTEDSAIVoltageChan(CreateTEDSAIVoltageChanRequest) returns (CreateTEDSAIVoltageChanResponse);
  rpc CreateTEDSAIVoltageChanWithExcit(CreateTEDSAIVoltageChanWithExcitRequest) returns (CreateTEDSAIVoltageChanWithExcitResponse);
  rpc CreateTableScale(CreateTableScaleRequest) returns (CreateTableScaleResponse);
  rpc CreateTask(CreateTaskRequest) returns (CreateTaskResponse);
  rpc CreateWatchdogTimerTask(CreateWatchdogTimerTaskRequest) returns (CreateWatchdogTimerTaskResponse);
  rpc CreateWatchdogTimerTaskEx(CreateWatchdogTimerTaskExRequest) returns (CreateWatchdogTimerTaskExResponse);
  rpc DeleteNetworkDevice(DeleteNetworkDeviceRequest) returns (DeleteNetworkDeviceResponse);
  rpc DeleteSavedGlobalChan(DeleteSavedGlobalChanRequest) returns (DeleteSavedGlobalChanResponse);
  rpc DeleteSavedScale(DeleteSavedScaleRequest) returns (DeleteSavedScaleResponse);
  rpc DeleteSavedTask(DeleteSavedTaskRequest) returns (DeleteSavedTaskResponse);
  rpc DeviceSupportsCal(DeviceSupportsCalRequest) returns (DeviceSupportsCalResponse);
  rpc DisableRefTrig(DisableRefTrigRequest) returns (DisableRefTrigResponse);
  rpc DisableStartTrig(DisableStartTrigRequest) returns (DisableStartTrigResponse);
  rpc DisconnectTerms(DisconnectTermsRequest) returns (DisconnectTermsResponse);
  rpc ExportSignal(ExportSignalRequest) returns (ExportSignalResponse);
  rpc GetAIACExcitFreq(GetAIACExcitFreqRequest) returns (GetAIACExcitFreqResponse);
  rpc GetAIACExcitSyncEnable(GetAIACExcitSyncEnableRequest) returns (GetAIACExcitSyncEnableResponse);
  rpc GetAIACExcitWireMode(GetAIACExcitWireModeRequest) returns (GetAIACExcitWireModeResponse);
  rpc GetAIADCCustomTimingMode(GetAIADCCustomTimingModeRequest) returns (GetAIADCCustomTimingModeResponse);
  rpc GetAIADCTimingMode(GetAIADCTimingModeRequest) returns (GetAIADCTimingModeResponse);
  rpc GetAIAccel4WireDCVoltageSensitivity(GetAIAccel4WireDCVoltageSensitivityRequest) returns (GetAIAccel4WireDCVoltageSensitivityResponse);
  rpc GetAIAccel4WireDCVoltageSensitivityUnits(GetAIAccel4WireDCVoltageSensitivityUnitsRequest) returns (GetAIAccel4WireDCVoltageSensitivityUnitsResponse);
  rpc GetAIAccelChargeSensitivity(GetAIAccelChargeSensitivityRequest) returns (GetAIAccelChargeSensitivityResponse);
  rpc GetAIAccelChargeSensitivityUnits(GetAIAccelChargeSensitivityUnitsRequest) returns (GetAIAccelChargeSensitivityUnitsResponse);
  rpc GetAIAccelSensitivity(GetAIAccelSensitivityRequest) returns (GetAIAccelSensitivityResponse);
  rpc GetAIAccelSensitivityUnits(GetAIAccelSensitivityUnitsRequest) returns (GetAIAccelSensitivityUnitsResponse);
  rpc GetAIAccelUnits(GetAIAccelUnitsRequest) returns (GetAIAccelUnitsResponse);
  rpc GetAIAcceldBRef(GetAIAcceldBRefRequest) returns (GetAIAcceldBRefResponse);
  rpc GetAIAtten(GetAIAttenRequest) returns (GetAIAttenResponse);
  rpc GetAIAutoZeroMode(GetAIAutoZeroModeRequest) returns (GetAIAutoZeroModeResponse);
  rpc GetAIAveragingWinSize(GetAIAveragingWinSizeRequest) returns (GetAIAveragingWinSizeResponse);
  rpc GetAIBridgeBalanceCoarsePot(GetAIBridgeBalanceCoarsePotRequest) returns (GetAIBridgeBalanceCoarsePotResponse);
  rpc GetAIBridgeBalanceFinePot(GetAIBridgeBalanceFinePotRequest) returns (GetAIBridgeBalanceFinePotResponse);
  rpc GetAIBridgeCfg(GetAIBridgeCfgRequest) returns (GetAIBridgeCfgResponse);
  rpc GetAIBridgeElectricalUnits(GetAIBridgeElectricalUnitsRequest) returns (GetAIBridgeElectricalUnitsResponse);
  rpc GetAIBridgeInitialRatio(GetAIBridgeInitialRatioRequest) returns (GetAIBridgeInitialRatioResponse);
  rpc GetAIBridgeInitialVoltage(GetAIBridgeInitialVoltageRequest) returns (GetAIBridgeInitialVoltageResponse);
  rpc GetAIBridgeNomResistance(GetAIBridgeNomResistanceRequest) returns (GetAIBridgeNomResistanceResponse);
  rpc GetAIBridgePhysicalUnits(GetAIBridgePhysicalUnitsRequest) returns (GetAIBridgePhysicalUnitsResponse);
  rpc GetAIBridgePolyForwardCoeff(GetAIBridgePolyForwardCoeffRequest) returns (GetAIBridgePolyForwardCoeffResponse);
  rpc GetAIBridgePolyReverseCoeff(GetAIBridgePolyReverseCoeffRequest) returns (GetAIBridgePolyReverseCoeffResponse);
  rpc GetAIBridgeScaleType(GetAIBridgeScaleTypeRequest) returns (GetAIBridgeScaleTypeResponse);
  rpc GetAIBridgeShuntCalEnable(GetAIBridgeShuntCalEnableRequest) returns (GetAIBridgeShuntCalEnableResponse);
  rpc GetAIBridgeShuntCalGainAdjust(GetAIBridgeShuntCalGainAdjustRequest) returns (GetAIBridgeShuntCalGainAdjustResponse);
  rpc GetAIBridgeShuntCalSelect(GetAIBridgeShuntCalSelectRequest) returns (GetAIBridgeShuntCalSelectResponse);
  rpc GetAIBridgeShuntCalShuntCalAActualResistance(GetAIBridgeShuntCalShuntCalAActualResistanceRequest) returns (GetAIBridgeShuntCalShuntCalAActualResistanceResponse);
  rpc GetAIBridgeShuntCalShuntCalAResistance(GetAIBridgeShuntCalShuntCalAResistanceRequest) returns (GetAIBridgeShuntCalShuntCalAResistanceResponse);
  rpc GetAIBridgeShuntCalShuntCalASrc(GetAIBridgeShuntCalShuntCalASrcRequest) returns (GetAIBridgeShuntCalShuntCalASrcResponse);
  rpc GetAIBridgeShuntCalShuntCalBActualResistance(GetAIBridgeShuntCalShuntCalBActualResistanceRequest) returns (GetAIBridgeShuntCalShuntCalBActualResistanceResponse);
  rpc GetAIBridgeShuntCalShuntCalBResistance(GetAIBridgeShuntCalShuntCalBResistanceRequest) returns (GetAIBridgeShuntCalShuntCalBResistanceResponse);
  rpc GetAIBridgeTableElectricalVals(GetAIBridgeTableElectricalValsRequest) returns (GetAIBridgeTableElectricalValsResponse);
  rpc GetAIBridgeTablePhysicalVals(GetAIBridgeTablePhysicalValsRequest) returns (GetAIBridgeTablePhysicalValsResponse);
  rpc GetAIBridgeTwoPointLinFirstElectricalVal(GetAIBridgeTwoPointLinFirstElectricalValRequest) returns (GetAIBridgeTwoPointLinFirstElectricalValResponse);
  rpc GetAIBridgeTwoPointLinFirstPhysicalVal(GetAIBridgeTwoPointLinFirstPhysicalValRequest) returns (GetAIBridgeTwoPointLinFirstPhysicalValResponse);
  rpc GetAIBridgeTwoPointLinSecondElectricalVal(GetAIBridgeTwoPointLinSecondElectricalValRequest) returns (GetAIBridgeTwoPointLinSecondElectricalValResponse);
  rpc GetAIBridgeTwoPointLinSecondPhysicalVal(GetAIBridgeTwoPointLinSecondPhysicalValRequest) returns (GetAIBridgeTwoPointLinSecondPhysicalValResponse);
  rpc GetAIBridgeUnits(GetAIBridgeUnitsRequest) returns (GetAIBridgeUnitsResponse);
  rpc GetAIChanCalApplyCalIfExp(GetAIChanCalApplyCalIfExpRequest) returns (GetAIChanCalApplyCalIfExpResponse);
  rpc GetAIChanCalCalDate(GetAIChanCalCalDateRequest) returns (GetAIChanCalCalDateResponse);
  rpc GetAIChanCalDesc(GetAIChanCalDescRequest) returns (GetAIChanCalDescResponse);
  rpc GetAIChanCalEnableCal(GetAIChanCalEnableCalRequest) returns (GetAIChanCalEnableCalResponse);
  rpc GetAIChanCalExpDate(GetAIChanCalExpDateRequest) returns (GetAIChanCalExpDateResponse);
  rpc GetAIChanCalHasValidCalInfo(GetAIChanCalHasValidCalInfoRequest) returns (GetAIChanCalHasValidCalInfoResponse);
  rpc GetAIChanCalOperatorName(GetAIChanCalOperatorNameRequest) returns (GetAIChanCalOperatorNameResponse);
  rpc GetAIChanCalPolyForwardCoeff(GetAIChanCalPolyForwardCoeffRequest) returns (GetAIChanCalPolyForwardCoeffResponse);
  rpc GetAIChanCalPolyReverseCoeff(GetAIChanCalPolyReverseCoeffRequest) returns (GetAIChanCalPolyReverseCoeffResponse);
  rpc GetAIChanCalScaleType(GetAIChanCalScaleTypeRequest) returns (GetAIChanCalScaleTypeResponse);
  rpc GetAIChanCalTablePreScaledVals(GetAIChanCalTablePreScaledValsRequest) returns (GetAIChanCalTablePreScaledValsResponse);
  rpc GetAIChanCalTableScaledVals(GetAIChanCalTableScaledValsRequest) returns (GetAIChanCalTableScaledValsResponse);
  rpc GetAIChanCalVerifAcqVals(GetAIChanCalVerifAcqValsRequest) returns (GetAIChanCalVerifAcqValsResponse);
  rpc GetAIChanCalVerifRefVals(GetAIChanCalVerifRefValsRequest) returns (GetAIChanCalVerifRefValsResponse);
  rpc GetAIChargeUnits(GetAIChargeUnitsRequest) returns (GetAIChargeUnitsResponse);
  rpc GetAIChopEnable(GetAIChopEnableRequest) returns (GetAIChopEnableResponse);
  rpc GetAICoupling(GetAICouplingRequest) returns (GetAICouplingResponse);
  rpc GetAICurrentACRMSUnits(GetAICurrentACRMSUnitsRequest) returns (GetAICurrentACRMSUnitsResponse);
  rpc GetAICurrentShuntLoc(GetAICurrentShuntLocRequest) returns (GetAICurrentShuntLocResponse);
  rpc GetAICurrentShuntResistance(GetAICurrentShuntResistanceRequest) returns (GetAICurrentShuntResistanceResponse);
  rpc GetAICurrentUnits(GetAICurrentUnitsRequest) returns (GetAICurrentUnitsResponse);
  rpc GetAICustomScaleName(GetAICustomScaleNameRequest) returns (GetAICustomScaleNameResponse);
  rpc GetAIDCOffset(GetAIDCOffsetRequest) returns (GetAIDCOffsetResponse);
  rpc GetAIDataXferCustomThreshold(GetAIDataXferCustomThresholdRequest) returns (GetAIDataXferCustomThresholdResponse);
  rpc GetAIDataXferMaxRate(GetAIDataXferMaxRateRequest) returns (GetAIDataXferMaxRateResponse);
  rpc GetAIDataXferMech(GetAIDataXferMechRequest) returns (GetAIDataXferMechResponse);
  rpc GetAIDataXferReqCond(GetAIDataXferReqCondRequest) returns (GetAIDataXferReqCondResponse);
  rpc GetAIDevScalingCoeff(GetAIDevScalingCoeffRequest) returns (GetAIDevScalingCoeffResponse);
  rpc GetAIDigFltrBandpassCenterFreq(GetAIDigFltrBandpassCenterFreqRequest) returns (GetAIDigFltrBandpassCenterFreqResponse);
  rpc GetAIDigFltrBandpassWidth(GetAIDigFltrBandpassWidthRequest) returns (GetAIDigFltrBandpassWidthResponse);
  rpc GetAIDigFltrCoeff(GetAIDigFltrCoeffRequest) returns (GetAIDigFltrCoeffResponse);
  rpc GetAIDigFltrEnable(GetAIDigFltrEnableRequest) returns (GetAIDigFltrEnableResponse);
  rpc GetAIDigFltrHighpassCutoffFreq(GetAIDigFltrHighpassCutoffFreqRequest) returns (GetAIDigFltrHighpassCutoffFreqResponse);
  rpc GetAIDigFltrLowpassCutoffFreq(GetAIDigFltrLowpassCutoffFreqRequest) returns (GetAIDigFltrLowpassCutoffFreqResponse);
  rpc GetAIDigFltrNotchCenterFreq(GetAIDigFltrNotchCenterFreqRequest) returns (GetAIDigFltrNotchCenterFreqResponse);
  rpc GetAIDigFltrNotchWidth(GetAIDigFltrNotchWidthRequest) returns (GetAIDigFltrNotchWidthResponse);
  rpc GetAIDigFltrOrder(GetAIDigFltrOrderRequest) returns (GetAIDigFltrOrderResponse);
  rpc GetAIDigFltrResponse(GetAIDigFltrResponseRequest) returns (GetAIDigFltrResponseResponse);
  rpc GetAIDigFltrType(GetAIDigFltrTypeRequest) returns (GetAIDigFltrTypeResponse);
  rpc GetAIDitherEnable(GetAIDitherEnableRequest) returns (GetAIDitherEnableResponse);
  rpc GetAIEddyCurrentProxProbeSensitivity(GetAIEddyCurrentProxProbeSensitivityRequest) returns (GetAIEddyCurrentProxProbeSensitivityResponse);
  rpc GetAIEddyCurrentProxProbeSensitivityUnits(GetAIEddyCurrentProxProbeSensitivityUnitsRequest) returns (GetAIEddyCurrentProxProbeSensitivityUnitsResponse);
  rpc GetAIEddyCurrentProxProbeUnits(GetAIEddyCurrentProxProbeUnitsRequest) returns (GetAIEddyCurrentProxProbeUnitsResponse);
  rpc GetAIEnhancedAliasRejectionEnable(GetAIEnhancedAliasRejectionEnableRequest) returns (GetAIEnhancedAliasRejectionEnableResponse);
  rpc GetAIExcitActualVal(GetAIExcitActualValRequest) returns (GetAIExcitActualValResponse);
  rpc GetAIExcitDCorAC(GetAIExcitDCorACRequest) returns (GetAIExcitDCorACResponse);
  rpc GetAIExcitIdleOutputBehavior(GetAIExcitIdleOutputBehaviorRequest) returns (GetAIExcitIdleOutputBehaviorResponse);
  rpc GetAIExcitSense(GetAIExcitSenseRequest) returns (GetAIExcitSenseResponse);
  rpc GetAIExcitSrc(GetAIExcitSrcRequest) returns (GetAIExcitSrcResponse);
  rpc GetAIExcitUseForScaling(GetAIExcitUseForScalingRequest) returns (GetAIExcitUseForScalingResponse);
  rpc GetAIExcitUseMultiplexed(GetAIExcitUseMultiplexedRequest) returns (GetAIExcitUseMultiplexedResponse);
  rpc GetAIExcitVal(GetAIExcitValRequest) returns (GetAIExcitValResponse);
  rpc GetAIExcitVoltageOrCurrent(GetAIExcitVoltageOrCurrentRequest) returns (GetAIExcitVoltageOrCurrentResponse);
  rpc GetAIFilterDelay(GetAIFilterDelayRequest) returns (GetAIFilterDelayResponse);
  rpc GetAIFilterDelayAdjustment(GetAIFilterDelayAdjustmentRequest) returns (GetAIFilterDelayAdjustmentResponse);
  rpc GetAIFilterDelayUnits(GetAIFilterDelayUnitsRequest) returns (GetAIFilterDelayUnitsResponse);
  rpc GetAIFilterEnable(GetAIFilterEnableRequest) returns (GetAIFilterEnableResponse);
  rpc GetAIFilterFreq(GetAIFilterFreqRequest) returns (GetAIFilterFreqResponse);
  rpc GetAIFilterOrder(GetAIFilterOrderRequest) returns (GetAIFilterOrderResponse);
  rpc GetAIFilterResponse(GetAIFilterResponseRequest) returns (GetAIFilterResponseResponse);
  rpc GetAIForceIEPESensorSensitivity(GetAIForceIEPESensorSensitivityRequest) returns (GetAIForceIEPESensorSensitivityResponse);
  rpc GetAIForceIEPESensorSensitivityUnits(GetAIForceIEPESensorSensitivityUnitsRequest) returns (GetAIForceIEPESensorSensitivityUnitsResponse);
  rpc GetAIForceReadFromChan(GetAIForceReadFromChanRequest) returns (GetAIForceReadFromChanResponse);
  rpc GetAIForceUnits(GetAIForceUnitsRequest) returns (GetAIForceUnitsResponse);
  rpc GetAIFreqHyst(GetAIFreqHystRequest) returns (GetAIFreqHystResponse);
  rpc GetAIFreqThreshVoltage(GetAIFreqThreshVoltageRequest) returns (GetAIFreqThreshVoltageResponse);
  rpc GetAIFreqUnits(GetAIFreqUnitsRequest) returns (GetAIFreqUnitsResponse);
  rpc GetAIGain(GetAIGainRequest) returns (GetAIGainResponse);
  rpc GetAIInputLimitsFaultDetectEnable(GetAIInputLimitsFaultDetectEnableRequest) returns (GetAIInputLimitsFaultDetectEnableResponse);
  rpc GetAIInputLimitsFaultDetectLowerLimit(GetAIInputLimitsFaultDetectLowerLimitRequest) returns (GetAIInputLimitsFaultDetectLowerLimitResponse);
  rpc GetAIInputLimitsFaultDetectUpperLimit(GetAIInputLimitsFaultDetectUpperLimitRequest) returns (GetAIInputLimitsFaultDetectUpperLimitResponse);
  rpc GetAIInputSrc(GetAIInputSrcRequest) returns (GetAIInputSrcResponse);
  rpc GetAIIsTEDS(GetAIIsTEDSRequest) returns (GetAIIsTEDSResponse);
  rpc GetAILVDTSensitivity(GetAILVDTSensitivityRequest) returns (GetAILVDTSensitivityResponse);
  rpc GetAILVDTSensitivityUnits(GetAILVDTSensitivityUnitsRequest) returns (GetAILVDTSensitivityUnitsResponse);
  rpc GetAILVDTUnits(GetAILVDTUnitsRequest) returns (GetAILVDTUnitsResponse);
  rpc GetAILeadWireResistance(GetAILeadWireResistanceRequest) returns (GetAILeadWireResistanceResponse);
  rpc GetAILossyLSBRemovalCompressedSampSize(GetAILossyLSBRemovalCompressedSampSizeRequest) returns (GetAILossyLSBRemovalCompressedSampSizeResponse);
  rpc GetAILowpassCutoffFreq(GetAILowpassCutoffFreqRequest) returns (GetAILowpassCutoffFreqResponse);
  rpc GetAILowpassEnable(GetAILowpassEnableRequest) returns (GetAILowpassEnableResponse);
  rpc GetAILowpassSwitchCapClkSrc(GetAILowpassSwitchCapClkSrcRequest) returns (GetAILowpassSwitchCapClkSrcResponse);
  rpc GetAILowpassSwitchCapExtClkDiv(GetAILowpassSwitchCapExtClkDivRequest) returns (GetAILowpassSwitchCapExtClkDivResponse);
  rpc GetAILowpassSwitchCapExtClkFreq(GetAILowpassSwitchCapExtClkFreqRequest) returns (GetAILowpassSwitchCapExtClkFreqResponse);
  rpc GetAILowpassSwitchCapOutClkDiv(GetAILowpassSwitchCapOutClkDivRequest) returns (GetAILowpassSwitchCapOutClkDivResponse);
  rpc GetAIMax(GetAIMaxRequest) returns (GetAIMaxResponse);
  rpc GetAIMeasType(GetAIMeasTypeRequest) returns (GetAIMeasTypeResponse);
  rpc GetAIMemMapEnable(GetAIMemMapEnableRequest) returns (GetAIMemMapEnableResponse);
  rpc GetAIMicrophoneSensitivity(GetAIMicrophoneSensitivityRequest) returns (GetAIMicrophoneSensitivityResponse);
  rpc GetAIMin(GetAIMinRequest) returns (GetAIMinResponse);
  rpc GetAIOpenChanDetectEnable(GetAIOpenChanDetectEnableRequest) returns (GetAIOpenChanDetectEnableResponse);
  rpc GetAIOpenThrmcplDetectEnable(GetAIOpenThrmcplDetectEnableRequest) returns (GetAIOpenThrmcplDetectEnableResponse);
  rpc GetAIOvercurrentDetectEnable(GetAIOvercurrentDetectEnableRequest) returns (GetAIOvercurrentDetectEnableResponse);
  rpc GetAIPowerSupplyFaultDetectEnable(GetAIPowerSupplyFaultDetectEnableRequest) returns (GetAIPowerSupplyFaultDetectEnableResponse);
  rpc GetAIPressureUnits(GetAIPressureUnitsRequest) returns (GetAIPressureUnitsResponse);
  rpc GetAIProbeAtten(GetAIProbeAttenRequest) returns (GetAIProbeAttenResponse);
  rpc GetAIRTDA(GetAIRTDARequest) returns (GetAIRTDAResponse);
  rpc GetAIRTDB(GetAIRTDBRequest) returns (GetAIRTDBResponse);
  rpc GetAIRTDC(GetAIRTDCRequest) returns (GetAIRTDCResponse);
  rpc GetAIRTDR0(GetAIRTDR0Request) returns (GetAIRTDR0Response);
  rpc GetAIRTDType(GetAIRTDTypeRequest) returns (GetAIRTDTypeResponse);
  rpc GetAIRVDTSensitivity(GetAIRVDTSensitivityRequest) returns (GetAIRVDTSensitivityResponse);
  rpc GetAIRVDTSensitivityUnits(GetAIRVDTSensitivityUnitsRequest) returns (GetAIRVDTSensitivityUnitsResponse);
  rpc GetAIRVDTUnits(GetAIRVDTUnitsRequest) returns (GetAIRVDTUnitsResponse);
  rpc GetAIRawDataCompressionType(GetAIRawDataCompressionTypeRequest) returns (GetAIRawDataCompressionTypeResponse);
  rpc GetAIRawSampJustification(GetAIRawSampJustificationRequest) returns (GetAIRawSampJustificationResponse);
  rpc GetAIRawSampSize(GetAIRawSampSizeRequest) returns (GetAIRawSampSizeResponse);
  rpc GetAIRemoveFilterDelay(GetAIRemoveFilterDelayRequest) returns (GetAIRemoveFilterDelayResponse);
  rpc GetAIResistanceCfg(GetAIResistanceCfgRequest) returns (GetAIResistanceCfgResponse);
  rpc GetAIResistanceUnits(GetAIResistanceUnitsRequest) returns (GetAIResistanceUnitsResponse);
  rpc GetAIResolution(GetAIResolutionRequest) returns (GetAIResolutionResponse);
  rpc GetAIResolutionUnits(GetAIResolutionUnitsRequest) returns (GetAIResolutionUnitsResponse);
  rpc GetAIRngHigh(GetAIRngHighRequest) returns (GetAIRngHighResponse);
  rpc GetAIRngLow(GetAIRngLowRequest) returns (GetAIRngLowResponse);
  rpc GetAIRosetteStrainGageOrientation(GetAIRosetteStrainGageOrientationRequest) returns (GetAIRosetteStrainGageOrientationResponse);
  rpc GetAIRosetteStrainGageRosetteMeasType(GetAIRosetteStrainGageRosetteMeasTypeRequest) returns (GetAIRosetteStrainGageRosetteMeasTypeResponse);
  rpc GetAIRosetteStrainGageRosetteType(GetAIRosetteStrainGageRosetteTypeRequest) returns (GetAIRosetteStrainGageRosetteTypeResponse);
  rpc GetAIRosetteStrainGageStrainChans(GetAIRosetteStrainGageStrainChansRequest) returns (GetAIRosetteStrainGageStrainChansResponse);
  rpc GetAISampAndHoldEnable(GetAISampAndHoldEnableRequest) returns (GetAISampAndHoldEnableResponse);
  rpc GetAISensorPowerCfg(GetAISensorPowerCfgRequest) returns (GetAISensorPowerCfgResponse);
  rpc GetAISensorPowerType(GetAISensorPowerTypeRequest) returns (GetAISensorPowerTypeResponse);
  rpc GetAISensorPowerVoltage(GetAISensorPowerVoltageRequest) returns (GetAISensorPowerVoltageResponse);
  rpc GetAISoundPressureMaxSoundPressureLvl(GetAISoundPressureMaxSoundPressureLvlRequest) returns (GetAISoundPressureMaxSoundPressureLvlResponse);
  rpc GetAISoundPressureUnits(GetAISoundPressureUnitsRequest) returns (GetAISoundPressureUnitsResponse);
  rpc GetAISoundPressuredBRef(GetAISoundPressuredBRefRequest) returns (GetAISoundPressuredBRefResponse);
  rpc GetAIStrainGageCfg(GetAIStrainGageCfgRequest) returns (GetAIStrainGageCfgResponse);
  rpc GetAIStrainGageForceReadFromChan(GetAIStrainGageForceReadFromChanRequest) returns (GetAIStrainGageForceReadFromChanResponse);
  rpc GetAIStrainGageGageFactor(GetAIStrainGageGageFactorRequest) returns (GetAIStrainGageGageFactorResponse);
  rpc GetAIStrainGagePoissonRatio(GetAIStrainGagePoissonRatioRequest) returns (GetAIStrainGagePoissonRatioResponse);
  rpc GetAIStrainUnits(GetAIStrainUnitsRequest) returns (GetAIStrainUnitsResponse);
  rpc GetAITEDSUnits(GetAITEDSUnitsRequest) returns (GetAITEDSUnitsResponse);
  rpc GetAITempUnits(GetAITempUnitsRequest) returns (GetAITempUnitsResponse);
  rpc GetAITermCfg(GetAITermCfgRequest) returns (GetAITermCfgResponse);
  rpc GetAIThrmcplCJCChan(GetAIThrmcplCJCChanRequest) returns (GetAIThrmcplCJCChanResponse);
  rpc GetAIThrmcplCJCSrc(GetAIThrmcplCJCSrcRequest) returns (GetAIThrmcplCJCSrcResponse);
  rpc GetAIThrmcplCJCVal(GetAIThrmcplCJCValRequest) returns (GetAIThrmcplCJCValResponse);
  rpc GetAIThrmcplLeadOffsetVoltage(GetAIThrmcplLeadOffsetVoltageRequest) returns (GetAIThrmcplLeadOffsetVoltageResponse);
  rpc GetAIThrmcplScaleType(GetAIThrmcplScaleTypeRequest) returns (GetAIThrmcplScaleTypeResponse);
  rpc GetAIThrmcplType(GetAIThrmcplTypeRequest) returns (GetAIThrmcplTypeResponse);
  rpc GetAIThrmstrA(GetAIThrmstrARequest) returns (GetAIThrmstrAResponse);
  rpc GetAIThrmstrB(GetAIThrmstrBRequest) returns (GetAIThrmstrBResponse);
  rpc GetAIThrmstrC(GetAIThrmstrCRequest) returns (GetAIThrmstrCResponse);
  rpc GetAIThrmstrR1(GetAIThrmstrR1Request) returns (GetAIThrmstrR1Response);
  rpc GetAITorqueUnits(GetAITorqueUnitsRequest) returns (GetAITorqueUnitsResponse);
  rpc GetAIUsbXferReqCount(GetAIUsbXferReqCountRequest) returns (GetAIUsbXferReqCountResponse);
  rpc GetAIUsbXferReqSize(GetAIUsbXferReqSizeRequest) returns (GetAIUsbXferReqSizeResponse);
  rpc GetAIVelocityIEPESensorSensitivity(GetAIVelocityIEPESensorSensitivityRequest) returns (GetAIVelocityIEPESensorSensitivityResponse);
  rpc GetAIVelocityIEPESensorSensitivityUnits(GetAIVelocityIEPESensorSensitivityUnitsRequest) returns (GetAIVelocityIEPESensorSensitivityUnitsResponse);
  rpc GetAIVelocityIEPESensordBRef(GetAIVelocityIEPESensordBRefRequest) returns (GetAIVelocityIEPESensordBRefResponse);
  rpc GetAIVelocityUnits(GetAIVelocityUnitsRequest) returns (GetAIVelocityUnitsResponse);
  rpc GetAIVoltageACRMSUnits(GetAIVoltageACRMSUnitsRequest) returns (GetAIVoltageACRMSUnitsResponse);
  rpc GetAIVoltageUnits(GetAIVoltageUnitsRequest) returns (GetAIVoltageUnitsResponse);
  rpc GetAIVoltagedBRef(GetAIVoltagedBRefRequest) returns (GetAIVoltagedBRefResponse);
  rpc GetAOCurrentUnits(GetAOCurrentUnitsRequest) returns (GetAOCurrentUnitsResponse);
  rpc GetAOCustomScaleName(GetAOCustomScaleNameRequest) returns (GetAOCustomScaleNameResponse);
  rpc GetAODACOffsetExtSrc(GetAODACOffsetExtSrcRequest) returns (GetAODACOffsetExtSrcResponse);
  rpc GetAODACOffsetSrc(GetAODACOffsetSrcRequest) returns (GetAODACOffsetSrcResponse);
  rpc GetAODACOffsetVal(GetAODACOffsetValRequest) returns (GetAODACOffsetValResponse);
  rpc GetAODACRefAllowConnToGnd(GetAODACRefAllowConnToGndRequest) returns (GetAODACRefAllowConnToGndResponse);
  rpc GetAODACRefConnToGnd(GetAODACRefConnToGndRequest) returns (GetAODACRefConnToGndResponse);
  rpc GetAODACRefExtSrc(GetAODACRefExtSrcRequest) returns (GetAODACRefExtSrcResponse);
  rpc GetAODACRefSrc(GetAODACRefSrcRequest) returns (GetAODACRefSrcResponse);
  rpc GetAODACRefVal(GetAODACRefValRequest) returns (GetAODACRefValResponse);
  rpc GetAODACRngHigh(GetAODACRngHighRequest) returns (GetAODACRngHighResponse);
  rpc GetAODACRngLow(GetAODACRngLowRequest) returns (GetAODACRngLowResponse);
  rpc GetAODataXferMech(GetAODataXferMechRequest) returns (GetAODataXferMechResponse);
  rpc GetAODataXferReqCond(GetAODataXferReqCondRequest) returns (GetAODataXferReqCondResponse);
  rpc GetAODevScalingCoeff(GetAODevScalingCoeffRequest) returns (GetAODevScalingCoeffResponse);
  rpc GetAOEnhancedImageRejectionEnable(GetAOEnhancedImageRejectionEnableRequest) returns (GetAOEnhancedImageRejectionEnableResponse);
  rpc GetAOFilterDelay(GetAOFilterDelayRequest) returns (GetAOFilterDelayResponse);
  rpc GetAOFilterDelayAdjustment(GetAOFilterDelayAdjustmentRequest) returns (GetAOFilterDelayAdjustmentResponse);
  rpc GetAOFilterDelayUnits(GetAOFilterDelayUnitsRequest) returns (GetAOFilterDelayUnitsResponse);
  rpc GetAOFuncGenAmplitude(GetAOFuncGenAmplitudeRequest) returns (GetAOFuncGenAmplitudeResponse);
  rpc GetAOFuncGenFMDeviation(GetAOFuncGenFMDeviationRequest) returns (GetAOFuncGenFMDeviationResponse);
  rpc GetAOFuncGenFreq(GetAOFuncGenFreqRequest) returns (GetAOFuncGenFreqResponse);
  rpc GetAOFuncGenModulationType(GetAOFuncGenModulationTypeRequest) returns (GetAOFuncGenModulationTypeResponse);
  rpc GetAOFuncGenOffset(GetAOFuncGenOffsetRequest) returns (GetAOFuncGenOffsetResponse);
  rpc GetAOFuncGenSquareDutyCycle(GetAOFuncGenSquareDutyCycleRequest) returns (GetAOFuncGenSquareDutyCycleResponse);
  rpc GetAOFuncGenType(GetAOFuncGenTypeRequest) returns (GetAOFuncGenTypeResponse);
  rpc GetAOGain(GetAOGainRequest) returns (GetAOGainResponse);
  rpc GetAOIdleOutputBehavior(GetAOIdleOutputBehaviorRequest) returns (GetAOIdleOutputBehaviorResponse);
  rpc GetAOLoadImpedance(GetAOLoadImpedanceRequest) returns (GetAOLoadImpedanceResponse);
  rpc GetAOMax(GetAOMaxRequest) returns (GetAOMaxResponse);
  rpc GetAOMemMapEnable(GetAOMemMapEnableRequest) returns (GetAOMemMapEnableResponse);
  rpc GetAOMin(GetAOMinRequest) returns (GetAOMinResponse);
  rpc GetAOOutputImpedance(GetAOOutputImpedanceRequest) returns (GetAOOutputImpedanceResponse);
  rpc GetAOOutputType(GetAOOutputTypeRequest) returns (GetAOOutputTypeResponse);
  rpc GetAOReglitchEnable(GetAOReglitchEnableRequest) returns (GetAOReglitchEnableResponse);
  rpc GetAOResolution(GetAOResolutionRequest) returns (GetAOResolutionResponse);
  rpc GetAOResolutionUnits(GetAOResolutionUnitsRequest) returns (GetAOResolutionUnitsResponse);
  rpc GetAOTermCfg(GetAOTermCfgRequest) returns (GetAOTermCfgResponse);
  rpc GetAOUsbXferReqCount(GetAOUsbXferReqCountRequest) returns (GetAOUsbXferReqCountResponse);
  rpc GetAOUsbXferReqSize(GetAOUsbXferReqSizeRequest) returns (GetAOUsbXferReqSizeResponse);
  rpc GetAOUseOnlyOnBrdMem(GetAOUseOnlyOnBrdMemRequest) returns (GetAOUseOnlyOnBrdMemResponse);
  rpc GetAOVoltageCurrentLimit(GetAOVoltageCurrentLimitRequest) returns (GetAOVoltageCurrentLimitResponse);
  rpc GetAOVoltageUnits(GetAOVoltageUnitsRequest) returns (GetAOVoltageUnitsResponse);
  rpc GetArmStartTrigTimestampVal(GetArmStartTrigTimestampValRequest) returns (GetArmStartTrigTimestampValResponse);
  rpc GetArmStartTrigTrigWhen(GetArmStartTrigTrigWhenRequest) returns (GetArmStartTrigTrigWhenResponse);
  rpc GetAutoConfiguredCDAQSyncConnections(GetAutoConfiguredCDAQSyncConnectionsRequest) returns (GetAutoConfiguredCDAQSyncConnectionsResponse);
  rpc GetBufInputBufSize(GetBufInputBufSizeRequest) returns (GetBufInputBufSizeResponse);
  rpc GetBufInputOnbrdBufSize(GetBufInputOnbrdBufSizeRequest) returns (GetBufInputOnbrdBufSizeResponse);
  rpc GetBufOutputBufSize(GetBufOutputBufSizeRequest) returns (GetBufOutputBufSizeResponse);
  rpc GetBufOutputOnbrdBufSize(GetBufOutputOnbrdBufSizeRequest) returns (GetBufOutputOnbrdBufSizeResponse);
  rpc GetCIAngEncoderInitialAngle(GetCIAngEncoderInitialAngleRequest) returns (GetCIAngEncoderInitialAngleResponse);
  rpc GetCIAngEncoderPulsesPerRev(GetCIAngEncoderPulsesPerRevRequest) returns (GetCIAngEncoderPulsesPerRevResponse);
  rpc GetCIAngEncoderUnits(GetCIAngEncoderUnitsRequest) returns (GetCIAngEncoderUnitsResponse);
  rpc GetCICount(GetCICountRequest) returns (GetCICountResponse);
  rpc GetCICountEdgesActiveEdge(GetCICountEdgesActiveEdgeRequest) returns (GetCICountEdgesActiveEdgeResponse);
  rpc GetCICountEdgesCountDirDigFltrEnable(GetCICountEdgesCountDirDigFltrEnableRequest) returns (GetCICountEdgesCountDirDigFltrEnableResponse);
  rpc GetCICountEdgesCountDirDigFltrMinPulseWidth(GetCICountEdgesCountDirDigFltrMinPulseWidthRequest) returns (GetCICountEdgesCountDirDigFltrMinPulseWidthResponse);
  rpc GetCICountEdgesCountDirDigFltrTimebaseRate(GetCICountEdgesCountDirDigFltrTimebaseRateRequest) returns (GetCICountEdgesCountDirDigFltrTimebaseRateResponse);
  rpc GetCICountEdgesCountDirDigFltrTimebaseSrc(GetCICountEdgesCountDirDigFltrTimebaseSrcRequest) returns (GetCICountEdgesCountDirDigFltrTimebaseSrcResponse);
  rpc GetCICountEdgesCountDirDigSyncEnable(GetCICountEdgesCountDirDigSyncEnableRequest) returns (GetCICountEdgesCountDirDigSyncEnableResponse);
  rpc GetCICountEdgesCountDirHyst(GetCICountEdgesCountDirHystRequest) returns (GetCICountEdgesCountDirHystResponse);
  rpc GetCICountEdgesCountDirLogicLvlBehavior(GetCICountEdgesCountDirLogicLvlBehaviorRequest) returns (GetCICountEdgesCountDirLogicLvlBehaviorResponse);
  rpc GetCICountEdgesCountDirTermCfg(GetCICountEdgesCountDirTermCfgRequest) returns (GetCICountEdgesCountDirTermCfgResponse);
  rpc GetCICountEdgesCountDirThreshVoltage(GetCICountEdgesCountDirThreshVoltageRequest) returns (GetCICountEdgesCountDirThreshVoltageResponse);
  rpc GetCICountEdgesCountResetActiveEdge(GetCICountEdgesCountResetActiveEdgeRequest) returns (GetCICountEdgesCountResetActiveEdgeResponse);
  rpc GetCICountEdgesCountResetDigFltrEnable(GetCICountEdgesCountResetDigFltrEnableRequest) returns (GetCICountEdgesCountResetDigFltrEnableResponse);
  rpc GetCICountEdgesCountResetDigFltrMinPulseWidth(GetCICountEdgesCountResetDigFltrMinPulseWidthRequest) returns (GetCICountEdgesCountResetDigFltrMinPulseWidthResponse);
  rpc GetCICountEdgesCountResetDigFltrTimebaseRate(GetCICountEdgesCountResetDigFltrTimebaseRateRequest) returns (GetCICountEdgesCountResetDigFltrTimebaseRateResponse);
  rpc GetCICountEdgesCountResetDigFltrTimebaseSrc(GetCICountEdgesCountResetDigFltrTimebaseSrcRequest) returns (GetCICountEdgesCountResetDigFltrTimebaseSrcResponse);
  rpc GetCICountEdgesCountResetDigSyncEnable(GetCICountEdgesCountResetDigSyncEnableRequest) returns (GetCICountEdgesCountResetDigSyncEnableResponse);
  rpc GetCICountEdgesCountResetEnable(GetCICountEdgesCountResetEnableRequest) returns (GetCICountEdgesCountResetEnableResponse);
  rpc GetCICountEdgesCountResetHyst(GetCICountEdgesCountResetHystRequest) returns (GetCICountEdgesCountResetHystResponse);
  rpc GetCICountEdgesCountResetLogicLvlBehavior(GetCICountEdgesCountResetLogicLvlBehaviorRequest) returns (GetCICountEdgesCountResetLogicLvlBehaviorResponse);
  rpc GetCICountEdgesCountResetResetCount(GetCICountEdgesCountResetResetCountRequest) returns (GetCICountEdgesCountResetResetCountResponse);
  rpc GetCICountEdgesCountResetTerm(GetCICountEdgesCountResetTermRequest) returns (GetCICountEdgesCountResetTermResponse);
  rpc GetCICountEdgesCountResetTermCfg(GetCICountEdgesCountResetTermCfgRequest) returns (GetCICountEdgesCountResetTermCfgResponse);
  rpc GetCICountEdgesCountResetThreshVoltage(GetCICountEdgesCountResetThreshVoltageRequest) returns (GetCICountEdgesCountResetThreshVoltageResponse);
  rpc GetCICountEdgesDigFltrEnable(GetCICountEdgesDigFltrEnableRequest) returns (GetCICountEdgesDigFltrEnableResponse);
  rpc GetCICountEdgesDigFltrMinPulseWidth(GetCICountEdgesDigFltrMinPulseWidthRequest) returns (GetCICountEdgesDigFltrMinPulseWidthResponse);
  rpc GetCICountEdgesDigFltrTimebaseRate(GetCICountEdgesDigFltrTimebaseRateRequest) returns (GetCICountEdgesDigFltrTimebaseRateResponse);
  rpc GetCICountEdgesDigFltrTimebaseSrc(GetCICountEdgesDigFltrTimebaseSrcRequest) returns (GetCICountEdgesDigFltrTimebaseSrcResponse);
  rpc GetCICountEdgesDigSyncEnable(GetCICountEdgesDigSyncEnableRequest) returns (GetCICountEdgesDigSyncEnableResponse);
  rpc GetCICountEdgesDir(GetCICountEdgesDirRequest) returns (GetCICountEdgesDirResponse);
  rpc GetCICountEdgesDirTerm(GetCICountEdgesDirTermRequest) returns (GetCICountEdgesDirTermResponse);
  rpc GetCICountEdgesGateDigFltrEnable(GetCICountEdgesGateDigFltrEnableRequest) returns (GetCICountEdgesGateDigFltrEnableResponse);
  rpc GetCICountEdgesGateDigFltrMinPulseWidth(GetCICountEdgesGateDigFltrMinPulseWidthRequest) returns (GetCICountEdgesGateDigFltrMinPulseWidthResponse);
  rpc GetCICountEdgesGateDigFltrTimebaseRate(GetCICountEdgesGateDigFltrTimebaseRateRequest) returns (GetCICountEdgesGateDigFltrTimebaseRateResponse);
  rpc GetCICountEdgesGateDigFltrTimebaseSrc(GetCICountEdgesGateDigFltrTimebaseSrcRequest) returns (GetCICountEdgesGateDigFltrTimebaseSrcResponse);
  rpc GetCICountEdgesGateEnable(GetCICountEdgesGateEnableRequest) returns (GetCICountEdgesGateEnableResponse);
  rpc GetCICountEdgesGateHyst(GetCICountEdgesGateHystRequest) returns (GetCICountEdgesGateHystResponse);
  rpc GetCICountEdgesGateLogicLvlBehavior(GetCICountEdgesGateLogicLvlBehaviorRequest) returns (GetCICountEdgesGateLogicLvlBehaviorResponse);
  rpc GetCICountEdgesGateTerm(GetCICountEdgesGateTermRequest) returns (GetCICountEdgesGateTermResponse);
  rpc GetCICountEdgesGateTermCfg(GetCICountEdgesGateTermCfgRequest) returns (GetCICountEdgesGateTermCfgResponse);
  rpc GetCICountEdgesGateThreshVoltage(GetCICountEdgesGateThreshVoltageRequest) returns (GetCICountEdgesGateThreshVoltageResponse);
  rpc GetCICountEdgesGateWhen(GetCICountEdgesGateWhenRequest) returns (GetCICountEdgesGateWhenResponse);
  rpc GetCICountEdgesHyst(GetCICountEdgesHystRequest) returns (GetCICountEdgesHystResponse);
  rpc GetCICountEdgesInitialCnt(GetCICountEdgesInitialCntRequest) returns (GetCICountEdgesInitialCntResponse);
  rpc GetCICountEdgesLogicLvlBehavior(GetCICountEdgesLogicLvlBehaviorRequest) returns (GetCICountEdgesLogicLvlBehaviorResponse);
  rpc GetCICountEdgesTerm(GetCICountEdgesTermRequest) returns (GetCICountEdgesTermResponse);
  rpc GetCICountEdgesTermCfg(GetCICountEdgesTermCfgRequest) returns (GetCICountEdgesTermCfgResponse);
  rpc GetCICountEdgesThreshVoltage(GetCICountEdgesThreshVoltageRequest) returns (GetCICountEdgesThreshVoltageResponse);
  rpc GetCICtrTimebaseActiveEdge(GetCICtrTimebaseActiveEdgeRequest) returns (GetCICtrTimebaseActiveEdgeResponse);
  rpc GetCICtrTimebaseDigFltrEnable(GetCICtrTimebaseDigFltrEnableRequest) returns (GetCICtrTimebaseDigFltrEnableResponse);
  rpc GetCICtrTimebaseDigFltrMinPulseWidth(GetCICtrTimebaseDigFltrMinPulseWidthRequest) returns (GetCICtrTimebaseDigFltrMinPulseWidthResponse);
  rpc GetCICtrTimebaseDigFltrTimebaseRate(GetCICtrTimebaseDigFltrTimebaseRateRequest) returns (GetCICtrTimebaseDigFltrTimebaseRateResponse);
  rpc GetCICtrTimebaseDigFltrTimebaseSrc(GetCICtrTimebaseDigFltrTimebaseSrcRequest) returns (GetCICtrTimebaseDigFltrTimebaseSrcResponse);
  rpc GetCICtrTimebaseDigSyncEnable(GetCICtrTimebaseDigSyncEnableRequest) returns (GetCICtrTimebaseDigSyncEnableResponse);
  rpc GetCICtrTimebaseMasterTimebaseDiv(GetCICtrTimebaseMasterTimebaseDivRequest) returns (GetCICtrTimebaseMasterTimebaseDivResponse);
  rpc GetCICtrTimebaseRate(GetCICtrTimebaseRateRequest) returns (GetCICtrTimebaseRateResponse);
  rpc GetCICtrTimebaseSrc(GetCICtrTimebaseSrcRequest) returns (GetCICtrTimebaseSrcResponse);
  rpc GetCICustomScaleName(GetCICustomScaleNameRequest) returns (GetCICustomScaleNameResponse);
  rpc GetCIDataXferMech(GetCIDataXferMechRequest) returns (GetCIDataXferMechResponse);
  rpc GetCIDataXferReqCond(GetCIDataXferReqCondRequest) returns (GetCIDataXferReqCondResponse);
  rpc GetCIDupCountPrevent(GetCIDupCountPreventRequest) returns (GetCIDupCountPreventResponse);
  rpc GetCIDutyCycleDigFltrEnable(GetCIDutyCycleDigFltrEnableRequest) returns (GetCIDutyCycleDigFltrEnableResponse);
  rpc GetCIDutyCycleDigFltrMinPulseWidth(GetCIDutyCycleDigFltrMinPulseWidthRequest) returns (GetCIDutyCycleDigFltrMinPulseWidthResponse);
  rpc GetCIDutyCycleDigFltrTimebaseRate(GetCIDutyCycleDigFltrTimebaseRateRequest) returns (GetCIDutyCycleDigFltrTimebaseRateResponse);
  rpc GetCIDutyCycleDigFltrTimebaseSrc(GetCIDutyCycleDigFltrTimebaseSrcRequest) returns (GetCIDutyCycleDigFltrTimebaseSrcResponse);
  rpc GetCIDutyCycleLogicLvlBehavior(GetCIDutyCycleLogicLvlBehaviorRequest) returns (GetCIDutyCycleLogicLvlBehaviorResponse);
  rpc GetCIDutyCycleStartingEdge(GetCIDutyCycleStartingEdgeRequest) returns (GetCIDutyCycleStartingEdgeResponse);
  rpc GetCIDutyCycleTerm(GetCIDutyCycleTermRequest) returns (GetCIDutyCycleTermResponse);
  rpc GetCIDutyCycleTermCfg(GetCIDutyCycleTermCfgRequest) returns (GetCIDutyCycleTermCfgResponse);
  rpc GetCIEncoderAInputDigFltrEnable(GetCIEncoderAInputDigFltrEnableRequest) returns (GetCIEncoderAInputDigFltrEnableResponse);
  rpc GetCIEncoderAInputDigFltrMinPulseWidth(GetCIEncoderAInputDigFltrMinPulseWidthRequest) returns (GetCIEncoderAInputDigFltrMinPulseWidthResponse);
  rpc GetCIEncoderAInputDigFltrTimebaseRate(GetCIEncoderAInputDigFltrTimebaseRateRequest) returns (GetCIEncoderAInputDigFltrTimebaseRateResponse);
  rpc GetCIEncoderAInputDigFltrTimebaseSrc(GetCIEncoderAInputDigFltrTimebaseSrcRequest) returns (GetCIEncoderAInputDigFltrTimebaseSrcResponse);
  rpc GetCIEncoderAInputDigSyncEnable(GetCIEncoderAInputDigSyncEnableRequest) returns (GetCIEncoderAInputDigSyncEnableResponse);
  rpc GetCIEncoderAInputLogicLvlBehavior(GetCIEncoderAInputLogicLvlBehaviorRequest) returns (GetCIEncoderAInputLogicLvlBehaviorResponse);
  rpc GetCIEncoderAInputTerm(GetCIEncoderAInputTermRequest) returns (GetCIEncoderAInputTermResponse);
  rpc GetCIEncoderAInputTermCfg(GetCIEncoderAInputTermCfgRequest) returns (GetCIEncoderAInputTermCfgResponse);
  rpc GetCIEncoderBInputDigFltrEnable(GetCIEncoderBInputDigFltrEnableRequest) returns (GetCIEncoderBInputDigFltrEnableResponse);
  rpc GetCIEncoderBInputDigFltrMinPulseWidth(GetCIEncoderBInputDigFltrMinPulseWidthRequest) returns (GetCIEncoderBInputDigFltrMinPulseWidthResponse);
  rpc GetCIEncoderBInputDigFltrTimebaseRate(GetCIEncoderBInputDigFltrTimebaseRateRequest) returns (GetCIEncoderBInputDigFltrTimebaseRateResponse);
  rpc GetCIEncoderBInputDigFltrTimebaseSrc(GetCIEncoderBInputDigFltrTimebaseSrcRequest) returns (GetCIEncoderBInputDigFltrTimebaseSrcResponse);
  rpc GetCIEncoderBInputDigSyncEnable(GetCIEncoderBInputDigSyncEnableRequest) returns (GetCIEncoderBInputDigSyncEnableResponse);
  rpc GetCIEncoderBInputLogicLvlBehavior(GetCIEncoderBInputLogicLvlBehaviorRequest) returns (GetCIEncoderBInputLogicLvlBehaviorResponse);
  rpc GetCIEncoderBInputTerm(GetCIEncoderBInputTermRequest) returns (GetCIEncoderBInputTermResponse);
  rpc GetCIEncoderBInputTermCfg(GetCIEncoderBInputTermCfgRequest) returns (GetCIEncoderBInputTermCfgResponse);
  rpc GetCIEncoderDecodingType(GetCIEncoderDecodingTypeRequest) returns (GetCIEncoderDecodingTypeResponse);
  rpc GetCIEncoderZIndexEnable(GetCIEncoderZIndexEnableRequest) returns (GetCIEncoderZIndexEnableResponse);
  rpc GetCIEncoderZIndexPhase(GetCIEncoderZIndexPhaseRequest) returns (GetCIEncoderZIndexPhaseResponse);
  rpc GetCIEncoderZIndexVal(GetCIEncoderZIndexValRequest) returns (GetCIEncoderZIndexValResponse);
  rpc GetCIEncoderZInputDigFltrEnable(GetCIEncoderZInputDigFltrEnableRequest) returns (GetCIEncoderZInputDigFltrEnableResponse);
  rpc GetCIEncoderZInputDigFltrMinPulseWidth(GetCIEncoderZInputDigFltrMinPulseWidthRequest) returns (GetCIEncoderZInputDigFltrMinPulseWidthResponse);
  rpc GetCIEncoderZInputDigFltrTimebaseRate(GetCIEncoderZInputDigFltrTimebaseRateRequest) returns (GetCIEncoderZInputDigFltrTimebaseRateResponse);
  rpc GetCIEncoderZInputDigFltrTimebaseSrc(GetCIEncoderZInputDigFltrTimebaseSrcRequest) returns (GetCIEncoderZInputDigFltrTimebaseSrcResponse);
  rpc GetCIEncoderZInputDigSyncEnable(GetCIEncoderZInputDigSyncEnableRequest) returns (GetCIEncoderZInputDigSyncEnableResponse);
  rpc GetCIEncoderZInputLogicLvlBehavior(GetCIEncoderZInputLogicLvlBehaviorRequest) returns (GetCIEncoderZInputLogicLvlBehaviorResponse);
  rpc GetCIEncoderZInputTerm(GetCIEncoderZInputTermRequest) returns (GetCIEncoderZInputTermResponse);
  rpc GetCIEncoderZInputTermCfg(GetCIEncoderZInputTermCfgRequest) returns (GetCIEncoderZInputTermCfgResponse);
  rpc GetCIFilterDelay(GetCIFilterDelayRequest) returns (GetCIFilterDelayResponse);
  rpc GetCIFilterDelayUnits(GetCIFilterDelayUnitsRequest) returns (GetCIFilterDelayUnitsResponse);
  rpc GetCIFilterEnable(GetCIFilterEnableRequest) returns (GetCIFilterEnableResponse);
  rpc GetCIFilterFreq(GetCIFilterFreqRequest) returns (GetCIFilterFreqResponse);
  rpc GetCIFilterOrder(GetCIFilterOrderRequest) returns (GetCIFilterOrderResponse);
  rpc GetCIFilterResponse(GetCIFilterResponseRequest) returns (GetCIFilterResponseResponse);
  rpc GetCIFreqDigFltrEnable(GetCIFreqDigFltrEnableRequest) returns (GetCIFreqDigFltrEnableResponse);
  rpc GetCIFreqDigFltrMinPulseWidth(GetCIFreqDigFltrMinPulseWidthRequest) returns (GetCIFreqDigFltrMinPulseWidthResponse);
  rpc GetCIFreqDigFltrTimebaseRate(GetCIFreqDigFltrTimebaseRateRequest) returns (GetCIFreqDigFltrTimebaseRateResponse);
  rpc GetCIFreqDigFltrTimebaseSrc(GetCIFreqDigFltrTimebaseSrcRequest) returns (GetCIFreqDigFltrTimebaseSrcResponse);
  rpc GetCIFreqDigSyncEnable(GetCIFreqDigSyncEnableRequest) returns (GetCIFreqDigSyncEnableResponse);
  rpc GetCIFreqDiv(GetCIFreqDivRequest) returns (GetCIFreqDivResponse);
  rpc GetCIFreqEnableAveraging(GetCIFreqEnableAveragingRequest) returns (GetCIFreqEnableAveragingResponse);
  rpc GetCIFreqHyst(GetCIFreqHystRequest) returns (GetCIFreqHystResponse);
  rpc GetCIFreqLogicLvlBehavior(GetCIFreqLogicLvlBehaviorRequest) returns (GetCIFreqLogicLvlBehaviorResponse);
  rpc GetCIFreqMeasMeth(GetCIFreqMeasMethRequest) returns (GetCIFreqMeasMethResponse);
  rpc GetCIFreqMeasTime(GetCIFreqMeasTimeRequest) returns (GetCIFreqMeasTimeResponse);
  rpc GetCIFreqStartingEdge(GetCIFreqStartingEdgeRequest) returns (GetCIFreqStartingEdgeResponse);
  rpc GetCIFreqTerm(GetCIFreqTermRequest) returns (GetCIFreqTermResponse);
  rpc GetCIFreqTermCfg(GetCIFreqTermCfgRequest) returns (GetCIFreqTermCfgResponse);
  rpc GetCIFreqThreshVoltage(GetCIFreqThreshVoltageRequest) returns (GetCIFreqThreshVoltageResponse);
  rpc GetCIFreqUnits(GetCIFreqUnitsRequest) returns (GetCIFreqUnitsResponse);
  rpc GetCIGPSSyncMethod(GetCIGPSSyncMethodRequest) returns (GetCIGPSSyncMethodResponse);
  rpc GetCIGPSSyncSrc(GetCIGPSSyncSrcRequest) returns (GetCIGPSSyncSrcResponse);
  rpc GetCILinEncoderDistPerPulse(GetCILinEncoderDistPerPulseRequest) returns (GetCILinEncoderDistPerPulseResponse);
  rpc GetCILinEncoderInitialPos(GetCILinEncoderInitialPosRequest) returns (GetCILinEncoderInitialPosResponse);
  rpc GetCILinEncoderUnits(GetCILinEncoderUnitsRequest) returns (GetCILinEncoderUnitsResponse);
  rpc GetCIMax(GetCIMaxRequest) returns (GetCIMaxResponse);
  rpc GetCIMaxMeasPeriod(GetCIMaxMeasPeriodRequest) returns (GetCIMaxMeasPeriodResponse);
  rpc GetCIMeasType(GetCIMeasTypeRequest) returns (GetCIMeasTypeResponse);
  rpc GetCIMemMapEnable(GetCIMemMapEnableRequest) returns (GetCIMemMapEnableResponse);
  rpc GetCIMin(GetCIMinRequest) returns (GetCIMinResponse);
  rpc GetCINumPossiblyInvalidSamps(GetCINumPossiblyInvalidSampsRequest) returns (GetCINumPossiblyInvalidSampsResponse);
  rpc GetCIOutputState(GetCIOutputStateRequest) returns (GetCIOutputStateResponse);
  rpc GetCIPeriodDigFltrEnable(GetCIPeriodDigFltrEnableRequest) returns (GetCIPeriodDigFltrEnableResponse);
  rpc GetCIPeriodDigFltrMinPulseWidth(GetCIPeriodDigFltrMinPulseWidthRequest) returns (GetCIPeriodDigFltrMinPulseWidthResponse);
  rpc GetCIPeriodDigFltrTimebaseRate(GetCIPeriodDigFltrTimebaseRateRequest) returns (GetCIPeriodDigFltrTimebaseRateResponse);
  rpc GetCIPeriodDigFltrTimebaseSrc(GetCIPeriodDigFltrTimebaseSrcRequest) returns (GetCIPeriodDigFltrTimebaseSrcResponse);
  rpc GetCIPeriodDigSyncEnable(GetCIPeriodDigSyncEnableRequest) returns (GetCIPeriodDigSyncEnableResponse);
  rpc GetCIPeriodDiv(GetCIPeriodDivRequest) returns (GetCIPeriodDivResponse);
  rpc GetCIPeriodEnableAveraging(GetCIPeriodEnableAveragingRequest) returns (GetCIPeriodEnableAveragingResponse);
  rpc GetCIPeriodHyst(GetCIPeriodHystRequest) returns (GetCIPeriodHystResponse);
  rpc GetCIPeriodLogicLvlBehavior(GetCIPeriodLogicLvlBehaviorRequest) returns (GetCIPeriodLogicLvlBehaviorResponse);
  rpc GetCIPeriodMeasMeth(GetCIPeriodMeasMethRequest) returns (GetCIPeriodMeasMethResponse);
  rpc GetCIPeriodMeasTime(GetCIPeriodMeasTimeRequest) returns (GetCIPeriodMeasTimeResponse);
  rpc GetCIPeriodStartingEdge(GetCIPeriodStartingEdgeRequest) returns (GetCIPeriodStartingEdgeResponse);
  rpc GetCIPeriodTerm(GetCIPeriodTermRequest) returns (GetCIPeriodTermResponse);
  rpc GetCIPeriodTermCfg(GetCIPeriodTermCfgRequest) returns (GetCIPeriodTermCfgResponse);
  rpc GetCIPeriodThreshVoltage(GetCIPeriodThreshVoltageRequest) returns (GetCIPeriodThreshVoltageResponse);
  rpc GetCIPeriodUnits(GetCIPeriodUnitsRequest) returns (GetCIPeriodUnitsResponse);
  rpc GetCIPrescaler(GetCIPrescalerRequest) returns (GetCIPrescalerResponse);
  rpc GetCIPulseFreqDigFltrEnable(GetCIPulseFreqDigFltrEnableRequest) returns (GetCIPulseFreqDigFltrEnableResponse);
  rpc GetCIPulseFreqDigFltrMinPulseWidth(GetCIPulseFreqDigFltrMinPulseWidthRequest) returns (GetCIPulseFreqDigFltrMinPulseWidthResponse);
  rpc GetCIPulseFreqDigFltrTimebaseRate(GetCIPulseFreqDigFltrTimebaseRateRequest) returns (GetCIPulseFreqDigFltrTimebaseRateResponse);
  rpc GetCIPulseFreqDigFltrTimebaseSrc(GetCIPulseFreqDigFltrTimebaseSrcRequest) returns (GetCIPulseFreqDigFltrTimebaseSrcResponse);
  rpc GetCIPulseFreqDigSyncEnable(GetCIPulseFreqDigSyncEnableRequest) returns (GetCIPulseFreqDigSyncEnableResponse);
  rpc GetCIPulseFreqLogicLvlBehavior(GetCIPulseFreqLogicLvlBehaviorRequest) returns (GetCIPulseFreqLogicLvlBehaviorResponse);
  rpc GetCIPulseFreqStartEdge(GetCIPulseFreqStartEdgeRequest) returns (GetCIPulseFreqStartEdgeResponse);
  rpc GetCIPulseFreqTerm(GetCIPulseFreqTermRequest) returns (GetCIPulseFreqTermResponse);
  rpc GetCIPulseFreqTermCfg(GetCIPulseFreqTermCfgRequest) returns (GetCIPulseFreqTermCfgResponse);
  rpc GetCIPulseFreqUnits(GetCIPulseFreqUnitsRequest) returns (GetCIPulseFreqUnitsResponse);
  rpc GetCIPulseTicksDigFltrEnable(GetCIPulseTicksDigFltrEnableRequest) returns (GetCIPulseTicksDigFltrEnableResponse);
  rpc GetCIPulseTicksDigFltrMinPulseWidth(GetCIPulseTicksDigFltrMinPulseWidthRequest) returns (GetCIPulseTicksDigFltrMinPulseWidthResponse);
  rpc GetCIPulseTicksDigFltrTimebaseRate(GetCIPulseTicksDigFltrTimebaseRateRequest) returns (GetCIPulseTicksDigFltrTimebaseRateResponse);
  rpc GetCIPulseTicksDigFltrTimebaseSrc(GetCIPulseTicksDigFltrTimebaseSrcRequest) returns (GetCIPulseTicksDigFltrTimebaseSrcResponse);
  rpc GetCIPulseTicksDigSyncEnable(GetCIPulseTicksDigSyncEnableRequest) returns (GetCIPulseTicksDigSyncEnableResponse);
  rpc GetCIPulseTicksLogicLvlBehavior(GetCIPulseTicksLogicLvlBehaviorRequest) returns (GetCIPulseTicksLogicLvlBehaviorResponse);
  rpc GetCIPulseTicksStartEdge(GetCIPulseTicksStartEdgeRequest) returns (GetCIPulseTicksStartEdgeResponse);
  rpc GetCIPulseTicksTerm(GetCIPulseTicksTermRequest) returns (GetCIPulseTicksTermResponse);
  rpc GetCIPulseTicksTermCfg(GetCIPulseTicksTermCfgRequest) returns (GetCIPulseTicksTermCfgResponse);
  rpc GetCIPulseTimeDigFltrEnable(GetCIPulseTimeDigFltrEnableRequest) returns (GetCIPulseTimeDigFltrEnableResponse);
  rpc GetCIPulseTimeDigFltrMinPulseWidth(GetCIPulseTimeDigFltrMinPulseWidthRequest) returns (GetCIPulseTimeDigFltrMinPulseWidthResponse);
  rpc GetCIPulseTimeDigFltrTimebaseRate(GetCIPulseTimeDigFltrTimebaseRateRequest) returns (GetCIPulseTimeDigFltrTimebaseRateResponse);
  rpc GetCIPulseTimeDigFltrTimebaseSrc(GetCIPulseTimeDigFltrTimebaseSrcRequest) returns (GetCIPulseTimeDigFltrTimebaseSrcResponse);
  rpc GetCIPulseTimeDigSyncEnable(GetCIPulseTimeDigSyncEnableRequest) returns (GetCIPulseTimeDigSyncEnableResponse);
  rpc GetCIPulseTimeLogicLvlBehavior(GetCIPulseTimeLogicLvlBehaviorRequest) returns (GetCIPulseTimeLogicLvlBehaviorResponse);
  rpc GetCIPulseTimeStartEdge(GetCIPulseTimeStartEdgeRequest) returns (GetCIPulseTimeStartEdgeResponse);
  rpc GetCIPulseTimeTerm(GetCIPulseTimeTermRequest) returns (GetCIPulseTimeTermResponse);
  rpc GetCIPulseTimeTermCfg(GetCIPulseTimeTermCfgRequest) returns (GetCIPulseTimeTermCfgResponse);
  rpc GetCIPulseTimeUnits(GetCIPulseTimeUnitsRequest) returns (GetCIPulseTimeUnitsResponse);
  rpc GetCIPulseWidthDigFltrEnable(GetCIPulseWidthDigFltrEnableRequest) returns (GetCIPulseWidthDigFltrEnableResponse);
  rpc GetCIPulseWidthDigFltrMinPulseWidth(GetCIPulseWidthDigFltrMinPulseWidthRequest) returns (GetCIPulseWidthDigFltrMinPulseWidthResponse);
  rpc GetCIPulseWidthDigFltrTimebaseRate(GetCIPulseWidthDigFltrTimebaseRateRequest) returns (GetCIPulseWidthDigFltrTimebaseRateResponse);
  rpc GetCIPulseWidthDigFltrTimebaseSrc(GetCIPulseWidthDigFltrTimebaseSrcRequest) returns (GetCIPulseWidthDigFltrTimebaseSrcResponse);
  rpc GetCIPulseWidthDigSyncEnable(GetCIPulseWidthDigSyncEnableRequest) returns (GetCIPulseWidthDigSyncEnableResponse);
  rpc GetCIPulseWidthLogicLvlBehavior(GetCIPulseWidthLogicLvlBehaviorRequest) returns (GetCIPulseWidthLogicLvlBehaviorResponse);
  rpc GetCIPulseWidthStartingEdge(GetCIPulseWidthStartingEdgeRequest) returns (GetCIPulseWidthStartingEdgeResponse);
  rpc GetCIPulseWidthTerm(GetCIPulseWidthTermRequest) returns (GetCIPulseWidthTermResponse);
  rpc GetCIPulseWidthTermCfg(GetCIPulseWidthTermCfgRequest) returns (GetCIPulseWidthTermCfgResponse);
  rpc GetCIPulseWidthUnits(GetCIPulseWidthUnitsRequest) returns (GetCIPulseWidthUnitsResponse);
  rpc GetCISampClkOverrunBehavior(GetCISampClkOverrunBehaviorRequest) returns (GetCISampClkOverrunBehaviorResponse);
  rpc GetCISampClkOverrunSentinelVal(GetCISampClkOverrunSentinelValRequest) returns (GetCISampClkOverrunSentinelValResponse);
  rpc GetCISemiPeriodDigFltrEnable(GetCISemiPeriodDigFltrEnableRequest) returns (GetCISemiPeriodDigFltrEnableResponse);
  rpc GetCISemiPeriodDigFltrMinPulseWidth(GetCISemiPeriodDigFltrMinPulseWidthRequest) returns (GetCISemiPeriodDigFltrMinPulseWidthResponse);
  rpc GetCISemiPeriodDigFltrTimebaseRate(GetCISemiPeriodDigFltrTimebaseRateRequest) returns (GetCISemiPeriodDigFltrTimebaseRateResponse);
  rpc GetCISemiPeriodDigFltrTimebaseSrc(GetCISemiPeriodDigFltrTimebaseSrcRequest) returns (GetCISemiPeriodDigFltrTimebaseSrcResponse);
  rpc GetCISemiPeriodDigSyncEnable(GetCISemiPeriodDigSyncEnableRequest) returns (GetCISemiPeriodDigSyncEnableResponse);
  rpc GetCISemiPeriodLogicLvlBehavior(GetCISemiPeriodLogicLvlBehaviorRequest) returns (GetCISemiPeriodLogicLvlBehaviorResponse);
  rpc GetCISemiPeriodStartingEdge(GetCISemiPeriodStartingEdgeRequest) returns (GetCISemiPeriodStartingEdgeResponse);
  rpc GetCISemiPeriodTerm(GetCISemiPeriodTermRequest) returns (GetCISemiPeriodTermResponse);
  rpc GetCISemiPeriodTermCfg(GetCISemiPeriodTermCfgRequest) returns (GetCISemiPeriodTermCfgResponse);
  rpc GetCISemiPeriodUnits(GetCISemiPeriodUnitsRequest) returns (GetCISemiPeriodUnitsResponse);
  rpc GetCITCReached(GetCITCReachedRequest) returns (GetCITCReachedResponse);
  rpc GetCIThreshVoltage(GetCIThreshVoltageRequest) returns (GetCIThreshVoltageResponse);
  rpc GetCITimestampInitialSeconds(GetCITimestampInitialSecondsRequest) returns (GetCITimestampInitialSecondsResponse);
  rpc GetCITimestampUnits(GetCITimestampUnitsRequest) returns (GetCITimestampUnitsResponse);
  rpc GetCITwoEdgeSepFirstDigFltrEnable(GetCITwoEdgeSepFirstDigFltrEnableRequest) returns (GetCITwoEdgeSepFirstDigFltrEnableResponse);
  rpc GetCITwoEdgeSepFirstDigFltrMinPulseWidth(GetCITwoEdgeSepFirstDigFltrMinPulseWidthRequest) returns (GetCITwoEdgeSepFirstDigFltrMinPulseWidthResponse);
  rpc GetCITwoEdgeSepFirstDigFltrTimebaseRate(GetCITwoEdgeSepFirstDigFltrTimebaseRateRequest) returns (GetCITwoEdgeSepFirstDigFltrTimebaseRateResponse);
  rpc GetCITwoEdgeSepFirstDigFltrTimebaseSrc(GetCITwoEdgeSepFirstDigFltrTimebaseSrcRequest) returns (GetCITwoEdgeSepFirstDigFltrTimebaseSrcResponse);
  rpc GetCITwoEdgeSepFirstDigSyncEnable(GetCITwoEdgeSepFirstDigSyncEnableRequest) returns (GetCITwoEdgeSepFirstDigSyncEnableResponse);
  rpc GetCITwoEdgeSepFirstEdge(GetCITwoEdgeSepFirstEdgeRequest) returns (GetCITwoEdgeSepFirstEdgeResponse);
  rpc GetCITwoEdgeSepFirstLogicLvlBehavior(GetCITwoEdgeSepFirstLogicLvlBehaviorRequest) returns (GetCITwoEdgeSepFirstLogicLvlBehaviorResponse);
  rpc GetCITwoEdgeSepFirstTerm(GetCITwoEdgeSepFirstTermRequest) returns (GetCITwoEdgeSepFirstTermResponse);
  rpc GetCITwoEdgeSepFirstTermCfg(GetCITwoEdgeSepFirstTermCfgRequest) returns (GetCITwoEdgeSepFirstTermCfgResponse);
  rpc GetCITwoEdgeSepSecondDigFltrEnable(GetCITwoEdgeSepSecondDigFltrEnableRequest) returns (GetCITwoEdgeSepSecondDigFltrEnableResponse);
  rpc GetCITwoEdgeSepSecondDigFltrMinPulseWidth(GetCITwoEdgeSepSecondDigFltrMinPulseWidthRequest) returns (GetCITwoEdgeSepSecondDigFltrMinPulseWidthResponse);
  rpc GetCITwoEdgeSepSecondDigFltrTimebaseRate(GetCITwoEdgeSepSecondDigFltrTimebaseRateRequest) returns (GetCITwoEdgeSepSecondDigFltrTimebaseRateResponse);
  rpc GetCITwoEdgeSepSecondDigFltrTimebaseSrc(GetCITwoEdgeSepSecondDigFltrTimebaseSrcRequest) returns (GetCITwoEdgeSepSecondDigFltrTimebaseSrcResponse);
  rpc GetCITwoEdgeSepSecondDigSyncEnable(GetCITwoEdgeSepSecondDigSyncEnableRequest) returns (GetCITwoEdgeSepSecondDigSyncEnableResponse);
  rpc GetCITwoEdgeSepSecondEdge(GetCITwoEdgeSepSecondEdgeRequest) returns (GetCITwoEdgeSepSecondEdgeResponse);
  rpc GetCITwoEdgeSepSecondLogicLvlBehavior(GetCITwoEdgeSepSecondLogicLvlBehaviorRequest) returns (GetCITwoEdgeSepSecondLogicLvlBehaviorResponse);
  rpc GetCITwoEdgeSepSecondTerm(GetCITwoEdgeSepSecondTermRequest) returns (GetCITwoEdgeSepSecondTermResponse);
  rpc GetCITwoEdgeSepSecondTermCfg(GetCITwoEdgeSepSecondTermCfgRequest) returns (GetCITwoEdgeSepSecondTermCfgResponse);
  rpc GetCITwoEdgeSepUnits(GetCITwoEdgeSepUnitsRequest) returns (GetCITwoEdgeSepUnitsResponse);
  rpc GetCIUsbXferReqCount(GetCIUsbXferReqCountRequest) returns (GetCIUsbXferReqCountResponse);
  rpc GetCIUsbXferReqSize(GetCIUsbXferReqSizeRequest) returns (GetCIUsbXferReqSizeResponse);
  rpc GetCIVelocityAngEncoderPulsesPerRev(GetCIVelocityAngEncoderPulsesPerRevRequest) returns (GetCIVelocityAngEncoderPulsesPerRevResponse);
  rpc GetCIVelocityAngEncoderUnits(GetCIVelocityAngEncoderUnitsRequest) returns (GetCIVelocityAngEncoderUnitsResponse);
  rpc GetCIVelocityDiv(GetCIVelocityDivRequest) returns (GetCIVelocityDivResponse);
  rpc GetCIVelocityEncoderAInputDigFltrEnable(GetCIVelocityEncoderAInputDigFltrEnableRequest) returns (GetCIVelocityEncoderAInputDigFltrEnableResponse);
  rpc GetCIVelocityEncoderAInputDigFltrMinPulseWidth(GetCIVelocityEncoderAInputDigFltrMinPulseWidthRequest) returns (GetCIVelocityEncoderAInputDigFltrMinPulseWidthResponse);
  rpc GetCIVelocityEncoderAInputDigFltrTimebaseRate(GetCIVelocityEncoderAInputDigFltrTimebaseRateRequest) returns (GetCIVelocityEncoderAInputDigFltrTimebaseRateResponse);
  rpc GetCIVelocityEncoderAInputDigFltrTimebaseSrc(GetCIVelocityEncoderAInputDigFltrTimebaseSrcRequest) returns (GetCIVelocityEncoderAInputDigFltrTimebaseSrcResponse);
  rpc GetCIVelocityEncoderAInputLogicLvlBehavior(GetCIVelocityEncoderAInputLogicLvlBehaviorRequest) returns (GetCIVelocityEncoderAInputLogicLvlBehaviorResponse);
  rpc GetCIVelocityEncoderAInputTerm(GetCIVelocityEncoderAInputTermRequest) returns (GetCIVelocityEncoderAInputTermResponse);
  rpc GetCIVelocityEncoderAInputTermCfg(GetCIVelocityEncoderAInputTermCfgRequest) returns (GetCIVelocityEncoderAInputTermCfgResponse);
  rpc GetCIVelocityEncoderBInputDigFltrEnable(GetCIVelocityEncoderBInputDigFltrEnableRequest) returns (GetCIVelocityEncoderBInputDigFltrEnableResponse);
  rpc GetCIVelocityEncoderBInputDigFltrMinPulseWidth(GetCIVelocityEncoderBInputDigFltrMinPulseWidthRequest) returns (GetCIVelocityEncoderBInputDigFltrMinPulseWidthResponse);
  rpc GetCIVelocityEncoderBInputDigFltrTimebaseRate(GetCIVelocityEncoderBInputDigFltrTimebaseRateRequest) returns (GetCIVelocityEncoderBInputDigFltrTimebaseRateResponse);
  rpc GetCIVelocityEncoderBInputDigFltrTimebaseSrc(GetCIVelocityEncoderBInputDigFltrTimebaseSrcRequest) returns (GetCIVelocityEncoderBInputDigFltrTimebaseSrcResponse);
  rpc GetCIVelocityEncoderBInputLogicLvlBehavior(GetCIVelocityEncoderBInputLogicLvlBehaviorRequest) returns (GetCIVelocityEncoderBInputLogicLvlBehaviorResponse);
  rpc GetCIVelocityEncoderBInputTerm(GetCIVelocityEncoderBInputTermRequest) returns (GetCIVelocityEncoderBInputTermResponse);
  rpc GetCIVelocityEncoderBInputTermCfg(GetCIVelocityEncoderBInputTermCfgRequest) returns (GetCIVelocityEncoderBInputTermCfgResponse);
  rpc GetCIVelocityEncoderDecodingType(GetCIVelocityEncoderDecodingTypeRequest) returns (GetCIVelocityEncoderDecodingTypeResponse);
  rpc GetCIVelocityLinEncoderDistPerPulse(GetCIVelocityLinEncoderDistPerPulseRequest) returns (GetCIVelocityLinEncoderDistPerPulseResponse);
  rpc GetCIVelocityLinEncoderUnits(GetCIVelocityLinEncoderUnitsRequest) returns (GetCIVelocityLinEncoderUnitsResponse);
  rpc GetCIVelocityMeasTime(GetCIVelocityMeasTimeRequest) returns (GetCIVelocityMeasTimeResponse);
  rpc GetCOAutoIncrCnt(GetCOAutoIncrCntRequest) returns (GetCOAutoIncrCntResponse);
  rpc GetCOConstrainedGenMode(GetCOConstrainedGenModeRequest) returns (GetCOConstrainedGenModeResponse);
  rpc GetCOCount(GetCOCountRequest) returns (GetCOCountResponse);
  rpc GetCOCtrTimebaseActiveEdge(GetCOCtrTimebaseActiveEdgeRequest) returns (GetCOCtrTimebaseActiveEdgeResponse);
  rpc GetCOCtrTimebaseDigFltrEnable(GetCOCtrTimebaseDigFltrEnableRequest) returns (GetCOCtrTimebaseDigFltrEnableResponse);
  rpc GetCOCtrTimebaseDigFltrMinPulseWidth(GetCOCtrTimebaseDigFltrMinPulseWidthRequest) returns (GetCOCtrTimebaseDigFltrMinPulseWidthResponse);
  rpc GetCOCtrTimebaseDigFltrTimebaseRate(GetCOCtrTimebaseDigFltrTimebaseRateRequest) returns (GetCOCtrTimebaseDigFltrTimebaseRateResponse);
  rpc GetCOCtrTimebaseDigFltrTimebaseSrc(GetCOCtrTimebaseDigFltrTimebaseSrcRequest) returns (GetCOCtrTimebaseDigFltrTimebaseSrcResponse);
  rpc GetCOCtrTimebaseDigSyncEnable(GetCOCtrTimebaseDigSyncEnableRequest) returns (GetCOCtrTimebaseDigSyncEnableResponse);
  rpc GetCOCtrTimebaseMasterTimebaseDiv(GetCOCtrTimebaseMasterTimebaseDivRequest) returns (GetCOCtrTimebaseMasterTimebaseDivResponse);
  rpc GetCOCtrTimebaseRate(GetCOCtrTimebaseRateRequest) returns (GetCOCtrTimebaseRateResponse);
  rpc GetCOCtrTimebaseSrc(GetCOCtrTimebaseSrcRequest) returns (GetCOCtrTimebaseSrcResponse);
  rpc GetCODataXferMech(GetCODataXferMechRequest) returns (GetCODataXferMechResponse);
  rpc GetCODataXferReqCond(GetCODataXferReqCondRequest) returns (GetCODataXferReqCondResponse);
  rpc GetCOEnableInitialDelayOnRetrigger(GetCOEnableInitialDelayOnRetriggerRequest) returns (GetCOEnableInitialDelayOnRetriggerResponse);
  rpc GetCOMemMapEnable(GetCOMemMapEnableRequest) returns (GetCOMemMapEnableResponse);
  rpc GetCOOutputState(GetCOOutputStateRequest) returns (GetCOOutputStateResponse);
  rpc GetCOOutputType(GetCOOutputTypeRequest) returns (GetCOOutputTypeResponse);
  rpc GetCOPrescaler(GetCOPrescalerRequest) returns (GetCOPrescalerResponse);
  rpc GetCOPulseDone(GetCOPulseDoneRequest) returns (GetCOPulseDoneResponse);
  rpc GetCOPulseDutyCyc(GetCOPulseDutyCycRequest) returns (GetCOPulseDutyCycResponse);
  rpc GetCOPulseFreq(GetCOPulseFreqRequest) returns (GetCOPulseFreqResponse);
  rpc GetCOPulseFreqInitialDelay(GetCOPulseFreqInitialDelayRequest) returns (GetCOPulseFreqInitialDelayResponse);
  rpc GetCOPulseFreqUnits(GetCOPulseFreqUnitsRequest) returns (GetCOPulseFreqUnitsResponse);
  rpc GetCOPulseHighTicks(GetCOPulseHighTicksRequest) returns (GetCOPulseHighTicksResponse);
  rpc GetCOPulseHighTime(GetCOPulseHighTimeRequest) returns (GetCOPulseHighTimeResponse);
  rpc GetCOPulseIdleState(GetCOPulseIdleStateRequest) returns (GetCOPulseIdleStateResponse);
  rpc GetCOPulseLowTicks(GetCOPulseLowTicksRequest) returns (GetCOPulseLowTicksResponse);
  rpc GetCOPulseLowTime(GetCOPulseLowTimeRequest) returns (GetCOPulseLowTimeResponse);
  rpc GetCOPulseTerm(GetCOPulseTermRequest) returns (GetCOPulseTermResponse);
  rpc GetCOPulseTicksInitialDelay(GetCOPulseTicksInitialDelayRequest) returns (GetCOPulseTicksInitialDelayResponse);
  rpc GetCOPulseTimeInitialDelay(GetCOPulseTimeInitialDelayRequest) returns (GetCOPulseTimeInitialDelayResponse);
  rpc GetCOPulseTimeUnits(GetCOPulseTimeUnitsRequest) returns (GetCOPulseTimeUnitsResponse);
  rpc GetCORdyForNewVal(GetCORdyForNewValRequest) returns (GetCORdyForNewValResponse);
  rpc GetCOUsbXferReqCount(GetCOUsbXferReqCountRequest) returns (GetCOUsbXferReqCountResponse);
  rpc GetCOUsbXferReqSize(GetCOUsbXferReqSizeRequest) returns (GetCOUsbXferReqSizeResponse);
  rpc GetCOUseOnlyOnBrdMem(GetCOUseOnlyOnBrdMemRequest) returns (GetCOUseOnlyOnBrdMemResponse);
  rpc GetCalAccConnectionCount(GetCalAccConnectionCountRequest) returns (GetCalAccConnectionCountResponse);
  rpc GetCalDevTemp(GetCalDevTempRequest) returns (GetCalDevTempResponse);
  rpc GetCalRecommendedAccConnectionCountLimit(GetCalRecommendedAccConnectionCountLimitRequest) returns (GetCalRecommendedAccConnectionCountLimitResponse);
  rpc GetCalUserDefinedInfo(GetCalUserDefinedInfoRequest) returns (GetCalUserDefinedInfoResponse);
  rpc GetCalUserDefinedInfoMaxSize(GetCalUserDefinedInfoMaxSizeRequest) returns (GetCalUserDefinedInfoMaxSizeResponse);
  rpc GetChanDescr(GetChanDescrRequest) returns (GetChanDescrResponse);
  rpc GetChanIsGlobal(GetChanIsGlobalRequest) returns (GetChanIsGlobalResponse);
  rpc GetChanSyncUnlockBehavior(GetChanSyncUnlockBehaviorRequest) returns (GetChanSyncUnlockBehaviorResponse);
  rpc GetChanType(GetChanTypeRequest) returns (GetChanTypeResponse);
  rpc GetDIAcquireOn(GetDIAcquireOnRequest) returns (GetDIAcquireOnResponse);
  rpc GetDIDataXferMech(GetDIDataXferMechRequest) returns (GetDIDataXferMechResponse);
  rpc GetDIDataXferReqCond(GetDIDataXferReqCondRequest) returns (GetDIDataXferReqCondResponse);
  rpc GetDIDigFltrEnable(GetDIDigFltrEnableRequest) returns (GetDIDigFltrEnableResponse);
  rpc GetDIDigFltrEnableBusMode(GetDIDigFltrEnableBusModeRequest) returns (GetDIDigFltrEnableBusModeResponse);
  rpc GetDIDigFltrMinPulseWidth(GetDIDigFltrMinPulseWidthRequest) returns (GetDIDigFltrMinPulseWidthResponse);
  rpc GetDIDigFltrTimebaseRate(GetDIDigFltrTimebaseRateRequest) returns (GetDIDigFltrTimebaseRateResponse);
  rpc GetDIDigFltrTimebaseSrc(GetDIDigFltrTimebaseSrcRequest) returns (GetDIDigFltrTimebaseSrcResponse);
  rpc GetDIDigSyncEnable(GetDIDigSyncEnableRequest) returns (GetDIDigSyncEnableResponse);
  rpc GetDIInvertLines(GetDIInvertLinesRequest) returns (GetDIInvertLinesResponse);
  rpc GetDILogicFamily(GetDILogicFamilyRequest) returns (GetDILogicFamilyResponse);
  rpc GetDIMemMapEnable(GetDIMemMapEnableRequest) returns (GetDIMemMapEnableResponse);
  rpc GetDINumLines(GetDINumLinesRequest) returns (GetDINumLinesResponse);
  rpc GetDITristate(GetDITristateRequest) returns (GetDITristateResponse);
  rpc GetDIUsbXferReqCount(GetDIUsbXferReqCountRequest) returns (GetDIUsbXferReqCountResponse);
  rpc GetDIUsbXferReqSize(GetDIUsbXferReqSizeRequest) returns (GetDIUsbXferReqSizeResponse);
  rpc GetDODataXferMech(GetDODataXferMechRequest) returns (GetDODataXferMechResponse);
  rpc GetDODataXferReqCond(GetDODataXferReqCondRequest) returns (GetDODataXferReqCondResponse);
  rpc GetDOGenerateOn(GetDOGenerateOnRequest) returns (GetDOGenerateOnResponse);
  rpc GetDOInvertLines(GetDOInvertLinesRequest) returns (GetDOInvertLinesResponse);
  rpc GetDOLineStatesDoneState(GetDOLineStatesDoneStateRequest) returns (GetDOLineStatesDoneStateResponse);
  rpc GetDOLineStatesPausedState(GetDOLineStatesPausedStateRequest) returns (GetDOLineStatesPausedStateResponse);
  rpc GetDOLineStatesStartState(GetDOLineStatesStartStateRequest) returns (GetDOLineStatesStartStateResponse);
  rpc GetDOLogicFamily(GetDOLogicFamilyRequest) returns (GetDOLogicFamilyResponse);
  rpc GetDOMemMapEnable(GetDOMemMapEnableRequest) returns (GetDOMemMapEnableResponse);
  rpc GetDONumLines(GetDONumLinesRequest) returns (GetDONumLinesResponse);
  rpc GetDOOutputDriveType(GetDOOutputDriveTypeRequest) returns (GetDOOutputDriveTypeResponse);
  rpc GetDOOvercurrentAutoReenable(GetDOOvercurrentAutoReenableRequest) returns (GetDOOvercurrentAutoReenableResponse);
  rpc GetDOOvercurrentLimit(GetDOOvercurrentLimitRequest) returns (GetDOOvercurrentLimitResponse);
  rpc GetDOOvercurrentReenablePeriod(GetDOOvercurrentReenablePeriodRequest) returns (GetDOOvercurrentReenablePeriodResponse);
  rpc GetDOTristate(GetDOTristateRequest) returns (GetDOTristateResponse);
  rpc GetDOUsbXferReqCount(GetDOUsbXferReqCountRequest) returns (GetDOUsbXferReqCountResponse);
  rpc GetDOUsbXferReqSize(GetDOUsbXferReqSizeRequest) returns (GetDOUsbXferReqSizeResponse);
  rpc GetDOUseOnlyOnBrdMem(GetDOUseOnlyOnBrdMemRequest) returns (GetDOUseOnlyOnBrdMemResponse);
  rpc GetDigitalLogicFamilyPowerUpState(GetDigitalLogicFamilyPowerUpStateRequest) returns (GetDigitalLogicFamilyPowerUpStateResponse);
  rpc GetDisconnectedCDAQSyncPorts(GetDisconnectedCDAQSyncPortsRequest) returns (GetDisconnectedCDAQSyncPortsResponse);
  rpc GetErrorString(GetErrorStringRequest) returns (GetErrorStringResponse);
  rpc GetExtCalLastTemp(GetExtCalLastTempRequest) returns (GetExtCalLastTempResponse);
  rpc GetExtCalRecommendedInterval(GetExtCalRecommendedIntervalRequest) returns (GetExtCalRecommendedIntervalResponse);
  rpc GetExtendedErrorInfo(GetExtendedErrorInfoRequest) returns (GetExtendedErrorInfoResponse);
  rpc GetFirstSampClkWhen(GetFirstSampClkWhenRequest) returns (GetFirstSampClkWhenResponse);
  rpc GetFirstSampTimestampVal(GetFirstSampTimestampValRequest) returns (GetFirstSampTimestampValResponse);
  rpc GetNthTaskChannel(GetNthTaskChannelRequest) returns (GetNthTaskChannelResponse);
  rpc GetNthTaskDevice(GetNthTaskDeviceRequest) returns (GetNthTaskDeviceResponse);
  rpc GetNthTaskReadChannel(GetNthTaskReadChannelRequest) returns (GetNthTaskReadChannelResponse);
  rpc GetPhysicalChanName(GetPhysicalChanNameRequest) returns (GetPhysicalChanNameResponse);
  rpc GetRefTrigTimestampVal(GetRefTrigTimestampValRequest) returns (GetRefTrigTimestampValResponse);
  rpc GetSelfCalLastDateAndTime(GetSelfCalLastDateAndTimeRequest) returns (GetSelfCalLastDateAndTimeResponse);
  rpc GetSelfCalLastTemp(GetSelfCalLastTempRequest) returns (GetSelfCalLastTempResponse);
  rpc GetSelfCalSupported(GetSelfCalSupportedRequest) returns (GetSelfCalSupportedResponse);
  rpc GetStartTrigTimestampVal(GetStartTrigTimestampValRequest) returns (GetStartTrigTimestampValResponse);
  rpc GetStartTrigTrigWhen(GetStartTrigTrigWhenRequest) returns (GetStartTrigTrigWhenResponse);
  rpc GetSyncPulseTimeWhen(GetSyncPulseTimeWhenRequest) returns (GetSyncPulseTimeWhenResponse);
  rpc IsTaskDone(IsTaskDoneRequest) returns (IsTaskDoneResponse);
  rpc LoadTask(LoadTaskRequest) returns (LoadTaskResponse);
  rpc ReadAnalogF64(ReadAnalogF64Request) returns (ReadAnalogF64Response);
  rpc ReadAnalogScalarF64(ReadAnalogScalarF64Request) returns (ReadAnalogScalarF64Response);
  rpc ReadBinaryI16(ReadBinaryI16Request) returns (ReadBinaryI16Response);
  rpc ReadBinaryI32(ReadBinaryI32Request) returns (ReadBinaryI32Response);
  rpc ReadBinaryU16(ReadBinaryU16Request) returns (ReadBinaryU16Response);
  rpc ReadBinaryU32(ReadBinaryU32Request) returns (ReadBinaryU32Response);
  rpc ReadCounterF64(ReadCounterF64Request) returns (ReadCounterF64Response);
  rpc ReadCounterF64Ex(ReadCounterF64ExRequest) returns (ReadCounterF64ExResponse);
  rpc ReadCounterScalarF64(ReadCounterScalarF64Request) returns (ReadCounterScalarF64Response);
  rpc ReadCounterScalarU32(ReadCounterScalarU32Request) returns (ReadCounterScalarU32Response);
  rpc ReadCounterU32(ReadCounterU32Request) returns (ReadCounterU32Response);
  rpc ReadCounterU32Ex(ReadCounterU32ExRequest) returns (ReadCounterU32ExResponse);
  rpc ReadCtrFreq(ReadCtrFreqRequest) returns (ReadCtrFreqResponse);
  rpc ReadCtrFreqScalar(ReadCtrFreqScalarRequest) returns (ReadCtrFreqScalarResponse);
  rpc ReadCtrTicks(ReadCtrTicksRequest) returns (ReadCtrTicksResponse);
  rpc ReadCtrTicksScalar(ReadCtrTicksScalarRequest) returns (ReadCtrTicksScalarResponse);
  rpc ReadCtrTime(ReadCtrTimeRequest) returns (ReadCtrTimeResponse);
  rpc ReadCtrTimeScalar(ReadCtrTimeScalarRequest) returns (ReadCtrTimeScalarResponse);
  rpc ReadDigitalLines(ReadDigitalLinesRequest) returns (ReadDigitalLinesResponse);
  rpc ReadDigitalScalarU32(ReadDigitalScalarU32Request) returns (ReadDigitalScalarU32Response);
  rpc ReadDigitalU16(ReadDigitalU16Request) returns (ReadDigitalU16Response);
  rpc ReadDigitalU32(ReadDigitalU32Request) returns (ReadDigitalU32Response);
  rpc ReadDigitalU8(ReadDigitalU8Request) returns (ReadDigitalU8Response);
  rpc ReadRaw(ReadRawRequest) returns (ReadRawResponse);
  rpc RegisterDoneEvent(RegisterDoneEventRequest) returns (stream RegisterDoneEventResponse);
  rpc RegisterEveryNSamplesEvent(RegisterEveryNSamplesEventRequest) returns (stream RegisterEveryNSamplesEventResponse);
  rpc RegisterSignalEvent(RegisterSignalEventRequest) returns (stream RegisterSignalEventResponse);
  rpc RemoveCDAQSyncConnection(RemoveCDAQSyncConnectionRequest) returns (RemoveCDAQSyncConnectionResponse);
  rpc ReserveNetworkDevice(ReserveNetworkDeviceRequest) returns (ReserveNetworkDeviceResponse);
  rpc ResetAIACExcitFreq(ResetAIACExcitFreqRequest) returns (ResetAIACExcitFreqResponse);
  rpc ResetAIACExcitSyncEnable(ResetAIACExcitSyncEnableRequest) returns (ResetAIACExcitSyncEnableResponse);
  rpc ResetAIACExcitWireMode(ResetAIACExcitWireModeRequest) returns (ResetAIACExcitWireModeResponse);
  rpc ResetAIADCCustomTimingMode(ResetAIADCCustomTimingModeRequest) returns (ResetAIADCCustomTimingModeResponse);
  rpc ResetAIADCTimingMode(ResetAIADCTimingModeRequest) returns (ResetAIADCTimingModeResponse);
  rpc ResetAIAccel4WireDCVoltageSensitivity(ResetAIAccel4WireDCVoltageSensitivityRequest) returns (ResetAIAccel4WireDCVoltageSensitivityResponse);
  rpc ResetAIAccel4WireDCVoltageSensitivityUnits(ResetAIAccel4WireDCVoltageSensitivityUnitsRequest) returns (ResetAIAccel4WireDCVoltageSensitivityUnitsResponse);
  rpc ResetAIAccelChargeSensitivity(ResetAIAccelChargeSensitivityRequest) returns (ResetAIAccelChargeSensitivityResponse);
  rpc ResetAIAccelChargeSensitivityUnits(ResetAIAccelChargeSensitivityUnitsRequest) returns (ResetAIAccelChargeSensitivityUnitsResponse);
  rpc ResetAIAccelSensitivity(ResetAIAccelSensitivityRequest) returns (ResetAIAccelSensitivityResponse);
  rpc ResetAIAccelSensitivityUnits(ResetAIAccelSensitivityUnitsRequest) returns (ResetAIAccelSensitivityUnitsResponse);
  rpc ResetAIAccelUnits(ResetAIAccelUnitsRequest) returns (ResetAIAccelUnitsResponse);
  rpc ResetAIAcceldBRef(ResetAIAcceldBRefRequest) returns (ResetAIAcceldBRefResponse);
  rpc ResetAIAtten(ResetAIAttenRequest) returns (ResetAIAttenResponse);
  rpc ResetAIAutoZeroMode(ResetAIAutoZeroModeRequest) returns (ResetAIAutoZeroModeResponse);
  rpc ResetAIAveragingWinSize(ResetAIAveragingWinSizeRequest) returns (ResetAIAveragingWinSizeResponse);
  rpc ResetAIBridgeBalanceCoarsePot(ResetAIBridgeBalanceCoarsePotRequest) returns (ResetAIBridgeBalanceCoarsePotResponse);
  rpc ResetAIBridgeBalanceFinePot(ResetAIBridgeBalanceFinePotRequest) returns (ResetAIBridgeBalanceFinePotResponse);
  rpc ResetAIBridgeCfg(ResetAIBridgeCfgRequest) returns (ResetAIBridgeCfgResponse);
  rpc ResetAIBridgeElectricalUnits(ResetAIBridgeElectricalUnitsRequest) returns (ResetAIBridgeElectricalUnitsResponse);
  rpc ResetAIBridgeInitialRatio(ResetAIBridgeInitialRatioRequest) returns (ResetAIBridgeInitialRatioResponse);
  rpc ResetAIBridgeInitialVoltage(ResetAIBridgeInitialVoltageRequest) returns (ResetAIBridgeInitialVoltageResponse);
  rpc ResetAIBridgeNomResistance(ResetAIBridgeNomResistanceRequest) returns (ResetAIBridgeNomResistanceResponse);
  rpc ResetAIBridgePhysicalUnits(ResetAIBridgePhysicalUnitsRequest) returns (ResetAIBridgePhysicalUnitsResponse);
  rpc ResetAIBridgePolyForwardCoeff(ResetAIBridgePolyForwardCoeffRequest) returns (ResetAIBridgePolyForwardCoeffResponse);
  rpc ResetAIBridgePolyReverseCoeff(ResetAIBridgePolyReverseCoeffRequest) returns (ResetAIBridgePolyReverseCoeffResponse);
  rpc ResetAIBridgeScaleType(ResetAIBridgeScaleTypeRequest) returns (ResetAIBridgeScaleTypeResponse);
  rpc ResetAIBridgeShuntCalEnable(ResetAIBridgeShuntCalEnableRequest) returns (ResetAIBridgeShuntCalEnableResponse);
  rpc ResetAIBridgeShuntCalGainAdjust(ResetAIBridgeShuntCalGainAdjustRequest) returns (ResetAIBridgeShuntCalGainAdjustResponse);
  rpc ResetAIBridgeShuntCalSelect(ResetAIBridgeShuntCalSelectRequest) returns (ResetAIBridgeShuntCalSelectResponse);
  rpc ResetAIBridgeShuntCalShuntCalAActualResistance(ResetAIBridgeShuntCalShuntCalAActualResistanceRequest) returns (ResetAIBridgeShuntCalShuntCalAActualResistanceResponse);
  rpc ResetAIBridgeShuntCalShuntCalAResistance(ResetAIBridgeShuntCalShuntCalAResistanceRequest) returns (ResetAIBridgeShuntCalShuntCalAResistanceResponse);
  rpc ResetAIBridgeShuntCalShuntCalASrc(ResetAIBridgeShuntCalShuntCalASrcRequest) returns (ResetAIBridgeShuntCalShuntCalASrcResponse);
  rpc ResetAIBridgeShuntCalShuntCalBActualResistance(ResetAIBridgeShuntCalShuntCalBActualResistanceRequest) returns (ResetAIBridgeShuntCalShuntCalBActualResistanceResponse);
  rpc ResetAIBridgeShuntCalShuntCalBResistance(ResetAIBridgeShuntCalShuntCalBResistanceRequest) returns (ResetAIBridgeShuntCalShuntCalBResistanceResponse);
  rpc ResetAIBridgeTableElectricalVals(ResetAIBridgeTableElectricalValsRequest) returns (ResetAIBridgeTableElectricalValsResponse);
  rpc ResetAIBridgeTablePhysicalVals(ResetAIBridgeTablePhysicalValsRequest) returns (ResetAIBridgeTablePhysicalValsResponse);
  rpc ResetAIBridgeTwoPointLinFirstElectricalVal(ResetAIBridgeTwoPointLinFirstElectricalValRequest) returns (ResetAIBridgeTwoPointLinFirstElectricalValResponse);
  rpc ResetAIBridgeTwoPointLinFirstPhysicalVal(ResetAIBridgeTwoPointLinFirstPhysicalValRequest) returns (ResetAIBridgeTwoPointLinFirstPhysicalValResponse);
  rpc ResetAIBridgeTwoPointLinSecondElectricalVal(ResetAIBridgeTwoPointLinSecondElectricalValRequest) returns (ResetAIBridgeTwoPointLinSecondElectricalValResponse);
  rpc ResetAIBridgeTwoPointLinSecondPhysicalVal(ResetAIBridgeTwoPointLinSecondPhysicalValRequest) returns (ResetAIBridgeTwoPointLinSecondPhysicalValResponse);
  rpc ResetAIBridgeUnits(ResetAIBridgeUnitsRequest) returns (ResetAIBridgeUnitsResponse);
  rpc ResetAIChanCalApplyCalIfExp(ResetAIChanCalApplyCalIfExpRequest) returns (ResetAIChanCalApplyCalIfExpResponse);
  rpc ResetAIChanCalDesc(ResetAIChanCalDescRequest) returns (ResetAIChanCalDescResponse);
  rpc ResetAIChanCalEnableCal(ResetAIChanCalEnableCalRequest) returns (ResetAIChanCalEnableCalResponse);
  rpc ResetAIChanCalOperatorName(ResetAIChanCalOperatorNameRequest) returns (ResetAIChanCalOperatorNameResponse);
  rpc ResetAIChanCalPolyForwardCoeff(ResetAIChanCalPolyForwardCoeffRequest) returns (ResetAIChanCalPolyForwardCoeffResponse);
  rpc ResetAIChanCalPolyReverseCoeff(ResetAIChanCalPolyReverseCoeffRequest) returns (ResetAIChanCalPolyReverseCoeffResponse);
  rpc ResetAIChanCalScaleType(ResetAIChanCalScaleTypeRequest) returns (ResetAIChanCalScaleTypeResponse);
  rpc ResetAIChanCalTablePreScaledVals(ResetAIChanCalTablePreScaledValsRequest) returns (ResetAIChanCalTablePreScaledValsResponse);
  rpc ResetAIChanCalTableScaledVals(ResetAIChanCalTableScaledValsRequest) returns (ResetAIChanCalTableScaledValsResponse);
  rpc ResetAIChanCalVerifAcqVals(ResetAIChanCalVerifAcqValsRequest) returns (ResetAIChanCalVerifAcqValsResponse);
  rpc ResetAIChanCalVerifRefVals(ResetAIChanCalVerifRefValsRequest) returns (ResetAIChanCalVerifRefValsResponse);
  rpc ResetAIChargeUnits(ResetAIChargeUnitsRequest) returns (ResetAIChargeUnitsResponse);
  rpc ResetAIChopEnable(ResetAIChopEnableRequest) returns (ResetAIChopEnableResponse);
  rpc ResetAICoupling(ResetAICouplingRequest) returns (ResetAICouplingResponse);
  rpc ResetAICurrentACRMSUnits(ResetAICurrentACRMSUnitsRequest) returns (ResetAICurrentACRMSUnitsResponse);
  rpc ResetAICurrentShuntLoc(ResetAICurrentShuntLocRequest) returns (ResetAICurrentShuntLocResponse);
  rpc ResetAICurrentShuntResistance(ResetAICurrentShuntResistanceRequest) returns (ResetAICurrentShuntResistanceResponse);
  rpc ResetAICurrentUnits(ResetAICurrentUnitsRequest) returns (ResetAICurrentUnitsResponse);
  rpc ResetAICustomScaleName(ResetAICustomScaleNameRequest) returns (ResetAICustomScaleNameResponse);
  rpc ResetAIDCOffset(ResetAIDCOffsetRequest) returns (ResetAIDCOffsetResponse);
  rpc ResetAIDataXferCustomThreshold(ResetAIDataXferCustomThresholdRequest) returns (ResetAIDataXferCustomThresholdResponse);
  rpc ResetAIDataXferMaxRate(ResetAIDataXferMaxRateRequest) returns (ResetAIDataXferMaxRateResponse);
  rpc ResetAIDataXferMech(ResetAIDataXferMechRequest) returns (ResetAIDataXferMechResponse);
  rpc ResetAIDataXferReqCond(ResetAIDataXferReqCondRequest) returns (ResetAIDataXferReqCondResponse);
  rpc ResetAIDigFltrBandpassCenterFreq(ResetAIDigFltrBandpassCenterFreqRequest) returns (ResetAIDigFltrBandpassCenterFreqResponse);
  rpc ResetAIDigFltrBandpassWidth(ResetAIDigFltrBandpassWidthRequest) returns (ResetAIDigFltrBandpassWidthResponse);
  rpc ResetAIDigFltrCoeff(ResetAIDigFltrCoeffRequest) returns (ResetAIDigFltrCoeffResponse);
  rpc ResetAIDigFltrEnable(ResetAIDigFltrEnableRequest) returns (ResetAIDigFltrEnableResponse);
  rpc ResetAIDigFltrHighpassCutoffFreq(ResetAIDigFltrHighpassCutoffFreqRequest) returns (ResetAIDigFltrHighpassCutoffFreqResponse);
  rpc ResetAIDigFltrLowpassCutoffFreq(ResetAIDigFltrLowpassCutoffFreqRequest) returns (ResetAIDigFltrLowpassCutoffFreqResponse);
  rpc ResetAIDigFltrNotchCenterFreq(ResetAIDigFltrNotchCenterFreqRequest) returns (ResetAIDigFltrNotchCenterFreqResponse);
  rpc ResetAIDigFltrNotchWidth(ResetAIDigFltrNotchWidthRequest) returns (ResetAIDigFltrNotchWidthResponse);
  rpc ResetAIDigFltrOrder(ResetAIDigFltrOrderRequest) returns (ResetAIDigFltrOrderResponse);
  rpc ResetAIDigFltrResponse(ResetAIDigFltrResponseRequest) returns (ResetAIDigFltrResponseResponse);
  rpc ResetAIDigFltrType(ResetAIDigFltrTypeRequest) returns (ResetAIDigFltrTypeResponse);
  rpc ResetAIDitherEnable(ResetAIDitherEnableRequest) returns (ResetAIDitherEnableResponse);
  rpc ResetAIEddyCurrentProxProbeSensitivity(ResetAIEddyCurrentProxProbeSensitivityRequest) returns (ResetAIEddyCurrentProxProbeSensitivityResponse);
  rpc ResetAIEddyCurrentProxProbeSensitivityUnits(ResetAIEddyCurrentProxProbeSensitivityUnitsRequest) returns (ResetAIEddyCurrentProxProbeSensitivityUnitsResponse);
  rpc ResetAIEddyCurrentProxProbeUnits(ResetAIEddyCurrentProxProbeUnitsRequest) returns (ResetAIEddyCurrentProxProbeUnitsResponse);
  rpc ResetAIEnhancedAliasRejectionEnable(ResetAIEnhancedAliasRejectionEnableRequest) returns (ResetAIEnhancedAliasRejectionEnableResponse);
  rpc ResetAIExcitActualVal(ResetAIExcitActualValRequest) returns (ResetAIExcitActualValResponse);
  rpc ResetAIExcitDCorAC(ResetAIExcitDCorACRequest) returns (ResetAIExcitDCorACResponse);
  rpc ResetAIExcitIdleOutputBehavior(ResetAIExcitIdleOutputBehaviorRequest) returns (ResetAIExcitIdleOutputBehaviorResponse);
  rpc ResetAIExcitSense(ResetAIExcitSenseRequest) returns (ResetAIExcitSenseResponse);
  rpc ResetAIExcitSrc(ResetAIExcitSrcRequest) returns (ResetAIExcitSrcResponse);
  rpc ResetAIExcitUseForScaling(ResetAIExcitUseForScalingRequest) returns (ResetAIExcitUseForScalingResponse);
  rpc ResetAIExcitUseMultiplexed(ResetAIExcitUseMultiplexedRequest) returns (ResetAIExcitUseMultiplexedResponse);
  rpc ResetAIExcitVal(ResetAIExcitValRequest) returns (ResetAIExcitValResponse);
  rpc ResetAIExcitVoltageOrCurrent(ResetAIExcitVoltageOrCurrentRequest) returns (ResetAIExcitVoltageOrCurrentResponse);
  rpc ResetAIFilterDelayAdjustment(ResetAIFilterDelayAdjustmentRequest) returns (ResetAIFilterDelayAdjustmentResponse);
  rpc ResetAIFilterDelayUnits(ResetAIFilterDelayUnitsRequest) returns (ResetAIFilterDelayUnitsResponse);
  rpc ResetAIFilterEnable(ResetAIFilterEnableRequest) returns (ResetAIFilterEnableResponse);
  rpc ResetAIFilterFreq(ResetAIFilterFreqRequest) returns (ResetAIFilterFreqResponse);
  rpc ResetAIFilterOrder(ResetAIFilterOrderRequest) returns (ResetAIFilterOrderResponse);
  rpc ResetAIFilterResponse(ResetAIFilterResponseRequest) returns (ResetAIFilterResponseResponse);
  rpc ResetAIForceIEPESensorSensitivity(ResetAIForceIEPESensorSensitivityRequest) returns (ResetAIForceIEPESensorSensitivityResponse);
  rpc ResetAIForceIEPESensorSensitivityUnits(ResetAIForceIEPESensorSensitivityUnitsRequest) returns (ResetAIForceIEPESensorSensitivityUnitsResponse);
  rpc ResetAIForceReadFromChan(ResetAIForceReadFromChanRequest) returns (ResetAIForceReadFromChanResponse);
  rpc ResetAIForceUnits(ResetAIForceUnitsRequest) returns (ResetAIForceUnitsResponse);
  rpc ResetAIFreqHyst(ResetAIFreqHystRequest) returns (ResetAIFreqHystResponse);
  rpc ResetAIFreqThreshVoltage(ResetAIFreqThreshVoltageRequest) returns (ResetAIFreqThreshVoltageResponse);
  rpc ResetAIFreqUnits(ResetAIFreqUnitsRequest) returns (ResetAIFreqUnitsResponse);
  rpc ResetAIGain(ResetAIGainRequest) returns (ResetAIGainResponse);
  rpc ResetAIImpedance(ResetAIImpedanceRequest) returns (ResetAIImpedanceResponse);
  rpc ResetAIInputLimitsFaultDetectEnable(ResetAIInputLimitsFaultDetectEnableRequest) returns (ResetAIInputLimitsFaultDetectEnableResponse);
  rpc ResetAIInputLimitsFaultDetectLowerLimit(ResetAIInputLimitsFaultDetectLowerLimitRequest) returns (ResetAIInputLimitsFaultDetectLowerLimitResponse);
  rpc ResetAIInputLimitsFaultDetectUpperLimit(ResetAIInputLimitsFaultDetectUpperLimitRequest) returns (ResetAIInputLimitsFaultDetectUpperLimitResponse);
  rpc ResetAIInputSrc(ResetAIInputSrcRequest) returns (ResetAIInputSrcResponse);
  rpc ResetAILVDTSensitivity(ResetAILVDTSensitivityRequest) returns (ResetAILVDTSensitivityResponse);
  rpc ResetAILVDTSensitivityUnits(ResetAILVDTSensitivityUnitsRequest) returns (ResetAILVDTSensitivityUnitsResponse);
  rpc ResetAILVDTUnits(ResetAILVDTUnitsRequest) returns (ResetAILVDTUnitsResponse);
  rpc ResetAILeadWireResistance(ResetAILeadWireResistanceRequest) returns (ResetAILeadWireResistanceResponse);
  rpc ResetAILossyLSBRemovalCompressedSampSize(ResetAILossyLSBRemovalCompressedSampSizeRequest) returns (ResetAILossyLSBRemovalCompressedSampSizeResponse);
  rpc ResetAILowpassCutoffFreq(ResetAILowpassCutoffFreqRequest) returns (ResetAILowpassCutoffFreqResponse);
  rpc ResetAILowpassEnable(ResetAILowpassEnableRequest) returns (ResetAILowpassEnableResponse);
  rpc ResetAILowpassSwitchCapClkSrc(ResetAILowpassSwitchCapClkSrcRequest) returns (ResetAILowpassSwitchCapClkSrcResponse);
  rpc ResetAILowpassSwitchCapExtClkDiv(ResetAILowpassSwitchCapExtClkDivRequest) returns (ResetAILowpassSwitchCapExtClkDivResponse);
  rpc ResetAILowpassSwitchCapExtClkFreq(ResetAILowpassSwitchCapExtClkFreqRequest) returns (ResetAILowpassSwitchCapExtClkFreqResponse);
  rpc ResetAILowpassSwitchCapOutClkDiv(ResetAILowpassSwitchCapOutClkDivRequest) returns (ResetAILowpassSwitchCapOutClkDivResponse);
  rpc ResetAIMax(ResetAIMaxRequest) returns (ResetAIMaxResponse);
  rpc ResetAIMemMapEnable(ResetAIMemMapEnableRequest) returns (ResetAIMemMapEnableResponse);
  rpc ResetAIMicrophoneSensitivity(ResetAIMicrophoneSensitivityRequest) returns (ResetAIMicrophoneSensitivityResponse);
  rpc ResetAIMin(ResetAIMinRequest) returns (ResetAIMinResponse);
  rpc ResetAIOpenChanDetectEnable(ResetAIOpenChanDetectEnableRequest) returns (ResetAIOpenChanDetectEnableResponse);
  rpc ResetAIOpenThrmcplDetectEnable(ResetAIOpenThrmcplDetectEnableRequest) returns (ResetAIOpenThrmcplDetectEnableResponse);
  rpc ResetAIOvercurrentDetectEnable(ResetAIOvercurrentDetectEnableRequest) returns (ResetAIOvercurrentDetectEnableResponse);
  rpc ResetAIPowerSupplyFaultDetectEnable(ResetAIPowerSupplyFaultDetectEnableRequest) returns (ResetAIPowerSupplyFaultDetectEnableResponse);
  rpc ResetAIPressureUnits(ResetAIPressureUnitsRequest) returns (ResetAIPressureUnitsResponse);
  rpc ResetAIProbeAtten(ResetAIProbeAttenRequest) returns (ResetAIProbeAttenResponse);
  rpc ResetAIRTDA(ResetAIRTDARequest) returns (ResetAIRTDAResponse);
  rpc ResetAIRTDB(ResetAIRTDBRequest) returns (ResetAIRTDBResponse);
  rpc ResetAIRTDC(ResetAIRTDCRequest) returns (ResetAIRTDCResponse);
  rpc ResetAIRTDR0(ResetAIRTDR0Request) returns (ResetAIRTDR0Response);
  rpc ResetAIRTDType(ResetAIRTDTypeRequest) returns (ResetAIRTDTypeResponse);
  rpc ResetAIRVDTSensitivity(ResetAIRVDTSensitivityRequest) returns (ResetAIRVDTSensitivityResponse);
  rpc ResetAIRVDTSensitivityUnits(ResetAIRVDTSensitivityUnitsRequest) returns (ResetAIRVDTSensitivityUnitsResponse);
  rpc ResetAIRVDTUnits(ResetAIRVDTUnitsRequest) returns (ResetAIRVDTUnitsResponse);
  rpc ResetAIRawDataCompressionType(ResetAIRawDataCompressionTypeRequest) returns (ResetAIRawDataCompressionTypeResponse);
  rpc ResetAIRemoveFilterDelay(ResetAIRemoveFilterDelayRequest) returns (ResetAIRemoveFilterDelayResponse);
  rpc ResetAIResistanceCfg(ResetAIResistanceCfgRequest) returns (ResetAIResistanceCfgResponse);
  rpc ResetAIResistanceUnits(ResetAIResistanceUnitsRequest) returns (ResetAIResistanceUnitsResponse);
  rpc ResetAIRngHigh(ResetAIRngHighRequest) returns (ResetAIRngHighResponse);
  rpc ResetAIRngLow(ResetAIRngLowRequest) returns (ResetAIRngLowResponse);
  rpc ResetAIRosetteStrainGageOrientation(ResetAIRosetteStrainGageOrientationRequest) returns (ResetAIRosetteStrainGageOrientationResponse);
  rpc ResetAIRosetteStrainGageRosetteMeasType(ResetAIRosetteStrainGageRosetteMeasTypeRequest) returns (ResetAIRosetteStrainGageRosetteMeasTypeResponse);
  rpc ResetAISampAndHoldEnable(ResetAISampAndHoldEnableRequest) returns (ResetAISampAndHoldEnableResponse);
  rpc ResetAISensorPowerCfg(ResetAISensorPowerCfgRequest) returns (ResetAISensorPowerCfgResponse);
  rpc ResetAISensorPowerType(ResetAISensorPowerTypeRequest) returns (ResetAISensorPowerTypeResponse);
  rpc ResetAISensorPowerVoltage(ResetAISensorPowerVoltageRequest) returns (ResetAISensorPowerVoltageResponse);
  rpc ResetAISoundPressureMaxSoundPressureLvl(ResetAISoundPressureMaxSoundPressureLvlRequest) returns (ResetAISoundPressureMaxSoundPressureLvlResponse);
  rpc ResetAISoundPressureUnits(ResetAISoundPressureUnitsRequest) returns (ResetAISoundPressureUnitsResponse);
  rpc ResetAISoundPressuredBRef(ResetAISoundPressuredBRefRequest) returns (ResetAISoundPressuredBRefResponse);
  rpc ResetAIStrainGageCfg(ResetAIStrainGageCfgRequest) returns (ResetAIStrainGageCfgResponse);
  rpc ResetAIStrainGageForceReadFromChan(ResetAIStrainGageForceReadFromChanRequest) returns (ResetAIStrainGageForceReadFromChanResponse);
  rpc ResetAIStrainGageGageFactor(ResetAIStrainGageGageFactorRequest) returns (ResetAIStrainGageGageFactorResponse);
  rpc ResetAIStrainGagePoissonRatio(ResetAIStrainGagePoissonRatioRequest) returns (ResetAIStrainGagePoissonRatioResponse);
  rpc ResetAIStrainUnits(ResetAIStrainUnitsRequest) returns (ResetAIStrainUnitsResponse);
  rpc ResetAITempUnits(ResetAITempUnitsRequest) returns (ResetAITempUnitsResponse);
  rpc ResetAITermCfg(ResetAITermCfgRequest) returns (ResetAITermCfgResponse);
  rpc ResetAIThrmcplCJCVal(ResetAIThrmcplCJCValRequest) returns (ResetAIThrmcplCJCValResponse);
  rpc ResetAIThrmcplLeadOffsetVoltage(ResetAIThrmcplLeadOffsetVoltageRequest) returns (ResetAIThrmcplLeadOffsetVoltageResponse);
  rpc ResetAIThrmcplScaleType(ResetAIThrmcplScaleTypeRequest) returns (ResetAIThrmcplScaleTypeResponse);
  rpc ResetAIThrmcplType(ResetAIThrmcplTypeRequest) returns (ResetAIThrmcplTypeResponse);
  rpc ResetAIThrmstrA(ResetAIThrmstrARequest) returns (ResetAIThrmstrAResponse);
  rpc ResetAIThrmstrB(ResetAIThrmstrBRequest) returns (ResetAIThrmstrBResponse);
  rpc ResetAIThrmstrC(ResetAIThrmstrCRequest) returns (ResetAIThrmstrCResponse);
  rpc ResetAIThrmstrR1(ResetAIThrmstrR1Request) returns (ResetAIThrmstrR1Response);
  rpc ResetAITorqueUnits(ResetAITorqueUnitsRequest) returns (ResetAITorqueUnitsResponse);
  rpc ResetAIUsbXferReqCount(ResetAIUsbXferReqCountRequest) returns (ResetAIUsbXferReqCountResponse);
  rpc ResetAIUsbXferReqSize(ResetAIUsbXferReqSizeRequest) returns (ResetAIUsbXferReqSizeResponse);
  rpc ResetAIVelocityIEPESensorSensitivity(ResetAIVelocityIEPESensorSensitivityRequest) returns (ResetAIVelocityIEPESensorSensitivityResponse);
  rpc ResetAIVelocityIEPESensorSensitivityUnits(ResetAIVelocityIEPESensorSensitivityUnitsRequest) returns (ResetAIVelocityIEPESensorSensitivityUnitsResponse);
  rpc ResetAIVelocityIEPESensordBRef(ResetAIVelocityIEPESensordBRefRequest) returns (ResetAIVelocityIEPESensordBRefResponse);
  rpc ResetAIVelocityUnits(ResetAIVelocityUnitsRequest) returns (ResetAIVelocityUnitsResponse);
  rpc ResetAIVoltageACRMSUnits(ResetAIVoltageACRMSUnitsRequest) returns (ResetAIVoltageACRMSUnitsResponse);
  rpc ResetAIVoltageUnits(ResetAIVoltageUnitsRequest) returns (ResetAIVoltageUnitsResponse);
  rpc ResetAIVoltagedBRef(ResetAIVoltagedBRefRequest) returns (ResetAIVoltagedBRefResponse);
  rpc ResetAOCurrentUnits(ResetAOCurrentUnitsRequest) returns (ResetAOCurrentUnitsResponse);
  rpc ResetAOCustomScaleName(ResetAOCustomScaleNameRequest) returns (ResetAOCustomScaleNameResponse);
  rpc ResetAODACOffsetExtSrc(ResetAODACOffsetExtSrcRequest) returns (ResetAODACOffsetExtSrcResponse);
  rpc ResetAODACOffsetSrc(ResetAODACOffsetSrcRequest) returns (ResetAODACOffsetSrcResponse);
  rpc ResetAODACOffsetVal(ResetAODACOffsetValRequest) returns (ResetAODACOffsetValResponse);
  rpc ResetAODACRefAllowConnToGnd(ResetAODACRefAllowConnToGndRequest) returns (ResetAODACRefAllowConnToGndResponse);
  rpc ResetAODACRefConnToGnd(ResetAODACRefConnToGndRequest) returns (ResetAODACRefConnToGndResponse);
  rpc ResetAODACRefExtSrc(ResetAODACRefExtSrcRequest) returns (ResetAODACRefExtSrcResponse);
  rpc ResetAODACRefSrc(ResetAODACRefSrcRequest) returns (ResetAODACRefSrcResponse);
  rpc ResetAODACRefVal(ResetAODACRefValRequest) returns (ResetAODACRefValResponse);
  rpc ResetAODACRngHigh(ResetAODACRngHighRequest) returns (ResetAODACRngHighResponse);
  rpc ResetAODACRngLow(ResetAODACRngLowRequest) returns (ResetAODACRngLowResponse);
  rpc ResetAODataXferMech(ResetAODataXferMechRequest) returns (ResetAODataXferMechResponse);
  rpc ResetAODataXferReqCond(ResetAODataXferReqCondRequest) returns (ResetAODataXferReqCondResponse);
  rpc ResetAOEnhancedImageRejectionEnable(ResetAOEnhancedImageRejectionEnableRequest) returns (ResetAOEnhancedImageRejectionEnableResponse);
  rpc ResetAOFilterDelay(ResetAOFilterDelayRequest) returns (ResetAOFilterDelayResponse);
  rpc ResetAOFilterDelayAdjustment(ResetAOFilterDelayAdjustmentRequest) returns (ResetAOFilterDelayAdjustmentResponse);
  rpc ResetAOFilterDelayUnits(ResetAOFilterDelayUnitsRequest) returns (ResetAOFilterDelayUnitsResponse);
  rpc ResetAOFuncGenAmplitude(ResetAOFuncGenAmplitudeRequest) returns (ResetAOFuncGenAmplitudeResponse);
  rpc ResetAOFuncGenFMDeviation(ResetAOFuncGenFMDeviationRequest) returns (ResetAOFuncGenFMDeviationResponse);
  rpc ResetAOFuncGenFreq(ResetAOFuncGenFreqRequest) returns (ResetAOFuncGenFreqResponse);
  rpc ResetAOFuncGenModulationType(ResetAOFuncGenModulationTypeRequest) returns (ResetAOFuncGenModulationTypeResponse);
  rpc ResetAOFuncGenOffset(ResetAOFuncGenOffsetRequest) returns (ResetAOFuncGenOffsetResponse);
  rpc ResetAOFuncGenSquareDutyCycle(ResetAOFuncGenSquareDutyCycleRequest) returns (ResetAOFuncGenSquareDutyCycleResponse);
  rpc ResetAOFuncGenType(ResetAOFuncGenTypeRequest) returns (ResetAOFuncGenTypeResponse);
  rpc ResetAOGain(ResetAOGainRequest) returns (ResetAOGainResponse);
  rpc ResetAOIdleOutputBehavior(ResetAOIdleOutputBehaviorRequest) returns (ResetAOIdleOutputBehaviorResponse);
  rpc ResetAOLoadImpedance(ResetAOLoadImpedanceRequest) returns (ResetAOLoadImpedanceResponse);
  rpc ResetAOMax(ResetAOMaxRequest) returns (ResetAOMaxResponse);
  rpc ResetAOMemMapEnable(ResetAOMemMapEnableRequest) returns (ResetAOMemMapEnableResponse);
  rpc ResetAOMin(ResetAOMinRequest) returns (ResetAOMinResponse);
  rpc ResetAOOutputImpedance(ResetAOOutputImpedanceRequest) returns (ResetAOOutputImpedanceResponse);
  rpc ResetAOReglitchEnable(ResetAOReglitchEnableRequest) returns (ResetAOReglitchEnableResponse);
  rpc ResetAOResolutionUnits(ResetAOResolutionUnitsRequest) returns (ResetAOResolutionUnitsResponse);
  rpc ResetAOTermCfg(ResetAOTermCfgRequest) returns (ResetAOTermCfgResponse);
  rpc ResetAOUsbXferReqCount(ResetAOUsbXferReqCountRequest) returns (ResetAOUsbXferReqCountResponse);
  rpc ResetAOUsbXferReqSize(ResetAOUsbXferReqSizeRequest) returns (ResetAOUsbXferReqSizeResponse);
  rpc ResetAOUseOnlyOnBrdMem(ResetAOUseOnlyOnBrdMemRequest) returns (ResetAOUseOnlyOnBrdMemResponse);
  rpc ResetAOVoltageCurrentLimit(ResetAOVoltageCurrentLimitRequest) returns (ResetAOVoltageCurrentLimitResponse);
  rpc ResetAOVoltageUnits(ResetAOVoltageUnitsRequest) returns (ResetAOVoltageUnitsResponse);
  rpc ResetBufInputBufSize(ResetBufInputBufSizeRequest) returns (ResetBufInputBufSizeResponse);
  rpc ResetBufOutputBufSize(ResetBufOutputBufSizeRequest) returns (ResetBufOutputBufSizeResponse);
  rpc ResetBufOutputOnbrdBufSize(ResetBufOutputOnbrdBufSizeRequest) returns (ResetBufOutputOnbrdBufSizeResponse);
  rpc ResetCIAngEncoderInitialAngle(ResetCIAngEncoderInitialAngleRequest) returns (ResetCIAngEncoderInitialAngleResponse);
  rpc ResetCIAngEncoderPulsesPerRev(ResetCIAngEncoderPulsesPerRevRequest) returns (ResetCIAngEncoderPulsesPerRevResponse);
  rpc ResetCIAngEncoderUnits(ResetCIAngEncoderUnitsRequest) returns (ResetCIAngEncoderUnitsResponse);
  rpc ResetCICountEdgesActiveEdge(ResetCICountEdgesActiveEdgeRequest) returns (ResetCICountEdgesActiveEdgeResponse);
  rpc ResetCICountEdgesCountDirDigFltrEnable(ResetCICountEdgesCountDirDigFltrEnableRequest) returns (ResetCICountEdgesCountDirDigFltrEnableResponse);
  rpc ResetCICountEdgesCountDirDigFltrMinPulseWidth(ResetCICountEdgesCountDirDigFltrMinPulseWidthRequest) returns (ResetCICountEdgesCountDirDigFltrMinPulseWidthResponse);
  rpc ResetCICountEdgesCountDirDigFltrTimebaseRate(ResetCICountEdgesCountDirDigFltrTimebaseRateRequest) returns (ResetCICountEdgesCountDirDigFltrTimebaseRateResponse);
  rpc ResetCICountEdgesCountDirDigFltrTimebaseSrc(ResetCICountEdgesCountDirDigFltrTimebaseSrcRequest) returns (ResetCICountEdgesCountDirDigFltrTimebaseSrcResponse);
  rpc ResetCICountEdgesCountDirDigSyncEnable(ResetCICountEdgesCountDirDigSyncEnableRequest) returns (ResetCICountEdgesCountDirDigSyncEnableResponse);
  rpc ResetCICountEdgesCountDirHyst(ResetCICountEdgesCountDirHystRequest) returns (ResetCICountEdgesCountDirHystResponse);
  rpc ResetCICountEdgesCountDirLogicLvlBehavior(ResetCICountEdgesCountDirLogicLvlBehaviorRequest) returns (ResetCICountEdgesCountDirLogicLvlBehaviorResponse);
  rpc ResetCICountEdgesCountDirTermCfg(ResetCICountEdgesCountDirTermCfgRequest) returns (ResetCICountEdgesCountDirTermCfgResponse);
  rpc ResetCICountEdgesCountDirThreshVoltage(ResetCICountEdgesCountDirThreshVoltageRequest) returns (ResetCICountEdgesCountDirThreshVoltageResponse);
  rpc ResetCICountEdgesCountResetActiveEdge(ResetCICountEdgesCountResetActiveEdgeRequest) returns (ResetCICountEdgesCountResetActiveEdgeResponse);
  rpc ResetCICountEdgesCountResetDigFltrEnable(ResetCICountEdgesCountResetDigFltrEnableRequest) returns (ResetCICountEdgesCountResetDigFltrEnableResponse);
  rpc ResetCICountEdgesCountResetDigFltrMinPulseWidth(ResetCICountEdgesCountResetDigFltrMinPulseWidthRequest) returns (ResetCICountEdgesCountResetDigFltrMinPulseWidthResponse);
  rpc ResetCICountEdgesCountResetDigFltrTimebaseRate(ResetCICountEdgesCountResetDigFltrTimebaseRateRequest) returns (ResetCICountEdgesCountResetDigFltrTimebaseRateResponse);
  rpc ResetCICountEdgesCountResetDigFltrTimebaseSrc(ResetCICountEdgesCountResetDigFltrTimebaseSrcRequest) returns (ResetCICountEdgesCountResetDigFltrTimebaseSrcResponse);
  rpc ResetCICountEdgesCountResetDigSyncEnable(ResetCICountEdgesCountResetDigSyncEnableRequest) returns (ResetCICountEdgesCountResetDigSyncEnableResponse);
  rpc ResetCICountEdgesCountResetEnable(ResetCICountEdgesCountResetEnableRequest) returns (ResetCICountEdgesCountResetEnableResponse);
  rpc ResetCICountEdgesCountResetHyst(ResetCICountEdgesCountResetHystRequest) returns (ResetCICountEdgesCountResetHystResponse);
  rpc ResetCICountEdgesCountResetLogicLvlBehavior(ResetCICountEdgesCountResetLogicLvlBehaviorRequest) returns (ResetCICountEdgesCountResetLogicLvlBehaviorResponse);
  rpc ResetCICountEdgesCountResetResetCount(ResetCICountEdgesCountResetResetCountRequest) returns (ResetCICountEdgesCountResetResetCountResponse);
  rpc ResetCICountEdgesCountResetTerm(ResetCICountEdgesCountResetTermRequest) returns (ResetCICountEdgesCountResetTermResponse);
  rpc ResetCICountEdgesCountResetTermCfg(ResetCICountEdgesCountResetTermCfgRequest) returns (ResetCICountEdgesCountResetTermCfgResponse);
  rpc ResetCICountEdgesCountResetThreshVoltage(ResetCICountEdgesCountResetThreshVoltageRequest) returns (ResetCICountEdgesCountResetThreshVoltageResponse);
  rpc ResetCICountEdgesDigFltrEnable(ResetCICountEdgesDigFltrEnableRequest) returns (ResetCICountEdgesDigFltrEnableResponse);
  rpc ResetCICountEdgesDigFltrMinPulseWidth(ResetCICountEdgesDigFltrMinPulseWidthRequest) returns (ResetCICountEdgesDigFltrMinPulseWidthResponse);
  rpc ResetCICountEdgesDigFltrTimebaseRate(ResetCICountEdgesDigFltrTimebaseRateRequest) returns (ResetCICountEdgesDigFltrTimebaseRateResponse);
  rpc ResetCICountEdgesDigFltrTimebaseSrc(ResetCICountEdgesDigFltrTimebaseSrcRequest) returns (ResetCICountEdgesDigFltrTimebaseSrcResponse);
  rpc ResetCICountEdgesDigSyncEnable(ResetCICountEdgesDigSyncEnableRequest) returns (ResetCICountEdgesDigSyncEnableResponse);
  rpc ResetCICountEdgesDir(ResetCICountEdgesDirRequest) returns (ResetCICountEdgesDirResponse);
  rpc ResetCICountEdgesDirTerm(ResetCICountEdgesDirTermRequest) returns (ResetCICountEdgesDirTermResponse);
  rpc ResetCICountEdgesGateDigFltrEnable(ResetCICountEdgesGateDigFltrEnableRequest) returns (ResetCICountEdgesGateDigFltrEnableResponse);
  rpc ResetCICountEdgesGateDigFltrMinPulseWidth(ResetCICountEdgesGateDigFltrMinPulseWidthRequest) returns (ResetCICountEdgesGateDigFltrMinPulseWidthResponse);
  rpc ResetCICountEdgesGateDigFltrTimebaseRate(ResetCICountEdgesGateDigFltrTimebaseRateRequest) returns (ResetCICountEdgesGateDigFltrTimebaseRateResponse);
  rpc ResetCICountEdgesGateDigFltrTimebaseSrc(ResetCICountEdgesGateDigFltrTimebaseSrcRequest) returns (ResetCICountEdgesGateDigFltrTimebaseSrcResponse);
  rpc ResetCICountEdgesGateEnable(ResetCICountEdgesGateEnableRequest) returns (ResetCICountEdgesGateEnableResponse);
  rpc ResetCICountEdgesGateHyst(ResetCICountEdgesGateHystRequest) returns (ResetCICountEdgesGateHystResponse);
  rpc ResetCICountEdgesGateLogicLvlBehavior(ResetCICountEdgesGateLogicLvlBehaviorRequest) returns (ResetCICountEdgesGateLogicLvlBehaviorResponse);
  rpc ResetCICountEdgesGateTerm(ResetCICountEdgesGateTermRequest) returns (ResetCICountEdgesGateTermResponse);
  rpc ResetCICountEdgesGateTermCfg(ResetCICountEdgesGateTermCfgRequest) returns (ResetCICountEdgesGateTermCfgResponse);
  rpc ResetCICountEdgesGateThreshVoltage(ResetCICountEdgesGateThreshVoltageRequest) returns (ResetCICountEdgesGateThreshVoltageResponse);
  rpc ResetCICountEdgesGateWhen(ResetCICountEdgesGateWhenRequest) returns (ResetCICountEdgesGateWhenResponse);
  rpc ResetCICountEdgesHyst(ResetCICountEdgesHystRequest) returns (ResetCICountEdgesHystResponse);
  rpc ResetCICountEdgesInitialCnt(ResetCICountEdgesInitialCntRequest) returns (ResetCICountEdgesInitialCntResponse);
  rpc ResetCICountEdgesLogicLvlBehavior(ResetCICountEdgesLogicLvlBehaviorRequest) returns (ResetCICountEdgesLogicLvlBehaviorResponse);
  rpc ResetCICountEdgesTerm(ResetCICountEdgesTermRequest) returns (ResetCICountEdgesTermResponse);
  rpc ResetCICountEdgesTermCfg(ResetCICountEdgesTermCfgRequest) returns (ResetCICountEdgesTermCfgResponse);
  rpc ResetCICountEdgesThreshVoltage(ResetCICountEdgesThreshVoltageRequest) returns (ResetCICountEdgesThreshVoltageResponse);
  rpc ResetCICtrTimebaseActiveEdge(ResetCICtrTimebaseActiveEdgeRequest) returns (ResetCICtrTimebaseActiveEdgeResponse);
  rpc ResetCICtrTimebaseDigFltrEnable(ResetCICtrTimebaseDigFltrEnableRequest) returns (ResetCICtrTimebaseDigFltrEnableResponse);
  rpc ResetCICtrTimebaseDigFltrMinPulseWidth(ResetCICtrTimebaseDigFltrMinPulseWidthRequest) returns (ResetCICtrTimebaseDigFltrMinPulseWidthResponse);
  rpc ResetCICtrTimebaseDigFltrTimebaseRate(ResetCICtrTimebaseDigFltrTimebaseRateRequest) returns (ResetCICtrTimebaseDigFltrTimebaseRateResponse);
  rpc ResetCICtrTimebaseDigFltrTimebaseSrc(ResetCICtrTimebaseDigFltrTimebaseSrcRequest) returns (ResetCICtrTimebaseDigFltrTimebaseSrcResponse);
  rpc ResetCICtrTimebaseDigSyncEnable(ResetCICtrTimebaseDigSyncEnableRequest) returns (ResetCICtrTimebaseDigSyncEnableResponse);
  rpc ResetCICtrTimebaseMasterTimebaseDiv(ResetCICtrTimebaseMasterTimebaseDivRequest) returns (ResetCICtrTimebaseMasterTimebaseDivResponse);
  rpc ResetCICtrTimebaseRate(ResetCICtrTimebaseRateRequest) returns (ResetCICtrTimebaseRateResponse);
  rpc ResetCICtrTimebaseSrc(ResetCICtrTimebaseSrcRequest) returns (ResetCICtrTimebaseSrcResponse);
  rpc ResetCICustomScaleName(ResetCICustomScaleNameRequest) returns (ResetCICustomScaleNameResponse);
  rpc ResetCIDataXferMech(ResetCIDataXferMechRequest) returns (ResetCIDataXferMechResponse);
  rpc ResetCIDataXferReqCond(ResetCIDataXferReqCondRequest) returns (ResetCIDataXferReqCondResponse);
  rpc ResetCIDupCountPrevent(ResetCIDupCountPreventRequest) returns (ResetCIDupCountPreventResponse);
  rpc ResetCIDutyCycleDigFltrEnable(ResetCIDutyCycleDigFltrEnableRequest) returns (ResetCIDutyCycleDigFltrEnableResponse);
  rpc ResetCIDutyCycleDigFltrMinPulseWidth(ResetCIDutyCycleDigFltrMinPulseWidthRequest) returns (ResetCIDutyCycleDigFltrMinPulseWidthResponse);
  rpc ResetCIDutyCycleDigFltrTimebaseRate(ResetCIDutyCycleDigFltrTimebaseRateRequest) returns (ResetCIDutyCycleDigFltrTimebaseRateResponse);
  rpc ResetCIDutyCycleDigFltrTimebaseSrc(ResetCIDutyCycleDigFltrTimebaseSrcRequest) returns (ResetCIDutyCycleDigFltrTimebaseSrcResponse);
  rpc ResetCIDutyCycleLogicLvlBehavior(ResetCIDutyCycleLogicLvlBehaviorRequest) returns (ResetCIDutyCycleLogicLvlBehaviorResponse);
  rpc ResetCIDutyCycleStartingEdge(ResetCIDutyCycleStartingEdgeRequest) returns (ResetCIDutyCycleStartingEdgeResponse);
  rpc ResetCIDutyCycleTerm(ResetCIDutyCycleTermRequest) returns (ResetCIDutyCycleTermResponse);
  rpc ResetCIDutyCycleTermCfg(ResetCIDutyCycleTermCfgRequest) returns (ResetCIDutyCycleTermCfgResponse);
  rpc ResetCIEncoderAInputDigFltrEnable(ResetCIEncoderAInputDigFltrEnableRequest) returns (ResetCIEncoderAInputDigFltrEnableResponse);
  rpc ResetCIEncoderAInputDigFltrMinPulseWidth(ResetCIEncoderAInputDigFltrMinPulseWidthRequest) returns (ResetCIEncoderAInputDigFltrMinPulseWidthResponse);
  rpc ResetCIEncoderAInputDigFltrTimebaseRate(ResetCIEncoderAInputDigFltrTimebaseRateRequest) returns (ResetCIEncoderAInputDigFltrTimebaseRateResponse);
  rpc ResetCIEncoderAInputDigFltrTimebaseSrc(ResetCIEncoderAInputDigFltrTimebaseSrcRequest) returns (ResetCIEncoderAInputDigFltrTimebaseSrcResponse);
  rpc ResetCIEncoderAInputDigSyncEnable(ResetCIEncoderAInputDigSyncEnableRequest) returns (ResetCIEncoderAInputDigSyncEnableResponse);
  rpc ResetCIEncoderAInputLogicLvlBehavior(ResetCIEncoderAInputLogicLvlBehaviorRequest) returns (ResetCIEncoderAInputLogicLvlBehaviorResponse);
  rpc ResetCIEncoderAInputTerm(ResetCIEncoderAInputTermRequest) returns (ResetCIEncoderAInputTermResponse);
  rpc ResetCIEncoderAInputTermCfg(ResetCIEncoderAInputTermCfgRequest) returns (ResetCIEncoderAInputTermCfgResponse);
  rpc ResetCIEncoderBInputDigFltrEnable(ResetCIEncoderBInputDigFltrEnableRequest) returns (ResetCIEncoderBInputDigFltrEnableResponse);
  rpc ResetCIEncoderBInputDigFltrMinPulseWidth(ResetCIEncoderBInputDigFltrMinPulseWidthRequest) returns (ResetCIEncoderBInputDigFltrMinPulseWidthResponse);
  rpc ResetCIEncoderBInputDigFltrTimebaseRate(ResetCIEncoderBInputDigFltrTimebaseRateRequest) returns (ResetCIEncoderBInputDigFltrTimebaseRateResponse);
  rpc ResetCIEncoderBInputDigFltrTimebaseSrc(ResetCIEncoderBInputDigFltrTimebaseSrcRequest) returns (ResetCIEncoderBInputDigFltrTimebaseSrcResponse);
  rpc ResetCIEncoderBInputDigSyncEnable(ResetCIEncoderBInputDigSyncEnableRequest) returns (ResetCIEncoderBInputDigSyncEnableResponse);
  rpc ResetCIEncoderBInputLogicLvlBehavior(ResetCIEncoderBInputLogicLvlBehaviorRequest) returns (ResetCIEncoderBInputLogicLvlBehaviorResponse);
  rpc ResetCIEncoderBInputTerm(ResetCIEncoderBInputTermRequest) returns (ResetCIEncoderBInputTermResponse);
  rpc ResetCIEncoderBInputTermCfg(ResetCIEncoderBInputTermCfgRequest) returns (ResetCIEncoderBInputTermCfgResponse);
  rpc ResetCIEncoderDecodingType(ResetCIEncoderDecodingTypeRequest) returns (ResetCIEncoderDecodingTypeResponse);
  rpc ResetCIEncoderZIndexEnable(ResetCIEncoderZIndexEnableRequest) returns (ResetCIEncoderZIndexEnableResponse);
  rpc ResetCIEncoderZIndexPhase(ResetCIEncoderZIndexPhaseRequest) returns (ResetCIEncoderZIndexPhaseResponse);
  rpc ResetCIEncoderZIndexVal(ResetCIEncoderZIndexValRequest) returns (ResetCIEncoderZIndexValResponse);
  rpc ResetCIEncoderZInputDigFltrEnable(ResetCIEncoderZInputDigFltrEnableRequest) returns (ResetCIEncoderZInputDigFltrEnableResponse);
  rpc ResetCIEncoderZInputDigFltrMinPulseWidth(ResetCIEncoderZInputDigFltrMinPulseWidthRequest) returns (ResetCIEncoderZInputDigFltrMinPulseWidthResponse);
  rpc ResetCIEncoderZInputDigFltrTimebaseRate(ResetCIEncoderZInputDigFltrTimebaseRateRequest) returns (ResetCIEncoderZInputDigFltrTimebaseRateResponse);
  rpc ResetCIEncoderZInputDigFltrTimebaseSrc(ResetCIEncoderZInputDigFltrTimebaseSrcRequest) returns (ResetCIEncoderZInputDigFltrTimebaseSrcResponse);
  rpc ResetCIEncoderZInputDigSyncEnable(ResetCIEncoderZInputDigSyncEnableRequest) returns (ResetCIEncoderZInputDigSyncEnableResponse);
  rpc ResetCIEncoderZInputLogicLvlBehavior(ResetCIEncoderZInputLogicLvlBehaviorRequest) returns (ResetCIEncoderZInputLogicLvlBehaviorResponse);
  rpc ResetCIEncoderZInputTerm(ResetCIEncoderZInputTermRequest) returns (ResetCIEncoderZInputTermResponse);
  rpc ResetCIEncoderZInputTermCfg(ResetCIEncoderZInputTermCfgRequest) returns (ResetCIEncoderZInputTermCfgResponse);
  rpc ResetCIFilterDelayUnits(ResetCIFilterDelayUnitsRequest) returns (ResetCIFilterDelayUnitsResponse);
  rpc ResetCIFilterEnable(ResetCIFilterEnableRequest) returns (ResetCIFilterEnableResponse);
  rpc ResetCIFilterFreq(ResetCIFilterFreqRequest) returns (ResetCIFilterFreqResponse);
  rpc ResetCIFilterOrder(ResetCIFilterOrderRequest) returns (ResetCIFilterOrderResponse);
  rpc ResetCIFilterResponse(ResetCIFilterResponseRequest) returns (ResetCIFilterResponseResponse);
  rpc ResetCIFreqDigFltrEnable(ResetCIFreqDigFltrEnableRequest) returns (ResetCIFreqDigFltrEnableResponse);
  rpc ResetCIFreqDigFltrMinPulseWidth(ResetCIFreqDigFltrMinPulseWidthRequest) returns (ResetCIFreqDigFltrMinPulseWidthResponse);
  rpc ResetCIFreqDigFltrTimebaseRate(ResetCIFreqDigFltrTimebaseRateRequest) returns (ResetCIFreqDigFltrTimebaseRateResponse);
  rpc ResetCIFreqDigFltrTimebaseSrc(ResetCIFreqDigFltrTimebaseSrcRequest) returns (ResetCIFreqDigFltrTimebaseSrcResponse);
  rpc ResetCIFreqDigSyncEnable(ResetCIFreqDigSyncEnableRequest) returns (ResetCIFreqDigSyncEnableResponse);
  rpc ResetCIFreqDiv(ResetCIFreqDivRequest) returns (ResetCIFreqDivResponse);
  rpc ResetCIFreqEnableAveraging(ResetCIFreqEnableAveragingRequest) returns (ResetCIFreqEnableAveragingResponse);
  rpc ResetCIFreqHyst(ResetCIFreqHystRequest) returns (ResetCIFreqHystResponse);
  rpc ResetCIFreqLogicLvlBehavior(ResetCIFreqLogicLvlBehaviorRequest) returns (ResetCIFreqLogicLvlBehaviorResponse);
  rpc ResetCIFreqMeasMeth(ResetCIFreqMeasMethRequest) returns (ResetCIFreqMeasMethResponse);
  rpc ResetCIFreqMeasTime(ResetCIFreqMeasTimeRequest) returns (ResetCIFreqMeasTimeResponse);
  rpc ResetCIFreqStartingEdge(ResetCIFreqStartingEdgeRequest) returns (ResetCIFreqStartingEdgeResponse);
  rpc ResetCIFreqTerm(ResetCIFreqTermRequest) returns (ResetCIFreqTermResponse);
  rpc ResetCIFreqTermCfg(ResetCIFreqTermCfgRequest) returns (ResetCIFreqTermCfgResponse);
  rpc ResetCIFreqThreshVoltage(ResetCIFreqThreshVoltageRequest) returns (ResetCIFreqThreshVoltageResponse);
  rpc ResetCIFreqUnits(ResetCIFreqUnitsRequest) returns (ResetCIFreqUnitsResponse);
  rpc ResetCIGPSSyncMethod(ResetCIGPSSyncMethodRequest) returns (ResetCIGPSSyncMethodResponse);
  rpc ResetCIGPSSyncSrc(ResetCIGPSSyncSrcRequest) returns (ResetCIGPSSyncSrcResponse);
  rpc ResetCILinEncoderDistPerPulse(ResetCILinEncoderDistPerPulseRequest) returns (ResetCILinEncoderDistPerPulseResponse);
  rpc ResetCILinEncoderInitialPos(ResetCILinEncoderInitialPosRequest) returns (ResetCILinEncoderInitialPosResponse);
  rpc ResetCILinEncoderUnits(ResetCILinEncoderUnitsRequest) returns (ResetCILinEncoderUnitsResponse);
  rpc ResetCIMax(ResetCIMaxRequest) returns (ResetCIMaxResponse);
  rpc ResetCIMaxMeasPeriod(ResetCIMaxMeasPeriodRequest) returns (ResetCIMaxMeasPeriodResponse);
  rpc ResetCIMemMapEnable(ResetCIMemMapEnableRequest) returns (ResetCIMemMapEnableResponse);
  rpc ResetCIMin(ResetCIMinRequest) returns (ResetCIMinResponse);
  rpc ResetCIPeriodDigFltrEnable(ResetCIPeriodDigFltrEnableRequest) returns (ResetCIPeriodDigFltrEnableResponse);
  rpc ResetCIPeriodDigFltrMinPulseWidth(ResetCIPeriodDigFltrMinPulseWidthRequest) returns (ResetCIPeriodDigFltrMinPulseWidthResponse);
  rpc ResetCIPeriodDigFltrTimebaseRate(ResetCIPeriodDigFltrTimebaseRateRequest) returns (ResetCIPeriodDigFltrTimebaseRateResponse);
  rpc ResetCIPeriodDigFltrTimebaseSrc(ResetCIPeriodDigFltrTimebaseSrcRequest) returns (ResetCIPeriodDigFltrTimebaseSrcResponse);
  rpc ResetCIPeriodDigSyncEnable(ResetCIPeriodDigSyncEnableRequest) returns (ResetCIPeriodDigSyncEnableResponse);
  rpc ResetCIPeriodDiv(ResetCIPeriodDivRequest) returns (ResetCIPeriodDivResponse);
  rpc ResetCIPeriodEnableAveraging(ResetCIPeriodEnableAveragingRequest) returns (ResetCIPeriodEnableAveragingResponse);
  rpc ResetCIPeriodHyst(ResetCIPeriodHystRequest) returns (ResetCIPeriodHystResponse);
  rpc ResetCIPeriodLogicLvlBehavior(ResetCIPeriodLogicLvlBehaviorRequest) returns (ResetCIPeriodLogicLvlBehaviorResponse);
  rpc ResetCIPeriodMeasMeth(ResetCIPeriodMeasMethRequest) returns (ResetCIPeriodMeasMethResponse);
  rpc ResetCIPeriodMeasTime(ResetCIPeriodMeasTimeRequest) returns (ResetCIPeriodMeasTimeResponse);
  rpc ResetCIPeriodStartingEdge(ResetCIPeriodStartingEdgeRequest) returns (ResetCIPeriodStartingEdgeResponse);
  rpc ResetCIPeriodTerm(ResetCIPeriodTermRequest) returns (ResetCIPeriodTermResponse);
  rpc ResetCIPeriodTermCfg(ResetCIPeriodTermCfgRequest) returns (ResetCIPeriodTermCfgResponse);
  rpc ResetCIPeriodThreshVoltage(ResetCIPeriodThreshVoltageRequest) returns (ResetCIPeriodThreshVoltageResponse);
  rpc ResetCIPeriodUnits(ResetCIPeriodUnitsRequest) returns (ResetCIPeriodUnitsResponse);
  rpc ResetCIPrescaler(ResetCIPrescalerRequest) returns (ResetCIPrescalerResponse);
  rpc ResetCIPulseFreqDigFltrEnable(ResetCIPulseFreqDigFltrEnableRequest) returns (ResetCIPulseFreqDigFltrEnableResponse);
  rpc ResetCIPulseFreqDigFltrMinPulseWidth(ResetCIPulseFreqDigFltrMinPulseWidthRequest) returns (ResetCIPulseFreqDigFltrMinPulseWidthResponse);
  rpc ResetCIPulseFreqDigFltrTimebaseRate(ResetCIPulseFreqDigFltrTimebaseRateRequest) returns (ResetCIPulseFreqDigFltrTimebaseRateResponse);
  rpc ResetCIPulseFreqDigFltrTimebaseSrc(ResetCIPulseFreqDigFltrTimebaseSrcRequest) returns (ResetCIPulseFreqDigFltrTimebaseSrcResponse);
  rpc ResetCIPulseFreqDigSyncEnable(ResetCIPulseFreqDigSyncEnableRequest) returns (ResetCIPulseFreqDigSyncEnableResponse);
  rpc ResetCIPulseFreqLogicLvlBehavior(ResetCIPulseFreqLogicLvlBehaviorRequest) returns (ResetCIPulseFreqLogicLvlBehaviorResponse);
  rpc ResetCIPulseFreqStartEdge(ResetCIPulseFreqStartEdgeRequest) returns (ResetCIPulseFreqStartEdgeResponse);
  rpc ResetCIPulseFreqTerm(ResetCIPulseFreqTermRequest) returns (ResetCIPulseFreqTermResponse);
  rpc ResetCIPulseFreqTermCfg(ResetCIPulseFreqTermCfgRequest) returns (ResetCIPulseFreqTermCfgResponse);
  rpc ResetCIPulseFreqUnits(ResetCIPulseFreqUnitsRequest) returns (ResetCIPulseFreqUnitsResponse);
  rpc ResetCIPulseTicksDigFltrEnable(ResetCIPulseTicksDigFltrEnableRequest) returns (ResetCIPulseTicksDigFltrEnableResponse);
  rpc ResetCIPulseTicksDigFltrMinPulseWidth(ResetCIPulseTicksDigFltrMinPulseWidthRequest) returns (ResetCIPulseTicksDigFltrMinPulseWidthResponse);
  rpc ResetCIPulseTicksDigFltrTimebaseRate(ResetCIPulseTicksDigFltrTimebaseRateRequest) returns (ResetCIPulseTicksDigFltrTimebaseRateResponse);
  rpc ResetCIPulseTicksDigFltrTimebaseSrc(ResetCIPulseTicksDigFltrTimebaseSrcRequest) returns (ResetCIPulseTicksDigFltrTimebaseSrcResponse);
  rpc ResetCIPulseTicksDigSyncEnable(ResetCIPulseTicksDigSyncEnableRequest) returns (ResetCIPulseTicksDigSyncEnableResponse);
  rpc ResetCIPulseTicksLogicLvlBehavior(ResetCIPulseTicksLogicLvlBehaviorRequest) returns (ResetCIPulseTicksLogicLvlBehaviorResponse);
  rpc ResetCIPulseTicksStartEdge(ResetCIPulseTicksStartEdgeRequest) returns (ResetCIPulseTicksStartEdgeResponse);
  rpc ResetCIPulseTicksTerm(ResetCIPulseTicksTermRequest) returns (ResetCIPulseTicksTermResponse);
  rpc ResetCIPulseTicksTermCfg(ResetCIPulseTicksTermCfgRequest) returns (ResetCIPulseTicksTermCfgResponse);
  rpc ResetCIPulseTimeDigFltrEnable(ResetCIPulseTimeDigFltrEnableRequest) returns (ResetCIPulseTimeDigFltrEnableResponse);
  rpc ResetCIPulseTimeDigFltrMinPulseWidth(ResetCIPulseTimeDigFltrMinPulseWidthRequest) returns (ResetCIPulseTimeDigFltrMinPulseWidthResponse);
  rpc ResetCIPulseTimeDigFltrTimebaseRate(ResetCIPulseTimeDigFltrTimebaseRateRequest) returns (ResetCIPulseTimeDigFltrTimebaseRateResponse);
  rpc ResetCIPulseTimeDigFltrTimebaseSrc(ResetCIPulseTimeDigFltrTimebaseSrcRequest) returns (ResetCIPulseTimeDigFltrTimebaseSrcResponse);
  rpc ResetCIPulseTimeDigSyncEnable(ResetCIPulseTimeDigSyncEnableRequest) returns (ResetCIPulseTimeDigSyncEnableResponse);
  rpc ResetCIPulseTimeLogicLvlBehavior(ResetCIPulseTimeLogicLvlBehaviorRequest) returns (ResetCIPulseTimeLogicLvlBehaviorResponse);
  rpc ResetCIPulseTimeStartEdge(ResetCIPulseTimeStartEdgeRequest) returns (ResetCIPulseTimeStartEdgeResponse);
  rpc ResetCIPulseTimeTerm(ResetCIPulseTimeTermRequest) returns (ResetCIPulseTimeTermResponse);
  rpc ResetCIPulseTimeTermCfg(ResetCIPulseTimeTermCfgRequest) returns (ResetCIPulseTimeTermCfgResponse);
  rpc ResetCIPulseTimeUnits(ResetCIPulseTimeUnitsRequest) returns (ResetCIPulseTimeUnitsResponse);
  rpc ResetCIPulseWidthDigFltrEnable(ResetCIPulseWidthDigFltrEnableRequest) returns (ResetCIPulseWidthDigFltrEnableResponse);
  rpc ResetCIPulseWidthDigFltrMinPulseWidth(ResetCIPulseWidthDigFltrMinPulseWidthRequest) returns (ResetCIPulseWidthDigFltrMinPulseWidthResponse);
  rpc ResetCIPulseWidthDigFltrTimebaseRate(ResetCIPulseWidthDigFltrTimebaseRateRequest) returns (ResetCIPulseWidthDigFltrTimebaseRateResponse);
  rpc ResetCIPulseWidthDigFltrTimebaseSrc(ResetCIPulseWidthDigFltrTimebaseSrcRequest) returns (ResetCIPulseWidthDigFltrTimebaseSrcResponse);
  rpc ResetCIPulseWidthDigSyncEnable(ResetCIPulseWidthDigSyncEnableRequest) returns (ResetCIPulseWidthDigSyncEnableResponse);
  rpc ResetCIPulseWidthLogicLvlBehavior(ResetCIPulseWidthLogicLvlBehaviorRequest) returns (ResetCIPulseWidthLogicLvlBehaviorResponse);
  rpc ResetCIPulseWidthStartingEdge(ResetCIPulseWidthStartingEdgeRequest) returns (ResetCIPulseWidthStartingEdgeResponse);
  rpc ResetCIPulseWidthTerm(ResetCIPulseWidthTermRequest) returns (ResetCIPulseWidthTermResponse);
  rpc ResetCIPulseWidthTermCfg(ResetCIPulseWidthTermCfgRequest) returns (ResetCIPulseWidthTermCfgResponse);
  rpc ResetCIPulseWidthUnits(ResetCIPulseWidthUnitsRequest) returns (ResetCIPulseWidthUnitsResponse);
  rpc ResetCISampClkOverrunBehavior(ResetCISampClkOverrunBehaviorRequest) returns (ResetCISampClkOverrunBehaviorResponse);
  rpc ResetCISampClkOverrunSentinelVal(ResetCISampClkOverrunSentinelValRequest) returns (ResetCISampClkOverrunSentinelValResponse);
  rpc ResetCISemiPeriodDigFltrEnable(ResetCISemiPeriodDigFltrEnableRequest) returns (ResetCISemiPeriodDigFltrEnableResponse);
  rpc ResetCISemiPeriodDigFltrMinPulseWidth(ResetCISemiPeriodDigFltrMinPulseWidthRequest) returns (ResetCISemiPeriodDigFltrMinPulseWidthResponse);
  rpc ResetCISemiPeriodDigFltrTimebaseRate(ResetCISemiPeriodDigFltrTimebaseRateRequest) returns (ResetCISemiPeriodDigFltrTimebaseRateResponse);
  rpc ResetCISemiPeriodDigFltrTimebaseSrc(ResetCISemiPeriodDigFltrTimebaseSrcRequest) returns (ResetCISemiPeriodDigFltrTimebaseSrcResponse);
  rpc ResetCISemiPeriodDigSyncEnable(ResetCISemiPeriodDigSyncEnableRequest) returns (ResetCISemiPeriodDigSyncEnableResponse);
  rpc ResetCISemiPeriodLogicLvlBehavior(ResetCISemiPeriodLogicLvlBehaviorRequest) returns (ResetCISemiPeriodLogicLvlBehaviorResponse);
  rpc ResetCISemiPeriodStartingEdge(ResetCISemiPeriodStartingEdgeRequest) returns (ResetCISemiPeriodStartingEdgeResponse);
  rpc ResetCISemiPeriodTerm(ResetCISemiPeriodTermRequest) returns (ResetCISemiPeriodTermResponse);
  rpc ResetCISemiPeriodTermCfg(ResetCISemiPeriodTermCfgRequest) returns (ResetCISemiPeriodTermCfgResponse);
  rpc ResetCISemiPeriodUnits(ResetCISemiPeriodUnitsRequest) returns (ResetCISemiPeriodUnitsResponse);
  rpc ResetCIThreshVoltage(ResetCIThreshVoltageRequest) returns (ResetCIThreshVoltageResponse);
  rpc ResetCITimestampInitialSeconds(ResetCITimestampInitialSecondsRequest) returns (ResetCITimestampInitialSecondsResponse);
  rpc ResetCITimestampUnits(ResetCITimestampUnitsRequest) returns (ResetCITimestampUnitsResponse);
  rpc ResetCITwoEdgeSepFirstDigFltrEnable(ResetCITwoEdgeSepFirstDigFltrEnableRequest) returns (ResetCITwoEdgeSepFirstDigFltrEnableResponse);
  rpc ResetCITwoEdgeSepFirstDigFltrMinPulseWidth(ResetCITwoEdgeSepFirstDigFltrMinPulseWidthRequest) returns (ResetCITwoEdgeSepFirstDigFltrMinPulseWidthResponse);
  rpc ResetCITwoEdgeSepFirstDigFltrTimebaseRate(ResetCITwoEdgeSepFirstDigFltrTimebaseRateRequest) returns (ResetCITwoEdgeSepFirstDigFltrTimebaseRateResponse);
  rpc ResetCITwoEdgeSepFirstDigFltrTimebaseSrc(ResetCITwoEdgeSepFirstDigFltrTimebaseSrcRequest) returns (ResetCITwoEdgeSepFirstDigFltrTimebaseSrcResponse);
  rpc ResetCITwoEdgeSepFirstDigSyncEnable(ResetCITwoEdgeSepFirstDigSyncEnableRequest) returns (ResetCITwoEdgeSepFirstDigSyncEnableResponse);
  rpc ResetCITwoEdgeSepFirstEdge(ResetCITwoEdgeSepFirstEdgeRequest) returns (ResetCITwoEdgeSepFirstEdgeResponse);
  rpc ResetCITwoEdgeSepFirstLogicLvlBehavior(ResetCITwoEdgeSepFirstLogicLvlBehaviorRequest) returns (ResetCITwoEdgeSepFirstLogicLvlBehaviorResponse);
  rpc ResetCITwoEdgeSepFirstTerm(ResetCITwoEdgeSepFirstTermRequest) returns (ResetCITwoEdgeSepFirstTermResponse);
  rpc ResetCITwoEdgeSepFirstTermCfg(ResetCITwoEdgeSepFirstTermCfgRequest) returns (ResetCITwoEdgeSepFirstTermCfgResponse);
  rpc ResetCITwoEdgeSepSecondDigFltrEnable(ResetCITwoEdgeSepSecondDigFltrEnableRequest) returns (ResetCITwoEdgeSepSecondDigFltrEnableResponse);
  rpc ResetCITwoEdgeSepSecondDigFltrMinPulseWidth(ResetCITwoEdgeSepSecondDigFltrMinPulseWidthRequest) returns (ResetCITwoEdgeSepSecondDigFltrMinPulseWidthResponse);
  rpc ResetCITwoEdgeSepSecondDigFltrTimebaseRate(ResetCITwoEdgeSepSecondDigFltrTimebaseRateRequest) returns (ResetCITwoEdgeSepSecondDigFltrTimebaseRateResponse);
  rpc ResetCITwoEdgeSepSecondDigFltrTimebaseSrc(ResetCITwoEdgeSepSecondDigFltrTimebaseSrcRequest) returns (ResetCITwoEdgeSepSecondDigFltrTimebaseSrcResponse);
  rpc ResetCITwoEdgeSepSecondDigSyncEnable(ResetCITwoEdgeSepSecondDigSyncEnableRequest) returns (ResetCITwoEdgeSepSecondDigSyncEnableResponse);
  rpc ResetCITwoEdgeSepSecondEdge(ResetCITwoEdgeSepSecondEdgeRequest) returns (ResetCITwoEdgeSepSecondEdgeResponse);
  rpc ResetCITwoEdgeSepSecondLogicLvlBehavior(ResetCITwoEdgeSepSecondLogicLvlBehaviorRequest) returns (ResetCITwoEdgeSepSecondLogicLvlBehaviorResponse);
  rpc ResetCITwoEdgeSepSecondTerm(ResetCITwoEdgeSepSecondTermRequest) returns (ResetCITwoEdgeSepSecondTermResponse);
  rpc ResetCITwoEdgeSepSecondTermCfg(ResetCITwoEdgeSepSecondTermCfgRequest) returns (ResetCITwoEdgeSepSecondTermCfgResponse);
  rpc ResetCITwoEdgeSepUnits(ResetCITwoEdgeSepUnitsRequest) returns (ResetCITwoEdgeSepUnitsResponse);
  rpc ResetCIUsbXferReqCount(ResetCIUsbXferReqCountRequest) returns (ResetCIUsbXferReqCountResponse);
  rpc ResetCIUsbXferReqSize(ResetCIUsbXferReqSizeRequest) returns (ResetCIUsbXferReqSizeResponse);
  rpc ResetCIVelocityAngEncoderPulsesPerRev(ResetCIVelocityAngEncoderPulsesPerRevRequest) returns (ResetCIVelocityAngEncoderPulsesPerRevResponse);
  rpc ResetCIVelocityAngEncoderUnits(ResetCIVelocityAngEncoderUnitsRequest) returns (ResetCIVelocityAngEncoderUnitsResponse);
  rpc ResetCIVelocityDiv(ResetCIVelocityDivRequest) returns (ResetCIVelocityDivResponse);
  rpc ResetCIVelocityEncoderAInputDigFltrEnable(ResetCIVelocityEncoderAInputDigFltrEnableRequest) returns (ResetCIVelocityEncoderAInputDigFltrEnableResponse);
  rpc ResetCIVelocityEncoderAInputDigFltrMinPulseWidth(ResetCIVelocityEncoderAInputDigFltrMinPulseWidthRequest) returns (ResetCIVelocityEncoderAInputDigFltrMinPulseWidthResponse);
  rpc ResetCIVelocityEncoderAInputDigFltrTimebaseRate(ResetCIVelocityEncoderAInputDigFltrTimebaseRateRequest) returns (ResetCIVelocityEncoderAInputDigFltrTimebaseRateResponse);
  rpc ResetCIVelocityEncoderAInputDigFltrTimebaseSrc(ResetCIVelocityEncoderAInputDigFltrTimebaseSrcRequest) returns (ResetCIVelocityEncoderAInputDigFltrTimebaseSrcResponse);
  rpc ResetCIVelocityEncoderAInputLogicLvlBehavior(ResetCIVelocityEncoderAInputLogicLvlBehaviorRequest) returns (ResetCIVelocityEncoderAInputLogicLvlBehaviorResponse);
  rpc ResetCIVelocityEncoderAInputTerm(ResetCIVelocityEncoderAInputTermRequest) returns (ResetCIVelocityEncoderAInputTermResponse);
  rpc ResetCIVelocityEncoderAInputTermCfg(ResetCIVelocityEncoderAInputTermCfgRequest) returns (ResetCIVelocityEncoderAInputTermCfgResponse);
  rpc ResetCIVelocityEncoderBInputDigFltrEnable(ResetCIVelocityEncoderBInputDigFltrEnableRequest) returns (ResetCIVelocityEncoderBInputDigFltrEnableResponse);
  rpc ResetCIVelocityEncoderBInputDigFltrMinPulseWidth(ResetCIVelocityEncoderBInputDigFltrMinPulseWidthRequest) returns (ResetCIVelocityEncoderBInputDigFltrMinPulseWidthResponse);
  rpc ResetCIVelocityEncoderBInputDigFltrTimebaseRate(ResetCIVelocityEncoderBInputDigFltrTimebaseRateRequest) returns (ResetCIVelocityEncoderBInputDigFltrTimebaseRateResponse);
  rpc ResetCIVelocityEncoderBInputDigFltrTimebaseSrc(ResetCIVelocityEncoderBInputDigFltrTimebaseSrcRequest) returns (ResetCIVelocityEncoderBInputDigFltrTimebaseSrcResponse);
  rpc ResetCIVelocityEncoderBInputLogicLvlBehavior(ResetCIVelocityEncoderBInputLogicLvlBehaviorRequest) returns (ResetCIVelocityEncoderBInputLogicLvlBehaviorResponse);
  rpc ResetCIVelocityEncoderBInputTerm(ResetCIVelocityEncoderBInputTermRequest) returns (ResetCIVelocityEncoderBInputTermResponse);
  rpc ResetCIVelocityEncoderBInputTermCfg(ResetCIVelocityEncoderBInputTermCfgRequest) returns (ResetCIVelocityEncoderBInputTermCfgResponse);
  rpc ResetCIVelocityEncoderDecodingType(ResetCIVelocityEncoderDecodingTypeRequest) returns (ResetCIVelocityEncoderDecodingTypeResponse);
  rpc ResetCIVelocityLinEncoderDistPerPulse(ResetCIVelocityLinEncoderDistPerPulseRequest) returns (ResetCIVelocityLinEncoderDistPerPulseResponse);
  rpc ResetCIVelocityLinEncoderUnits(ResetCIVelocityLinEncoderUnitsRequest) returns (ResetCIVelocityLinEncoderUnitsResponse);
  rpc ResetCIVelocityMeasTime(ResetCIVelocityMeasTimeRequest) returns (ResetCIVelocityMeasTimeResponse);
  rpc ResetCOAutoIncrCnt(ResetCOAutoIncrCntRequest) returns (ResetCOAutoIncrCntResponse);
  rpc ResetCOConstrainedGenMode(ResetCOConstrainedGenModeRequest) returns (ResetCOConstrainedGenModeResponse);
  rpc ResetCOCtrTimebaseActiveEdge(ResetCOCtrTimebaseActiveEdgeRequest) returns (ResetCOCtrTimebaseActiveEdgeResponse);
  rpc ResetCOCtrTimebaseDigFltrEnable(ResetCOCtrTimebaseDigFltrEnableRequest) returns (ResetCOCtrTimebaseDigFltrEnableResponse);
  rpc ResetCOCtrTimebaseDigFltrMinPulseWidth(ResetCOCtrTimebaseDigFltrMinPulseWidthRequest) returns (ResetCOCtrTimebaseDigFltrMinPulseWidthResponse);
  rpc ResetCOCtrTimebaseDigFltrTimebaseRate(ResetCOCtrTimebaseDigFltrTimebaseRateRequest) returns (ResetCOCtrTimebaseDigFltrTimebaseRateResponse);
  rpc ResetCOCtrTimebaseDigFltrTimebaseSrc(ResetCOCtrTimebaseDigFltrTimebaseSrcRequest) returns (ResetCOCtrTimebaseDigFltrTimebaseSrcResponse);
  rpc ResetCOCtrTimebaseDigSyncEnable(ResetCOCtrTimebaseDigSyncEnableRequest) returns (ResetCOCtrTimebaseDigSyncEnableResponse);
  rpc ResetCOCtrTimebaseMasterTimebaseDiv(ResetCOCtrTimebaseMasterTimebaseDivRequest) returns (ResetCOCtrTimebaseMasterTimebaseDivResponse);
  rpc ResetCOCtrTimebaseRate(ResetCOCtrTimebaseRateRequest) returns (ResetCOCtrTimebaseRateResponse);
  rpc ResetCOCtrTimebaseSrc(ResetCOCtrTimebaseSrcRequest) returns (ResetCOCtrTimebaseSrcResponse);
  rpc ResetCODataXferMech(ResetCODataXferMechRequest) returns (ResetCODataXferMechResponse);
  rpc ResetCODataXferReqCond(ResetCODataXferReqCondRequest) returns (ResetCODataXferReqCondResponse);
  rpc ResetCOEnableInitialDelayOnRetrigger(ResetCOEnableInitialDelayOnRetriggerRequest) returns (ResetCOEnableInitialDelayOnRetriggerResponse);
  rpc ResetCOMemMapEnable(ResetCOMemMapEnableRequest) returns (ResetCOMemMapEnableResponse);
  rpc ResetCOPrescaler(ResetCOPrescalerRequest) returns (ResetCOPrescalerResponse);
  rpc ResetCOPulseDutyCyc(ResetCOPulseDutyCycRequest) returns (ResetCOPulseDutyCycResponse);
  rpc ResetCOPulseFreq(ResetCOPulseFreqRequest) returns (ResetCOPulseFreqResponse);
  rpc ResetCOPulseFreqInitialDelay(ResetCOPulseFreqInitialDelayRequest) returns (ResetCOPulseFreqInitialDelayResponse);
  rpc ResetCOPulseFreqUnits(ResetCOPulseFreqUnitsRequest) returns (ResetCOPulseFreqUnitsResponse);
  rpc ResetCOPulseHighTicks(ResetCOPulseHighTicksRequest) returns (ResetCOPulseHighTicksResponse);
  rpc ResetCOPulseHighTime(ResetCOPulseHighTimeRequest) returns (ResetCOPulseHighTimeResponse);
  rpc ResetCOPulseIdleState(ResetCOPulseIdleStateRequest) returns (ResetCOPulseIdleStateResponse);
  rpc ResetCOPulseLowTicks(ResetCOPulseLowTicksRequest) returns (ResetCOPulseLowTicksResponse);
  rpc ResetCOPulseLowTime(ResetCOPulseLowTimeRequest) returns (ResetCOPulseLowTimeResponse);
  rpc ResetCOPulseTerm(ResetCOPulseTermRequest) returns (ResetCOPulseTermResponse);
  rpc ResetCOPulseTicksInitialDelay(ResetCOPulseTicksInitialDelayRequest) returns (ResetCOPulseTicksInitialDelayResponse);
  rpc ResetCOPulseTimeInitialDelay(ResetCOPulseTimeInitialDelayRequest) returns (ResetCOPulseTimeInitialDelayResponse);
  rpc ResetCOPulseTimeUnits(ResetCOPulseTimeUnitsRequest) returns (ResetCOPulseTimeUnitsResponse);
  rpc ResetCOUsbXferReqCount(ResetCOUsbXferReqCountRequest) returns (ResetCOUsbXferReqCountResponse);
  rpc ResetCOUsbXferReqSize(ResetCOUsbXferReqSizeRequest) returns (ResetCOUsbXferReqSizeResponse);
  rpc ResetCOUseOnlyOnBrdMem(ResetCOUseOnlyOnBrdMemRequest) returns (ResetCOUseOnlyOnBrdMemResponse);
  rpc ResetChanDescr(ResetChanDescrRequest) returns (ResetChanDescrResponse);
  rpc ResetChanSyncUnlockBehavior(ResetChanSyncUnlockBehaviorRequest) returns (ResetChanSyncUnlockBehaviorResponse);
  rpc ResetDIAcquireOn(ResetDIAcquireOnRequest) returns (ResetDIAcquireOnResponse);
  rpc ResetDIDataXferMech(ResetDIDataXferMechRequest) returns (ResetDIDataXferMechResponse);
  rpc ResetDIDataXferReqCond(ResetDIDataXferReqCondRequest) returns (ResetDIDataXferReqCondResponse);
  rpc ResetDIDigFltrEnable(ResetDIDigFltrEnableRequest) returns (ResetDIDigFltrEnableResponse);
  rpc ResetDIDigFltrEnableBusMode(ResetDIDigFltrEnableBusModeRequest) returns (ResetDIDigFltrEnableBusModeResponse);
  rpc ResetDIDigFltrMinPulseWidth(ResetDIDigFltrMinPulseWidthRequest) returns (ResetDIDigFltrMinPulseWidthResponse);
  rpc ResetDIDigFltrTimebaseRate(ResetDIDigFltrTimebaseRateRequest) returns (ResetDIDigFltrTimebaseRateResponse);
  rpc ResetDIDigFltrTimebaseSrc(ResetDIDigFltrTimebaseSrcRequest) returns (ResetDIDigFltrTimebaseSrcResponse);
  rpc ResetDIDigSyncEnable(ResetDIDigSyncEnableRequest) returns (ResetDIDigSyncEnableResponse);
  rpc ResetDIInvertLines(ResetDIInvertLinesRequest) returns (ResetDIInvertLinesResponse);
  rpc ResetDILogicFamily(ResetDILogicFamilyRequest) returns (ResetDILogicFamilyResponse);
  rpc ResetDIMemMapEnable(ResetDIMemMapEnableRequest) returns (ResetDIMemMapEnableResponse);
  rpc ResetDITristate(ResetDITristateRequest) returns (ResetDITristateResponse);
  rpc ResetDIUsbXferReqCount(ResetDIUsbXferReqCountRequest) returns (ResetDIUsbXferReqCountResponse);
  rpc ResetDIUsbXferReqSize(ResetDIUsbXferReqSizeRequest) returns (ResetDIUsbXferReqSizeResponse);
  rpc ResetDODataXferMech(ResetDODataXferMechRequest) returns (ResetDODataXferMechResponse);
  rpc ResetDODataXferReqCond(ResetDODataXferReqCondRequest) returns (ResetDODataXferReqCondResponse);
  rpc ResetDOGenerateOn(ResetDOGenerateOnRequest) returns (ResetDOGenerateOnResponse);
  rpc ResetDOInvertLines(ResetDOInvertLinesRequest) returns (ResetDOInvertLinesResponse);
  rpc ResetDOLineStatesDoneState(ResetDOLineStatesDoneStateRequest) returns (ResetDOLineStatesDoneStateResponse);
  rpc ResetDOLineStatesPausedState(ResetDOLineStatesPausedStateRequest) returns (ResetDOLineStatesPausedStateResponse);
  rpc ResetDOLineStatesStartState(ResetDOLineStatesStartStateRequest) returns (ResetDOLineStatesStartStateResponse);
  rpc ResetDOLogicFamily(ResetDOLogicFamilyRequest) returns (ResetDOLogicFamilyResponse);
  rpc ResetDOMemMapEnable(ResetDOMemMapEnableRequest) returns (ResetDOMemMapEnableResponse);
  rpc ResetDOOutputDriveType(ResetDOOutputDriveTypeRequest) returns (ResetDOOutputDriveTypeResponse);
  rpc ResetDOOvercurrentAutoReenable(ResetDOOvercurrentAutoReenableRequest) returns (ResetDOOvercurrentAutoReenableResponse);
  rpc ResetDOOvercurrentLimit(ResetDOOvercurrentLimitRequest) returns (ResetDOOvercurrentLimitResponse);
  rpc ResetDOOvercurrentReenablePeriod(ResetDOOvercurrentReenablePeriodRequest) returns (ResetDOOvercurrentReenablePeriodResponse);
  rpc ResetDOTristate(ResetDOTristateRequest) returns (ResetDOTristateResponse);
  rpc ResetDOUsbXferReqCount(ResetDOUsbXferReqCountRequest) returns (ResetDOUsbXferReqCountResponse);
  rpc ResetDOUsbXferReqSize(ResetDOUsbXferReqSizeRequest) returns (ResetDOUsbXferReqSizeResponse);
  rpc ResetDOUseOnlyOnBrdMem(ResetDOUseOnlyOnBrdMemRequest) returns (ResetDOUseOnlyOnBrdMemResponse);
  rpc ResetDevice(ResetDeviceRequest) returns (ResetDeviceResponse);
  rpc SaveGlobalChan(SaveGlobalChanRequest) returns (SaveGlobalChanResponse);
  rpc SaveScale(SaveScaleRequest) returns (SaveScaleResponse);
  rpc SaveTask(SaveTaskRequest) returns (SaveTaskResponse);
  rpc SelfCal(SelfCalRequest) returns (SelfCalResponse);
  rpc SelfTestDevice(SelfTestDeviceRequest) returns (SelfTestDeviceResponse);
  rpc SetAIACExcitFreq(SetAIACExcitFreqRequest) returns (SetAIACExcitFreqResponse);
  rpc SetAIACExcitSyncEnable(SetAIACExcitSyncEnableRequest) returns (SetAIACExcitSyncEnableResponse);
  rpc SetAIACExcitWireMode(SetAIACExcitWireModeRequest) returns (SetAIACExcitWireModeResponse);
  rpc SetAIADCCustomTimingMode(SetAIADCCustomTimingModeRequest) returns (SetAIADCCustomTimingModeResponse);
  rpc SetAIADCTimingMode(SetAIADCTimingModeRequest) returns (SetAIADCTimingModeResponse);
  rpc SetAIAccel4WireDCVoltageSensitivity(SetAIAccel4WireDCVoltageSensitivityRequest) returns (SetAIAccel4WireDCVoltageSensitivityResponse);
  rpc SetAIAccel4WireDCVoltageSensitivityUnits(SetAIAccel4WireDCVoltageSensitivityUnitsRequest) returns (SetAIAccel4WireDCVoltageSensitivityUnitsResponse);
  rpc SetAIAccelChargeSensitivity(SetAIAccelChargeSensitivityRequest) returns (SetAIAccelChargeSensitivityResponse);
  rpc SetAIAccelChargeSensitivityUnits(SetAIAccelChargeSensitivityUnitsRequest) returns (SetAIAccelChargeSensitivityUnitsResponse);
  rpc SetAIAccelSensitivity(SetAIAccelSensitivityRequest) returns (SetAIAccelSensitivityResponse);
  rpc SetAIAccelSensitivityUnits(SetAIAccelSensitivityUnitsRequest) returns (SetAIAccelSensitivityUnitsResponse);
  rpc SetAIAccelUnits(SetAIAccelUnitsRequest) returns (SetAIAccelUnitsResponse);
  rpc SetAIAcceldBRef(SetAIAcceldBRefRequest) returns (SetAIAcceldBRefResponse);
  rpc SetAIAtten(SetAIAttenRequest) returns (SetAIAttenResponse);
  rpc SetAIAutoZeroMode(SetAIAutoZeroModeRequest) returns (SetAIAutoZeroModeResponse);
  rpc SetAIAveragingWinSize(SetAIAveragingWinSizeRequest) returns (SetAIAveragingWinSizeResponse);
  rpc SetAIBridgeBalanceCoarsePot(SetAIBridgeBalanceCoarsePotRequest) returns (SetAIBridgeBalanceCoarsePotResponse);
  rpc SetAIBridgeBalanceFinePot(SetAIBridgeBalanceFinePotRequest) returns (SetAIBridgeBalanceFinePotResponse);
  rpc SetAIBridgeCfg(SetAIBridgeCfgRequest) returns (SetAIBridgeCfgResponse);
  rpc SetAIBridgeElectricalUnits(SetAIBridgeElectricalUnitsRequest) returns (SetAIBridgeElectricalUnitsResponse);
  rpc SetAIBridgeInitialRatio(SetAIBridgeInitialRatioRequest) returns (SetAIBridgeInitialRatioResponse);
  rpc SetAIBridgeInitialVoltage(SetAIBridgeInitialVoltageRequest) returns (SetAIBridgeInitialVoltageResponse);
  rpc SetAIBridgeNomResistance(SetAIBridgeNomResistanceRequest) returns (SetAIBridgeNomResistanceResponse);
  rpc SetAIBridgePhysicalUnits(SetAIBridgePhysicalUnitsRequest) returns (SetAIBridgePhysicalUnitsResponse);
  rpc SetAIBridgePolyForwardCoeff(SetAIBridgePolyForwardCoeffRequest) returns (SetAIBridgePolyForwardCoeffResponse);
  rpc SetAIBridgePolyReverseCoeff(SetAIBridgePolyReverseCoeffRequest) returns (SetAIBridgePolyReverseCoeffResponse);
  rpc SetAIBridgeScaleType(SetAIBridgeScaleTypeRequest) returns (SetAIBridgeScaleTypeResponse);
  rpc SetAIBridgeShuntCalEnable(SetAIBridgeShuntCalEnableRequest) returns (SetAIBridgeShuntCalEnableResponse);
  rpc SetAIBridgeShuntCalGainAdjust(SetAIBridgeShuntCalGainAdjustRequest) returns (SetAIBridgeShuntCalGainAdjustResponse);
  rpc SetAIBridgeShuntCalSelect(SetAIBridgeShuntCalSelectRequest) returns (SetAIBridgeShuntCalSelectResponse);
  rpc SetAIBridgeShuntCalShuntCalAActualResistance(SetAIBridgeShuntCalShuntCalAActualResistanceRequest) returns (SetAIBridgeShuntCalShuntCalAActualResistanceResponse);
  rpc SetAIBridgeShuntCalShuntCalAResistance(SetAIBridgeShuntCalShuntCalAResistanceRequest) returns (SetAIBridgeShuntCalShuntCalAResistanceResponse);
  rpc SetAIBridgeShuntCalShuntCalASrc(SetAIBridgeShuntCalShuntCalASrcRequest) returns (SetAIBridgeShuntCalShuntCalASrcResponse);
  rpc SetAIBridgeShuntCalShuntCalBActualResistance(SetAIBridgeShuntCalShuntCalBActualResistanceRequest) returns (SetAIBridgeShuntCalShuntCalBActualResistanceResponse);
  rpc SetAIBridgeShuntCalShuntCalBResistance(SetAIBridgeShuntCalShuntCalBResistanceRequest) returns (SetAIBridgeShuntCalShuntCalBResistanceResponse);
  rpc SetAIBridgeTableElectricalVals(SetAIBridgeTableElectricalValsRequest) returns (SetAIBridgeTableElectricalValsResponse);
  rpc SetAIBridgeTablePhysicalVals(SetAIBridgeTablePhysicalValsRequest) returns (SetAIBridgeTablePhysicalValsResponse);
  rpc SetAIBridgeTwoPointLinFirstElectricalVal(SetAIBridgeTwoPointLinFirstElectricalValRequest) returns (SetAIBridgeTwoPointLinFirstElectricalValResponse);
  rpc SetAIBridgeTwoPointLinFirstPhysicalVal(SetAIBridgeTwoPointLinFirstPhysicalValRequest) returns (SetAIBridgeTwoPointLinFirstPhysicalValResponse);
  rpc SetAIBridgeTwoPointLinSecondElectricalVal(SetAIBridgeTwoPointLinSecondElectricalValRequest) returns (SetAIBridgeTwoPointLinSecondElectricalValResponse);
  rpc SetAIBridgeTwoPointLinSecondPhysicalVal(SetAIBridgeTwoPointLinSecondPhysicalValRequest) returns (SetAIBridgeTwoPointLinSecondPhysicalValResponse);
  rpc SetAIBridgeUnits(SetAIBridgeUnitsRequest) returns (SetAIBridgeUnitsResponse);
  rpc SetAIChanCalApplyCalIfExp(SetAIChanCalApplyCalIfExpRequest) returns (SetAIChanCalApplyCalIfExpResponse);
  rpc SetAIChanCalCalDate(SetAIChanCalCalDateRequest) returns (SetAIChanCalCalDateResponse);
  rpc SetAIChanCalDesc(SetAIChanCalDescRequest) returns (SetAIChanCalDescResponse);
  rpc SetAIChanCalEnableCal(SetAIChanCalEnableCalRequest) returns (SetAIChanCalEnableCalResponse);
  rpc SetAIChanCalExpDate(SetAIChanCalExpDateRequest) returns (SetAIChanCalExpDateResponse);
  rpc SetAIChanCalOperatorName(SetAIChanCalOperatorNameRequest) returns (SetAIChanCalOperatorNameResponse);
  rpc SetAIChanCalPolyForwardCoeff(SetAIChanCalPolyForwardCoeffRequest) returns (SetAIChanCalPolyForwardCoeffResponse);
  rpc SetAIChanCalPolyReverseCoeff(SetAIChanCalPolyReverseCoeffRequest) returns (SetAIChanCalPolyReverseCoeffResponse);
  rpc SetAIChanCalScaleType(SetAIChanCalScaleTypeRequest) returns (SetAIChanCalScaleTypeResponse);
  rpc SetAIChanCalTablePreScaledVals(SetAIChanCalTablePreScaledValsRequest) returns (SetAIChanCalTablePreScaledValsResponse);
  rpc SetAIChanCalTableScaledVals(SetAIChanCalTableScaledValsRequest) returns (SetAIChanCalTableScaledValsResponse);
  rpc SetAIChanCalVerifAcqVals(SetAIChanCalVerifAcqValsRequest) returns (SetAIChanCalVerifAcqValsResponse);
  rpc SetAIChanCalVerifRefVals(SetAIChanCalVerifRefValsRequest) returns (SetAIChanCalVerifRefValsResponse);
  rpc SetAIChargeUnits(SetAIChargeUnitsRequest) returns (SetAIChargeUnitsResponse);
  rpc SetAIChopEnable(SetAIChopEnableRequest) returns (SetAIChopEnableResponse);
  rpc SetAICoupling(SetAICouplingRequest) returns (SetAICouplingResponse);
  rpc SetAICurrentACRMSUnits(SetAICurrentACRMSUnitsRequest) returns (SetAICurrentACRMSUnitsResponse);
  rpc SetAICurrentShuntLoc(SetAICurrentShuntLocRequest) returns (SetAICurrentShuntLocResponse);
  rpc SetAICurrentShuntResistance(SetAICurrentShuntResistanceRequest) returns (SetAICurrentShuntResistanceResponse);
  rpc SetAICurrentUnits(SetAICurrentUnitsRequest) returns (SetAICurrentUnitsResponse);
  rpc SetAICustomScaleName(SetAICustomScaleNameRequest) returns (SetAICustomScaleNameResponse);
  rpc SetAIDCOffset(SetAIDCOffsetRequest) returns (SetAIDCOffsetResponse);
  rpc SetAIDataXferCustomThreshold(SetAIDataXferCustomThresholdRequest) returns (SetAIDataXferCustomThresholdResponse);
  rpc SetAIDataXferMaxRate(SetAIDataXferMaxRateRequest) returns (SetAIDataXferMaxRateResponse);
  rpc SetAIDataXferMech(SetAIDataXferMechRequest) returns (SetAIDataXferMechResponse);
  rpc SetAIDataXferReqCond(SetAIDataXferReqCondRequest) returns (SetAIDataXferReqCondResponse);
  rpc SetAIDigFltrBandpassCenterFreq(SetAIDigFltrBandpassCenterFreqRequest) returns (SetAIDigFltrBandpassCenterFreqResponse);
  rpc SetAIDigFltrBandpassWidth(SetAIDigFltrBandpassWidthRequest) returns (SetAIDigFltrBandpassWidthResponse);
  rpc SetAIDigFltrCoeff(SetAIDigFltrCoeffRequest) returns (SetAIDigFltrCoeffResponse);
  rpc SetAIDigFltrEnable(SetAIDigFltrEnableRequest) returns (SetAIDigFltrEnableResponse);
  rpc SetAIDigFltrHighpassCutoffFreq(SetAIDigFltrHighpassCutoffFreqRequest) returns (SetAIDigFltrHighpassCutoffFreqResponse);
  rpc SetAIDigFltrLowpassCutoffFreq(SetAIDigFltrLowpassCutoffFreqRequest) returns (SetAIDigFltrLowpassCutoffFreqResponse);
  rpc SetAIDigFltrNotchCenterFreq(SetAIDigFltrNotchCenterFreqRequest) returns (SetAIDigFltrNotchCenterFreqResponse);
  rpc SetAIDigFltrNotchWidth(SetAIDigFltrNotchWidthRequest) returns (SetAIDigFltrNotchWidthResponse);
  rpc SetAIDigFltrOrder(SetAIDigFltrOrderRequest) returns (SetAIDigFltrOrderResponse);
  rpc SetAIDigFltrResponse(SetAIDigFltrResponseRequest) returns (SetAIDigFltrResponseResponse);
  rpc SetAIDigFltrType(SetAIDigFltrTypeRequest) returns (SetAIDigFltrTypeResponse);
  rpc SetAIDitherEnable(SetAIDitherEnableRequest) returns (SetAIDitherEnableResponse);
  rpc SetAIEddyCurrentProxProbeSensitivity(SetAIEddyCurrentProxProbeSensitivityRequest) returns (SetAIEddyCurrentProxProbeSensitivityResponse);
  rpc SetAIEddyCurrentProxProbeSensitivityUnits(SetAIEddyCurrentProxProbeSensitivityUnitsRequest) returns (SetAIEddyCurrentProxProbeSensitivityUnitsResponse);
  rpc SetAIEddyCurrentProxProbeUnits(SetAIEddyCurrentProxProbeUnitsRequest) returns (SetAIEddyCurrentProxProbeUnitsResponse);
  rpc SetAIEnhancedAliasRejectionEnable(SetAIEnhancedAliasRejectionEnableRequest) returns (SetAIEnhancedAliasRejectionEnableResponse);
  rpc SetAIExcitActualVal(SetAIExcitActualValRequest) returns (SetAIExcitActualValResponse);
  rpc SetAIExcitDCorAC(SetAIExcitDCorACRequest) returns (SetAIExcitDCorACResponse);
  rpc SetAIExcitIdleOutputBehavior(SetAIExcitIdleOutputBehaviorRequest) returns (SetAIExcitIdleOutputBehaviorResponse);
  rpc SetAIExcitSense(SetAIExcitSenseRequest) returns (SetAIExcitSenseResponse);
  rpc SetAIExcitSrc(SetAIExcitSrcRequest) returns (SetAIExcitSrcResponse);
  rpc SetAIExcitUseForScaling(SetAIExcitUseForScalingRequest) returns (SetAIExcitUseForScalingResponse);
  rpc SetAIExcitUseMultiplexed(SetAIExcitUseMultiplexedRequest) returns (SetAIExcitUseMultiplexedResponse);
  rpc SetAIExcitVal(SetAIExcitValRequest) returns (SetAIExcitValResponse);
  rpc SetAIExcitVoltageOrCurrent(SetAIExcitVoltageOrCurrentRequest) returns (SetAIExcitVoltageOrCurrentResponse);
  rpc SetAIFilterDelayAdjustment(SetAIFilterDelayAdjustmentRequest) returns (SetAIFilterDelayAdjustmentResponse);
  rpc SetAIFilterDelayUnits(SetAIFilterDelayUnitsRequest) returns (SetAIFilterDelayUnitsResponse);
  rpc SetAIFilterEnable(SetAIFilterEnableRequest) returns (SetAIFilterEnableResponse);
  rpc SetAIFilterFreq(SetAIFilterFreqRequest) returns (SetAIFilterFreqResponse);
  rpc SetAIFilterOrder(SetAIFilterOrderRequest) returns (SetAIFilterOrderResponse);
  rpc SetAIFilterResponse(SetAIFilterResponseRequest) returns (SetAIFilterResponseResponse);
  rpc SetAIForceIEPESensorSensitivity(SetAIForceIEPESensorSensitivityRequest) returns (SetAIForceIEPESensorSensitivityResponse);
  rpc SetAIForceIEPESensorSensitivityUnits(SetAIForceIEPESensorSensitivityUnitsRequest) returns (SetAIForceIEPESensorSensitivityUnitsResponse);
  rpc SetAIForceReadFromChan(SetAIForceReadFromChanRequest) returns (SetAIForceReadFromChanResponse);
  rpc SetAIForceUnits(SetAIForceUnitsRequest) returns (SetAIForceUnitsResponse);
  rpc SetAIFreqHyst(SetAIFreqHystRequest) returns (SetAIFreqHystResponse);
  rpc SetAIFreqThreshVoltage(SetAIFreqThreshVoltageRequest) returns (SetAIFreqThreshVoltageResponse);
  rpc SetAIFreqUnits(SetAIFreqUnitsRequest) returns (SetAIFreqUnitsResponse);
  rpc SetAIGain(SetAIGainRequest) returns (SetAIGainResponse);
  rpc SetAIInputLimitsFaultDetectEnable(SetAIInputLimitsFaultDetectEnableRequest) returns (SetAIInputLimitsFaultDetectEnableResponse);
  rpc SetAIInputLimitsFaultDetectLowerLimit(SetAIInputLimitsFaultDetectLowerLimitRequest) returns (SetAIInputLimitsFaultDetectLowerLimitResponse);
  rpc SetAIInputLimitsFaultDetectUpperLimit(SetAIInputLimitsFaultDetectUpperLimitRequest) returns (SetAIInputLimitsFaultDetectUpperLimitResponse);
  rpc SetAIInputSrc(SetAIInputSrcRequest) returns (SetAIInputSrcResponse);
  rpc SetAILVDTSensitivity(SetAILVDTSensitivityRequest) returns (SetAILVDTSensitivityResponse);
  rpc SetAILVDTSensitivityUnits(SetAILVDTSensitivityUnitsRequest) returns (SetAILVDTSensitivityUnitsResponse);
  rpc SetAILVDTUnits(SetAILVDTUnitsRequest) returns (SetAILVDTUnitsResponse);
  rpc SetAILeadWireResistance(SetAILeadWireResistanceRequest) returns (SetAILeadWireResistanceResponse);
  rpc SetAILossyLSBRemovalCompressedSampSize(SetAILossyLSBRemovalCompressedSampSizeRequest) returns (SetAILossyLSBRemovalCompressedSampSizeResponse);
  rpc SetAILowpassCutoffFreq(SetAILowpassCutoffFreqRequest) returns (SetAILowpassCutoffFreqResponse);
  rpc SetAILowpassEnable(SetAILowpassEnableRequest) returns (SetAILowpassEnableResponse);
  rpc SetAILowpassSwitchCapClkSrc(SetAILowpassSwitchCapClkSrcRequest) returns (SetAILowpassSwitchCapClkSrcResponse);
  rpc SetAILowpassSwitchCapExtClkDiv(SetAILowpassSwitchCapExtClkDivRequest) returns (SetAILowpassSwitchCapExtClkDivResponse);
  rpc SetAILowpassSwitchCapExtClkFreq(SetAILowpassSwitchCapExtClkFreqRequest) returns (SetAILowpassSwitchCapExtClkFreqResponse);
  rpc SetAILowpassSwitchCapOutClkDiv(SetAILowpassSwitchCapOutClkDivRequest) returns (SetAILowpassSwitchCapOutClkDivResponse);
  rpc SetAIMax(SetAIMaxRequest) returns (SetAIMaxResponse);
  rpc SetAIMemMapEnable(SetAIMemMapEnableRequest) returns (SetAIMemMapEnableResponse);
  rpc SetAIMicrophoneSensitivity(SetAIMicrophoneSensitivityRequest) returns (SetAIMicrophoneSensitivityResponse);
  rpc SetAIMin(SetAIMinRequest) returns (SetAIMinResponse);
  rpc SetAIOpenChanDetectEnable(SetAIOpenChanDetectEnableRequest) returns (SetAIOpenChanDetectEnableResponse);
  rpc SetAIOpenThrmcplDetectEnable(SetAIOpenThrmcplDetectEnableRequest) returns (SetAIOpenThrmcplDetectEnableResponse);
  rpc SetAIOvercurrentDetectEnable(SetAIOvercurrentDetectEnableRequest) returns (SetAIOvercurrentDetectEnableResponse);
  rpc SetAIPowerSupplyFaultDetectEnable(SetAIPowerSupplyFaultDetectEnableRequest) returns (SetAIPowerSupplyFaultDetectEnableResponse);
  rpc SetAIPressureUnits(SetAIPressureUnitsRequest) returns (SetAIPressureUnitsResponse);
  rpc SetAIProbeAtten(SetAIProbeAttenRequest) returns (SetAIProbeAttenResponse);
  rpc SetAIRTDA(SetAIRTDARequest) returns (SetAIRTDAResponse);
  rpc SetAIRTDB(SetAIRTDBRequest) returns (SetAIRTDBResponse);
  rpc SetAIRTDC(SetAIRTDCRequest) returns (SetAIRTDCResponse);
  rpc SetAIRTDR0(SetAIRTDR0Request) returns (SetAIRTDR0Response);
  rpc SetAIRTDType(SetAIRTDTypeRequest) returns (SetAIRTDTypeResponse);
  rpc SetAIRVDTSensitivity(SetAIRVDTSensitivityRequest) returns (SetAIRVDTSensitivityResponse);
  rpc SetAIRVDTSensitivityUnits(SetAIRVDTSensitivityUnitsRequest) returns (SetAIRVDTSensitivityUnitsResponse);
  rpc SetAIRVDTUnits(SetAIRVDTUnitsRequest) returns (SetAIRVDTUnitsResponse);
  rpc SetAIRawDataCompressionType(SetAIRawDataCompressionTypeRequest) returns (SetAIRawDataCompressionTypeResponse);
  rpc SetAIRemoveFilterDelay(SetAIRemoveFilterDelayRequest) returns (SetAIRemoveFilterDelayResponse);
  rpc SetAIResistanceCfg(SetAIResistanceCfgRequest) returns (SetAIResistanceCfgResponse);
  rpc SetAIResistanceUnits(SetAIResistanceUnitsRequest) returns (SetAIResistanceUnitsResponse);
  rpc SetAIRngHigh(SetAIRngHighRequest) returns (SetAIRngHighResponse);
  rpc SetAIRngLow(SetAIRngLowRequest) returns (SetAIRngLowResponse);
  rpc SetAIRosetteStrainGageOrientation(SetAIRosetteStrainGageOrientationRequest) returns (SetAIRosetteStrainGageOrientationResponse);
  rpc SetAIRosetteStrainGageRosetteMeasType(SetAIRosetteStrainGageRosetteMeasTypeRequest) returns (SetAIRosetteStrainGageRosetteMeasTypeResponse);
  rpc SetAISampAndHoldEnable(SetAISampAndHoldEnableRequest) returns (SetAISampAndHoldEnableResponse);
  rpc SetAISensorPowerCfg(SetAISensorPowerCfgRequest) returns (SetAISensorPowerCfgResponse);
  rpc SetAISensorPowerType(SetAISensorPowerTypeRequest) returns (SetAISensorPowerTypeResponse);
  rpc SetAISensorPowerVoltage(SetAISensorPowerVoltageRequest) returns (SetAISensorPowerVoltageResponse);
  rpc SetAISoundPressureMaxSoundPressureLvl(SetAISoundPressureMaxSoundPressureLvlRequest) returns (SetAISoundPressureMaxSoundPressureLvlResponse);
  rpc SetAISoundPressureUnits(SetAISoundPressureUnitsRequest) returns (SetAISoundPressureUnitsResponse);
  rpc SetAISoundPressuredBRef(SetAISoundPressuredBRefRequest) returns (SetAISoundPressuredBRefResponse);
  rpc SetAIStrainGageCfg(SetAIStrainGageCfgRequest) returns (SetAIStrainGageCfgResponse);
  rpc SetAIStrainGageForceReadFromChan(SetAIStrainGageForceReadFromChanRequest) returns (SetAIStrainGageForceReadFromChanResponse);
  rpc SetAIStrainGageGageFactor(SetAIStrainGageGageFactorRequest) returns (SetAIStrainGageGageFactorResponse);
  rpc SetAIStrainGagePoissonRatio(SetAIStrainGagePoissonRatioRequest) returns (SetAIStrainGagePoissonRatioResponse);
  rpc SetAIStrainUnits(SetAIStrainUnitsRequest) returns (SetAIStrainUnitsResponse);
  rpc SetAITempUnits(SetAITempUnitsRequest) returns (SetAITempUnitsResponse);
  rpc SetAITermCfg(SetAITermCfgRequest) returns (SetAITermCfgResponse);
  rpc SetAIThrmcplCJCVal(SetAIThrmcplCJCValRequest) returns (SetAIThrmcplCJCValResponse);
  rpc SetAIThrmcplLeadOffsetVoltage(SetAIThrmcplLeadOffsetVoltageRequest) returns (SetAIThrmcplLeadOffsetVoltageResponse);
  rpc SetAIThrmcplScaleType(SetAIThrmcplScaleTypeRequest) returns (SetAIThrmcplScaleTypeResponse);
  rpc SetAIThrmcplType(SetAIThrmcplTypeRequest) returns (SetAIThrmcplTypeResponse);
  rpc SetAIThrmstrA(SetAIThrmstrARequest) returns (SetAIThrmstrAResponse);
  rpc SetAIThrmstrB(SetAIThrmstrBRequest) returns (SetAIThrmstrBResponse);
  rpc SetAIThrmstrC(SetAIThrmstrCRequest) returns (SetAIThrmstrCResponse);
  rpc SetAIThrmstrR1(SetAIThrmstrR1Request) returns (SetAIThrmstrR1Response);
  rpc SetAITorqueUnits(SetAITorqueUnitsRequest) returns (SetAITorqueUnitsResponse);
  rpc SetAIUsbXferReqCount(SetAIUsbXferReqCountRequest) returns (SetAIUsbXferReqCountResponse);
  rpc SetAIUsbXferReqSize(SetAIUsbXferReqSizeRequest) returns (SetAIUsbXferReqSizeResponse);
  rpc SetAIVelocityIEPESensorSensitivity(SetAIVelocityIEPESensorSensitivityRequest) returns (SetAIVelocityIEPESensorSensitivityResponse);
  rpc SetAIVelocityIEPESensorSensitivityUnits(SetAIVelocityIEPESensorSensitivityUnitsRequest) returns (SetAIVelocityIEPESensorSensitivityUnitsResponse);
  rpc SetAIVelocityIEPESensordBRef(SetAIVelocityIEPESensordBRefRequest) returns (SetAIVelocityIEPESensordBRefResponse);
  rpc SetAIVelocityUnits(SetAIVelocityUnitsRequest) returns (SetAIVelocityUnitsResponse);
  rpc SetAIVoltageACRMSUnits(SetAIVoltageACRMSUnitsRequest) returns (SetAIVoltageACRMSUnitsResponse);
  rpc SetAIVoltageUnits(SetAIVoltageUnitsRequest) returns (SetAIVoltageUnitsResponse);
  rpc SetAIVoltagedBRef(SetAIVoltagedBRefRequest) returns (SetAIVoltagedBRefResponse);
  rpc SetAOCurrentUnits(SetAOCurrentUnitsRequest) returns (SetAOCurrentUnitsResponse);
  rpc SetAOCustomScaleName(SetAOCustomScaleNameRequest) returns (SetAOCustomScaleNameResponse);
  rpc SetAODACOffsetExtSrc(SetAODACOffsetExtSrcRequest) returns (SetAODACOffsetExtSrcResponse);
  rpc SetAODACOffsetSrc(SetAODACOffsetSrcRequest) returns (SetAODACOffsetSrcResponse);
  rpc SetAODACOffsetVal(SetAODACOffsetValRequest) returns (SetAODACOffsetValResponse);
  rpc SetAODACRefAllowConnToGnd(SetAODACRefAllowConnToGndRequest) returns (SetAODACRefAllowConnToGndResponse);
  rpc SetAODACRefConnToGnd(SetAODACRefConnToGndRequest) returns (SetAODACRefConnToGndResponse);
  rpc SetAODACRefExtSrc(SetAODACRefExtSrcRequest) returns (SetAODACRefExtSrcResponse);
  rpc SetAODACRefSrc(SetAODACRefSrcRequest) returns (SetAODACRefSrcResponse);
  rpc SetAODACRefVal(SetAODACRefValRequest) returns (SetAODACRefValResponse);
  rpc SetAODACRngHigh(SetAODACRngHighRequest) returns (SetAODACRngHighResponse);
  rpc SetAODACRngLow(SetAODACRngLowRequest) returns (SetAODACRngLowResponse);
  rpc SetAODataXferMech(SetAODataXferMechRequest) returns (SetAODataXferMechResponse);
  rpc SetAODataXferReqCond(SetAODataXferReqCondRequest) returns (SetAODataXferReqCondResponse);
  rpc SetAOEnhancedImageRejectionEnable(SetAOEnhancedImageRejectionEnableRequest) returns (SetAOEnhancedImageRejectionEnableResponse);
  rpc SetAOFilterDelay(SetAOFilterDelayRequest) returns (SetAOFilterDelayResponse);
  rpc SetAOFilterDelayAdjustment(SetAOFilterDelayAdjustmentRequest) returns (SetAOFilterDelayAdjustmentResponse);
  rpc SetAOFilterDelayUnits(SetAOFilterDelayUnitsRequest) returns (SetAOFilterDelayUnitsResponse);
  rpc SetAOFuncGenAmplitude(SetAOFuncGenAmplitudeRequest) returns (SetAOFuncGenAmplitudeResponse);
  rpc SetAOFuncGenFMDeviation(SetAOFuncGenFMDeviationRequest) returns (SetAOFuncGenFMDeviationResponse);
  rpc SetAOFuncGenFreq(SetAOFuncGenFreqRequest) returns (SetAOFuncGenFreqResponse);
  rpc SetAOFuncGenModulationType(SetAOFuncGenModulationTypeRequest) returns (SetAOFuncGenModulationTypeResponse);
  rpc SetAOFuncGenOffset(SetAOFuncGenOffsetRequest) returns (SetAOFuncGenOffsetResponse);
  rpc SetAOFuncGenSquareDutyCycle(SetAOFuncGenSquareDutyCycleRequest) returns (SetAOFuncGenSquareDutyCycleResponse);
  rpc SetAOFuncGenType(SetAOFuncGenTypeRequest) returns (SetAOFuncGenTypeResponse);
  rpc SetAOGain(SetAOGainRequest) returns (SetAOGainResponse);
  rpc SetAOIdleOutputBehavior(SetAOIdleOutputBehaviorRequest) returns (SetAOIdleOutputBehaviorResponse);
  rpc SetAOLoadImpedance(SetAOLoadImpedanceRequest) returns (SetAOLoadImpedanceResponse);
  rpc SetAOMax(SetAOMaxRequest) returns (SetAOMaxResponse);
  rpc SetAOMemMapEnable(SetAOMemMapEnableRequest) returns (SetAOMemMapEnableResponse);
  rpc SetAOMin(SetAOMinRequest) returns (SetAOMinResponse);
  rpc SetAOOutputImpedance(SetAOOutputImpedanceRequest) returns (SetAOOutputImpedanceResponse);
  rpc SetAOReglitchEnable(SetAOReglitchEnableRequest) returns (SetAOReglitchEnableResponse);
  rpc SetAOResolutionUnits(SetAOResolutionUnitsRequest) returns (SetAOResolutionUnitsResponse);
  rpc SetAOTermCfg(SetAOTermCfgRequest) returns (SetAOTermCfgResponse);
  rpc SetAOUsbXferReqCount(SetAOUsbXferReqCountRequest) returns (SetAOUsbXferReqCountResponse);
  rpc SetAOUsbXferReqSize(SetAOUsbXferReqSizeRequest) returns (SetAOUsbXferReqSizeResponse);
  rpc SetAOUseOnlyOnBrdMem(SetAOUseOnlyOnBrdMemRequest) returns (SetAOUseOnlyOnBrdMemResponse);
  rpc SetAOVoltageCurrentLimit(SetAOVoltageCurrentLimitRequest) returns (SetAOVoltageCurrentLimitResponse);
  rpc SetAOVoltageUnits(SetAOVoltageUnitsRequest) returns (SetAOVoltageUnitsResponse);
  rpc SetArmStartTrigTrigWhen(SetArmStartTrigTrigWhenRequest) returns (SetArmStartTrigTrigWhenResponse);
  rpc SetBufInputBufSize(SetBufInputBufSizeRequest) returns (SetBufInputBufSizeResponse);
  rpc SetBufOutputBufSize(SetBufOutputBufSizeRequest) returns (SetBufOutputBufSizeResponse);
  rpc SetBufOutputOnbrdBufSize(SetBufOutputOnbrdBufSizeRequest) returns (SetBufOutputOnbrdBufSizeResponse);
  rpc SetCIAngEncoderInitialAngle(SetCIAngEncoderInitialAngleRequest) returns (SetCIAngEncoderInitialAngleResponse);
  rpc SetCIAngEncoderPulsesPerRev(SetCIAngEncoderPulsesPerRevRequest) returns (SetCIAngEncoderPulsesPerRevResponse);
  rpc SetCIAngEncoderUnits(SetCIAngEncoderUnitsRequest) returns (SetCIAngEncoderUnitsResponse);
  rpc SetCICountEdgesActiveEdge(SetCICountEdgesActiveEdgeRequest) returns (SetCICountEdgesActiveEdgeResponse);
  rpc SetCICountEdgesCountDirDigFltrEnable(SetCICountEdgesCountDirDigFltrEnableRequest) returns (SetCICountEdgesCountDirDigFltrEnableResponse);
  rpc SetCICountEdgesCountDirDigFltrMinPulseWidth(SetCICountEdgesCountDirDigFltrMinPulseWidthRequest) returns (SetCICountEdgesCountDirDigFltrMinPulseWidthResponse);
  rpc SetCICountEdgesCountDirDigFltrTimebaseRate(SetCICountEdgesCountDirDigFltrTimebaseRateRequest) returns (SetCICountEdgesCountDirDigFltrTimebaseRateResponse);
  rpc SetCICountEdgesCountDirDigFltrTimebaseSrc(SetCICountEdgesCountDirDigFltrTimebaseSrcRequest) returns (SetCICountEdgesCountDirDigFltrTimebaseSrcResponse);
  rpc SetCICountEdgesCountDirDigSyncEnable(SetCICountEdgesCountDirDigSyncEnableRequest) returns (SetCICountEdgesCountDirDigSyncEnableResponse);
  rpc SetCICountEdgesCountDirHyst(SetCICountEdgesCountDirHystRequest) returns (SetCICountEdgesCountDirHystResponse);
  rpc SetCICountEdgesCountDirLogicLvlBehavior(SetCICountEdgesCountDirLogicLvlBehaviorRequest) returns (SetCICountEdgesCountDirLogicLvlBehaviorResponse);
  rpc SetCICountEdgesCountDirTermCfg(SetCICountEdgesCountDirTermCfgRequest) returns (SetCICountEdgesCountDirTermCfgResponse);
  rpc SetCICountEdgesCountDirThreshVoltage(SetCICountEdgesCountDirThreshVoltageRequest) returns (SetCICountEdgesCountDirThreshVoltageResponse);
  rpc SetCICountEdgesCountResetActiveEdge(SetCICountEdgesCountResetActiveEdgeRequest) returns (SetCICountEdgesCountResetActiveEdgeResponse);
  rpc SetCICountEdgesCountResetDigFltrEnable(SetCICountEdgesCountResetDigFltrEnableRequest) returns (SetCICountEdgesCountResetDigFltrEnableResponse);
  rpc SetCICountEdgesCountResetDigFltrMinPulseWidth(SetCICountEdgesCountResetDigFltrMinPulseWidthRequest) returns (SetCICountEdgesCountResetDigFltrMinPulseWidthResponse);
  rpc SetCICountEdgesCountResetDigFltrTimebaseRate(SetCICountEdgesCountResetDigFltrTimebaseRateRequest) returns (SetCICountEdgesCountResetDigFltrTimebaseRateResponse);
  rpc SetCICountEdgesCountResetDigFltrTimebaseSrc(SetCICountEdgesCountResetDigFltrTimebaseSrcRequest) returns (SetCICountEdgesCountResetDigFltrTimebaseSrcResponse);
  rpc SetCICountEdgesCountResetDigSyncEnable(SetCICountEdgesCountResetDigSyncEnableRequest) returns (SetCICountEdgesCountResetDigSyncEnableResponse);
  rpc SetCICountEdgesCountResetEnable(SetCICountEdgesCountResetEnableRequest) returns (SetCICountEdgesCountResetEnableResponse);
  rpc SetCICountEdgesCountResetHyst(SetCICountEdgesCountResetHystRequest) returns (SetCICountEdgesCountResetHystResponse);
  rpc SetCICountEdgesCountResetLogicLvlBehavior(SetCICountEdgesCountResetLogicLvlBehaviorRequest) returns (SetCICountEdgesCountResetLogicLvlBehaviorResponse);
  rpc SetCICountEdgesCountResetResetCount(SetCICountEdgesCountResetResetCountRequest) returns (SetCICountEdgesCountResetResetCountResponse);
  rpc SetCICountEdgesCountResetTerm(SetCICountEdgesCountResetTermRequest) returns (SetCICountEdgesCountResetTermResponse);
  rpc SetCICountEdgesCountResetTermCfg(SetCICountEdgesCountResetTermCfgRequest) returns (SetCICountEdgesCountResetTermCfgResponse);
  rpc SetCICountEdgesCountResetThreshVoltage(SetCICountEdgesCountResetThreshVoltageRequest) returns (SetCICountEdgesCountResetThreshVoltageResponse);
  rpc SetCICountEdgesDigFltrEnable(SetCICountEdgesDigFltrEnableRequest) returns (SetCICountEdgesDigFltrEnableResponse);
  rpc SetCICountEdgesDigFltrMinPulseWidth(SetCICountEdgesDigFltrMinPulseWidthRequest) returns (SetCICountEdgesDigFltrMinPulseWidthResponse);
  rpc SetCICountEdgesDigFltrTimebaseRate(SetCICountEdgesDigFltrTimebaseRateRequest) returns (SetCICountEdgesDigFltrTimebaseRateResponse);
  rpc SetCICountEdgesDigFltrTimebaseSrc(SetCICountEdgesDigFltrTimebaseSrcRequest) returns (SetCICountEdgesDigFltrTimebaseSrcResponse);
  rpc SetCICountEdgesDigSyncEnable(SetCICountEdgesDigSyncEnableRequest) returns (SetCICountEdgesDigSyncEnableResponse);
  rpc SetCICountEdgesDir(SetCICountEdgesDirRequest) returns (SetCICountEdgesDirResponse);
  rpc SetCICountEdgesDirTerm(SetCICountEdgesDirTermRequest) returns (SetCICountEdgesDirTermResponse);
  rpc SetCICountEdgesGateDigFltrEnable(SetCICountEdgesGateDigFltrEnableRequest) returns (SetCICountEdgesGateDigFltrEnableResponse);
  rpc SetCICountEdgesGateDigFltrMinPulseWidth(SetCICountEdgesGateDigFltrMinPulseWidthRequest) returns (SetCICountEdgesGateDigFltrMinPulseWidthResponse);
  rpc SetCICountEdgesGateDigFltrTimebaseRate(SetCICountEdgesGateDigFltrTimebaseRateRequest) returns (SetCICountEdgesGateDigFltrTimebaseRateResponse);
  rpc SetCICountEdgesGateDigFltrTimebaseSrc(SetCICountEdgesGateDigFltrTimebaseSrcRequest) returns (SetCICountEdgesGateDigFltrTimebaseSrcResponse);
  rpc SetCICountEdgesGateEnable(SetCICountEdgesGateEnableRequest) returns (SetCICountEdgesGateEnableResponse);
  rpc SetCICountEdgesGateHyst(SetCICountEdgesGateHystRequest) returns (SetCICountEdgesGateHystResponse);
  rpc SetCICountEdgesGateLogicLvlBehavior(SetCICountEdgesGateLogicLvlBehaviorRequest) returns (SetCICountEdgesGateLogicLvlBehaviorResponse);
  rpc SetCICountEdgesGateTerm(SetCICountEdgesGateTermRequest) returns (SetCICountEdgesGateTermResponse);
  rpc SetCICountEdgesGateTermCfg(SetCICountEdgesGateTermCfgRequest) returns (SetCICountEdgesGateTermCfgResponse);
  rpc SetCICountEdgesGateThreshVoltage(SetCICountEdgesGateThreshVoltageRequest) returns (SetCICountEdgesGateThreshVoltageResponse);
  rpc SetCICountEdgesGateWhen(SetCICountEdgesGateWhenRequest) returns (SetCICountEdgesGateWhenResponse);
  rpc SetCICountEdgesHyst(SetCICountEdgesHystRequest) returns (SetCICountEdgesHystResponse);
  rpc SetCICountEdgesInitialCnt(SetCICountEdgesInitialCntRequest) returns (SetCICountEdgesInitialCntResponse);
  rpc SetCICountEdgesLogicLvlBehavior(SetCICountEdgesLogicLvlBehaviorRequest) returns (SetCICountEdgesLogicLvlBehaviorResponse);
  rpc SetCICountEdgesTerm(SetCICountEdgesTermRequest) returns (SetCICountEdgesTermResponse);
  rpc SetCICountEdgesTermCfg(SetCICountEdgesTermCfgRequest) returns (SetCICountEdgesTermCfgResponse);
  rpc SetCICountEdgesThreshVoltage(SetCICountEdgesThreshVoltageRequest) returns (SetCICountEdgesThreshVoltageResponse);
  rpc SetCICtrTimebaseActiveEdge(SetCICtrTimebaseActiveEdgeRequest) returns (SetCICtrTimebaseActiveEdgeResponse);
  rpc SetCICtrTimebaseDigFltrEnable(SetCICtrTimebaseDigFltrEnableRequest) returns (SetCICtrTimebaseDigFltrEnableResponse);
  rpc SetCICtrTimebaseDigFltrMinPulseWidth(SetCICtrTimebaseDigFltrMinPulseWidthRequest) returns (SetCICtrTimebaseDigFltrMinPulseWidthResponse);
  rpc SetCICtrTimebaseDigFltrTimebaseRate(SetCICtrTimebaseDigFltrTimebaseRateRequest) returns (SetCICtrTimebaseDigFltrTimebaseRateResponse);
  rpc SetCICtrTimebaseDigFltrTimebaseSrc(SetCICtrTimebaseDigFltrTimebaseSrcRequest) returns (SetCICtrTimebaseDigFltrTimebaseSrcResponse);
  rpc SetCICtrTimebaseDigSyncEnable(SetCICtrTimebaseDigSyncEnableRequest) returns (SetCICtrTimebaseDigSyncEnableResponse);
  rpc SetCICtrTimebaseMasterTimebaseDiv(SetCICtrTimebaseMasterTimebaseDivRequest) returns (SetCICtrTimebaseMasterTimebaseDivResponse);
  rpc SetCICtrTimebaseRate(SetCICtrTimebaseRateRequest) returns (SetCICtrTimebaseRateResponse);
  rpc SetCICtrTimebaseSrc(SetCICtrTimebaseSrcRequest) returns (SetCICtrTimebaseSrcResponse);
  rpc SetCICustomScaleName(SetCICustomScaleNameRequest) returns (SetCICustomScaleNameResponse);
  rpc SetCIDataXferMech(SetCIDataXferMechRequest) returns (SetCIDataXferMechResponse);
  rpc SetCIDataXferReqCond(SetCIDataXferReqCondRequest) returns (SetCIDataXferReqCondResponse);
  rpc SetCIDupCountPrevent(SetCIDupCountPreventRequest) returns (SetCIDupCountPreventResponse);
  rpc SetCIDutyCycleDigFltrEnable(SetCIDutyCycleDigFltrEnableRequest) returns (SetCIDutyCycleDigFltrEnableResponse);
  rpc SetCIDutyCycleDigFltrMinPulseWidth(SetCIDutyCycleDigFltrMinPulseWidthRequest) returns (SetCIDutyCycleDigFltrMinPulseWidthResponse);
  rpc SetCIDutyCycleDigFltrTimebaseRate(SetCIDutyCycleDigFltrTimebaseRateRequest) returns (SetCIDutyCycleDigFltrTimebaseRateResponse);
  rpc SetCIDutyCycleDigFltrTimebaseSrc(SetCIDutyCycleDigFltrTimebaseSrcRequest) returns (SetCIDutyCycleDigFltrTimebaseSrcResponse);
  rpc SetCIDutyCycleLogicLvlBehavior(SetCIDutyCycleLogicLvlBehaviorRequest) returns (SetCIDutyCycleLogicLvlBehaviorResponse);
  rpc SetCIDutyCycleStartingEdge(SetCIDutyCycleStartingEdgeRequest) returns (SetCIDutyCycleStartingEdgeResponse);
  rpc SetCIDutyCycleTerm(SetCIDutyCycleTermRequest) returns (SetCIDutyCycleTermResponse);
  rpc SetCIDutyCycleTermCfg(SetCIDutyCycleTermCfgRequest) returns (SetCIDutyCycleTermCfgResponse);
  rpc SetCIEncoderAInputDigFltrEnable(SetCIEncoderAInputDigFltrEnableRequest) returns (SetCIEncoderAInputDigFltrEnableResponse);
  rpc SetCIEncoderAInputDigFltrMinPulseWidth(SetCIEncoderAInputDigFltrMinPulseWidthRequest) returns (SetCIEncoderAInputDigFltrMinPulseWidthResponse);
  rpc SetCIEncoderAInputDigFltrTimebaseRate(SetCIEncoderAInputDigFltrTimebaseRateRequest) returns (SetCIEncoderAInputDigFltrTimebaseRateResponse);
  rpc SetCIEncoderAInputDigFltrTimebaseSrc(SetCIEncoderAInputDigFltrTimebaseSrcRequest) returns (SetCIEncoderAInputDigFltrTimebaseSrcResponse);
  rpc SetCIEncoderAInputDigSyncEnable(SetCIEncoderAInputDigSyncEnableRequest) returns (SetCIEncoderAInputDigSyncEnableResponse);
  rpc SetCIEncoderAInputLogicLvlBehavior(SetCIEncoderAInputLogicLvlBehaviorRequest) returns (SetCIEncoderAInputLogicLvlBehaviorResponse);
  rpc SetCIEncoderAInputTerm(SetCIEncoderAInputTermRequest) returns (SetCIEncoderAInputTermResponse);
  rpc SetCIEncoderAInputTermCfg(SetCIEncoderAInputTermCfgRequest) returns (SetCIEncoderAInputTermCfgResponse);
  rpc SetCIEncoderBInputDigFltrEnable(SetCIEncoderBInputDigFltrEnableRequest) returns (SetCIEncoderBInputDigFltrEnableResponse);
  rpc SetCIEncoderBInputDigFltrMinPulseWidth(SetCIEncoderBInputDigFltrMinPulseWidthRequest) returns (SetCIEncoderBInputDigFltrMinPulseWidthResponse);
  rpc SetCIEncoderBInputDigFltrTimebaseRate(SetCIEncoderBInputDigFltrTimebaseRateRequest) returns (SetCIEncoderBInputDigFltrTimebaseRateResponse);
  rpc SetCIEncoderBInputDigFltrTimebaseSrc(SetCIEncoderBInputDigFltrTimebaseSrcRequest) returns (SetCIEncoderBInputDigFltrTimebaseSrcResponse);
  rpc SetCIEncoderBInputDigSyncEnable(SetCIEncoderBInputDigSyncEnableRequest) returns (SetCIEncoderBInputDigSyncEnableResponse);
  rpc SetCIEncoderBInputLogicLvlBehavior(SetCIEncoderBInputLogicLvlBehaviorRequest) returns (SetCIEncoderBInputLogicLvlBehaviorResponse);
  rpc SetCIEncoderBInputTerm(SetCIEncoderBInputTermRequest) returns (SetCIEncoderBInputTermResponse);
  rpc SetCIEncoderBInputTermCfg(SetCIEncoderBInputTermCfgRequest) returns (SetCIEncoderBInputTermCfgResponse);
  rpc SetCIEncoderDecodingType(SetCIEncoderDecodingTypeRequest) returns (SetCIEncoderDecodingTypeResponse);
  rpc SetCIEncoderZIndexEnable(SetCIEncoderZIndexEnableRequest) returns (SetCIEncoderZIndexEnableResponse);
  rpc SetCIEncoderZIndexPhase(SetCIEncoderZIndexPhaseRequest) returns (SetCIEncoderZIndexPhaseResponse);
  rpc SetCIEncoderZIndexVal(SetCIEncoderZIndexValRequest) returns (SetCIEncoderZIndexValResponse);
  rpc SetCIEncoderZInputDigFltrEnable(SetCIEncoderZInputDigFltrEnableRequest) returns (SetCIEncoderZInputDigFltrEnableResponse);
  rpc SetCIEncoderZInputDigFltrMinPulseWidth(SetCIEncoderZInputDigFltrMinPulseWidthRequest) returns (SetCIEncoderZInputDigFltrMinPulseWidthResponse);
  rpc SetCIEncoderZInputDigFltrTimebaseRate(SetCIEncoderZInputDigFltrTimebaseRateRequest) returns (SetCIEncoderZInputDigFltrTimebaseRateResponse);
  rpc SetCIEncoderZInputDigFltrTimebaseSrc(SetCIEncoderZInputDigFltrTimebaseSrcRequest) returns (SetCIEncoderZInputDigFltrTimebaseSrcResponse);
  rpc SetCIEncoderZInputDigSyncEnable(SetCIEncoderZInputDigSyncEnableRequest) returns (SetCIEncoderZInputDigSyncEnableResponse);
  rpc SetCIEncoderZInputLogicLvlBehavior(SetCIEncoderZInputLogicLvlBehaviorRequest) returns (SetCIEncoderZInputLogicLvlBehaviorResponse);
  rpc SetCIEncoderZInputTerm(SetCIEncoderZInputTermRequest) returns (SetCIEncoderZInputTermResponse);
  rpc SetCIEncoderZInputTermCfg(SetCIEncoderZInputTermCfgRequest) returns (SetCIEncoderZInputTermCfgResponse);
  rpc SetCIFilterDelayUnits(SetCIFilterDelayUnitsRequest) returns (SetCIFilterDelayUnitsResponse);
  rpc SetCIFilterEnable(SetCIFilterEnableRequest) returns (SetCIFilterEnableResponse);
  rpc SetCIFilterFreq(SetCIFilterFreqRequest) returns (SetCIFilterFreqResponse);
  rpc SetCIFilterOrder(SetCIFilterOrderRequest) returns (SetCIFilterOrderResponse);
  rpc SetCIFilterResponse(SetCIFilterResponseRequest) returns (SetCIFilterResponseResponse);
  rpc SetCIFreqDigFltrEnable(SetCIFreqDigFltrEnableRequest) returns (SetCIFreqDigFltrEnableResponse);
  rpc SetCIFreqDigFltrMinPulseWidth(SetCIFreqDigFltrMinPulseWidthRequest) returns (SetCIFreqDigFltrMinPulseWidthResponse);
  rpc SetCIFreqDigFltrTimebaseRate(SetCIFreqDigFltrTimebaseRateRequest) returns (SetCIFreqDigFltrTimebaseRateResponse);
  rpc SetCIFreqDigFltrTimebaseSrc(SetCIFreqDigFltrTimebaseSrcRequest) returns (SetCIFreqDigFltrTimebaseSrcResponse);
  rpc SetCIFreqDigSyncEnable(SetCIFreqDigSyncEnableRequest) returns (SetCIFreqDigSyncEnableResponse);
  rpc SetCIFreqDiv(SetCIFreqDivRequest) returns (SetCIFreqDivResponse);
  rpc SetCIFreqEnableAveraging(SetCIFreqEnableAveragingRequest) returns (SetCIFreqEnableAveragingResponse);
  rpc SetCIFreqHyst(SetCIFreqHystRequest) returns (SetCIFreqHystResponse);
  rpc SetCIFreqLogicLvlBehavior(SetCIFreqLogicLvlBehaviorRequest) returns (SetCIFreqLogicLvlBehaviorResponse);
  rpc SetCIFreqMeasMeth(SetCIFreqMeasMethRequest) returns (SetCIFreqMeasMethResponse);
  rpc SetCIFreqMeasTime(SetCIFreqMeasTimeRequest) returns (SetCIFreqMeasTimeResponse);
  rpc SetCIFreqStartingEdge(SetCIFreqStartingEdgeRequest) returns (SetCIFreqStartingEdgeResponse);
  rpc SetCIFreqTerm(SetCIFreqTermRequest) returns (SetCIFreqTermResponse);
  rpc SetCIFreqTermCfg(SetCIFreqTermCfgRequest) returns (SetCIFreqTermCfgResponse);
  rpc SetCIFreqThreshVoltage(SetCIFreqThreshVoltageRequest) returns (SetCIFreqThreshVoltageResponse);
  rpc SetCIFreqUnits(SetCIFreqUnitsRequest) returns (SetCIFreqUnitsResponse);
  rpc SetCIGPSSyncMethod(SetCIGPSSyncMethodRequest) returns (SetCIGPSSyncMethodResponse);
  rpc SetCIGPSSyncSrc(SetCIGPSSyncSrcRequest) returns (SetCIGPSSyncSrcResponse);
  rpc SetCILinEncoderDistPerPulse(SetCILinEncoderDistPerPulseRequest) returns (SetCILinEncoderDistPerPulseResponse);
  rpc SetCILinEncoderInitialPos(SetCILinEncoderInitialPosRequest) returns (SetCILinEncoderInitialPosResponse);
  rpc SetCILinEncoderUnits(SetCILinEncoderUnitsRequest) returns (SetCILinEncoderUnitsResponse);
  rpc SetCIMax(SetCIMaxRequest) returns (SetCIMaxResponse);
  rpc SetCIMaxMeasPeriod(SetCIMaxMeasPeriodRequest) returns (SetCIMaxMeasPeriodResponse);
  rpc SetCIMemMapEnable(SetCIMemMapEnableRequest) returns (SetCIMemMapEnableResponse);
  rpc SetCIMin(SetCIMinRequest) returns (SetCIMinResponse);
  rpc SetCIPeriodDigFltrEnable(SetCIPeriodDigFltrEnableRequest) returns (SetCIPeriodDigFltrEnableResponse);
  rpc SetCIPeriodDigFltrMinPulseWidth(SetCIPeriodDigFltrMinPulseWidthRequest) returns (SetCIPeriodDigFltrMinPulseWidthResponse);
  rpc SetCIPeriodDigFltrTimebaseRate(SetCIPeriodDigFltrTimebaseRateRequest) returns (SetCIPeriodDigFltrTimebaseRateResponse);
  rpc SetCIPeriodDigFltrTimebaseSrc(SetCIPeriodDigFltrTimebaseSrcRequest) returns (SetCIPeriodDigFltrTimebaseSrcResponse);
  rpc SetCIPeriodDigSyncEnable(SetCIPeriodDigSyncEnableRequest) returns (SetCIPeriodDigSyncEnableResponse);
  rpc SetCIPeriodDiv(SetCIPeriodDivRequest) returns (SetCIPeriodDivResponse);
  rpc SetCIPeriodEnableAveraging(SetCIPeriodEnableAveragingRequest) returns (SetCIPeriodEnableAveragingResponse);
  rpc SetCIPeriodHyst(SetCIPeriodHystRequest) returns (SetCIPeriodHystResponse);
  rpc SetCIPeriodLogicLvlBehavior(SetCIPeriodLogicLvlBehaviorRequest) returns (SetCIPeriodLogicLvlBehaviorResponse);
  rpc SetCIPeriodMeasMeth(SetCIPeriodMeasMethRequest) returns (SetCIPeriodMeasMethResponse);
  rpc SetCIPeriodMeasTime(SetCIPeriodMeasTimeRequest) returns (SetCIPeriodMeasTimeResponse);
  rpc SetCIPeriodStartingEdge(SetCIPeriodStartingEdgeRequest) returns (SetCIPeriodStartingEdgeResponse);
  rpc SetCIPeriodTerm(SetCIPeriodTermRequest) returns (SetCIPeriodTermResponse);
  rpc SetCIPeriodTermCfg(SetCIPeriodTermCfgRequest) returns (SetCIPeriodTermCfgResponse);
  rpc SetCIPeriodThreshVoltage(SetCIPeriodThreshVoltageRequest) returns (SetCIPeriodThreshVoltageResponse);
  rpc SetCIPeriodUnits(SetCIPeriodUnitsRequest) returns (SetCIPeriodUnitsResponse);
  rpc SetCIPrescaler(SetCIPrescalerRequest) returns (SetCIPrescalerResponse);
  rpc SetCIPulseFreqDigFltrEnable(SetCIPulseFreqDigFltrEnableRequest) returns (SetCIPulseFreqDigFltrEnableResponse);
  rpc SetCIPulseFreqDigFltrMinPulseWidth(SetCIPulseFreqDigFltrMinPulseWidthRequest) returns (SetCIPulseFreqDigFltrMinPulseWidthResponse);
  rpc SetCIPulseFreqDigFltrTimebaseRate(SetCIPulseFreqDigFltrTimebaseRateRequest) returns (SetCIPulseFreqDigFltrTimebaseRateResponse);
  rpc SetCIPulseFreqDigFltrTimebaseSrc(SetCIPulseFreqDigFltrTimebaseSrcRequest) returns (SetCIPulseFreqDigFltrTimebaseSrcResponse);
  rpc SetCIPulseFreqDigSyncEnable(SetCIPulseFreqDigSyncEnableRequest) returns (SetCIPulseFreqDigSyncEnableResponse);
  rpc SetCIPulseFreqLogicLvlBehavior(SetCIPulseFreqLogicLvlBehaviorRequest) returns (SetCIPulseFreqLogicLvlBehaviorResponse);
  rpc SetCIPulseFreqStartEdge(SetCIPulseFreqStartEdgeRequest) returns (SetCIPulseFreqStartEdgeResponse);
  rpc SetCIPulseFreqTerm(SetCIPulseFreqTermRequest) returns (SetCIPulseFreqTermResponse);
  rpc SetCIPulseFreqTermCfg(SetCIPulseFreqTermCfgRequest) returns (SetCIPulseFreqTermCfgResponse);
  rpc SetCIPulseFreqUnits(SetCIPulseFreqUnitsRequest) returns (SetCIPulseFreqUnitsResponse);
  rpc SetCIPulseTicksDigFltrEnable(SetCIPulseTicksDigFltrEnableRequest) returns (SetCIPulseTicksDigFltrEnableResponse);
  rpc SetCIPulseTicksDigFltrMinPulseWidth(SetCIPulseTicksDigFltrMinPulseWidthRequest) returns (SetCIPulseTicksDigFltrMinPulseWidthResponse);
  rpc SetCIPulseTicksDigFltrTimebaseRate(SetCIPulseTicksDigFltrTimebaseRateRequest) returns (SetCIPulseTicksDigFltrTimebaseRateResponse);
  rpc SetCIPulseTicksDigFltrTimebaseSrc(SetCIPulseTicksDigFltrTimebaseSrcRequest) returns (SetCIPulseTicksDigFltrTimebaseSrcResponse);
  rpc SetCIPulseTicksDigSyncEnable(SetCIPulseTicksDigSyncEnableRequest) returns (SetCIPulseTicksDigSyncEnableResponse);
  rpc SetCIPulseTicksLogicLvlBehavior(SetCIPulseTicksLogicLvlBehaviorRequest) returns (SetCIPulseTicksLogicLvlBehaviorResponse);
  rpc SetCIPulseTicksStartEdge(SetCIPulseTicksStartEdgeRequest) returns (SetCIPulseTicksStartEdgeResponse);
  rpc SetCIPulseTicksTerm(SetCIPulseTicksTermRequest) returns (SetCIPulseTicksTermResponse);
  rpc SetCIPulseTicksTermCfg(SetCIPulseTicksTermCfgRequest) returns (SetCIPulseTicksTermCfgResponse);
  rpc SetCIPulseTimeDigFltrEnable(SetCIPulseTimeDigFltrEnableRequest) returns (SetCIPulseTimeDigFltrEnableResponse);
  rpc SetCIPulseTimeDigFltrMinPulseWidth(SetCIPulseTimeDigFltrMinPulseWidthRequest) returns (SetCIPulseTimeDigFltrMinPulseWidthResponse);
  rpc SetCIPulseTimeDigFltrTimebaseRate(SetCIPulseTimeDigFltrTimebaseRateRequest) returns (SetCIPulseTimeDigFltrTimebaseRateResponse);
  rpc SetCIPulseTimeDigFltrTimebaseSrc(SetCIPulseTimeDigFltrTimebaseSrcRequest) returns (SetCIPulseTimeDigFltrTimebaseSrcResponse);
  rpc SetCIPulseTimeDigSyncEnable(SetCIPulseTimeDigSyncEnableRequest) returns (SetCIPulseTimeDigSyncEnableResponse);
  rpc SetCIPulseTimeLogicLvlBehavior(SetCIPulseTimeLogicLvlBehaviorRequest) returns (SetCIPulseTimeLogicLvlBehaviorResponse);
  rpc SetCIPulseTimeStartEdge(SetCIPulseTimeStartEdgeRequest) returns (SetCIPulseTimeStartEdgeResponse);
  rpc SetCIPulseTimeTerm(SetCIPulseTimeTermRequest) returns (SetCIPulseTimeTermResponse);
  rpc SetCIPulseTimeTermCfg(SetCIPulseTimeTermCfgRequest) returns (SetCIPulseTimeTermCfgResponse);
  rpc SetCIPulseTimeUnits(SetCIPulseTimeUnitsRequest) returns (SetCIPulseTimeUnitsResponse);
  rpc SetCIPulseWidthDigFltrEnable(SetCIPulseWidthDigFltrEnableRequest) returns (SetCIPulseWidthDigFltrEnableResponse);
  rpc SetCIPulseWidthDigFltrMinPulseWidth(SetCIPulseWidthDigFltrMinPulseWidthRequest) returns (SetCIPulseWidthDigFltrMinPulseWidthResponse);
  rpc SetCIPulseWidthDigFltrTimebaseRate(SetCIPulseWidthDigFltrTimebaseRateRequest) returns (SetCIPulseWidthDigFltrTimebaseRateResponse);
  rpc SetCIPulseWidthDigFltrTimebaseSrc(SetCIPulseWidthDigFltrTimebaseSrcRequest) returns (SetCIPulseWidthDigFltrTimebaseSrcResponse);
  rpc SetCIPulseWidthDigSyncEnable(SetCIPulseWidthDigSyncEnableRequest) returns (SetCIPulseWidthDigSyncEnableResponse);
  rpc SetCIPulseWidthLogicLvlBehavior(SetCIPulseWidthLogicLvlBehaviorRequest) returns (SetCIPulseWidthLogicLvlBehaviorResponse);
  rpc SetCIPulseWidthStartingEdge(SetCIPulseWidthStartingEdgeRequest) returns (SetCIPulseWidthStartingEdgeResponse);
  rpc SetCIPulseWidthTerm(SetCIPulseWidthTermRequest) returns (SetCIPulseWidthTermResponse);
  rpc SetCIPulseWidthTermCfg(SetCIPulseWidthTermCfgRequest) returns (SetCIPulseWidthTermCfgResponse);
  rpc SetCIPulseWidthUnits(SetCIPulseWidthUnitsRequest) returns (SetCIPulseWidthUnitsResponse);
  rpc SetCISampClkOverrunBehavior(SetCISampClkOverrunBehaviorRequest) returns (SetCISampClkOverrunBehaviorResponse);
  rpc SetCISampClkOverrunSentinelVal(SetCISampClkOverrunSentinelValRequest) returns (SetCISampClkOverrunSentinelValResponse);
  rpc SetCISemiPeriodDigFltrEnable(SetCISemiPeriodDigFltrEnableRequest) returns (SetCISemiPeriodDigFltrEnableResponse);
  rpc SetCISemiPeriodDigFltrMinPulseWidth(SetCISemiPeriodDigFltrMinPulseWidthRequest) returns (SetCISemiPeriodDigFltrMinPulseWidthResponse);
  rpc SetCISemiPeriodDigFltrTimebaseRate(SetCISemiPeriodDigFltrTimebaseRateRequest) returns (SetCISemiPeriodDigFltrTimebaseRateResponse);
  rpc SetCISemiPeriodDigFltrTimebaseSrc(SetCISemiPeriodDigFltrTimebaseSrcRequest) returns (SetCISemiPeriodDigFltrTimebaseSrcResponse);
  rpc SetCISemiPeriodDigSyncEnable(SetCISemiPeriodDigSyncEnableRequest) returns (SetCISemiPeriodDigSyncEnableResponse);
  rpc SetCISemiPeriodLogicLvlBehavior(SetCISemiPeriodLogicLvlBehaviorRequest) returns (SetCISemiPeriodLogicLvlBehaviorResponse);
  rpc SetCISemiPeriodStartingEdge(SetCISemiPeriodStartingEdgeRequest) returns (SetCISemiPeriodStartingEdgeResponse);
  rpc SetCISemiPeriodTerm(SetCISemiPeriodTermRequest) returns (SetCISemiPeriodTermResponse);
  rpc SetCISemiPeriodTermCfg(SetCISemiPeriodTermCfgRequest) returns (SetCISemiPeriodTermCfgResponse);
  rpc SetCISemiPeriodUnits(SetCISemiPeriodUnitsRequest) returns (SetCISemiPeriodUnitsResponse);
  rpc SetCIThreshVoltage(SetCIThreshVoltageRequest) returns (SetCIThreshVoltageResponse);
  rpc SetCITimestampInitialSeconds(SetCITimestampInitialSecondsRequest) returns (SetCITimestampInitialSecondsResponse);
  rpc SetCITimestampUnits(SetCITimestampUnitsRequest) returns (SetCITimestampUnitsResponse);
  rpc SetCITwoEdgeSepFirstDigFltrEnable(SetCITwoEdgeSepFirstDigFltrEnableRequest) returns (SetCITwoEdgeSepFirstDigFltrEnableResponse);
  rpc SetCITwoEdgeSepFirstDigFltrMinPulseWidth(SetCITwoEdgeSepFirstDigFltrMinPulseWidthRequest) returns (SetCITwoEdgeSepFirstDigFltrMinPulseWidthResponse);
  rpc SetCITwoEdgeSepFirstDigFltrTimebaseRate(SetCITwoEdgeSepFirstDigFltrTimebaseRateRequest) returns (SetCITwoEdgeSepFirstDigFltrTimebaseRateResponse);
  rpc SetCITwoEdgeSepFirstDigFltrTimebaseSrc(SetCITwoEdgeSepFirstDigFltrTimebaseSrcRequest) returns (SetCITwoEdgeSepFirstDigFltrTimebaseSrcResponse);
  rpc SetCITwoEdgeSepFirstDigSyncEnable(SetCITwoEdgeSepFirstDigSyncEnableRequest) returns (SetCITwoEdgeSepFirstDigSyncEnableResponse);
  rpc SetCITwoEdgeSepFirstEdge(SetCITwoEdgeSepFirstEdgeRequest) returns (SetCITwoEdgeSepFirstEdgeResponse);
  rpc SetCITwoEdgeSepFirstLogicLvlBehavior(SetCITwoEdgeSepFirstLogicLvlBehaviorRequest) returns (SetCITwoEdgeSepFirstLogicLvlBehaviorResponse);
  rpc SetCITwoEdgeSepFirstTerm(SetCITwoEdgeSepFirstTermRequest) returns (SetCITwoEdgeSepFirstTermResponse);
  rpc SetCITwoEdgeSepFirstTermCfg(SetCITwoEdgeSepFirstTermCfgRequest) returns (SetCITwoEdgeSepFirstTermCfgResponse);
  rpc SetCITwoEdgeSepSecondDigFltrEnable(SetCITwoEdgeSepSecondDigFltrEnableRequest) returns (SetCITwoEdgeSepSecondDigFltrEnableResponse);
  rpc SetCITwoEdgeSepSecondDigFltrMinPulseWidth(SetCITwoEdgeSepSecondDigFltrMinPulseWidthRequest) returns (SetCITwoEdgeSepSecondDigFltrMinPulseWidthResponse);
  rpc SetCITwoEdgeSepSecondDigFltrTimebaseRate(SetCITwoEdgeSepSecondDigFltrTimebaseRateRequest) returns (SetCITwoEdgeSepSecondDigFltrTimebaseRateResponse);
  rpc SetCITwoEdgeSepSecondDigFltrTimebaseSrc(SetCITwoEdgeSepSecondDigFltrTimebaseSrcRequest) returns (SetCITwoEdgeSepSecondDigFltrTimebaseSrcResponse);
  rpc SetCITwoEdgeSepSecondDigSyncEnable(SetCITwoEdgeSepSecondDigSyncEnableRequest) returns (SetCITwoEdgeSepSecondDigSyncEnableResponse);
  rpc SetCITwoEdgeSepSecondEdge(SetCITwoEdgeSepSecondEdgeRequest) returns (SetCITwoEdgeSepSecondEdgeResponse);
  rpc SetCITwoEdgeSepSecondLogicLvlBehavior(SetCITwoEdgeSepSecondLogicLvlBehaviorRequest) returns (SetCITwoEdgeSepSecondLogicLvlBehaviorResponse);
  rpc SetCITwoEdgeSepSecondTerm(SetCITwoEdgeSepSecondTermRequest) returns (SetCITwoEdgeSepSecondTermResponse);
  rpc SetCITwoEdgeSepSecondTermCfg(SetCITwoEdgeSepSecondTermCfgRequest) returns (SetCITwoEdgeSepSecondTermCfgResponse);
  rpc SetCITwoEdgeSepUnits(SetCITwoEdgeSepUnitsRequest) returns (SetCITwoEdgeSepUnitsResponse);
  rpc SetCIUsbXferReqCount(SetCIUsbXferReqCountRequest) returns (SetCIUsbXferReqCountResponse);
  rpc SetCIUsbXferReqSize(SetCIUsbXferReqSizeRequest) returns (SetCIUsbXferReqSizeResponse);
  rpc SetCIVelocityAngEncoderPulsesPerRev(SetCIVelocityAngEncoderPulsesPerRevRequest) returns (SetCIVelocityAngEncoderPulsesPerRevResponse);
  rpc SetCIVelocityAngEncoderUnits(SetCIVelocityAngEncoderUnitsRequest) returns (SetCIVelocityAngEncoderUnitsResponse);
  rpc SetCIVelocityDiv(SetCIVelocityDivRequest) returns (SetCIVelocityDivResponse);
  rpc SetCIVelocityEncoderAInputDigFltrEnable(SetCIVelocityEncoderAInputDigFltrEnableRequest) returns (SetCIVelocityEncoderAInputDigFltrEnableResponse);
  rpc SetCIVelocityEncoderAInputDigFltrMinPulseWidth(SetCIVelocityEncoderAInputDigFltrMinPulseWidthRequest) returns (SetCIVelocityEncoderAInputDigFltrMinPulseWidthResponse);
  rpc SetCIVelocityEncoderAInputDigFltrTimebaseRate(SetCIVelocityEncoderAInputDigFltrTimebaseRateRequest) returns (SetCIVelocityEncoderAInputDigFltrTimebaseRateResponse);
  rpc SetCIVelocityEncoderAInputDigFltrTimebaseSrc(SetCIVelocityEncoderAInputDigFltrTimebaseSrcRequest) returns (SetCIVelocityEncoderAInputDigFltrTimebaseSrcResponse);
  rpc SetCIVelocityEncoderAInputLogicLvlBehavior(SetCIVelocityEncoderAInputLogicLvlBehaviorRequest) returns (SetCIVelocityEncoderAInputLogicLvlBehaviorResponse);
  rpc SetCIVelocityEncoderAInputTerm(SetCIVelocityEncoderAInputTermRequest) returns (SetCIVelocityEncoderAInputTermResponse);
  rpc SetCIVelocityEncoderAInputTermCfg(SetCIVelocityEncoderAInputTermCfgRequest) returns (SetCIVelocityEncoderAInputTermCfgResponse);
  rpc SetCIVelocityEncoderBInputDigFltrEnable(SetCIVelocityEncoderBInputDigFltrEnableRequest) returns (SetCIVelocityEncoderBInputDigFltrEnableResponse);
  rpc SetCIVelocityEncoderBInputDigFltrMinPulseWidth(SetCIVelocityEncoderBInputDigFltrMinPulseWidthRequest) returns (SetCIVelocityEncoderBInputDigFltrMinPulseWidthResponse);
  rpc SetCIVelocityEncoderBInputDigFltrTimebaseRate(SetCIVelocityEncoderBInputDigFltrTimebaseRateRequest) returns (SetCIVelocityEncoderBInputDigFltrTimebaseRateResponse);
  rpc SetCIVelocityEncoderBInputDigFltrTimebaseSrc(SetCIVelocityEncoderBInputDigFltrTimebaseSrcRequest) returns (SetCIVelocityEncoderBInputDigFltrTimebaseSrcResponse);
  rpc SetCIVelocityEncoderBInputLogicLvlBehavior(SetCIVelocityEncoderBInputLogicLvlBehaviorRequest) returns (SetCIVelocityEncoderBInputLogicLvlBehaviorResponse);
  rpc SetCIVelocityEncoderBInputTerm(SetCIVelocityEncoderBInputTermRequest) returns (SetCIVelocityEncoderBInputTermResponse);
  rpc SetCIVelocityEncoderBInputTermCfg(SetCIVelocityEncoderBInputTermCfgRequest) returns (SetCIVelocityEncoderBInputTermCfgResponse);
  rpc SetCIVelocityEncoderDecodingType(SetCIVelocityEncoderDecodingTypeRequest) returns (SetCIVelocityEncoderDecodingTypeResponse);
  rpc SetCIVelocityLinEncoderDistPerPulse(SetCIVelocityLinEncoderDistPerPulseRequest) returns (SetCIVelocityLinEncoderDistPerPulseResponse);
  rpc SetCIVelocityLinEncoderUnits(SetCIVelocityLinEncoderUnitsRequest) returns (SetCIVelocityLinEncoderUnitsResponse);
  rpc SetCIVelocityMeasTime(SetCIVelocityMeasTimeRequest) returns (SetCIVelocityMeasTimeResponse);
  rpc SetCOAutoIncrCnt(SetCOAutoIncrCntRequest) returns (SetCOAutoIncrCntResponse);
  rpc SetCOConstrainedGenMode(SetCOConstrainedGenModeRequest) returns (SetCOConstrainedGenModeResponse);
  rpc SetCOCtrTimebaseActiveEdge(SetCOCtrTimebaseActiveEdgeRequest) returns (SetCOCtrTimebaseActiveEdgeResponse);
  rpc SetCOCtrTimebaseDigFltrEnable(SetCOCtrTimebaseDigFltrEnableRequest) returns (SetCOCtrTimebaseDigFltrEnableResponse);
  rpc SetCOCtrTimebaseDigFltrMinPulseWidth(SetCOCtrTimebaseDigFltrMinPulseWidthRequest) returns (SetCOCtrTimebaseDigFltrMinPulseWidthResponse);
  rpc SetCOCtrTimebaseDigFltrTimebaseRate(SetCOCtrTimebaseDigFltrTimebaseRateRequest) returns (SetCOCtrTimebaseDigFltrTimebaseRateResponse);
  rpc SetCOCtrTimebaseDigFltrTimebaseSrc(SetCOCtrTimebaseDigFltrTimebaseSrcRequest) returns (SetCOCtrTimebaseDigFltrTimebaseSrcResponse);
  rpc SetCOCtrTimebaseDigSyncEnable(SetCOCtrTimebaseDigSyncEnableRequest) returns (SetCOCtrTimebaseDigSyncEnableResponse);
  rpc SetCOCtrTimebaseMasterTimebaseDiv(SetCOCtrTimebaseMasterTimebaseDivRequest) returns (SetCOCtrTimebaseMasterTimebaseDivResponse);
  rpc SetCOCtrTimebaseRate(SetCOCtrTimebaseRateRequest) returns (SetCOCtrTimebaseRateResponse);
  rpc SetCOCtrTimebaseSrc(SetCOCtrTimebaseSrcRequest) returns (SetCOCtrTimebaseSrcResponse);
  rpc SetCODataXferMech(SetCODataXferMechRequest) returns (SetCODataXferMechResponse);
  rpc SetCODataXferReqCond(SetCODataXferReqCondRequest) returns (SetCODataXferReqCondResponse);
  rpc SetCOEnableInitialDelayOnRetrigger(SetCOEnableInitialDelayOnRetriggerRequest) returns (SetCOEnableInitialDelayOnRetriggerResponse);
  rpc SetCOMemMapEnable(SetCOMemMapEnableRequest) returns (SetCOMemMapEnableResponse);
  rpc SetCOPrescaler(SetCOPrescalerRequest) returns (SetCOPrescalerResponse);
  rpc SetCOPulseDutyCyc(SetCOPulseDutyCycRequest) returns (SetCOPulseDutyCycResponse);
  rpc SetCOPulseFreq(SetCOPulseFreqRequest) returns (SetCOPulseFreqResponse);
  rpc SetCOPulseFreqInitialDelay(SetCOPulseFreqInitialDelayRequest) returns (SetCOPulseFreqInitialDelayResponse);
  rpc SetCOPulseFreqUnits(SetCOPulseFreqUnitsRequest) returns (SetCOPulseFreqUnitsResponse);
  rpc SetCOPulseHighTicks(SetCOPulseHighTicksRequest) returns (SetCOPulseHighTicksResponse);
  rpc SetCOPulseHighTime(SetCOPulseHighTimeRequest) returns (SetCOPulseHighTimeResponse);
  rpc SetCOPulseIdleState(SetCOPulseIdleStateRequest) returns (SetCOPulseIdleStateResponse);
  rpc SetCOPulseLowTicks(SetCOPulseLowTicksRequest) returns (SetCOPulseLowTicksResponse);
  rpc SetCOPulseLowTime(SetCOPulseLowTimeRequest) returns (SetCOPulseLowTimeResponse);
  rpc SetCOPulseTerm(SetCOPulseTermRequest) returns (SetCOPulseTermResponse);
  rpc SetCOPulseTicksInitialDelay(SetCOPulseTicksInitialDelayRequest) returns (SetCOPulseTicksInitialDelayResponse);
  rpc SetCOPulseTimeInitialDelay(SetCOPulseTimeInitialDelayRequest) returns (SetCOPulseTimeInitialDelayResponse);
  rpc SetCOPulseTimeUnits(SetCOPulseTimeUnitsRequest) returns (SetCOPulseTimeUnitsResponse);
  rpc SetCOUsbXferReqCount(SetCOUsbXferReqCountRequest) returns (SetCOUsbXferReqCountResponse);
  rpc SetCOUsbXferReqSize(SetCOUsbXferReqSizeRequest) returns (SetCOUsbXferReqSizeResponse);
  rpc SetCOUseOnlyOnBrdMem(SetCOUseOnlyOnBrdMemRequest) returns (SetCOUseOnlyOnBrdMemResponse);
  rpc SetCalAccConnectionCount(SetCalAccConnectionCountRequest) returns (SetCalAccConnectionCountResponse);
  rpc SetCalUserDefinedInfo(SetCalUserDefinedInfoRequest) returns (SetCalUserDefinedInfoResponse);
  rpc SetChanDescr(SetChanDescrRequest) returns (SetChanDescrResponse);
  rpc SetChanSyncUnlockBehavior(SetChanSyncUnlockBehaviorRequest) returns (SetChanSyncUnlockBehaviorResponse);
  rpc SetDIAcquireOn(SetDIAcquireOnRequest) returns (SetDIAcquireOnResponse);
  rpc SetDIDataXferMech(SetDIDataXferMechRequest) returns (SetDIDataXferMechResponse);
  rpc SetDIDataXferReqCond(SetDIDataXferReqCondRequest) returns (SetDIDataXferReqCondResponse);
  rpc SetDIDigFltrEnable(SetDIDigFltrEnableRequest) returns (SetDIDigFltrEnableResponse);
  rpc SetDIDigFltrEnableBusMode(SetDIDigFltrEnableBusModeRequest) returns (SetDIDigFltrEnableBusModeResponse);
  rpc SetDIDigFltrMinPulseWidth(SetDIDigFltrMinPulseWidthRequest) returns (SetDIDigFltrMinPulseWidthResponse);
  rpc SetDIDigFltrTimebaseRate(SetDIDigFltrTimebaseRateRequest) returns (SetDIDigFltrTimebaseRateResponse);
  rpc SetDIDigFltrTimebaseSrc(SetDIDigFltrTimebaseSrcRequest) returns (SetDIDigFltrTimebaseSrcResponse);
  rpc SetDIDigSyncEnable(SetDIDigSyncEnableRequest) returns (SetDIDigSyncEnableResponse);
  rpc SetDIInvertLines(SetDIInvertLinesRequest) returns (SetDIInvertLinesResponse);
  rpc SetDILogicFamily(SetDILogicFamilyRequest) returns (SetDILogicFamilyResponse);
  rpc SetDIMemMapEnable(SetDIMemMapEnableRequest) returns (SetDIMemMapEnableResponse);
  rpc SetDITristate(SetDITristateRequest) returns (SetDITristateResponse);
  rpc SetDIUsbXferReqCount(SetDIUsbXferReqCountRequest) returns (SetDIUsbXferReqCountResponse);
  rpc SetDIUsbXferReqSize(SetDIUsbXferReqSizeRequest) returns (SetDIUsbXferReqSizeResponse);
  rpc SetDODataXferMech(SetDODataXferMechRequest) returns (SetDODataXferMechResponse);
  rpc SetDODataXferReqCond(SetDODataXferReqCondRequest) returns (SetDODataXferReqCondResponse);
  rpc SetDOGenerateOn(SetDOGenerateOnRequest) returns (SetDOGenerateOnResponse);
  rpc SetDOInvertLines(SetDOInvertLinesRequest) returns (SetDOInvertLinesResponse);
  rpc SetDOLineStatesDoneState(SetDOLineStatesDoneStateRequest) returns (SetDOLineStatesDoneStateResponse);
  rpc SetDOLineStatesPausedState(SetDOLineStatesPausedStateRequest) returns (SetDOLineStatesPausedStateResponse);
  rpc SetDOLineStatesStartState(SetDOLineStatesStartStateRequest) returns (SetDOLineStatesStartStateResponse);
  rpc SetDOLogicFamily(SetDOLogicFamilyRequest) returns (SetDOLogicFamilyResponse);
  rpc SetDOMemMapEnable(SetDOMemMapEnableRequest) returns (SetDOMemMapEnableResponse);
  rpc SetDOOutputDriveType(SetDOOutputDriveTypeRequest) returns (SetDOOutputDriveTypeResponse);
  rpc SetDOOvercurrentAutoReenable(SetDOOvercurrentAutoReenableRequest) returns (SetDOOvercurrentAutoReenableResponse);
  rpc SetDOOvercurrentLimit(SetDOOvercurrentLimitRequest) returns (SetDOOvercurrentLimitResponse);
  rpc SetDOOvercurrentReenablePeriod(SetDOOvercurrentReenablePeriodRequest) returns (SetDOOvercurrentReenablePeriodResponse);
  rpc SetDOTristate(SetDOTristateRequest) returns (SetDOTristateResponse);
  rpc SetDOUsbXferReqCount(SetDOUsbXferReqCountRequest) returns (SetDOUsbXferReqCountResponse);
  rpc SetDOUsbXferReqSize(SetDOUsbXferReqSizeRequest) returns (SetDOUsbXferReqSizeResponse);
  rpc SetDOUseOnlyOnBrdMem(SetDOUseOnlyOnBrdMemRequest) returns (SetDOUseOnlyOnBrdMemResponse);
  rpc SetDigitalLogicFamilyPowerUpState(SetDigitalLogicFamilyPowerUpStateRequest) returns (SetDigitalLogicFamilyPowerUpStateResponse);
  rpc SetFirstSampClkWhen(SetFirstSampClkWhenRequest) returns (SetFirstSampClkWhenResponse);
  rpc SetPhysicalChanName(SetPhysicalChanNameRequest) returns (SetPhysicalChanNameResponse);
  rpc SetStartTrigTrigWhen(SetStartTrigTrigWhenRequest) returns (SetStartTrigTrigWhenResponse);
  rpc SetSyncPulseTimeWhen(SetSyncPulseTimeWhenRequest) returns (SetSyncPulseTimeWhenResponse);
  rpc StartNewFile(StartNewFileRequest) returns (StartNewFileResponse);
  rpc StartTask(StartTaskRequest) returns (StartTaskResponse);
  rpc StopTask(StopTaskRequest) returns (StopTaskResponse);
  rpc TaskControl(TaskControlRequest) returns (TaskControlResponse);
  rpc TristateOutputTerm(TristateOutputTermRequest) returns (TristateOutputTermResponse);
  rpc UnreserveNetworkDevice(UnreserveNetworkDeviceRequest) returns (UnreserveNetworkDeviceResponse);
  rpc WaitForNextSampleClock(WaitForNextSampleClockRequest) returns (WaitForNextSampleClockResponse);
  rpc WaitForValidTimestamp(WaitForValidTimestampRequest) returns (WaitForValidTimestampResponse);
  rpc WaitUntilTaskDone(WaitUntilTaskDoneRequest) returns (WaitUntilTaskDoneResponse);
  rpc WriteAnalogF64(WriteAnalogF64Request) returns (WriteAnalogF64Response);
  rpc WriteAnalogScalarF64(WriteAnalogScalarF64Request) returns (WriteAnalogScalarF64Response);
  rpc WriteBinaryI16(WriteBinaryI16Request) returns (WriteBinaryI16Response);
  rpc WriteBinaryI32(WriteBinaryI32Request) returns (WriteBinaryI32Response);
  rpc WriteBinaryU16(WriteBinaryU16Request) returns (WriteBinaryU16Response);
  rpc WriteBinaryU32(WriteBinaryU32Request) returns (WriteBinaryU32Response);
  rpc WriteCtrFreq(WriteCtrFreqRequest) returns (WriteCtrFreqResponse);
  rpc WriteCtrFreqScalar(WriteCtrFreqScalarRequest) returns (WriteCtrFreqScalarResponse);
  rpc WriteCtrTicks(WriteCtrTicksRequest) returns (WriteCtrTicksResponse);
  rpc WriteCtrTicksScalar(WriteCtrTicksScalarRequest) returns (WriteCtrTicksScalarResponse);
  rpc WriteCtrTime(WriteCtrTimeRequest) returns (WriteCtrTimeResponse);
  rpc WriteCtrTimeScalar(WriteCtrTimeScalarRequest) returns (WriteCtrTimeScalarResponse);
  rpc WriteDigitalLines(WriteDigitalLinesRequest) returns (WriteDigitalLinesResponse);
  rpc WriteDigitalScalarU32(WriteDigitalScalarU32Request) returns (WriteDigitalScalarU32Response);
  rpc WriteDigitalU16(WriteDigitalU16Request) returns (WriteDigitalU16Response);
  rpc WriteDigitalU32(WriteDigitalU32Request) returns (WriteDigitalU32Response);
  rpc WriteDigitalU8(WriteDigitalU8Request) returns (WriteDigitalU8Response);
  rpc WriteRaw(WriteRawRequest) returns (WriteRawResponse);
  rpc WriteToTEDSFromArray(WriteToTEDSFromArrayRequest) returns (WriteToTEDSFromArrayResponse);
  rpc WriteToTEDSFromFile(WriteToTEDSFromFileRequest) returns (WriteToTEDSFromFileResponse);
}

enum NiDAQmxAttributes {
  NIDAQMX_ATTRIBUTE_UNSPECIFIED = 0;
}

enum ACExcitWireMode {
  AC_EXCIT_WIRE_MODE_UNSPECIFIED = 0;
  AC_EXCIT_WIRE_MODE_4_WIRE = 4;
  AC_EXCIT_WIRE_MODE_5_WIRE = 5;
  AC_EXCIT_WIRE_MODE_6_WIRE = 6;
}

enum ADCTimingMode {
  ADC_TIMING_MODE_UNSPECIFIED = 0;
  ADC_TIMING_MODE_AUTOMATIC = 16097;
  ADC_TIMING_MODE_HIGH_RESOLUTION = 10195;
  ADC_TIMING_MODE_HIGH_SPEED = 14712;
  ADC_TIMING_MODE_BEST_50_HZ_REJECTION = 14713;
  ADC_TIMING_MODE_BEST_60_HZ_REJECTION = 14714;
  ADC_TIMING_MODE_CUSTOM = 10137;
}

enum AIMeasurementType {
  AI_MEASUREMENT_TYPE_UNSPECIFIED = 0;
  AI_MEASUREMENT_TYPE_VOLTAGE = 10322;
  AI_MEASUREMENT_TYPE_VOLTAGE_RMS = 10350;
  AI_MEASUREMENT_TYPE_CURRENT = 10134;
  AI_MEASUREMENT_TYPE_CURRENT_RMS = 10351;
  AI_MEASUREMENT_TYPE_VOLTAGE_CUSTOM_WITH_EXCITATION = 10323;
  AI_MEASUREMENT_TYPE_BRIDGE = 15908;
  AI_MEASUREMENT_TYPE_FREQ_VOLTAGE = 10181;
  AI_MEASUREMENT_TYPE_RESISTANCE = 10278;
  AI_MEASUREMENT_TYPE_TEMP_TC = 10303;
  AI_MEASUREMENT_TYPE_TEMP_THRMSTR = 10302;
  AI_MEASUREMENT_TYPE_TEMP_RTD = 10301;
  AI_MEASUREMENT_TYPE_TEMP_BUILT_IN_SENSOR = 10311;
  AI_MEASUREMENT_TYPE_STRAIN_GAGE = 10300;
  AI_MEASUREMENT_TYPE_ROSETTE_STRAIN_GAGE = 15980;
  AI_MEASUREMENT_TYPE_POSITION_LVDT = 10352;
  AI_MEASUREMENT_TYPE_POSITION_RVDT = 10353;
  AI_MEASUREMENT_TYPE_POSITION_EDDY_CURRENT_PROXIMITY_PROBE = 14835;
  AI_MEASUREMENT_TYPE_ACCELEROMETER = 10356;
  AI_MEASUREMENT_TYPE_ACCELERATION_CHARGE = 16104;
  AI_MEASUREMENT_TYPE_ACCELERATION_4_WIRE_DC_VOLTAGE = 16106;
  AI_MEASUREMENT_TYPE_VELOCITY_IEPE_SENSOR = 15966;
  AI_MEASUREMENT_TYPE_FORCE_BRIDGE = 15899;
  AI_MEASUREMENT_TYPE_FORCE_IEPE_SENSOR = 15895;
  AI_MEASUREMENT_TYPE_PRESSURE_BRIDGE = 15902;
  AI_MEASUREMENT_TYPE_SOUND_PRESSURE_MICROPHONE = 10354;
  AI_MEASUREMENT_TYPE_TORQUE_BRIDGE = 15905;
  AI_MEASUREMENT_TYPE_TEDS_SENSOR = 12531;
  AI_MEASUREMENT_TYPE_CHARGE = 16105;
}

enum AOIdleOutputBehavior {
  AO_IDLE_OUTPUT_BEHAVIOR_UNSPECIFIED = 0;
  AO_IDLE_OUTPUT_BEHAVIOR_ZERO_VOLTS = 12526;
  AO_IDLE_OUTPUT_BEHAVIOR_HIGH_IMPEDANCE = 12527;
  AO_IDLE_OUTPUT_BEHAVIOR_MAINTAIN_EXISTING_VALUE = 12528;
}

enum AOOutputChannelType {
  AO_OUTPUT_CHANNEL_TYPE_UNSPECIFIED = 0;
  AO_OUTPUT_CHANNEL_TYPE_VOLTAGE = 10322;
  AO_OUTPUT_CHANNEL_TYPE_CURRENT = 10134;
  AO_OUTPUT_CHANNEL_TYPE_FUNC_GEN = 14750;
}

enum AccelChargeSensitivityUnits {
  ACCEL_CHARGE_SENSITIVITY_UNITS_UNSPECIFIED = 0;
  ACCEL_CHARGE_SENSITIVITY_UNITS_PICO_COULOMBS_PER_G = 16099;
  ACCEL_CHARGE_SENSITIVITY_UNITS_PICO_COULOMBS_PER_METERS_PER_SECOND_SQUARED = 16100;
  ACCEL_CHARGE_SENSITIVITY_UNITS_PICO_COULOMBS_PER_INCHES_PER_SECOND_SQUARED = 16101;
}

enum AccelSensitivityUnits1 {
  ACCEL_SENSITIVITY_UNITS1_UNSPECIFIED = 0;
  ACCEL_SENSITIVITY_UNITS1_M_VOLTS_PER_G = 12509;
  ACCEL_SENSITIVITY_UNITS1_VOLTS_PER_G = 12510;
}

enum AccelUnits2 {
  ACCEL_UNITS2_UNSPECIFIED = 0;
  ACCEL_UNITS2_ACCEL_UNIT_G = 10186;
  ACCEL_UNITS2_METERS_PER_SECOND_SQUARED = 12470;
  ACCEL_UNITS2_INCHES_PER_SECOND_SQUARED = 12471;
  ACCEL_UNITS2_FROM_CUSTOM_SCALE = 10065;
}

enum AcquisitionType {
  ACQUISITION_TYPE_UNSPECIFIED = 0;
  ACQUISITION_TYPE_FINITE_SAMPS = 10178;
  ACQUISITION_TYPE_CONT_SAMPS = 10123;
  ACQUISITION_TYPE_HW_TIMED_SINGLE_POINT = 12522;
}

enum AngleUnits1 {
  ANGLE_UNITS1_UNSPECIFIED = 0;
  ANGLE_UNITS1_DEGREES = 10146;
  ANGLE_UNITS1_RADIANS = 10273;
  ANGLE_UNITS1_FROM_CUSTOM_SCALE = 10065;
}

enum AngleUnits2 {
  ANGLE_UNITS2_UNSPECIFIED = 0;
  ANGLE_UNITS2_DEGREES = 10146;
  ANGLE_UNITS2_RADIANS = 10273;
  ANGLE_UNITS2_TICKS = 10304;
  ANGLE_UNITS2_FROM_CUSTOM_SCALE = 10065;
}

enum AngularVelocityUnits {
  ANGULAR_VELOCITY_UNITS_UNSPECIFIED = 0;
  ANGULAR_VELOCITY_UNITS_RPM = 16080;
  ANGULAR_VELOCITY_UNITS_RADIANS_PER_SECOND = 16081;
  ANGULAR_VELOCITY_UNITS_DEGREES_PER_SECOND = 16082;
  ANGULAR_VELOCITY_UNITS_FROM_CUSTOM_SCALE = 10065;
}

enum AutoZeroType1 {
  AUTO_ZERO_TYPE1_UNSPECIFIED = 0;
  AUTO_ZERO_TYPE1_NONE = 10230;
  AUTO_ZERO_TYPE1_ONCE = 10244;
  AUTO_ZERO_TYPE1_EVERY_SAMPLE = 10164;
}

enum BridgeConfiguration1 {
  BRIDGE_CONFIGURATION1_UNSPECIFIED = 0;
  BRIDGE_CONFIGURATION1_FULL_BRIDGE = 10182;
  BRIDGE_CONFIGURATION1_HALF_BRIDGE = 10187;
  BRIDGE_CONFIGURATION1_QUARTER_BRIDGE = 10270;
  BRIDGE_CONFIGURATION1_NO_BRIDGE = 10228;
}

enum BridgeElectricalUnits {
  BRIDGE_ELECTRICAL_UNITS_UNSPECIFIED = 0;
  BRIDGE_ELECTRICAL_UNITS_VOLTS_PER_VOLT = 15896;
  BRIDGE_ELECTRICAL_UNITS_M_VOLTS_PER_VOLT = 15897;
}

enum BridgePhysicalUnits {
  BRIDGE_PHYSICAL_UNITS_UNSPECIFIED = 0;
  BRIDGE_PHYSICAL_UNITS_NEWTONS = 15875;
  BRIDGE_PHYSICAL_UNITS_POUNDS = 15876;
  BRIDGE_PHYSICAL_UNITS_KILOGRAM_FORCE = 15877;
  BRIDGE_PHYSICAL_UNITS_PASCALS = 10081;
  BRIDGE_PHYSICAL_UNITS_POUNDS_PER_SQUARE_INCH = 15879;
  BRIDGE_PHYSICAL_UNITS_BAR = 15880;
  BRIDGE_PHYSICAL_UNITS_NEWTON_METERS = 15881;
  BRIDGE_PHYSICAL_UNITS_INCH_OUNCES = 15882;
  BRIDGE_PHYSICAL_UNITS_INCH_POUNDS = 15883;
  BRIDGE_PHYSICAL_UNITS_FOOT_POUNDS = 15884;
}

enum BridgeShuntCalSource {
  BRIDGE_SHUNT_CAL_SOURCE_UNSPECIFIED = 0;
  BRIDGE_SHUNT_CAL_SOURCE_BUILT_IN = 10200;
  BRIDGE_SHUNT_CAL_SOURCE_USER_PROVIDED = 10167;
}

enum BridgeUnits {
  BRIDGE_UNITS_UNSPECIFIED = 0;
  BRIDGE_UNITS_VOLTS_PER_VOLT = 15896;
  BRIDGE_UNITS_M_VOLTS_PER_VOLT = 15897;
  BRIDGE_UNITS_FROM_CUSTOM_SCALE = 10065;
  BRIDGE_UNITS_FROM_TEDS = 12516;
}

enum CIMeasurementType {
  CI_MEASUREMENT_TYPE_UNSPECIFIED = 0;
  CI_MEASUREMENT_TYPE_COUNT_EDGES = 10125;
  CI_MEASUREMENT_TYPE_FREQ = 10179;
  CI_MEASUREMENT_TYPE_PERIOD = 10256;
  CI_MEASUREMENT_TYPE_PULSE_WIDTH = 10359;
  CI_MEASUREMENT_TYPE_SEMI_PERIOD = 10289;
  CI_MEASUREMENT_TYPE_PULSE_FREQUENCY = 15864;
  CI_MEASUREMENT_TYPE_PULSE_TIME = 15865;
  CI_MEASUREMENT_TYPE_PULSE_TICKS = 15866;
  CI_MEASUREMENT_TYPE_DUTY_CYCLE = 16070;
  CI_MEASUREMENT_TYPE_POSITION_ANG_ENCODER = 10360;
  CI_MEASUREMENT_TYPE_POSITION_LIN_ENCODER = 10361;
  CI_MEASUREMENT_TYPE_VELOCITY_ANG_ENCODER = 16078;
  CI_MEASUREMENT_TYPE_VELOCITY_LIN_ENCODER = 16079;
  CI_MEASUREMENT_TYPE_TWO_EDGE_SEP = 10267;
  CI_MEASUREMENT_TYPE_GPS_TIMESTAMP = 10362;
}

enum CJCSource1 {
  CJC_SOURCE1_UNSPECIFIED = 0;
  CJC_SOURCE1_BUILT_IN = 10200;
  CJC_SOURCE1_CONST_VAL = 10116;
  CJC_SOURCE1_CHAN = 10113;
}

enum COOutputType {
  CO_OUTPUT_TYPE_UNSPECIFIED = 0;
  CO_OUTPUT_TYPE_PULSE_TIME = 10269;
  CO_OUTPUT_TYPE_PULSE_FREQ = 10119;
  CO_OUTPUT_TYPE_PULSE_TICKS = 10268;
}

enum ChannelType {
  CHANNEL_TYPE_UNSPECIFIED = 0;
  CHANNEL_TYPE_AI = 10100;
  CHANNEL_TYPE_AO = 10102;
  CHANNEL_TYPE_DI = 10151;
  CHANNEL_TYPE_DO = 10153;
  CHANNEL_TYPE_CI = 10131;
  CHANNEL_TYPE_CO = 10132;
}

enum ChargeUnits {
  CHARGE_UNITS_UNSPECIFIED = 0;
  CHARGE_UNITS_COULOMBS = 16102;
  CHARGE_UNITS_PICO_COULOMBS = 16103;
  CHARGE_UNITS_FROM_CUSTOM_SCALE = 10065;
}

enum ConstrainedGenMode {
  CONSTRAINED_GEN_MODE_UNSPECIFIED = 0;
  CONSTRAINED_GEN_MODE_UNCONSTRAINED = 14708;
  CONSTRAINED_GEN_MODE_FIXED_HIGH_FREQ = 14709;
  CONSTRAINED_GEN_MODE_FIXED_LOW_FREQ = 14710;
  CONSTRAINED_GEN_MODE_FIXED_50_PERCENT_DUTY_CYCLE = 14711;
}

enum CountDirection1 {
  COUNT_DIRECTION1_UNSPECIFIED = 0;
  COUNT_DIRECTION1_COUNT_UP = 10128;
  COUNT_DIRECTION1_COUNT_DOWN = 10124;
  COUNT_DIRECTION1_EXT_CONTROLLED = 10326;
}

enum CounterFrequencyMethod {
  COUNTER_FREQUENCY_METHOD_UNSPECIFIED = 0;
  COUNTER_FREQUENCY_METHOD_LOW_FREQ_1_CTR = 10105;
  COUNTER_FREQUENCY_METHOD_HIGH_FREQ_2_CTR = 10157;
  COUNTER_FREQUENCY_METHOD_LARGE_RNG_2_CTR = 10205;
  COUNTER_FREQUENCY_METHOD_DYN_AVG = 16065;
}

enum Coupling1 {
  COUPLING1_UNSPECIFIED = 0;
  COUPLING1_AC = 10045;
  COUPLING1_DC = 10050;
  COUPLING1_GND = 10066;
}

enum CurrentShuntResistorLocation1 {
  CURRENT_SHUNT_RESISTOR_LOCATION1_UNSPECIFIED = 0;
  CURRENT_SHUNT_RESISTOR_LOCATION1_INTERNAL = 10200;
  CURRENT_SHUNT_RESISTOR_LOCATION1_EXTERNAL = 10167;
}

enum CurrentShuntResistorLocationWithDefault {
  CURRENT_SHUNT_RESISTOR_LOCATION_WITH_DEFAULT_UNSPECIFIED = 0;
  CURRENT_SHUNT_RESISTOR_LOCATION_WITH_DEFAULT_DEFAULT = -1;
  CURRENT_SHUNT_RESISTOR_LOCATION_WITH_DEFAULT_INTERNAL = 10200;
  CURRENT_SHUNT_RESISTOR_LOCATION_WITH_DEFAULT_EXTERNAL = 10167;
}

enum CurrentUnits1 {
  CURRENT_UNITS1_UNSPECIFIED = 0;
  CURRENT_UNITS1_AMPS = 10342;
  CURRENT_UNITS1_FROM_CUSTOM_SCALE = 10065;
  CURRENT_UNITS1_FROM_TEDS = 12516;
}

enum CurrentUnits2 {
  CURRENT_UNITS2_UNSPECIFIED = 0;
  CURRENT_UNITS2_AMPS = 10342;
  CURRENT_UNITS2_FROM_CUSTOM_SCALE = 10065;
}

enum DataJustification1 {
  DATA_JUSTIFICATION1_UNSPECIFIED = 0;
  DATA_JUSTIFICATION1_RIGHT_JUSTIFIED = 10279;
  DATA_JUSTIFICATION1_LEFT_JUSTIFIED = 10209;
}

enum DataTransferMechanism {
  DATA_TRANSFER_MECHANISM_UNSPECIFIED = 0;
  DATA_TRANSFER_MECHANISM_DMA = 10054;
  DATA_TRANSFER_MECHANISM_INTERRUPTS = 10204;
  DATA_TRANSFER_MECHANISM_PROGRAMMED_IO = 10264;
  DATA_TRANSFER_MECHANISM_US_BBULK = 12590;
}

enum DigitalDriveType {
  DIGITAL_DRIVE_TYPE_UNSPECIFIED = 0;
  DIGITAL_DRIVE_TYPE_ACTIVE_DRIVE = 12573;
  DIGITAL_DRIVE_TYPE_OPEN_COLLECTOR = 12574;
}

enum DigitalLineState {
  DIGITAL_LINE_STATE_UNSPECIFIED = 0;
  DIGITAL_LINE_STATE_HIGH = 10192;
  DIGITAL_LINE_STATE_LOW = 10214;
  DIGITAL_LINE_STATE_TRISTATE = 10310;
  DIGITAL_LINE_STATE_NO_CHANGE = 10160;
}

enum DigitalPatternCondition1 {
  DIGITAL_PATTERN_CONDITION1_UNSPECIFIED = 0;
  DIGITAL_PATTERN_CONDITION1_PATTERN_MATCHES = 10254;
  DIGITAL_PATTERN_CONDITION1_PATTERN_DOES_NOT_MATCH = 10253;
}

enum DigitalWidthUnits3 {
  DIGITAL_WIDTH_UNITS3_UNSPECIFIED = 0;
  DIGITAL_WIDTH_UNITS3_SECONDS = 10364;
}

enum DigitalWidthUnits4 {
  DIGITAL_WIDTH_UNITS4_UNSPECIFIED = 0;
  DIGITAL_WIDTH_UNITS4_SECONDS = 10364;
  DIGITAL_WIDTH_UNITS4_SAMPLE_CLK_PERIODS = 10286;
}

enum EddyCurrentProxProbeSensitivityUnits {
  EDDY_CURRENT_PROX_PROBE_SENSITIVITY_UNITS_UNSPECIFIED = 0;
  EDDY_CURRENT_PROX_PROBE_SENSITIVITY_UNITS_M_VOLTS_PER_MIL = 14836;
  EDDY_CURRENT_PROX_PROBE_SENSITIVITY_UNITS_VOLTS_PER_MIL = 14837;
  EDDY_CURRENT_PROX_PROBE_SENSITIVITY_UNITS_M_VOLTS_PER_MILLIMETER = 14838;
  EDDY_CURRENT_PROX_PROBE_SENSITIVITY_UNITS_VOLTS_PER_MILLIMETER = 14839;
  EDDY_CURRENT_PROX_PROBE_SENSITIVITY_UNITS_M_VOLTS_PER_MICRON = 14840;
}

enum Edge1 {
  EDGE1_UNSPECIFIED = 0;
  EDGE1_RISING = 10280;
  EDGE1_FALLING = 10171;
}

enum EncoderType2 {
  ENCODER_TYPE2_UNSPECIFIED = 0;
  ENCODER_TYPE2_X_1 = 10090;
  ENCODER_TYPE2_X_2 = 10091;
  ENCODER_TYPE2_X_4 = 10092;
  ENCODER_TYPE2_TWO_PULSE_COUNTING = 10313;
}

enum EncoderZIndexPhase1 {
  ENCODER_Z_INDEX_PHASE1_UNSPECIFIED = 0;
  ENCODER_Z_INDEX_PHASE1_A_HIGH_B_HIGH = 10040;
  ENCODER_Z_INDEX_PHASE1_A_HIGH_B_LOW = 10041;
  ENCODER_Z_INDEX_PHASE1_A_LOW_B_HIGH = 10042;
  ENCODER_Z_INDEX_PHASE1_A_LOW_B_LOW = 10043;
}

enum EveryNSamplesEventType {
  EVERY_N_SAMPLES_EVENT_TYPE_UNSPECIFIED = 0;
  EVERY_N_SAMPLES_EVENT_TYPE_ACQUIRED_INTO_BUFFER = 1;
  EVERY_N_SAMPLES_EVENT_TYPE_TRANSFERRED_FROM_BUFFER = 2;
}

enum ExcitationDCorAC {
  EXCITATION_D_COR_AC_UNSPECIFIED = 0;
  EXCITATION_D_COR_AC_DC = 10050;
  EXCITATION_D_COR_AC_AC = 10045;
}

enum ExcitationIdleOutputBehavior {
  EXCITATION_IDLE_OUTPUT_BEHAVIOR_UNSPECIFIED = 0;
  EXCITATION_IDLE_OUTPUT_BEHAVIOR_ZERO_VOLTS_OR_AMPS = 12526;
  EXCITATION_IDLE_OUTPUT_BEHAVIOR_MAINTAIN_EXISTING_VALUE = 12528;
}

enum ExcitationSource {
  EXCITATION_SOURCE_UNSPECIFIED = 0;
  EXCITATION_SOURCE_INTERNAL = 10200;
  EXCITATION_SOURCE_EXTERNAL = 10167;
  EXCITATION_SOURCE_NONE = 10230;
}

enum ExcitationVoltageOrCurrent {
  EXCITATION_VOLTAGE_OR_CURRENT_UNSPECIFIED = 0;
  EXCITATION_VOLTAGE_OR_CURRENT_VOLTAGE = 10322;
  EXCITATION_VOLTAGE_OR_CURRENT_CURRENT = 10134;
}

enum FilterResponse {
  FILTER_RESPONSE_UNSPECIFIED = 0;
  FILTER_RESPONSE_CONSTANT_GROUP_DELAY = 16075;
  FILTER_RESPONSE_BUTTERWORTH = 16076;
  FILTER_RESPONSE_ELLIPTICAL = 16077;
  FILTER_RESPONSE_HARDWARE_DEFINED = 10191;
}

enum FilterResponse1 {
  FILTER_RESPONSE1_UNSPECIFIED = 0;
  FILTER_RESPONSE1_COMB = 16152;
  FILTER_RESPONSE1_BESSEL = 16153;
  FILTER_RESPONSE1_BRICKWALL = 16155;
  FILTER_RESPONSE1_BUTTERWORTH = 16076;
}

enum FilterType2 {
  FILTER_TYPE2_UNSPECIFIED = 0;
  FILTER_TYPE2_LOWPASS = 16071;
  FILTER_TYPE2_HIGHPASS = 16072;
  FILTER_TYPE2_BANDPASS = 16073;
  FILTER_TYPE2_NOTCH = 16074;
  FILTER_TYPE2_CUSTOM = 10137;
}

enum ForceIEPESensorSensitivityUnits {
  FORCE_IEPE_SENSOR_SENSITIVITY_UNITS_UNSPECIFIED = 0;
  FORCE_IEPE_SENSOR_SENSITIVITY_UNITS_M_VOLTS_PER_NEWTON = 15891;
  FORCE_IEPE_SENSOR_SENSITIVITY_UNITS_M_VOLTS_PER_POUND = 15892;
}

enum ForceIEPEUnits {
  FORCE_IEPE_UNITS_UNSPECIFIED = 0;
  FORCE_IEPE_UNITS_NEWTONS = 15875;
  FORCE_IEPE_UNITS_POUNDS = 15876;
  FORCE_IEPE_UNITS_FROM_CUSTOM_SCALE = 10065;
}

enum ForceUnits {
  FORCE_UNITS_UNSPECIFIED = 0;
  FORCE_UNITS_NEWTONS = 15875;
  FORCE_UNITS_POUNDS = 15876;
  FORCE_UNITS_KILOGRAM_FORCE = 15877;
  FORCE_UNITS_FROM_CUSTOM_SCALE = 10065;
}

enum FrequencyUnits {
  FREQUENCY_UNITS_UNSPECIFIED = 0;
  FREQUENCY_UNITS_HZ = 10373;
  FREQUENCY_UNITS_FROM_CUSTOM_SCALE = 10065;
}

enum FrequencyUnits2 {
  FREQUENCY_UNITS2_UNSPECIFIED = 0;
  FREQUENCY_UNITS2_HZ = 10373;
}

enum FrequencyUnits3 {
  FREQUENCY_UNITS3_UNSPECIFIED = 0;
  FREQUENCY_UNITS3_HZ = 10373;
  FREQUENCY_UNITS3_TICKS = 10304;
  FREQUENCY_UNITS3_FROM_CUSTOM_SCALE = 10065;
}

enum FuncGenType {
  FUNC_GEN_TYPE_UNSPECIFIED = 0;
  FUNC_GEN_TYPE_SINE = 14751;
  FUNC_GEN_TYPE_TRIANGLE = 14752;
  FUNC_GEN_TYPE_SQUARE = 14753;
  FUNC_GEN_TYPE_SAWTOOTH = 14754;
}

enum GpsSignalType1 {
  GPS_SIGNAL_TYPE1_UNSPECIFIED = 0;
  GPS_SIGNAL_TYPE1_IRIGB = 10070;
  GPS_SIGNAL_TYPE1_PPS = 10080;
  GPS_SIGNAL_TYPE1_NONE = 10230;
}

enum GroupBy {
  option allow_alias = true;
  GROUP_BY_UNSPECIFIED = 0;
  GROUP_BY_GROUP_BY_CHANNEL = 0;
  GROUP_BY_GROUP_BY_SCAN_NUMBER = 1;
}

enum InputDataTransferCondition {
  INPUT_DATA_TRANSFER_CONDITION_UNSPECIFIED = 0;
  INPUT_DATA_TRANSFER_CONDITION_ON_BRD_MEM_MORE_THAN_HALF_FULL = 10237;
  INPUT_DATA_TRANSFER_CONDITION_ON_BRD_MEM_NOT_EMPTY = 10241;
  INPUT_DATA_TRANSFER_CONDITION_ONBRD_MEM_CUSTOM_THRESHOLD = 12577;
  INPUT_DATA_TRANSFER_CONDITION_WHEN_ACQ_COMPLETE = 12546;
}

enum InputTermCfg {
  INPUT_TERM_CFG_UNSPECIFIED = 0;
  INPUT_TERM_CFG_RSE = 10083;
  INPUT_TERM_CFG_NRSE = 10078;
  INPUT_TERM_CFG_DIFF = 10106;
  INPUT_TERM_CFG_PSEUDO_DIFF = 12529;
}

enum InputTermCfg2 {
  INPUT_TERM_CFG2_UNSPECIFIED = 0;
  INPUT_TERM_CFG2_DIFF = 10106;
  INPUT_TERM_CFG2_RSE = 10083;
}

enum InputTermCfgWithDefault {
  INPUT_TERM_CFG_WITH_DEFAULT_UNSPECIFIED = 0;
  INPUT_TERM_CFG_WITH_DEFAULT_CFG_DEFAULT = -1;
  INPUT_TERM_CFG_WITH_DEFAULT_RSE = 10083;
  INPUT_TERM_CFG_WITH_DEFAULT_NRSE = 10078;
  INPUT_TERM_CFG_WITH_DEFAULT_DIFF = 10106;
  INPUT_TERM_CFG_WITH_DEFAULT_PSEUDO_DIFF = 12529;
}

enum InvertPolarity {
  option allow_alias = true;
  INVERT_POLARITY_UNSPECIFIED = 0;
  INVERT_POLARITY_DO_NOT_INVERT_POLARITY = 0;
  INVERT_POLARITY_INVERT_POLARITY = 1;
}

enum LVDTSensitivityUnits1 {
  LVDT_SENSITIVITY_UNITS1_UNSPECIFIED = 0;
  LVDT_SENSITIVITY_UNITS1_M_VOLTS_PER_VOLT_PER_MILLIMETER = 12506;
  LVDT_SENSITIVITY_UNITS1_M_VOLTS_PER_VOLT_PER_MILLI_INCH = 12505;
}

enum LengthUnits2 {
  LENGTH_UNITS2_UNSPECIFIED = 0;
  LENGTH_UNITS2_METERS = 10219;
  LENGTH_UNITS2_INCHES = 10379;
  LENGTH_UNITS2_FROM_CUSTOM_SCALE = 10065;
}

enum LengthUnits3 {
  LENGTH_UNITS3_UNSPECIFIED = 0;
  LENGTH_UNITS3_METERS = 10219;
  LENGTH_UNITS3_INCHES = 10379;
  LENGTH_UNITS3_TICKS = 10304;
  LENGTH_UNITS3_FROM_CUSTOM_SCALE = 10065;
}

enum Level1 {
  LEVEL1_UNSPECIFIED = 0;
  LEVEL1_HIGH = 10192;
  LEVEL1_LOW = 10214;
}

enum LineGrouping {
  option allow_alias = true;
  LINE_GROUPING_UNSPECIFIED = 0;
  LINE_GROUPING_CHAN_FOR_ALL_LINES = 1;
  LINE_GROUPING_CHAN_PER_LINE = 0;
}

enum LoggingMode {
  LOGGING_MODE_UNSPECIFIED = 0;
  LOGGING_MODE_OFF = 10231;
  LOGGING_MODE_LOG = 15844;
  LOGGING_MODE_LOG_AND_READ = 15842;
}

enum LoggingOperation {
  LOGGING_OPERATION_UNSPECIFIED = 0;
  LOGGING_OPERATION_OPEN = 10437;
  LOGGING_OPERATION_OPEN_OR_CREATE = 15846;
  LOGGING_OPERATION_CREATE_OR_REPLACE = 15847;
  LOGGING_OPERATION_CREATE = 15848;
}

enum LogicFamily {
  LOGIC_FAMILY_UNSPECIFIED = 0;
  LOGIC_FAMILY_2POINT_5_V = 14620;
  LOGIC_FAMILY_3POINT_3_V = 14621;
  LOGIC_FAMILY_5_V = 14619;
}

enum LogicLvlBehavior {
  LOGIC_LVL_BEHAVIOR_UNSPECIFIED = 0;
  LOGIC_LVL_BEHAVIOR_LOGIC_LEVEL_PULL_UP = 16064;
  LOGIC_LVL_BEHAVIOR_NONE = 10230;
}

enum ModulationType {
  MODULATION_TYPE_UNSPECIFIED = 0;
  MODULATION_TYPE_AM = 14756;
  MODULATION_TYPE_FM = 14757;
  MODULATION_TYPE_NONE = 10230;
}

enum OutputDataTransferCondition {
  OUTPUT_DATA_TRANSFER_CONDITION_UNSPECIFIED = 0;
  OUTPUT_DATA_TRANSFER_CONDITION_ON_BRD_MEM_EMPTY = 10235;
  OUTPUT_DATA_TRANSFER_CONDITION_ON_BRD_MEM_HALF_FULL_OR_LESS = 10239;
  OUTPUT_DATA_TRANSFER_CONDITION_ON_BRD_MEM_NOT_FULL = 10242;
}

enum OutputTermCfg {
  OUTPUT_TERM_CFG_UNSPECIFIED = 0;
  OUTPUT_TERM_CFG_RSE = 10083;
  OUTPUT_TERM_CFG_DIFF = 10106;
  OUTPUT_TERM_CFG_PSEUDO_DIFF = 12529;
}

enum Polarity2 {
  POLARITY2_UNSPECIFIED = 0;
  POLARITY2_ACTIVE_HIGH = 10095;
  POLARITY2_ACTIVE_LOW = 10096;
}

enum PressureUnits {
  PRESSURE_UNITS_UNSPECIFIED = 0;
  PRESSURE_UNITS_PASCALS = 10081;
  PRESSURE_UNITS_POUNDS_PER_SQUARE_INCH = 15879;
  PRESSURE_UNITS_BAR = 15880;
  PRESSURE_UNITS_FROM_CUSTOM_SCALE = 10065;
}

enum RTDType1 {
  RTD_TYPE1_UNSPECIFIED = 0;
  RTD_TYPE1_PT_3750 = 12481;
  RTD_TYPE1_PT_3851 = 10071;
  RTD_TYPE1_PT_3911 = 12482;
  RTD_TYPE1_PT_3916 = 10069;
  RTD_TYPE1_PT_3920 = 10053;
  RTD_TYPE1_PT_3928 = 12483;
  RTD_TYPE1_CUSTOM = 10137;
}

enum RVDTSensitivityUnits1 {
  RVDT_SENSITIVITY_UNITS1_UNSPECIFIED = 0;
  RVDT_SENSITIVITY_UNITS1_M_VOLTS_PER_VOLT_PER_DEGREE = 12507;
  RVDT_SENSITIVITY_UNITS1_M_VOLTS_PER_VOLT_PER_RADIAN = 12508;
}

enum RawDataCompressionType {
  RAW_DATA_COMPRESSION_TYPE_UNSPECIFIED = 0;
  RAW_DATA_COMPRESSION_TYPE_NONE = 10230;
  RAW_DATA_COMPRESSION_TYPE_LOSSLESS_PACKING = 12555;
  RAW_DATA_COMPRESSION_TYPE_LOSSY_LSB_REMOVAL = 12556;
}

enum ResistanceConfiguration {
  RESISTANCE_CONFIGURATION_UNSPECIFIED = 0;
  RESISTANCE_CONFIGURATION_2_WIRE = 2;
  RESISTANCE_CONFIGURATION_3_WIRE = 3;
  RESISTANCE_CONFIGURATION_4_WIRE = 4;
}

enum ResistanceUnits1 {
  RESISTANCE_UNITS1_UNSPECIFIED = 0;
  RESISTANCE_UNITS1_OHMS = 10384;
  RESISTANCE_UNITS1_FROM_CUSTOM_SCALE = 10065;
  RESISTANCE_UNITS1_FROM_TEDS = 12516;
}

enum ResistanceUnits2 {
  RESISTANCE_UNITS2_UNSPECIFIED = 0;
  RESISTANCE_UNITS2_OHMS = 10384;
  RESISTANCE_UNITS2_FROM_CUSTOM_SCALE = 10065;
}

enum ResolutionType1 {
  RESOLUTION_TYPE1_UNSPECIFIED = 0;
  RESOLUTION_TYPE1_BITS = 10109;
}

enum SampClkOverrunBehavior {
  SAMP_CLK_OVERRUN_BEHAVIOR_UNSPECIFIED = 0;
  SAMP_CLK_OVERRUN_BEHAVIOR_REPEATED_DATA = 16062;
  SAMP_CLK_OVERRUN_BEHAVIOR_SENTINEL_VALUE = 16063;
}

enum SampleClockActiveOrInactiveEdgeSelection {
  SAMPLE_CLOCK_ACTIVE_OR_INACTIVE_EDGE_SELECTION_UNSPECIFIED = 0;
  SAMPLE_CLOCK_ACTIVE_OR_INACTIVE_EDGE_SELECTION_SAMP_CLK_ACTIVE_EDGE = 14617;
  SAMPLE_CLOCK_ACTIVE_OR_INACTIVE_EDGE_SELECTION_SAMP_CLK_INACTIVE_EDGE = 14618;
}

enum SaveOptions {
  SAVE_OPTIONS_UNSPECIFIED = 0;
  SAVE_OPTIONS_OVERWRITE = 1;
  SAVE_OPTIONS_ALLOW_INTERACTIVE_EDITING = 2;
  SAVE_OPTIONS_ALLOW_INTERACTIVE_DELETION = 4;
}

enum ScaleType2 {
  SCALE_TYPE2_UNSPECIFIED = 0;
  SCALE_TYPE2_POLYNOMIAL = 10449;
  SCALE_TYPE2_TABLE = 10450;
}

enum ScaleType3 {
  SCALE_TYPE3_UNSPECIFIED = 0;
  SCALE_TYPE3_POLYNOMIAL = 10449;
  SCALE_TYPE3_TABLE = 10450;
  SCALE_TYPE3_NONE = 10230;
}

enum ScaleType4 {
  SCALE_TYPE4_UNSPECIFIED = 0;
  SCALE_TYPE4_NONE = 10230;
  SCALE_TYPE4_TWO_POINT_LINEAR = 15898;
  SCALE_TYPE4_TABLE = 10450;
  SCALE_TYPE4_POLYNOMIAL = 10449;
}

enum Sense {
  SENSE_UNSPECIFIED = 0;
  SENSE_LOCAL = 16095;
  SENSE_REMOTE = 16096;
}

enum SensorPowerCfg {
  SENSOR_POWER_CFG_UNSPECIFIED = 0;
  SENSOR_POWER_CFG_NO_CHANGE = 10160;
  SENSOR_POWER_CFG_ENABLED = 16145;
  SENSOR_POWER_CFG_DISABLED = 16146;
}

enum SensorPowerType {
  SENSOR_POWER_TYPE_UNSPECIFIED = 0;
  SENSOR_POWER_TYPE_DC = 10050;
  SENSOR_POWER_TYPE_AC = 10045;
  SENSOR_POWER_TYPE_BIPOLAR_DC = 16147;
}

enum ShuntCalSelect {
  SHUNT_CAL_SELECT_UNSPECIFIED = 0;
  SHUNT_CAL_SELECT_A = 12513;
  SHUNT_CAL_SELECT_B = 12514;
}

enum Signal {
  SIGNAL_UNSPECIFIED = 0;
  SIGNAL_AI_CONVERT_CLOCK = 12484;
  SIGNAL_10_M_HZ_REF_CLOCK = 12536;
  SIGNAL_20_M_HZ_TIMEBASE_CLOCK = 12486;
  SIGNAL_SAMPLE_CLOCK = 12487;
  SIGNAL_ADVANCE_TRIGGER = 12488;
  SIGNAL_REFERENCE_TRIGGER = 12490;
  SIGNAL_START_TRIGGER = 12491;
  SIGNAL_ADV_CMPLT_EVENT = 12492;
  SIGNAL_AI_HOLD_CMPLT_EVENT = 12493;
  SIGNAL_COUNTER_OUTPUT_EVENT = 12494;
  SIGNAL_CHANGE_DETECTION_EVENT = 12511;
  SIGNAL_WDT_EXPIRED_EVENT = 12512;
}

enum Signal2 {
  SIGNAL2_UNSPECIFIED = 0;
  SIGNAL2_SAMPLE_COMPLETE_EVENT = 12530;
  SIGNAL2_COUNTER_OUTPUT_EVENT = 12494;
  SIGNAL2_CHANGE_DETECTION_EVENT = 12511;
  SIGNAL2_SAMPLE_CLOCK = 12487;
}

enum Slope1 {
  SLOPE1_UNSPECIFIED = 0;
  SLOPE1_RISING_SLOPE = 10280;
  SLOPE1_FALLING_SLOPE = 10171;
}

enum SoundPressureUnits1 {
  SOUND_PRESSURE_UNITS1_UNSPECIFIED = 0;
  SOUND_PRESSURE_UNITS1_PASCALS = 10081;
  SOUND_PRESSURE_UNITS1_FROM_CUSTOM_SCALE = 10065;
}

enum SourceSelection {
  SOURCE_SELECTION_UNSPECIFIED = 0;
  SOURCE_SELECTION_INTERNAL = 10200;
  SOURCE_SELECTION_EXTERNAL = 10167;
}

enum StrainGageBridgeType1 {
  STRAIN_GAGE_BRIDGE_TYPE1_UNSPECIFIED = 0;
  STRAIN_GAGE_BRIDGE_TYPE1_FULL_BRIDGE_I = 10183;
  STRAIN_GAGE_BRIDGE_TYPE1_FULL_BRIDGE_II = 10184;
  STRAIN_GAGE_BRIDGE_TYPE1_FULL_BRIDGE_III = 10185;
  STRAIN_GAGE_BRIDGE_TYPE1_HALF_BRIDGE_I = 10188;
  STRAIN_GAGE_BRIDGE_TYPE1_HALF_BRIDGE_II = 10189;
  STRAIN_GAGE_BRIDGE_TYPE1_QUARTER_BRIDGE_I = 10271;
  STRAIN_GAGE_BRIDGE_TYPE1_QUARTER_BRIDGE_II = 10272;
}

enum StrainGageRosetteMeasurementType {
  STRAIN_GAGE_ROSETTE_MEASUREMENT_TYPE_UNSPECIFIED = 0;
  STRAIN_GAGE_ROSETTE_MEASUREMENT_TYPE_PRINCIPAL_STRAIN_1 = 15971;
  STRAIN_GAGE_ROSETTE_MEASUREMENT_TYPE_PRINCIPAL_STRAIN_2 = 15972;
  STRAIN_GAGE_ROSETTE_MEASUREMENT_TYPE_PRINCIPAL_STRAIN_ANGLE = 15973;
  STRAIN_GAGE_ROSETTE_MEASUREMENT_TYPE_CARTESIAN_STRAIN_X = 15974;
  STRAIN_GAGE_ROSETTE_MEASUREMENT_TYPE_CARTESIAN_STRAIN_Y = 15975;
  STRAIN_GAGE_ROSETTE_MEASUREMENT_TYPE_CARTESIAN_SHEAR_STRAIN_XY = 15976;
  STRAIN_GAGE_ROSETTE_MEASUREMENT_TYPE_MAX_SHEAR_STRAIN = 15977;
  STRAIN_GAGE_ROSETTE_MEASUREMENT_TYPE_MAX_SHEAR_STRAIN_ANGLE = 15978;
}

enum StrainGageRosetteType {
  STRAIN_GAGE_ROSETTE_TYPE_UNSPECIFIED = 0;
  STRAIN_GAGE_ROSETTE_TYPE_RECTANGULAR_ROSETTE = 15968;
  STRAIN_GAGE_ROSETTE_TYPE_DELTA_ROSETTE = 15969;
  STRAIN_GAGE_ROSETTE_TYPE_TEE_ROSETTE = 15970;
}

enum StrainUnits1 {
  STRAIN_UNITS1_UNSPECIFIED = 0;
  STRAIN_UNITS1_STRAIN = 10299;
  STRAIN_UNITS1_FROM_CUSTOM_SCALE = 10065;
}

enum SyncUnlockBehavior {
  SYNC_UNLOCK_BEHAVIOR_UNSPECIFIED = 0;
  SYNC_UNLOCK_BEHAVIOR_STOP_TASK_AND_ERROR = 15862;
  SYNC_UNLOCK_BEHAVIOR_IGNORE_LOST_SYNC_LOCK = 16129;
}

enum TEDSUnits {
  TEDS_UNITS_UNSPECIFIED = 0;
  TEDS_UNITS_FROM_CUSTOM_SCALE = 10065;
  TEDS_UNITS_FROM_TEDS = 12516;
}

enum TaskControlAction {
  option allow_alias = true;
  TASK_CONTROL_ACTION_UNSPECIFIED = 0;
  TASK_CONTROL_ACTION_TASK_START = 0;
  TASK_CONTROL_ACTION_TASK_STOP = 1;
  TASK_CONTROL_ACTION_TASK_VERIFY = 2;
  TASK_CONTROL_ACTION_TASK_COMMIT = 3;
  TASK_CONTROL_ACTION_TASK_RESERVE = 4;
  TASK_CONTROL_ACTION_TASK_UNRESERVE = 5;
  TASK_CONTROL_ACTION_TASK_ABORT = 6;
}

enum TemperatureUnits {
  TEMPERATURE_UNITS_UNSPECIFIED = 0;
  TEMPERATURE_UNITS_DEG_C = 10143;
  TEMPERATURE_UNITS_DEG_F = 10144;
  TEMPERATURE_UNITS_KELVINS = 10325;
  TEMPERATURE_UNITS_DEG_R = 10145;
}

enum TemperatureUnits1 {
  TEMPERATURE_UNITS1_UNSPECIFIED = 0;
  TEMPERATURE_UNITS1_DEG_C = 10143;
  TEMPERATURE_UNITS1_DEG_F = 10144;
  TEMPERATURE_UNITS1_KELVINS = 10325;
  TEMPERATURE_UNITS1_DEG_R = 10145;
  TEMPERATURE_UNITS1_FROM_CUSTOM_SCALE = 10065;
}

enum ThermocoupleType1 {
  THERMOCOUPLE_TYPE1_UNSPECIFIED = 0;
  THERMOCOUPLE_TYPE1_J_TYPE_TC = 10072;
  THERMOCOUPLE_TYPE1_K_TYPE_TC = 10073;
  THERMOCOUPLE_TYPE1_N_TYPE_TC = 10077;
  THERMOCOUPLE_TYPE1_R_TYPE_TC = 10082;
  THERMOCOUPLE_TYPE1_S_TYPE_TC = 10085;
  THERMOCOUPLE_TYPE1_T_TYPE_TC = 10086;
  THERMOCOUPLE_TYPE1_B_TYPE_TC = 10047;
  THERMOCOUPLE_TYPE1_E_TYPE_TC = 10055;
}

enum TimeUnits {
  TIME_UNITS_UNSPECIFIED = 0;
  TIME_UNITS_SECONDS = 10364;
  TIME_UNITS_FROM_CUSTOM_SCALE = 10065;
}

enum TimeUnits2 {
  TIME_UNITS2_UNSPECIFIED = 0;
  TIME_UNITS2_SECONDS = 10364;
}

enum TimeUnits3 {
  TIME_UNITS3_UNSPECIFIED = 0;
  TIME_UNITS3_SECONDS = 10364;
  TIME_UNITS3_TICKS = 10304;
  TIME_UNITS3_FROM_CUSTOM_SCALE = 10065;
}

enum Timescale2 {
  TIMESCALE2_UNSPECIFIED = 0;
  TIMESCALE2_HOST_TIME = 16126;
  TIMESCALE2_IO_DEVICE_TIME = 16127;
}

enum TimestampEvent {
  TIMESTAMP_EVENT_UNSPECIFIED = 0;
  TIMESTAMP_EVENT_START_TRIGGER = 12491;
  TIMESTAMP_EVENT_REFERENCE_TRIGGER = 12490;
  TIMESTAMP_EVENT_ARM_START_TRIGGER = 14641;
  TIMESTAMP_EVENT_FIRST_SAMPLE_TIMESTAMP = 16130;
}

enum TorqueUnits {
  TORQUE_UNITS_UNSPECIFIED = 0;
  TORQUE_UNITS_NEWTON_METERS = 15881;
  TORQUE_UNITS_INCH_OUNCES = 15882;
  TORQUE_UNITS_INCH_POUNDS = 15883;
  TORQUE_UNITS_FOOT_POUNDS = 15884;
  TORQUE_UNITS_FROM_CUSTOM_SCALE = 10065;
}

enum UnitsPreScaled {
  UNITS_PRE_SCALED_UNSPECIFIED = 0;
  UNITS_PRE_SCALED_VOLTS = 10348;
  UNITS_PRE_SCALED_AMPS = 10342;
  UNITS_PRE_SCALED_DEG_F = 10144;
  UNITS_PRE_SCALED_DEG_C = 10143;
  UNITS_PRE_SCALED_DEG_R = 10145;
  UNITS_PRE_SCALED_KELVINS = 10325;
  UNITS_PRE_SCALED_STRAIN = 10299;
  UNITS_PRE_SCALED_OHMS = 10384;
  UNITS_PRE_SCALED_HZ = 10373;
  UNITS_PRE_SCALED_SECONDS = 10364;
  UNITS_PRE_SCALED_METERS = 10219;
  UNITS_PRE_SCALED_INCHES = 10379;
  UNITS_PRE_SCALED_DEGREES = 10146;
  UNITS_PRE_SCALED_RADIANS = 10273;
  UNITS_PRE_SCALED_TICKS = 10304;
  UNITS_PRE_SCALED_RPM = 16080;
  UNITS_PRE_SCALED_RADIANS_PER_SECOND = 16081;
  UNITS_PRE_SCALED_DEGREES_PER_SECOND = 16082;
  UNITS_PRE_SCALED_G = 10186;
  UNITS_PRE_SCALED_METERS_PER_SECOND_SQUARED = 12470;
  UNITS_PRE_SCALED_INCHES_PER_SECOND_SQUARED = 12471;
  UNITS_PRE_SCALED_METERS_PER_SECOND = 15959;
  UNITS_PRE_SCALED_INCHES_PER_SECOND = 15960;
  UNITS_PRE_SCALED_PASCALS = 10081;
  UNITS_PRE_SCALED_NEWTONS = 15875;
  UNITS_PRE_SCALED_POUNDS = 15876;
  UNITS_PRE_SCALED_KILOGRAM_FORCE = 15877;
  UNITS_PRE_SCALED_POUNDS_PER_SQUARE_INCH = 15879;
  UNITS_PRE_SCALED_BAR = 15880;
  UNITS_PRE_SCALED_NEWTON_METERS = 15881;
  UNITS_PRE_SCALED_INCH_OUNCES = 15882;
  UNITS_PRE_SCALED_INCH_POUNDS = 15883;
  UNITS_PRE_SCALED_FOOT_POUNDS = 15884;
  UNITS_PRE_SCALED_VOLTS_PER_VOLT = 15896;
  UNITS_PRE_SCALED_M_VOLTS_PER_VOLT = 15897;
  UNITS_PRE_SCALED_COULOMBS = 16102;
  UNITS_PRE_SCALED_PICO_COULOMBS = 16103;
  UNITS_PRE_SCALED_FROM_TEDS = 12516;
}

enum VelocityIEPESensorSensitivityUnits {
  VELOCITY_IEPE_SENSOR_SENSITIVITY_UNITS_UNSPECIFIED = 0;
  VELOCITY_IEPE_SENSOR_SENSITIVITY_UNITS_MILLIVOLTS_PER_MILLIMETER_PER_SECOND = 15963;
  VELOCITY_IEPE_SENSOR_SENSITIVITY_UNITS_MILLI_VOLTS_PER_INCH_PER_SECOND = 15964;
}

enum VelocityUnits {
  VELOCITY_UNITS_UNSPECIFIED = 0;
  VELOCITY_UNITS_METERS_PER_SECOND = 15959;
  VELOCITY_UNITS_INCHES_PER_SECOND = 15960;
  VELOCITY_UNITS_FROM_CUSTOM_SCALE = 10065;
}

enum VoltageUnits1 {
  VOLTAGE_UNITS1_UNSPECIFIED = 0;
  VOLTAGE_UNITS1_VOLTS = 10348;
  VOLTAGE_UNITS1_FROM_CUSTOM_SCALE = 10065;
  VOLTAGE_UNITS1_FROM_TEDS = 12516;
}

enum VoltageUnits2 {
  VOLTAGE_UNITS2_UNSPECIFIED = 0;
  VOLTAGE_UNITS2_VOLTS = 10348;
  VOLTAGE_UNITS2_FROM_CUSTOM_SCALE = 10065;
}

enum WatchdogControlAction {
  option allow_alias = true;
  WATCHDOG_CONTROL_ACTION_UNSPECIFIED = 0;
  WATCHDOG_CONTROL_ACTION_RESET_TIMER = 0;
  WATCHDOG_CONTROL_ACTION_CLEAR_EXPIRATION = 1;
}

enum WindowTriggerCondition1 {
  WINDOW_TRIGGER_CONDITION1_UNSPECIFIED = 0;
  WINDOW_TRIGGER_CONDITION1_ENTERING_WIN = 10163;
  WINDOW_TRIGGER_CONDITION1_LEAVING_WIN = 10208;
}

enum WriteBasicTEDSOptions {
  WRITE_BASIC_TEDS_OPTIONS_UNSPECIFIED = 0;
  WRITE_BASIC_TEDS_OPTIONS_WRITE_TO_EEPROM = 12538;
  WRITE_BASIC_TEDS_OPTIONS_WRITE_TO_PROM = 12539;
  WRITE_BASIC_TEDS_OPTIONS_DO_NOT_WRITE = 12540;
}

message AddCDAQSyncConnectionRequest {
  string port_list = 1;
}

message AddCDAQSyncConnectionResponse {
  int32 status = 1;
}

message AddGlobalChansToTaskRequest {
  nidevice_grpc.Session task = 1;
  string channel_names = 2;
}

message AddGlobalChansToTaskResponse {
  int32 status = 1;
}

message AddNetworkDeviceRequest {
  string ip_address = 1;
  string device_name = 2;
  bool attempt_reservation = 3;
  double timeout = 4;
  uint32 device_name_out_buffer_size = 5;
}

message AddNetworkDeviceResponse {
  int32 status = 1;
  string device_name_out = 2;
}

message AreConfiguredCDAQSyncPortsDisconnectedRequest {
  string chassis_devices_ports = 1;
  double timeout = 2;
}

message AreConfiguredCDAQSyncPortsDisconnectedResponse {
  int32 status = 1;
  bool disconnected_ports_exist = 2;
}

message AutoConfigureCDAQSyncConnectionsRequest {
  string chassis_devices_ports = 1;
  double timeout = 2;
}

message AutoConfigureCDAQSyncConnectionsResponse {
  int32 status = 1;
}

message CalculateReversePolyCoeffRequest {
  repeated double forward_coeffs = 1;
  uint32 num_forward_coeffs_in = 2;
  double min_val_x = 3;
  double max_val_x = 4;
  int32 num_points_to_compute = 5;
  int32 reverse_poly_order = 6;
}

message CalculateReversePolyCoeffResponse {
  int32 status = 1;
  repeated double reverse_coeffs = 2;
}

message CfgAnlgEdgeRefTrigRequest {
  nidevice_grpc.Session task = 1;
  string trigger_source = 2;
  oneof trigger_slope_enum {
    Slope1 trigger_slope = 3;
    int32 trigger_slope_raw = 4;
  }
  double trigger_level = 5;
  uint32 pretrigger_samples = 6;
}

message CfgAnlgEdgeRefTrigResponse {
  int32 status = 1;
}

message CfgAnlgEdgeStartTrigRequest {
  nidevice_grpc.Session task = 1;
  string trigger_source = 2;
  oneof trigger_slope_enum {
    Slope1 trigger_slope = 3;
    int32 trigger_slope_raw = 4;
  }
  double trigger_level = 5;
}

message CfgAnlgEdgeStartTrigResponse {
  int32 status = 1;
}

message CfgAnlgMultiEdgeRefTrigRequest {
  nidevice_grpc.Session task = 1;
  string trigger_sources = 2;
  repeated int32 trigger_slope_array = 3;
  repeated double trigger_level_array = 4;
  uint32 pretrigger_samples = 5;
  uint32 array_size = 6;
}

message CfgAnlgMultiEdgeRefTrigResponse {
  int32 status = 1;
}

message CfgAnlgMultiEdgeStartTrigRequest {
  nidevice_grpc.Session task = 1;
  string trigger_sources = 2;
  repeated int32 trigger_slope_array = 3;
  repeated double trigger_level_array = 4;
  uint32 array_size = 5;
}

message CfgAnlgMultiEdgeStartTrigResponse {
  int32 status = 1;
}

message CfgAnlgWindowRefTrigRequest {
  nidevice_grpc.Session task = 1;
  string trigger_source = 2;
  oneof trigger_when_enum {
    WindowTriggerCondition1 trigger_when = 3;
    int32 trigger_when_raw = 4;
  }
  double window_top = 5;
  double window_bottom = 6;
  uint32 pretrigger_samples = 7;
}

message CfgAnlgWindowRefTrigResponse {
  int32 status = 1;
}

message CfgAnlgWindowStartTrigRequest {
  nidevice_grpc.Session task = 1;
  string trigger_source = 2;
  oneof trigger_when_enum {
    WindowTriggerCondition1 trigger_when = 3;
    int32 trigger_when_raw = 4;
  }
  double window_top = 5;
  double window_bottom = 6;
}

message CfgAnlgWindowStartTrigResponse {
  int32 status = 1;
}

message CfgBurstHandshakingTimingExportClockRequest {
  nidevice_grpc.Session task = 1;
  oneof sample_mode_enum {
    AcquisitionType sample_mode = 2;
    int32 sample_mode_raw = 3;
  }
  uint64 samps_per_chan = 4;
  double sample_clk_rate = 5;
  string sample_clk_outp_term = 6;
  oneof sample_clk_pulse_polarity_enum {
    Polarity2 sample_clk_pulse_polarity = 7;
    int32 sample_clk_pulse_polarity_raw = 8;
  }
  oneof pause_when_enum {
    Level1 pause_when = 9;
    int32 pause_when_raw = 10;
  }
  oneof ready_event_active_level_enum {
    Polarity2 ready_event_active_level = 11;
    int32 ready_event_active_level_raw = 12;
  }
}

message CfgBurstHandshakingTimingExportClockResponse {
  int32 status = 1;
}

message CfgBurstHandshakingTimingImportClockRequest {
  nidevice_grpc.Session task = 1;
  oneof sample_mode_enum {
    AcquisitionType sample_mode = 2;
    int32 sample_mode_raw = 3;
  }
  uint64 samps_per_chan = 4;
  double sample_clk_rate = 5;
  string sample_clk_src = 6;
  oneof sample_clk_active_edge_enum {
    Edge1 sample_clk_active_edge = 7;
    int32 sample_clk_active_edge_raw = 8;
  }
  oneof pause_when_enum {
    Level1 pause_when = 9;
    int32 pause_when_raw = 10;
  }
  oneof ready_event_active_level_enum {
    Polarity2 ready_event_active_level = 11;
    int32 ready_event_active_level_raw = 12;
  }
}

message CfgBurstHandshakingTimingImportClockResponse {
  int32 status = 1;
}

message CfgChangeDetectionTimingRequest {
  nidevice_grpc.Session task = 1;
  string rising_edge_chan = 2;
  string falling_edge_chan = 3;
  oneof sample_mode_enum {
    AcquisitionType sample_mode = 4;
    int32 sample_mode_raw = 5;
  }
  uint64 samps_per_chan = 6;
}

message CfgChangeDetectionTimingResponse {
  int32 status = 1;
}

message CfgDigEdgeRefTrigRequest {
  nidevice_grpc.Session task = 1;
  string trigger_source = 2;
  oneof trigger_edge_enum {
    Edge1 trigger_edge = 3;
    int32 trigger_edge_raw = 4;
  }
  uint32 pretrigger_samples = 5;
}

message CfgDigEdgeRefTrigResponse {
  int32 status = 1;
}

message CfgDigEdgeStartTrigRequest {
  nidevice_grpc.Session task = 1;
  string trigger_source = 2;
  oneof trigger_edge_enum {
    Edge1 trigger_edge = 3;
    int32 trigger_edge_raw = 4;
  }
}

message CfgDigEdgeStartTrigResponse {
  int32 status = 1;
}

message CfgDigPatternRefTrigRequest {
  nidevice_grpc.Session task = 1;
  string trigger_source = 2;
  string trigger_pattern = 3;
  oneof trigger_when_enum {
    DigitalPatternCondition1 trigger_when = 4;
    int32 trigger_when_raw = 5;
  }
  uint32 pretrigger_samples = 6;
}

message CfgDigPatternRefTrigResponse {
  int32 status = 1;
}

message CfgDigPatternStartTrigRequest {
  nidevice_grpc.Session task = 1;
  string trigger_source = 2;
  string trigger_pattern = 3;
  oneof trigger_when_enum {
    DigitalPatternCondition1 trigger_when = 4;
    int32 trigger_when_raw = 5;
  }
}

message CfgDigPatternStartTrigResponse {
  int32 status = 1;
}

message CfgHandshakingTimingRequest {
  nidevice_grpc.Session task = 1;
  oneof sample_mode_enum {
    AcquisitionType sample_mode = 2;
    int32 sample_mode_raw = 3;
  }
  uint64 samps_per_chan = 4;
}

message CfgHandshakingTimingResponse {
  int32 status = 1;
}

message CfgImplicitTimingRequest {
  nidevice_grpc.Session task = 1;
  oneof sample_mode_enum {
    AcquisitionType sample_mode = 2;
    int32 sample_mode_raw = 3;
  }
  uint64 samps_per_chan = 4;
}

message CfgImplicitTimingResponse {
  int32 status = 1;
}

message CfgInputBufferRequest {
  nidevice_grpc.Session task = 1;
  uint32 num_samps_per_chan = 2;
}

message CfgInputBufferResponse {
  int32 status = 1;
}

message CfgOutputBufferRequest {
  nidevice_grpc.Session task = 1;
  uint32 num_samps_per_chan = 2;
}

message CfgOutputBufferResponse {
  int32 status = 1;
}

message CfgPipelinedSampClkTimingRequest {
  nidevice_grpc.Session task = 1;
  string source = 2;
  double rate = 3;
  oneof active_edge_enum {
    Edge1 active_edge = 4;
    int32 active_edge_raw = 5;
  }
  oneof sample_mode_enum {
    AcquisitionType sample_mode = 6;
    int32 sample_mode_raw = 7;
  }
  uint64 samps_per_chan = 8;
}

message CfgPipelinedSampClkTimingResponse {
  int32 status = 1;
}

message CfgSampClkTimingRequest {
  nidevice_grpc.Session task = 1;
  string source = 2;
  double rate = 3;
  oneof active_edge_enum {
    Edge1 active_edge = 4;
    int32 active_edge_raw = 5;
  }
  oneof sample_mode_enum {
    AcquisitionType sample_mode = 6;
    int32 sample_mode_raw = 7;
  }
  uint64 samps_per_chan = 8;
}

message CfgSampClkTimingResponse {
  int32 status = 1;
}

message CfgTimeStartTrigRequest {
  nidevice_grpc.Session task = 1;
  google.protobuf.Timestamp when = 2;
  oneof timescale_enum {
    Timescale2 timescale = 3;
    int32 timescale_raw = 4;
  }
}

message CfgTimeStartTrigResponse {
  int32 status = 1;
}

message CfgWatchdogAOExpirStatesRequest {
  nidevice_grpc.Session task = 1;
  string channel_names = 2;
  repeated double expir_state_array = 3;
  repeated int32 output_type_array = 4;
  uint32 array_size = 5;
}

message CfgWatchdogAOExpirStatesResponse {
  int32 status = 1;
}

message CfgWatchdogCOExpirStatesRequest {
  nidevice_grpc.Session task = 1;
  string channel_names = 2;
  repeated int32 expir_state_array = 3;
  uint32 array_size = 4;
}

message CfgWatchdogCOExpirStatesResponse {
  int32 status = 1;
}

message CfgWatchdogDOExpirStatesRequest {
  nidevice_grpc.Session task = 1;
  string channel_names = 2;
  repeated int32 expir_state_array = 3;
  uint32 array_size = 4;
}

message CfgWatchdogDOExpirStatesResponse {
  int32 status = 1;
}

message ClearTEDSRequest {
  string physical_channel = 1;
}

message ClearTEDSResponse {
  int32 status = 1;
}

message ClearTaskRequest {
  nidevice_grpc.Session task = 1;
}

message ClearTaskResponse {
  int32 status = 1;
}

message ConfigureLoggingRequest {
  nidevice_grpc.Session task = 1;
  string file_path = 2;
  oneof logging_mode_enum {
    LoggingMode logging_mode = 3;
    int32 logging_mode_raw = 4;
  }
  string group_name = 5;
  oneof operation_enum {
    LoggingOperation operation = 6;
    int32 operation_raw = 7;
  }
}

message ConfigureLoggingResponse {
  int32 status = 1;
}

message ConfigureTEDSRequest {
  string physical_channel = 1;
  string file_path = 2;
}

message ConfigureTEDSResponse {
  int32 status = 1;
}

message ConnectTermsRequest {
  string source_terminal = 1;
  string destination_terminal = 2;
  oneof signal_modifiers_enum {
    InvertPolarity signal_modifiers = 3;
    int32 signal_modifiers_raw = 4;
  }
}

message ConnectTermsResponse {
  int32 status = 1;
}

message ControlWatchdogTaskRequest {
  nidevice_grpc.Session task = 1;
  oneof action_enum {
    WatchdogControlAction action = 2;
    int32 action_raw = 3;
  }
}

message ControlWatchdogTaskResponse {
  int32 status = 1;
}

message CreateAIAccel4WireDCVoltageChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    AccelUnits2 units = 8;
    int32 units_raw = 9;
  }
  double sensitivity = 10;
  oneof sensitivity_units_enum {
    AccelSensitivityUnits1 sensitivity_units = 11;
    int32 sensitivity_units_raw = 12;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 13;
    int32 voltage_excit_source_raw = 14;
  }
  double voltage_excit_val = 15;
  bool use_excit_for_scaling = 16;
  string custom_scale_name = 17;
}

message CreateAIAccel4WireDCVoltageChanResponse {
  int32 status = 1;
}

message CreateAIAccelChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    AccelUnits2 units = 8;
    int32 units_raw = 9;
  }
  double sensitivity = 10;
  oneof sensitivity_units_enum {
    AccelSensitivityUnits1 sensitivity_units = 11;
    int32 sensitivity_units_raw = 12;
  }
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 13;
    int32 current_excit_source_raw = 14;
  }
  double current_excit_val = 15;
  string custom_scale_name = 16;
}

message CreateAIAccelChanResponse {
  int32 status = 1;
}

message CreateAIAccelChargeChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    AccelUnits2 units = 8;
    int32 units_raw = 9;
  }
  double sensitivity = 10;
  oneof sensitivity_units_enum {
    AccelChargeSensitivityUnits sensitivity_units = 11;
    int32 sensitivity_units_raw = 12;
  }
  string custom_scale_name = 13;
}

message CreateAIAccelChargeChanResponse {
  int32 status = 1;
}

message CreateAIBridgeChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    BridgeUnits units = 6;
    int32 units_raw = 7;
  }
  oneof bridge_config_enum {
    BridgeConfiguration1 bridge_config = 8;
    int32 bridge_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double nominal_bridge_resistance = 13;
  string custom_scale_name = 14;
}

message CreateAIBridgeChanResponse {
  int32 status = 1;
}

message CreateAIChargeChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    ChargeUnits units = 8;
    int32 units_raw = 9;
  }
  string custom_scale_name = 10;
}

message CreateAIChargeChanResponse {
  int32 status = 1;
}

message CreateAICurrentChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    CurrentUnits2 units = 8;
    int32 units_raw = 9;
  }
  oneof shunt_resistor_loc_enum {
    CurrentShuntResistorLocationWithDefault shunt_resistor_loc = 10;
    int32 shunt_resistor_loc_raw = 11;
  }
  double ext_shunt_resistor_val = 12;
  string custom_scale_name = 13;
}

message CreateAICurrentChanResponse {
  int32 status = 1;
}

message CreateAICurrentRMSChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    CurrentUnits2 units = 8;
    int32 units_raw = 9;
  }
  oneof shunt_resistor_loc_enum {
    CurrentShuntResistorLocationWithDefault shunt_resistor_loc = 10;
    int32 shunt_resistor_loc_raw = 11;
  }
  double ext_shunt_resistor_val = 12;
  string custom_scale_name = 13;
}

message CreateAICurrentRMSChanResponse {
  int32 status = 1;
}

message CreateAIForceBridgePolynomialChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    ForceUnits units = 6;
    int32 units_raw = 7;
  }
  oneof bridge_config_enum {
    BridgeConfiguration1 bridge_config = 8;
    int32 bridge_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double nominal_bridge_resistance = 13;
  repeated double forward_coeffs = 14;
  uint32 num_forward_coeffs = 15;
  repeated double reverse_coeffs = 16;
  uint32 num_reverse_coeffs = 17;
  oneof electrical_units_enum {
    BridgeElectricalUnits electrical_units = 18;
    int32 electrical_units_raw = 19;
  }
  oneof physical_units_enum {
    BridgePhysicalUnits physical_units = 20;
    int32 physical_units_raw = 21;
  }
  string custom_scale_name = 22;
}

message CreateAIForceBridgePolynomialChanResponse {
  int32 status = 1;
}

message CreateAIForceBridgeTableChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    ForceUnits units = 6;
    int32 units_raw = 7;
  }
  oneof bridge_config_enum {
    BridgeConfiguration1 bridge_config = 8;
    int32 bridge_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double nominal_bridge_resistance = 13;
  repeated double electrical_vals = 14;
  uint32 num_electrical_vals = 15;
  oneof electrical_units_enum {
    BridgeElectricalUnits electrical_units = 16;
    int32 electrical_units_raw = 17;
  }
  repeated double physical_vals = 18;
  uint32 num_physical_vals = 19;
  oneof physical_units_enum {
    BridgePhysicalUnits physical_units = 20;
    int32 physical_units_raw = 21;
  }
  string custom_scale_name = 22;
}

message CreateAIForceBridgeTableChanResponse {
  int32 status = 1;
}

message CreateAIForceBridgeTwoPointLinChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    ForceUnits units = 6;
    int32 units_raw = 7;
  }
  oneof bridge_config_enum {
    BridgeConfiguration1 bridge_config = 8;
    int32 bridge_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double nominal_bridge_resistance = 13;
  double first_electrical_val = 14;
  double second_electrical_val = 15;
  oneof electrical_units_enum {
    BridgeElectricalUnits electrical_units = 16;
    int32 electrical_units_raw = 17;
  }
  double first_physical_val = 18;
  double second_physical_val = 19;
  oneof physical_units_enum {
    BridgePhysicalUnits physical_units = 20;
    int32 physical_units_raw = 21;
  }
  string custom_scale_name = 22;
}

message CreateAIForceBridgeTwoPointLinChanResponse {
  int32 status = 1;
}

message CreateAIForceIEPEChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    ForceIEPEUnits units = 8;
    int32 units_raw = 9;
  }
  double sensitivity = 10;
  oneof sensitivity_units_enum {
    ForceIEPESensorSensitivityUnits sensitivity_units = 11;
    int32 sensitivity_units_raw = 12;
  }
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 13;
    int32 current_excit_source_raw = 14;
  }
  double current_excit_val = 15;
  string custom_scale_name = 16;
}

message CreateAIForceIEPEChanResponse {
  int32 status = 1;
}

message CreateAIFreqVoltageChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    FrequencyUnits units = 6;
    int32 units_raw = 7;
  }
  double threshold_level = 8;
  double hysteresis = 9;
  string custom_scale_name = 10;
}

message CreateAIFreqVoltageChanResponse {
  int32 status = 1;
}

message CreateAIMicrophoneChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  oneof units_enum {
    SoundPressureUnits1 units = 6;
    int32 units_raw = 7;
  }
  double mic_sensitivity = 8;
  double max_snd_press_level = 9;
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 10;
    int32 current_excit_source_raw = 11;
  }
  double current_excit_val = 12;
  string custom_scale_name = 13;
}

message CreateAIMicrophoneChanResponse {
  int32 status = 1;
}

message CreateAIPosEddyCurrProxProbeChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    LengthUnits2 units = 6;
    int32 units_raw = 7;
  }
  double sensitivity = 8;
  oneof sensitivity_units_enum {
    EddyCurrentProxProbeSensitivityUnits sensitivity_units = 9;
    int32 sensitivity_units_raw = 10;
  }
  string custom_scale_name = 11;
}

message CreateAIPosEddyCurrProxProbeChanResponse {
  int32 status = 1;
}

message CreateAIPosLVDTChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    LengthUnits2 units = 6;
    int32 units_raw = 7;
  }
  double sensitivity = 8;
  oneof sensitivity_units_enum {
    LVDTSensitivityUnits1 sensitivity_units = 9;
    int32 sensitivity_units_raw = 10;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 11;
    int32 voltage_excit_source_raw = 12;
  }
  double voltage_excit_val = 13;
  double voltage_excit_freq = 14;
  oneof ac_excit_wire_mode_enum {
    ACExcitWireMode ac_excit_wire_mode = 15;
    int32 ac_excit_wire_mode_raw = 16;
  }
  string custom_scale_name = 17;
}

message CreateAIPosLVDTChanResponse {
  int32 status = 1;
}

message CreateAIPosRVDTChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    AngleUnits1 units = 6;
    int32 units_raw = 7;
  }
  double sensitivity = 8;
  oneof sensitivity_units_enum {
    RVDTSensitivityUnits1 sensitivity_units = 9;
    int32 sensitivity_units_raw = 10;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 11;
    int32 voltage_excit_source_raw = 12;
  }
  double voltage_excit_val = 13;
  double voltage_excit_freq = 14;
  oneof ac_excit_wire_mode_enum {
    ACExcitWireMode ac_excit_wire_mode = 15;
    int32 ac_excit_wire_mode_raw = 16;
  }
  string custom_scale_name = 17;
}

message CreateAIPosRVDTChanResponse {
  int32 status = 1;
}

message CreateAIPressureBridgePolynomialChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    PressureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof bridge_config_enum {
    BridgeConfiguration1 bridge_config = 8;
    int32 bridge_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double nominal_bridge_resistance = 13;
  repeated double forward_coeffs = 14;
  uint32 num_forward_coeffs = 15;
  repeated double reverse_coeffs = 16;
  uint32 num_reverse_coeffs = 17;
  oneof electrical_units_enum {
    BridgeElectricalUnits electrical_units = 18;
    int32 electrical_units_raw = 19;
  }
  oneof physical_units_enum {
    BridgePhysicalUnits physical_units = 20;
    int32 physical_units_raw = 21;
  }
  string custom_scale_name = 22;
}

message CreateAIPressureBridgePolynomialChanResponse {
  int32 status = 1;
}

message CreateAIPressureBridgeTableChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    PressureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof bridge_config_enum {
    BridgeConfiguration1 bridge_config = 8;
    int32 bridge_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double nominal_bridge_resistance = 13;
  repeated double electrical_vals = 14;
  uint32 num_electrical_vals = 15;
  oneof electrical_units_enum {
    BridgeElectricalUnits electrical_units = 16;
    int32 electrical_units_raw = 17;
  }
  repeated double physical_vals = 18;
  uint32 num_physical_vals = 19;
  oneof physical_units_enum {
    BridgePhysicalUnits physical_units = 20;
    int32 physical_units_raw = 21;
  }
  string custom_scale_name = 22;
}

message CreateAIPressureBridgeTableChanResponse {
  int32 status = 1;
}

message CreateAIPressureBridgeTwoPointLinChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    PressureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof bridge_config_enum {
    BridgeConfiguration1 bridge_config = 8;
    int32 bridge_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double nominal_bridge_resistance = 13;
  double first_electrical_val = 14;
  double second_electrical_val = 15;
  oneof electrical_units_enum {
    BridgeElectricalUnits electrical_units = 16;
    int32 electrical_units_raw = 17;
  }
  double first_physical_val = 18;
  double second_physical_val = 19;
  oneof physical_units_enum {
    BridgePhysicalUnits physical_units = 20;
    int32 physical_units_raw = 21;
  }
  string custom_scale_name = 22;
}

message CreateAIPressureBridgeTwoPointLinChanResponse {
  int32 status = 1;
}

message CreateAIRTDChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TemperatureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof rtd_type_enum {
    RTDType1 rtd_type = 8;
    int32 rtd_type_raw = 9;
  }
  oneof resistance_config_enum {
    ResistanceConfiguration resistance_config = 10;
    int32 resistance_config_raw = 11;
  }
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 12;
    int32 current_excit_source_raw = 13;
  }
  double current_excit_val = 14;
  double r0 = 15;
}

message CreateAIRTDChanResponse {
  int32 status = 1;
}

message CreateAIResistanceChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    ResistanceUnits2 units = 6;
    int32 units_raw = 7;
  }
  oneof resistance_config_enum {
    ResistanceConfiguration resistance_config = 8;
    int32 resistance_config_raw = 9;
  }
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 10;
    int32 current_excit_source_raw = 11;
  }
  double current_excit_val = 12;
  string custom_scale_name = 13;
}

message CreateAIResistanceChanResponse {
  int32 status = 1;
}

message CreateAIRosetteStrainGageChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof rosette_type_enum {
    StrainGageRosetteType rosette_type = 6;
    int32 rosette_type_raw = 7;
  }
  double gage_orientation = 8;
  repeated int32 rosette_meas_types = 9;
  uint32 num_rosette_meas_types = 10;
  oneof strain_config_enum {
    StrainGageBridgeType1 strain_config = 11;
    int32 strain_config_raw = 12;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 13;
    int32 voltage_excit_source_raw = 14;
  }
  double voltage_excit_val = 15;
  double gage_factor = 16;
  double nominal_gage_resistance = 17;
  double poisson_ratio = 18;
  double lead_wire_resistance = 19;
}

message CreateAIRosetteStrainGageChanResponse {
  int32 status = 1;
}

message CreateAIStrainGageChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    StrainUnits1 units = 6;
    int32 units_raw = 7;
  }
  oneof strain_config_enum {
    StrainGageBridgeType1 strain_config = 8;
    int32 strain_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double gage_factor = 13;
  double initial_bridge_voltage = 14;
  double nominal_gage_resistance = 15;
  double poisson_ratio = 16;
  double lead_wire_resistance = 17;
  string custom_scale_name = 18;
}

message CreateAIStrainGageChanResponse {
  int32 status = 1;
}

message CreateAITempBuiltInSensorChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof units_enum {
    TemperatureUnits units = 4;
    int32 units_raw = 5;
  }
}

message CreateAITempBuiltInSensorChanResponse {
  int32 status = 1;
}

message CreateAIThrmcplChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TemperatureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof thermocouple_type_enum {
    ThermocoupleType1 thermocouple_type = 8;
    int32 thermocouple_type_raw = 9;
  }
  oneof cjc_source_enum {
    CJCSource1 cjc_source = 10;
    int32 cjc_source_raw = 11;
  }
  double cjc_val = 12;
  string cjc_channel = 13;
}

message CreateAIThrmcplChanResponse {
  int32 status = 1;
}

message CreateAIThrmstrChanIexRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TemperatureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof resistance_config_enum {
    ResistanceConfiguration resistance_config = 8;
    int32 resistance_config_raw = 9;
  }
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 10;
    int32 current_excit_source_raw = 11;
  }
  double current_excit_val = 12;
  double a = 13;
  double b = 14;
  double c = 15;
}

message CreateAIThrmstrChanIexResponse {
  int32 status = 1;
}

message CreateAIThrmstrChanVexRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TemperatureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof resistance_config_enum {
    ResistanceConfiguration resistance_config = 8;
    int32 resistance_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double a = 13;
  double b = 14;
  double c = 15;
  double r1 = 16;
}

message CreateAIThrmstrChanVexResponse {
  int32 status = 1;
}

message CreateAITorqueBridgePolynomialChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TorqueUnits units = 6;
    int32 units_raw = 7;
  }
  oneof bridge_config_enum {
    BridgeConfiguration1 bridge_config = 8;
    int32 bridge_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double nominal_bridge_resistance = 13;
  repeated double forward_coeffs = 14;
  uint32 num_forward_coeffs = 15;
  repeated double reverse_coeffs = 16;
  uint32 num_reverse_coeffs = 17;
  oneof electrical_units_enum {
    BridgeElectricalUnits electrical_units = 18;
    int32 electrical_units_raw = 19;
  }
  oneof physical_units_enum {
    BridgePhysicalUnits physical_units = 20;
    int32 physical_units_raw = 21;
  }
  string custom_scale_name = 22;
}

message CreateAITorqueBridgePolynomialChanResponse {
  int32 status = 1;
}

message CreateAITorqueBridgeTableChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TorqueUnits units = 6;
    int32 units_raw = 7;
  }
  oneof bridge_config_enum {
    BridgeConfiguration1 bridge_config = 8;
    int32 bridge_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double nominal_bridge_resistance = 13;
  repeated double electrical_vals = 14;
  uint32 num_electrical_vals = 15;
  oneof electrical_units_enum {
    BridgeElectricalUnits electrical_units = 16;
    int32 electrical_units_raw = 17;
  }
  repeated double physical_vals = 18;
  uint32 num_physical_vals = 19;
  oneof physical_units_enum {
    BridgePhysicalUnits physical_units = 20;
    int32 physical_units_raw = 21;
  }
  string custom_scale_name = 22;
}

message CreateAITorqueBridgeTableChanResponse {
  int32 status = 1;
}

message CreateAITorqueBridgeTwoPointLinChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TorqueUnits units = 6;
    int32 units_raw = 7;
  }
  oneof bridge_config_enum {
    BridgeConfiguration1 bridge_config = 8;
    int32 bridge_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double nominal_bridge_resistance = 13;
  double first_electrical_val = 14;
  double second_electrical_val = 15;
  oneof electrical_units_enum {
    BridgeElectricalUnits electrical_units = 16;
    int32 electrical_units_raw = 17;
  }
  double first_physical_val = 18;
  double second_physical_val = 19;
  oneof physical_units_enum {
    BridgePhysicalUnits physical_units = 20;
    int32 physical_units_raw = 21;
  }
  string custom_scale_name = 22;
}

message CreateAITorqueBridgeTwoPointLinChanResponse {
  int32 status = 1;
}

message CreateAIVelocityIEPEChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    VelocityUnits units = 8;
    int32 units_raw = 9;
  }
  double sensitivity = 10;
  oneof sensitivity_units_enum {
    VelocityIEPESensorSensitivityUnits sensitivity_units = 11;
    int32 sensitivity_units_raw = 12;
  }
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 13;
    int32 current_excit_source_raw = 14;
  }
  double current_excit_val = 15;
  string custom_scale_name = 16;
}

message CreateAIVelocityIEPEChanResponse {
  int32 status = 1;
}

message CreateAIVoltageChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    VoltageUnits2 units = 8;
    int32 units_raw = 9;
  }
  string custom_scale_name = 10;
}

message CreateAIVoltageChanResponse {
  int32 status = 1;
}

message CreateAIVoltageChanWithExcitRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    VoltageUnits2 units = 8;
    int32 units_raw = 9;
  }
  oneof bridge_config_enum {
    BridgeConfiguration1 bridge_config = 10;
    int32 bridge_config_raw = 11;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 12;
    int32 voltage_excit_source_raw = 13;
  }
  double voltage_excit_val = 14;
  bool use_excit_for_scaling = 15;
  string custom_scale_name = 16;
}

message CreateAIVoltageChanWithExcitResponse {
  int32 status = 1;
}

message CreateAIVoltageRMSChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    VoltageUnits2 units = 8;
    int32 units_raw = 9;
  }
  string custom_scale_name = 10;
}

message CreateAIVoltageRMSChanResponse {
  int32 status = 1;
}

message CreateAOCurrentChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    CurrentUnits2 units = 6;
    int32 units_raw = 7;
  }
  string custom_scale_name = 8;
}

message CreateAOCurrentChanResponse {
  int32 status = 1;
}

message CreateAOFuncGenChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof type_enum {
    FuncGenType type = 4;
    int32 type_raw = 5;
  }
  double freq = 6;
  double amplitude = 7;
  double offset = 8;
}

message CreateAOFuncGenChanResponse {
  int32 status = 1;
}

message CreateAOVoltageChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    VoltageUnits2 units = 6;
    int32 units_raw = 7;
  }
  string custom_scale_name = 8;
}

message CreateAOVoltageChanResponse {
  int32 status = 1;
}

message CreateCIAngEncoderChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  oneof decoding_type_enum {
    EncoderType2 decoding_type = 4;
    int32 decoding_type_raw = 5;
  }
  bool zidx_enable = 6;
  double zidx_val = 7;
  oneof zidx_phase_enum {
    EncoderZIndexPhase1 zidx_phase = 8;
    int32 zidx_phase_raw = 9;
  }
  oneof units_enum {
    AngleUnits2 units = 10;
    int32 units_raw = 11;
  }
  uint32 pulses_per_rev = 12;
  double initial_angle = 13;
  string custom_scale_name = 14;
}

message CreateCIAngEncoderChanResponse {
  int32 status = 1;
}

message CreateCIAngVelocityChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof decoding_type_enum {
    EncoderType2 decoding_type = 6;
    int32 decoding_type_raw = 7;
  }
  oneof units_enum {
    AngularVelocityUnits units = 8;
    int32 units_raw = 9;
  }
  uint32 pulses_per_rev = 10;
  string custom_scale_name = 11;
}

message CreateCIAngVelocityChanResponse {
  int32 status = 1;
}

message CreateCICountEdgesChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  oneof edge_enum {
    Edge1 edge = 4;
    int32 edge_raw = 5;
  }
  uint32 initial_count = 6;
  oneof count_direction_enum {
    CountDirection1 count_direction = 7;
    int32 count_direction_raw = 8;
  }
}

message CreateCICountEdgesChanResponse {
  int32 status = 1;
}

message CreateCIDutyCycleChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  double min_freq = 4;
  double max_freq = 5;
  oneof edge_enum {
    Edge1 edge = 6;
    int32 edge_raw = 7;
  }
  string custom_scale_name = 8;
}

message CreateCIDutyCycleChanResponse {
  int32 status = 1;
}

message CreateCIFreqChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    FrequencyUnits3 units = 6;
    int32 units_raw = 7;
  }
  oneof edge_enum {
    Edge1 edge = 8;
    int32 edge_raw = 9;
  }
  oneof meas_method_enum {
    CounterFrequencyMethod meas_method = 10;
    int32 meas_method_raw = 11;
  }
  double meas_time = 12;
  uint32 divisor = 13;
  string custom_scale_name = 14;
}

message CreateCIFreqChanResponse {
  int32 status = 1;
}

message CreateCIGPSTimestampChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  oneof units_enum {
    TimeUnits units = 4;
    int32 units_raw = 5;
  }
  oneof sync_method_enum {
    GpsSignalType1 sync_method = 6;
    int32 sync_method_raw = 7;
  }
  string custom_scale_name = 8;
}

message CreateCIGPSTimestampChanResponse {
  int32 status = 1;
}

message CreateCILinEncoderChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  oneof decoding_type_enum {
    EncoderType2 decoding_type = 4;
    int32 decoding_type_raw = 5;
  }
  bool zidx_enable = 6;
  double zidx_val = 7;
  oneof zidx_phase_enum {
    EncoderZIndexPhase1 zidx_phase = 8;
    int32 zidx_phase_raw = 9;
  }
  oneof units_enum {
    LengthUnits3 units = 10;
    int32 units_raw = 11;
  }
  double dist_per_pulse = 12;
  double initial_pos = 13;
  string custom_scale_name = 14;
}

message CreateCILinEncoderChanResponse {
  int32 status = 1;
}

message CreateCILinVelocityChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof decoding_type_enum {
    EncoderType2 decoding_type = 6;
    int32 decoding_type_raw = 7;
  }
  oneof units_enum {
    VelocityUnits units = 8;
    int32 units_raw = 9;
  }
  double dist_per_pulse = 10;
  string custom_scale_name = 11;
}

message CreateCILinVelocityChanResponse {
  int32 status = 1;
}

message CreateCIPeriodChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TimeUnits3 units = 6;
    int32 units_raw = 7;
  }
  oneof edge_enum {
    Edge1 edge = 8;
    int32 edge_raw = 9;
  }
  oneof meas_method_enum {
    CounterFrequencyMethod meas_method = 10;
    int32 meas_method_raw = 11;
  }
  double meas_time = 12;
  uint32 divisor = 13;
  string custom_scale_name = 14;
}

message CreateCIPeriodChanResponse {
  int32 status = 1;
}

message CreateCIPulseChanFreqRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    FrequencyUnits2 units = 6;
    int32 units_raw = 7;
  }
}

message CreateCIPulseChanFreqResponse {
  int32 status = 1;
}

message CreateCIPulseChanTicksRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  string source_terminal = 4;
  double min_val = 5;
  double max_val = 6;
}

message CreateCIPulseChanTicksResponse {
  int32 status = 1;
}

message CreateCIPulseChanTimeRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    DigitalWidthUnits3 units = 6;
    int32 units_raw = 7;
  }
}

message CreateCIPulseChanTimeResponse {
  int32 status = 1;
}

message CreateCIPulseWidthChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TimeUnits3 units = 6;
    int32 units_raw = 7;
  }
  oneof starting_edge_enum {
    Edge1 starting_edge = 8;
    int32 starting_edge_raw = 9;
  }
  string custom_scale_name = 10;
}

message CreateCIPulseWidthChanResponse {
  int32 status = 1;
}

message CreateCISemiPeriodChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TimeUnits3 units = 6;
    int32 units_raw = 7;
  }
  string custom_scale_name = 8;
}

message CreateCISemiPeriodChanResponse {
  int32 status = 1;
}

message CreateCITwoEdgeSepChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TimeUnits3 units = 6;
    int32 units_raw = 7;
  }
  oneof first_edge_enum {
    Edge1 first_edge = 8;
    int32 first_edge_raw = 9;
  }
  oneof second_edge_enum {
    Edge1 second_edge = 10;
    int32 second_edge_raw = 11;
  }
  string custom_scale_name = 12;
}

message CreateCITwoEdgeSepChanResponse {
  int32 status = 1;
}

message CreateCOPulseChanFreqRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  oneof units_enum {
    FrequencyUnits2 units = 4;
    int32 units_raw = 5;
  }
  oneof idle_state_enum {
    Level1 idle_state = 6;
    int32 idle_state_raw = 7;
  }
  double initial_delay = 8;
  double freq = 9;
  double duty_cycle = 10;
}

message CreateCOPulseChanFreqResponse {
  int32 status = 1;
}

message CreateCOPulseChanTicksRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  string source_terminal = 4;
  oneof idle_state_enum {
    Level1 idle_state = 5;
    int32 idle_state_raw = 6;
  }
  int32 initial_delay = 7;
  int32 low_ticks = 8;
  int32 high_ticks = 9;
}

message CreateCOPulseChanTicksResponse {
  int32 status = 1;
}

message CreateCOPulseChanTimeRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  oneof units_enum {
    DigitalWidthUnits3 units = 4;
    int32 units_raw = 5;
  }
  oneof idle_state_enum {
    Level1 idle_state = 6;
    int32 idle_state_raw = 7;
  }
  double initial_delay = 8;
  double low_time = 9;
  double high_time = 10;
}

message CreateCOPulseChanTimeResponse {
  int32 status = 1;
}

message CreateDIChanRequest {
  nidevice_grpc.Session task = 1;
  string lines = 2;
  string name_to_assign_to_lines = 3;
  oneof line_grouping_enum {
    LineGrouping line_grouping = 4;
    int32 line_grouping_raw = 5;
  }
}

message CreateDIChanResponse {
  int32 status = 1;
}

message CreateDOChanRequest {
  nidevice_grpc.Session task = 1;
  string lines = 2;
  string name_to_assign_to_lines = 3;
  oneof line_grouping_enum {
    LineGrouping line_grouping = 4;
    int32 line_grouping_raw = 5;
  }
}

message CreateDOChanResponse {
  int32 status = 1;
}

message CreateLinScaleRequest {
  string name = 1;
  double slope = 2;
  double y_intercept = 3;
  oneof pre_scaled_units_enum {
    UnitsPreScaled pre_scaled_units = 4;
    int32 pre_scaled_units_raw = 5;
  }
  string scaled_units = 6;
}

message CreateLinScaleResponse {
  int32 status = 1;
}

message CreateMapScaleRequest {
  string name = 1;
  double prescaled_min = 2;
  double prescaled_max = 3;
  double scaled_min = 4;
  double scaled_max = 5;
  oneof pre_scaled_units_enum {
    UnitsPreScaled pre_scaled_units = 6;
    int32 pre_scaled_units_raw = 7;
  }
  string scaled_units = 8;
}

message CreateMapScaleResponse {
  int32 status = 1;
}

message CreatePolynomialScaleRequest {
  string name = 1;
  repeated double forward_coeffs = 2;
  uint32 num_forward_coeffs_in = 3;
  repeated double reverse_coeffs = 4;
  uint32 num_reverse_coeffs_in = 5;
  oneof pre_scaled_units_enum {
    UnitsPreScaled pre_scaled_units = 6;
    int32 pre_scaled_units_raw = 7;
  }
  string scaled_units = 8;
}

message CreatePolynomialScaleResponse {
  int32 status = 1;
}

message CreateTEDSAIAccelChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    AccelUnits2 units = 8;
    int32 units_raw = 9;
  }
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 10;
    int32 current_excit_source_raw = 11;
  }
  double current_excit_val = 12;
  string custom_scale_name = 13;
}

message CreateTEDSAIAccelChanResponse {
  int32 status = 1;
}

message CreateTEDSAIBridgeChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TEDSUnits units = 6;
    int32 units_raw = 7;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 8;
    int32 voltage_excit_source_raw = 9;
  }
  double voltage_excit_val = 10;
  string custom_scale_name = 11;
}

message CreateTEDSAIBridgeChanResponse {
  int32 status = 1;
}

message CreateTEDSAICurrentChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    TEDSUnits units = 8;
    int32 units_raw = 9;
  }
  oneof shunt_resistor_loc_enum {
    CurrentShuntResistorLocationWithDefault shunt_resistor_loc = 10;
    int32 shunt_resistor_loc_raw = 11;
  }
  double ext_shunt_resistor_val = 12;
  string custom_scale_name = 13;
}

message CreateTEDSAICurrentChanResponse {
  int32 status = 1;
}

message CreateTEDSAIForceBridgeChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    ForceUnits units = 6;
    int32 units_raw = 7;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 8;
    int32 voltage_excit_source_raw = 9;
  }
  double voltage_excit_val = 10;
  string custom_scale_name = 11;
}

message CreateTEDSAIForceBridgeChanResponse {
  int32 status = 1;
}

message CreateTEDSAIForceIEPEChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    ForceIEPEUnits units = 8;
    int32 units_raw = 9;
  }
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 10;
    int32 current_excit_source_raw = 11;
  }
  double current_excit_val = 12;
  string custom_scale_name = 13;
}

message CreateTEDSAIForceIEPEChanResponse {
  int32 status = 1;
}

message CreateTEDSAIMicrophoneChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  oneof units_enum {
    SoundPressureUnits1 units = 6;
    int32 units_raw = 7;
  }
  double max_snd_press_level = 8;
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 9;
    int32 current_excit_source_raw = 10;
  }
  double current_excit_val = 11;
  string custom_scale_name = 12;
}

message CreateTEDSAIMicrophoneChanResponse {
  int32 status = 1;
}

message CreateTEDSAIPosLVDTChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    LengthUnits2 units = 6;
    int32 units_raw = 7;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 8;
    int32 voltage_excit_source_raw = 9;
  }
  double voltage_excit_val = 10;
  double voltage_excit_freq = 11;
  oneof ac_excit_wire_mode_enum {
    ACExcitWireMode ac_excit_wire_mode = 12;
    int32 ac_excit_wire_mode_raw = 13;
  }
  string custom_scale_name = 14;
}

message CreateTEDSAIPosLVDTChanResponse {
  int32 status = 1;
}

message CreateTEDSAIPosRVDTChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    AngleUnits1 units = 6;
    int32 units_raw = 7;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 8;
    int32 voltage_excit_source_raw = 9;
  }
  double voltage_excit_val = 10;
  double voltage_excit_freq = 11;
  oneof ac_excit_wire_mode_enum {
    ACExcitWireMode ac_excit_wire_mode = 12;
    int32 ac_excit_wire_mode_raw = 13;
  }
  string custom_scale_name = 14;
}

message CreateTEDSAIPosRVDTChanResponse {
  int32 status = 1;
}

message CreateTEDSAIPressureBridgeChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    PressureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 8;
    int32 voltage_excit_source_raw = 9;
  }
  double voltage_excit_val = 10;
  string custom_scale_name = 11;
}

message CreateTEDSAIPressureBridgeChanResponse {
  int32 status = 1;
}

message CreateTEDSAIRTDChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TemperatureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof resistance_config_enum {
    ResistanceConfiguration resistance_config = 8;
    int32 resistance_config_raw = 9;
  }
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 10;
    int32 current_excit_source_raw = 11;
  }
  double current_excit_val = 12;
}

message CreateTEDSAIRTDChanResponse {
  int32 status = 1;
}

message CreateTEDSAIResistanceChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TEDSUnits units = 6;
    int32 units_raw = 7;
  }
  oneof resistance_config_enum {
    ResistanceConfiguration resistance_config = 8;
    int32 resistance_config_raw = 9;
  }
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 10;
    int32 current_excit_source_raw = 11;
  }
  double current_excit_val = 12;
  string custom_scale_name = 13;
}

message CreateTEDSAIResistanceChanResponse {
  int32 status = 1;
}

message CreateTEDSAIStrainGageChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    StrainUnits1 units = 6;
    int32 units_raw = 7;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 8;
    int32 voltage_excit_source_raw = 9;
  }
  double voltage_excit_val = 10;
  double initial_bridge_voltage = 11;
  double lead_wire_resistance = 12;
  string custom_scale_name = 13;
}

message CreateTEDSAIStrainGageChanResponse {
  int32 status = 1;
}

message CreateTEDSAIThrmcplChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TemperatureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof cjc_source_enum {
    CJCSource1 cjc_source = 8;
    int32 cjc_source_raw = 9;
  }
  double cjc_val = 10;
  string cjc_channel = 11;
}

message CreateTEDSAIThrmcplChanResponse {
  int32 status = 1;
}

message CreateTEDSAIThrmstrChanIexRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TemperatureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof resistance_config_enum {
    ResistanceConfiguration resistance_config = 8;
    int32 resistance_config_raw = 9;
  }
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 10;
    int32 current_excit_source_raw = 11;
  }
  double current_excit_val = 12;
}

message CreateTEDSAIThrmstrChanIexResponse {
  int32 status = 1;
}

message CreateTEDSAIThrmstrChanVexRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TemperatureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof resistance_config_enum {
    ResistanceConfiguration resistance_config = 8;
    int32 resistance_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double r1 = 13;
}

message CreateTEDSAIThrmstrChanVexResponse {
  int32 status = 1;
}

message CreateTEDSAITorqueBridgeChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TorqueUnits units = 6;
    int32 units_raw = 7;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 8;
    int32 voltage_excit_source_raw = 9;
  }
  double voltage_excit_val = 10;
  string custom_scale_name = 11;
}

message CreateTEDSAITorqueBridgeChanResponse {
  int32 status = 1;
}

message CreateTEDSAIVoltageChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    TEDSUnits units = 8;
    int32 units_raw = 9;
  }
  string custom_scale_name = 10;
}

message CreateTEDSAIVoltageChanResponse {
  int32 status = 1;
}

message CreateTEDSAIVoltageChanWithExcitRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    TEDSUnits units = 8;
    int32 units_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  string custom_scale_name = 13;
}

message CreateTEDSAIVoltageChanWithExcitResponse {
  int32 status = 1;
}

message CreateTableScaleRequest {
  string name = 1;
  repeated double prescaled_vals = 2;
  uint32 num_prescaled_vals_in = 3;
  repeated double scaled_vals = 4;
  uint32 num_scaled_vals_in = 5;
  oneof pre_scaled_units_enum {
    UnitsPreScaled pre_scaled_units = 6;
    int32 pre_scaled_units_raw = 7;
  }
  string scaled_units = 8;
}

message CreateTableScaleResponse {
  int32 status = 1;
}

message CreateTaskRequest {
  string session_name = 1;
}

message CreateTaskResponse {
  int32 status = 1;
  nidevice_grpc.Session task = 2;
}

message CreateWatchdogTimerTaskRequest {
  string device_name = 1;
  string session_name = 2;
  double timeout = 3;
  string lines = 4;
  oneof exp_state_enum {
    DigitalLineState exp_state = 5;
    int32 exp_state_raw = 6;
  }
}

message CreateWatchdogTimerTaskResponse {
  int32 status = 1;
  nidevice_grpc.Session task = 2;
}

message CreateWatchdogTimerTaskExRequest {
  string device_name = 1;
  string session_name = 2;
  double timeout = 3;
}

message CreateWatchdogTimerTaskExResponse {
  int32 status = 1;
  nidevice_grpc.Session task = 2;
}

message DeleteNetworkDeviceRequest {
  string device_name = 1;
}

message DeleteNetworkDeviceResponse {
  int32 status = 1;
}

message DeleteSavedGlobalChanRequest {
  string channel_name = 1;
}

message DeleteSavedGlobalChanResponse {
  int32 status = 1;
}

message DeleteSavedScaleRequest {
  string scale_name = 1;
}

message DeleteSavedScaleResponse {
  int32 status = 1;
}

message DeleteSavedTaskRequest {
  string task_name = 1;
}

message DeleteSavedTaskResponse {
  int32 status = 1;
}

message DeviceSupportsCalRequest {
  string device_name = 1;
}

message DeviceSupportsCalResponse {
  int32 status = 1;
  bool cal_supported = 2;
}

message DisableRefTrigRequest {
  nidevice_grpc.Session task = 1;
}

message DisableRefTrigResponse {
  int32 status = 1;
}

message DisableStartTrigRequest {
  nidevice_grpc.Session task = 1;
}

message DisableStartTrigResponse {
  int32 status = 1;
}

message DisconnectTermsRequest {
  string source_terminal = 1;
  string destination_terminal = 2;
}

message DisconnectTermsResponse {
  int32 status = 1;
}

message ExportSignalRequest {
  nidevice_grpc.Session task = 1;
  oneof signal_id_enum {
    Signal signal_id = 2;
    int32 signal_id_raw = 3;
  }
  string output_terminal = 4;
}

message ExportSignalResponse {
  int32 status = 1;
}

message GetAIACExcitFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIACExcitFreqResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIACExcitSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIACExcitSyncEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAIACExcitWireModeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIACExcitWireModeResponse {
  int32 status = 1;
  ACExcitWireMode data = 2;
  int32 data_raw = 3;
}

message GetAIADCCustomTimingModeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIADCCustomTimingModeResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetAIADCTimingModeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIADCTimingModeResponse {
  int32 status = 1;
  ADCTimingMode data = 2;
  int32 data_raw = 3;
}

message GetAIAccel4WireDCVoltageSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIAccel4WireDCVoltageSensitivityResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIAccel4WireDCVoltageSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIAccel4WireDCVoltageSensitivityUnitsResponse {
  int32 status = 1;
  AccelSensitivityUnits1 data = 2;
  int32 data_raw = 3;
}

message GetAIAccelChargeSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIAccelChargeSensitivityResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIAccelChargeSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIAccelChargeSensitivityUnitsResponse {
  int32 status = 1;
  AccelChargeSensitivityUnits data = 2;
  int32 data_raw = 3;
}

message GetAIAccelSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIAccelSensitivityResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIAccelSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIAccelSensitivityUnitsResponse {
  int32 status = 1;
  AccelSensitivityUnits1 data = 2;
  int32 data_raw = 3;
}

message GetAIAccelUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIAccelUnitsResponse {
  int32 status = 1;
  AccelUnits2 data = 2;
  int32 data_raw = 3;
}

message GetAIAcceldBRefRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIAcceldBRefResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIAttenRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIAttenResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIAutoZeroModeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIAutoZeroModeResponse {
  int32 status = 1;
  AutoZeroType1 data = 2;
  int32 data_raw = 3;
}

message GetAIAveragingWinSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIAveragingWinSizeResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetAIBridgeBalanceCoarsePotRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIBridgeBalanceCoarsePotResponse {
  int32 status = 1;
  int32 data = 2;
}

message GetAIBridgeBalanceFinePotRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIBridgeBalanceFinePotResponse {
  int32 status = 1;
  int32 data = 2;
}

message GetAIBridgeCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIBridgeCfgResponse {
  int32 status = 1;
  BridgeConfiguration1 data = 2;
  int32 data_raw = 3;
}

message GetAIBridgeElectricalUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIBridgeElectricalUnitsResponse {
  int32 status = 1;
  BridgeElectricalUnits data = 2;
  int32 data_raw = 3;
}

message GetAIBridgeInitialRatioRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIBridgeInitialRatioResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIBridgeInitialVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIBridgeInitialVoltageResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIBridgeNomResistanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIBridgeNomResistanceResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIBridgePhysicalUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIBridgePhysicalUnitsResponse {
  int32 status = 1;
  BridgePhysicalUnits data = 2;
  int32 data_raw = 3;
}

message GetAIBridgePolyForwardCoeffRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message GetAIBridgePolyForwardCoeffResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIBridgePolyReverseCoeffRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message GetAIBridgePolyReverseCoeffResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIBridgeScaleTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIBridgeScaleTypeResponse {
  int32 status = 1;
  ScaleType4 data = 2;
  int32 data_raw = 3;
}

message GetAIBridgeShuntCalEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIBridgeShuntCalEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAIBridgeShuntCalGainAdjustRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIBridgeShuntCalGainAdjustResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIBridgeShuntCalSelectRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIBridgeShuntCalSelectResponse {
  int32 status = 1;
  ShuntCalSelect data = 2;
  int32 data_raw = 3;
}

message GetAIBridgeShuntCalShuntCalAActualResistanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIBridgeShuntCalShuntCalAActualResistanceResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIBridgeShuntCalShuntCalAResistanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIBridgeShuntCalShuntCalAResistanceResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIBridgeShuntCalShuntCalASrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIBridgeShuntCalShuntCalASrcResponse {
  int32 status = 1;
  BridgeShuntCalSource data = 2;
  int32 data_raw = 3;
}

message GetAIBridgeShuntCalShuntCalBActualResistanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIBridgeShuntCalShuntCalBActualResistanceResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIBridgeShuntCalShuntCalBResistanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIBridgeShuntCalShuntCalBResistanceResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIBridgeTableElectricalValsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message GetAIBridgeTableElectricalValsResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIBridgeTablePhysicalValsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message GetAIBridgeTablePhysicalValsResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIBridgeTwoPointLinFirstElectricalValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIBridgeTwoPointLinFirstElectricalValResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIBridgeTwoPointLinFirstPhysicalValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIBridgeTwoPointLinFirstPhysicalValResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIBridgeTwoPointLinSecondElectricalValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIBridgeTwoPointLinSecondElectricalValResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIBridgeTwoPointLinSecondPhysicalValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIBridgeTwoPointLinSecondPhysicalValResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIBridgeUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIBridgeUnitsResponse {
  int32 status = 1;
  BridgeUnits data = 2;
  int32 data_raw = 3;
}

message GetAIChanCalApplyCalIfExpRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIChanCalApplyCalIfExpResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAIChanCalCalDateRequest {
  nidevice_grpc.Session task = 1;
  string channel_name = 2;
}

message GetAIChanCalCalDateResponse {
  int32 status = 1;
  uint32 year = 2;
  uint32 month = 3;
  uint32 day = 4;
  uint32 hour = 5;
  uint32 minute = 6;
}

message GetAIChanCalDescRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetAIChanCalDescResponse {
  int32 status = 1;
  string data = 2;
}

message GetAIChanCalEnableCalRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIChanCalEnableCalResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAIChanCalExpDateRequest {
  nidevice_grpc.Session task = 1;
  string channel_name = 2;
}

message GetAIChanCalExpDateResponse {
  int32 status = 1;
  uint32 year = 2;
  uint32 month = 3;
  uint32 day = 4;
  uint32 hour = 5;
  uint32 minute = 6;
}

message GetAIChanCalHasValidCalInfoRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIChanCalHasValidCalInfoResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAIChanCalOperatorNameRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetAIChanCalOperatorNameResponse {
  int32 status = 1;
  string data = 2;
}

message GetAIChanCalPolyForwardCoeffRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message GetAIChanCalPolyForwardCoeffResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIChanCalPolyReverseCoeffRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message GetAIChanCalPolyReverseCoeffResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIChanCalScaleTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIChanCalScaleTypeResponse {
  int32 status = 1;
  ScaleType3 data = 2;
  int32 data_raw = 3;
}

message GetAIChanCalTablePreScaledValsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message GetAIChanCalTablePreScaledValsResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIChanCalTableScaledValsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message GetAIChanCalTableScaledValsResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIChanCalVerifAcqValsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message GetAIChanCalVerifAcqValsResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIChanCalVerifRefValsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message GetAIChanCalVerifRefValsResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIChargeUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIChargeUnitsResponse {
  int32 status = 1;
  ChargeUnits data = 2;
  int32 data_raw = 3;
}

message GetAIChopEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIChopEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAICouplingRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAICouplingResponse {
  int32 status = 1;
  Coupling1 data = 2;
  int32 data_raw = 3;
}

message GetAICurrentACRMSUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAICurrentACRMSUnitsResponse {
  int32 status = 1;
  CurrentUnits1 data = 2;
  int32 data_raw = 3;
}

message GetAICurrentShuntLocRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAICurrentShuntLocResponse {
  int32 status = 1;
  CurrentShuntResistorLocation1 data = 2;
  int32 data_raw = 3;
}

message GetAICurrentShuntResistanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAICurrentShuntResistanceResponse {
  int32 status = 1;
  double data = 2;
}

message GetAICurrentUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAICurrentUnitsResponse {
  int32 status = 1;
  CurrentUnits1 data = 2;
  int32 data_raw = 3;
}

message GetAICustomScaleNameRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetAICustomScaleNameResponse {
  int32 status = 1;
  string data = 2;
}

message GetAIDCOffsetRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIDCOffsetResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIDataXferCustomThresholdRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIDataXferCustomThresholdResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetAIDataXferMaxRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIDataXferMaxRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIDataXferMechRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIDataXferMechResponse {
  int32 status = 1;
  DataTransferMechanism data = 2;
  int32 data_raw = 3;
}

message GetAIDataXferReqCondRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIDataXferReqCondResponse {
  int32 status = 1;
  InputDataTransferCondition data = 2;
  int32 data_raw = 3;
}

message GetAIDevScalingCoeffRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message GetAIDevScalingCoeffResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIDigFltrBandpassCenterFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIDigFltrBandpassCenterFreqResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIDigFltrBandpassWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIDigFltrBandpassWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIDigFltrCoeffRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message GetAIDigFltrCoeffResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAIDigFltrHighpassCutoffFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIDigFltrHighpassCutoffFreqResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIDigFltrLowpassCutoffFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIDigFltrLowpassCutoffFreqResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIDigFltrNotchCenterFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIDigFltrNotchCenterFreqResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIDigFltrNotchWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIDigFltrNotchWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIDigFltrOrderRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIDigFltrOrderResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetAIDigFltrResponseRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIDigFltrResponseResponse {
  int32 status = 1;
  FilterResponse data = 2;
  int32 data_raw = 3;
}

message GetAIDigFltrTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIDigFltrTypeResponse {
  int32 status = 1;
  FilterType2 data = 2;
  int32 data_raw = 3;
}

message GetAIDitherEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIDitherEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAIEddyCurrentProxProbeSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIEddyCurrentProxProbeSensitivityResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIEddyCurrentProxProbeSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIEddyCurrentProxProbeSensitivityUnitsResponse {
  int32 status = 1;
  EddyCurrentProxProbeSensitivityUnits data = 2;
  int32 data_raw = 3;
}

message GetAIEddyCurrentProxProbeUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIEddyCurrentProxProbeUnitsResponse {
  int32 status = 1;
  LengthUnits2 data = 2;
  int32 data_raw = 3;
}

message GetAIEnhancedAliasRejectionEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIEnhancedAliasRejectionEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAIExcitActualValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIExcitActualValResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIExcitDCorACRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIExcitDCorACResponse {
  int32 status = 1;
  ExcitationDCorAC data = 2;
  int32 data_raw = 3;
}

message GetAIExcitIdleOutputBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIExcitIdleOutputBehaviorResponse {
  int32 status = 1;
  ExcitationIdleOutputBehavior data = 2;
  int32 data_raw = 3;
}

message GetAIExcitSenseRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIExcitSenseResponse {
  int32 status = 1;
  Sense data = 2;
  int32 data_raw = 3;
}

message GetAIExcitSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIExcitSrcResponse {
  int32 status = 1;
  ExcitationSource data = 2;
  int32 data_raw = 3;
}

message GetAIExcitUseForScalingRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIExcitUseForScalingResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAIExcitUseMultiplexedRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIExcitUseMultiplexedResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAIExcitValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIExcitValResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIExcitVoltageOrCurrentRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIExcitVoltageOrCurrentResponse {
  int32 status = 1;
  ExcitationVoltageOrCurrent data = 2;
  int32 data_raw = 3;
}

message GetAIFilterDelayRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIFilterDelayResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIFilterDelayAdjustmentRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIFilterDelayAdjustmentResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIFilterDelayUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIFilterDelayUnitsResponse {
  int32 status = 1;
  DigitalWidthUnits4 data = 2;
  int32 data_raw = 3;
}

message GetAIFilterEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIFilterEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAIFilterFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIFilterFreqResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIFilterOrderRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIFilterOrderResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetAIFilterResponseRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIFilterResponseResponse {
  int32 status = 1;
  FilterResponse1 data = 2;
  int32 data_raw = 3;
}

message GetAIForceIEPESensorSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIForceIEPESensorSensitivityResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIForceIEPESensorSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIForceIEPESensorSensitivityUnitsResponse {
  int32 status = 1;
  ForceIEPESensorSensitivityUnits data = 2;
  int32 data_raw = 3;
}

message GetAIForceReadFromChanRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIForceReadFromChanResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAIForceUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIForceUnitsResponse {
  int32 status = 1;
  ForceUnits data = 2;
  int32 data_raw = 3;
}

message GetAIFreqHystRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIFreqHystResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIFreqThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIFreqThreshVoltageResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIFreqUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIFreqUnitsResponse {
  int32 status = 1;
  FrequencyUnits data = 2;
  int32 data_raw = 3;
}

message GetAIGainRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIGainResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIInputLimitsFaultDetectEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIInputLimitsFaultDetectEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAIInputLimitsFaultDetectLowerLimitRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIInputLimitsFaultDetectLowerLimitResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIInputLimitsFaultDetectUpperLimitRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIInputLimitsFaultDetectUpperLimitResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIInputSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetAIInputSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetAIIsTEDSRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIIsTEDSResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAILVDTSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAILVDTSensitivityResponse {
  int32 status = 1;
  double data = 2;
}

message GetAILVDTSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAILVDTSensitivityUnitsResponse {
  int32 status = 1;
  LVDTSensitivityUnits1 data = 2;
  int32 data_raw = 3;
}

message GetAILVDTUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAILVDTUnitsResponse {
  int32 status = 1;
  LengthUnits2 data = 2;
  int32 data_raw = 3;
}

message GetAILeadWireResistanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAILeadWireResistanceResponse {
  int32 status = 1;
  double data = 2;
}

message GetAILossyLSBRemovalCompressedSampSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAILossyLSBRemovalCompressedSampSizeResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetAILowpassCutoffFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAILowpassCutoffFreqResponse {
  int32 status = 1;
  double data = 2;
}

message GetAILowpassEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAILowpassEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAILowpassSwitchCapClkSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAILowpassSwitchCapClkSrcResponse {
  int32 status = 1;
  SourceSelection data = 2;
  int32 data_raw = 3;
}

message GetAILowpassSwitchCapExtClkDivRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAILowpassSwitchCapExtClkDivResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetAILowpassSwitchCapExtClkFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAILowpassSwitchCapExtClkFreqResponse {
  int32 status = 1;
  double data = 2;
}

message GetAILowpassSwitchCapOutClkDivRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAILowpassSwitchCapOutClkDivResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetAIMaxRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIMaxResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIMeasTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIMeasTypeResponse {
  int32 status = 1;
  AIMeasurementType data = 2;
  int32 data_raw = 3;
}

message GetAIMemMapEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIMemMapEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAIMicrophoneSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIMicrophoneSensitivityResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIMinRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIMinResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIOpenChanDetectEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIOpenChanDetectEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAIOpenThrmcplDetectEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIOpenThrmcplDetectEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAIOvercurrentDetectEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIOvercurrentDetectEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAIPowerSupplyFaultDetectEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIPowerSupplyFaultDetectEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAIPressureUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIPressureUnitsResponse {
  int32 status = 1;
  PressureUnits data = 2;
  int32 data_raw = 3;
}

message GetAIProbeAttenRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIProbeAttenResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIRTDARequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIRTDAResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIRTDBRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIRTDBResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIRTDCRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIRTDCResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIRTDR0Request {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIRTDR0Response {
  int32 status = 1;
  double data = 2;
}

message GetAIRTDTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIRTDTypeResponse {
  int32 status = 1;
  RTDType1 data = 2;
  int32 data_raw = 3;
}

message GetAIRVDTSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIRVDTSensitivityResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIRVDTSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIRVDTSensitivityUnitsResponse {
  int32 status = 1;
  RVDTSensitivityUnits1 data = 2;
  int32 data_raw = 3;
}

message GetAIRVDTUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIRVDTUnitsResponse {
  int32 status = 1;
  AngleUnits1 data = 2;
  int32 data_raw = 3;
}

message GetAIRawDataCompressionTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIRawDataCompressionTypeResponse {
  int32 status = 1;
  RawDataCompressionType data = 2;
  int32 data_raw = 3;
}

message GetAIRawSampJustificationRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIRawSampJustificationResponse {
  int32 status = 1;
  DataJustification1 data = 2;
  int32 data_raw = 3;
}

message GetAIRawSampSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIRawSampSizeResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetAIRemoveFilterDelayRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIRemoveFilterDelayResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAIResistanceCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIResistanceCfgResponse {
  int32 status = 1;
  ResistanceConfiguration data = 2;
  int32 data_raw = 3;
}

message GetAIResistanceUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIResistanceUnitsResponse {
  int32 status = 1;
  ResistanceUnits1 data = 2;
  int32 data_raw = 3;
}

message GetAIResolutionRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIResolutionResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIResolutionUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIResolutionUnitsResponse {
  int32 status = 1;
  ResolutionType1 data = 2;
  int32 data_raw = 3;
}

message GetAIRngHighRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIRngHighResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIRngLowRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIRngLowResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIRosetteStrainGageOrientationRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIRosetteStrainGageOrientationResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIRosetteStrainGageRosetteMeasTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIRosetteStrainGageRosetteMeasTypeResponse {
  int32 status = 1;
  StrainGageRosetteMeasurementType data = 2;
  int32 data_raw = 3;
}

message GetAIRosetteStrainGageRosetteTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIRosetteStrainGageRosetteTypeResponse {
  int32 status = 1;
  StrainGageRosetteType data = 2;
  int32 data_raw = 3;
}

message GetAIRosetteStrainGageStrainChansRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetAIRosetteStrainGageStrainChansResponse {
  int32 status = 1;
  string data = 2;
}

message GetAISampAndHoldEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAISampAndHoldEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAISensorPowerCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAISensorPowerCfgResponse {
  int32 status = 1;
  SensorPowerCfg data = 2;
  int32 data_raw = 3;
}

message GetAISensorPowerTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAISensorPowerTypeResponse {
  int32 status = 1;
  SensorPowerType data = 2;
  int32 data_raw = 3;
}

message GetAISensorPowerVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAISensorPowerVoltageResponse {
  int32 status = 1;
  double data = 2;
}

message GetAISoundPressureMaxSoundPressureLvlRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAISoundPressureMaxSoundPressureLvlResponse {
  int32 status = 1;
  double data = 2;
}

message GetAISoundPressureUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAISoundPressureUnitsResponse {
  int32 status = 1;
  SoundPressureUnits1 data = 2;
  int32 data_raw = 3;
}

message GetAISoundPressuredBRefRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAISoundPressuredBRefResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIStrainGageCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIStrainGageCfgResponse {
  int32 status = 1;
  StrainGageBridgeType1 data = 2;
  int32 data_raw = 3;
}

message GetAIStrainGageForceReadFromChanRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIStrainGageForceReadFromChanResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAIStrainGageGageFactorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIStrainGageGageFactorResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIStrainGagePoissonRatioRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIStrainGagePoissonRatioResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIStrainUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIStrainUnitsResponse {
  int32 status = 1;
  StrainUnits1 data = 2;
  int32 data_raw = 3;
}

message GetAITEDSUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetAITEDSUnitsResponse {
  int32 status = 1;
  string data = 2;
}

message GetAITempUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAITempUnitsResponse {
  int32 status = 1;
  TemperatureUnits1 data = 2;
  int32 data_raw = 3;
}

message GetAITermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAITermCfgResponse {
  int32 status = 1;
  InputTermCfg data = 2;
  int32 data_raw = 3;
}

message GetAIThrmcplCJCChanRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetAIThrmcplCJCChanResponse {
  int32 status = 1;
  string data = 2;
}

message GetAIThrmcplCJCSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIThrmcplCJCSrcResponse {
  int32 status = 1;
  CJCSource1 data = 2;
  int32 data_raw = 3;
}

message GetAIThrmcplCJCValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIThrmcplCJCValResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIThrmcplLeadOffsetVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIThrmcplLeadOffsetVoltageResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIThrmcplScaleTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIThrmcplScaleTypeResponse {
  int32 status = 1;
  ScaleType2 data = 2;
  int32 data_raw = 3;
}

message GetAIThrmcplTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIThrmcplTypeResponse {
  int32 status = 1;
  ThermocoupleType1 data = 2;
  int32 data_raw = 3;
}

message GetAIThrmstrARequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIThrmstrAResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIThrmstrBRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIThrmstrBResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIThrmstrCRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIThrmstrCResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIThrmstrR1Request {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIThrmstrR1Response {
  int32 status = 1;
  double data = 2;
}

message GetAITorqueUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAITorqueUnitsResponse {
  int32 status = 1;
  TorqueUnits data = 2;
  int32 data_raw = 3;
}

message GetAIUsbXferReqCountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIUsbXferReqCountResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetAIUsbXferReqSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIUsbXferReqSizeResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetAIVelocityIEPESensorSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIVelocityIEPESensorSensitivityResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIVelocityIEPESensorSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIVelocityIEPESensorSensitivityUnitsResponse {
  int32 status = 1;
  VelocityIEPESensorSensitivityUnits data = 2;
  int32 data_raw = 3;
}

message GetAIVelocityIEPESensordBRefRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIVelocityIEPESensordBRefResponse {
  int32 status = 1;
  double data = 2;
}

message GetAIVelocityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIVelocityUnitsResponse {
  int32 status = 1;
  VelocityUnits data = 2;
  int32 data_raw = 3;
}

message GetAIVoltageACRMSUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIVoltageACRMSUnitsResponse {
  int32 status = 1;
  VoltageUnits1 data = 2;
  int32 data_raw = 3;
}

message GetAIVoltageUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIVoltageUnitsResponse {
  int32 status = 1;
  VoltageUnits1 data = 2;
  int32 data_raw = 3;
}

message GetAIVoltagedBRefRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAIVoltagedBRefResponse {
  int32 status = 1;
  double data = 2;
}

message GetAOCurrentUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOCurrentUnitsResponse {
  int32 status = 1;
  CurrentUnits1 data = 2;
  int32 data_raw = 3;
}

message GetAOCustomScaleNameRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetAOCustomScaleNameResponse {
  int32 status = 1;
  string data = 2;
}

message GetAODACOffsetExtSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetAODACOffsetExtSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetAODACOffsetSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAODACOffsetSrcResponse {
  int32 status = 1;
  SourceSelection data = 2;
  int32 data_raw = 3;
}

message GetAODACOffsetValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAODACOffsetValResponse {
  int32 status = 1;
  double data = 2;
}

message GetAODACRefAllowConnToGndRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAODACRefAllowConnToGndResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAODACRefConnToGndRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAODACRefConnToGndResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAODACRefExtSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetAODACRefExtSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetAODACRefSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAODACRefSrcResponse {
  int32 status = 1;
  SourceSelection data = 2;
  int32 data_raw = 3;
}

message GetAODACRefValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAODACRefValResponse {
  int32 status = 1;
  double data = 2;
}

message GetAODACRngHighRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAODACRngHighResponse {
  int32 status = 1;
  double data = 2;
}

message GetAODACRngLowRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAODACRngLowResponse {
  int32 status = 1;
  double data = 2;
}

message GetAODataXferMechRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAODataXferMechResponse {
  int32 status = 1;
  DataTransferMechanism data = 2;
  int32 data_raw = 3;
}

message GetAODataXferReqCondRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAODataXferReqCondResponse {
  int32 status = 1;
  OutputDataTransferCondition data = 2;
  int32 data_raw = 3;
}

message GetAODevScalingCoeffRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message GetAODevScalingCoeffResponse {
  int32 status = 1;
  double data = 2;
}

message GetAOEnhancedImageRejectionEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOEnhancedImageRejectionEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAOFilterDelayRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOFilterDelayResponse {
  int32 status = 1;
  double data = 2;
}

message GetAOFilterDelayAdjustmentRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOFilterDelayAdjustmentResponse {
  int32 status = 1;
  double data = 2;
}

message GetAOFilterDelayUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOFilterDelayUnitsResponse {
  int32 status = 1;
  DigitalWidthUnits4 data = 2;
  int32 data_raw = 3;
}

message GetAOFuncGenAmplitudeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOFuncGenAmplitudeResponse {
  int32 status = 1;
  double data = 2;
}

message GetAOFuncGenFMDeviationRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOFuncGenFMDeviationResponse {
  int32 status = 1;
  double data = 2;
}

message GetAOFuncGenFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOFuncGenFreqResponse {
  int32 status = 1;
  double data = 2;
}

message GetAOFuncGenModulationTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOFuncGenModulationTypeResponse {
  int32 status = 1;
  ModulationType data = 2;
  int32 data_raw = 3;
}

message GetAOFuncGenOffsetRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOFuncGenOffsetResponse {
  int32 status = 1;
  double data = 2;
}

message GetAOFuncGenSquareDutyCycleRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOFuncGenSquareDutyCycleResponse {
  int32 status = 1;
  double data = 2;
}

message GetAOFuncGenTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOFuncGenTypeResponse {
  int32 status = 1;
  FuncGenType data = 2;
  int32 data_raw = 3;
}

message GetAOGainRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOGainResponse {
  int32 status = 1;
  double data = 2;
}

message GetAOIdleOutputBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOIdleOutputBehaviorResponse {
  int32 status = 1;
  AOIdleOutputBehavior data = 2;
  int32 data_raw = 3;
}

message GetAOLoadImpedanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOLoadImpedanceResponse {
  int32 status = 1;
  double data = 2;
}

message GetAOMaxRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOMaxResponse {
  int32 status = 1;
  double data = 2;
}

message GetAOMemMapEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOMemMapEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAOMinRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOMinResponse {
  int32 status = 1;
  double data = 2;
}

message GetAOOutputImpedanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOOutputImpedanceResponse {
  int32 status = 1;
  double data = 2;
}

message GetAOOutputTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOOutputTypeResponse {
  int32 status = 1;
  AOOutputChannelType data = 2;
  int32 data_raw = 3;
}

message GetAOReglitchEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOReglitchEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAOResolutionRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOResolutionResponse {
  int32 status = 1;
  double data = 2;
}

message GetAOResolutionUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOResolutionUnitsResponse {
  int32 status = 1;
  ResolutionType1 data = 2;
  int32 data_raw = 3;
}

message GetAOTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOTermCfgResponse {
  int32 status = 1;
  OutputTermCfg data = 2;
  int32 data_raw = 3;
}

message GetAOUsbXferReqCountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOUsbXferReqCountResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetAOUsbXferReqSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOUsbXferReqSizeResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetAOUseOnlyOnBrdMemRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOUseOnlyOnBrdMemResponse {
  int32 status = 1;
  bool data = 2;
}

message GetAOVoltageCurrentLimitRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOVoltageCurrentLimitResponse {
  int32 status = 1;
  double data = 2;
}

message GetAOVoltageUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetAOVoltageUnitsResponse {
  int32 status = 1;
  VoltageUnits2 data = 2;
  int32 data_raw = 3;
}

message GetArmStartTrigTimestampValRequest {
  nidevice_grpc.Session task = 1;
}

message GetArmStartTrigTimestampValResponse {
  int32 status = 1;
  google.protobuf.Timestamp data = 2;
}

message GetArmStartTrigTrigWhenRequest {
  nidevice_grpc.Session task = 1;
}

message GetArmStartTrigTrigWhenResponse {
  int32 status = 1;
  google.protobuf.Timestamp data = 2;
}

message GetAutoConfiguredCDAQSyncConnectionsRequest {
  uint32 port_list_size = 1;
}

message GetAutoConfiguredCDAQSyncConnectionsResponse {
  int32 status = 1;
  string port_list = 2;
}

message GetBufInputBufSizeRequest {
  nidevice_grpc.Session task = 1;
}

message GetBufInputBufSizeResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetBufInputOnbrdBufSizeRequest {
  nidevice_grpc.Session task = 1;
}

message GetBufInputOnbrdBufSizeResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetBufOutputBufSizeRequest {
  nidevice_grpc.Session task = 1;
}

message GetBufOutputBufSizeResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetBufOutputOnbrdBufSizeRequest {
  nidevice_grpc.Session task = 1;
}

message GetBufOutputOnbrdBufSizeResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCIAngEncoderInitialAngleRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIAngEncoderInitialAngleResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIAngEncoderPulsesPerRevRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIAngEncoderPulsesPerRevResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCIAngEncoderUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIAngEncoderUnitsResponse {
  int32 status = 1;
  AngleUnits2 data = 2;
  int32 data_raw = 3;
}

message GetCICountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCICountEdgesActiveEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesActiveEdgeResponse {
  int32 status = 1;
  Edge1 data = 2;
  int32 data_raw = 3;
}

message GetCICountEdgesCountDirDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesCountDirDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCICountEdgesCountDirDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesCountDirDigFltrMinPulseWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetCICountEdgesCountDirDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesCountDirDigFltrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCICountEdgesCountDirDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCICountEdgesCountDirDigFltrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCICountEdgesCountDirDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesCountDirDigSyncEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCICountEdgesCountDirHystRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesCountDirHystResponse {
  int32 status = 1;
  double data = 2;
}

message GetCICountEdgesCountDirLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesCountDirLogicLvlBehaviorResponse {
  int32 status = 1;
  LogicLvlBehavior data = 2;
  int32 data_raw = 3;
}

message GetCICountEdgesCountDirTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesCountDirTermCfgResponse {
  int32 status = 1;
  InputTermCfg2 data = 2;
  int32 data_raw = 3;
}

message GetCICountEdgesCountDirThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesCountDirThreshVoltageResponse {
  int32 status = 1;
  double data = 2;
}

message GetCICountEdgesCountResetActiveEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesCountResetActiveEdgeResponse {
  int32 status = 1;
  Edge1 data = 2;
  int32 data_raw = 3;
}

message GetCICountEdgesCountResetDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesCountResetDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCICountEdgesCountResetDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesCountResetDigFltrMinPulseWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetCICountEdgesCountResetDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesCountResetDigFltrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCICountEdgesCountResetDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCICountEdgesCountResetDigFltrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCICountEdgesCountResetDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesCountResetDigSyncEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCICountEdgesCountResetEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesCountResetEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCICountEdgesCountResetHystRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesCountResetHystResponse {
  int32 status = 1;
  double data = 2;
}

message GetCICountEdgesCountResetLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesCountResetLogicLvlBehaviorResponse {
  int32 status = 1;
  LogicLvlBehavior data = 2;
  int32 data_raw = 3;
}

message GetCICountEdgesCountResetResetCountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesCountResetResetCountResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCICountEdgesCountResetTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCICountEdgesCountResetTermResponse {
  int32 status = 1;
  string data = 2;
}

message GetCICountEdgesCountResetTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesCountResetTermCfgResponse {
  int32 status = 1;
  InputTermCfg2 data = 2;
  int32 data_raw = 3;
}

message GetCICountEdgesCountResetThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesCountResetThreshVoltageResponse {
  int32 status = 1;
  double data = 2;
}

message GetCICountEdgesDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCICountEdgesDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesDigFltrMinPulseWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetCICountEdgesDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesDigFltrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCICountEdgesDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCICountEdgesDigFltrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCICountEdgesDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesDigSyncEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCICountEdgesDirRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesDirResponse {
  int32 status = 1;
  CountDirection1 data = 2;
  int32 data_raw = 3;
}

message GetCICountEdgesDirTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCICountEdgesDirTermResponse {
  int32 status = 1;
  string data = 2;
}

message GetCICountEdgesGateDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesGateDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCICountEdgesGateDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesGateDigFltrMinPulseWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetCICountEdgesGateDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesGateDigFltrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCICountEdgesGateDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCICountEdgesGateDigFltrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCICountEdgesGateEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesGateEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCICountEdgesGateHystRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesGateHystResponse {
  int32 status = 1;
  double data = 2;
}

message GetCICountEdgesGateLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesGateLogicLvlBehaviorResponse {
  int32 status = 1;
  LogicLvlBehavior data = 2;
  int32 data_raw = 3;
}

message GetCICountEdgesGateTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCICountEdgesGateTermResponse {
  int32 status = 1;
  string data = 2;
}

message GetCICountEdgesGateTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesGateTermCfgResponse {
  int32 status = 1;
  InputTermCfg2 data = 2;
  int32 data_raw = 3;
}

message GetCICountEdgesGateThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesGateThreshVoltageResponse {
  int32 status = 1;
  double data = 2;
}

message GetCICountEdgesGateWhenRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesGateWhenResponse {
  int32 status = 1;
  Level1 data = 2;
  int32 data_raw = 3;
}

message GetCICountEdgesHystRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesHystResponse {
  int32 status = 1;
  double data = 2;
}

message GetCICountEdgesInitialCntRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesInitialCntResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCICountEdgesLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesLogicLvlBehaviorResponse {
  int32 status = 1;
  LogicLvlBehavior data = 2;
  int32 data_raw = 3;
}

message GetCICountEdgesTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCICountEdgesTermResponse {
  int32 status = 1;
  string data = 2;
}

message GetCICountEdgesTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesTermCfgResponse {
  int32 status = 1;
  InputTermCfg2 data = 2;
  int32 data_raw = 3;
}

message GetCICountEdgesThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICountEdgesThreshVoltageResponse {
  int32 status = 1;
  double data = 2;
}

message GetCICtrTimebaseActiveEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICtrTimebaseActiveEdgeResponse {
  int32 status = 1;
  Edge1 data = 2;
  int32 data_raw = 3;
}

message GetCICtrTimebaseDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICtrTimebaseDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCICtrTimebaseDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICtrTimebaseDigFltrMinPulseWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetCICtrTimebaseDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICtrTimebaseDigFltrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCICtrTimebaseDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCICtrTimebaseDigFltrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCICtrTimebaseDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICtrTimebaseDigSyncEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCICtrTimebaseMasterTimebaseDivRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICtrTimebaseMasterTimebaseDivResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCICtrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCICtrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCICtrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCICtrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCICustomScaleNameRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCICustomScaleNameResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIDataXferMechRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIDataXferMechResponse {
  int32 status = 1;
  DataTransferMechanism data = 2;
  int32 data_raw = 3;
}

message GetCIDataXferReqCondRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIDataXferReqCondResponse {
  int32 status = 1;
  InputDataTransferCondition data = 2;
  int32 data_raw = 3;
}

message GetCIDupCountPreventRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIDupCountPreventResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIDutyCycleDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIDutyCycleDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIDutyCycleDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIDutyCycleDigFltrMinPulseWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIDutyCycleDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIDutyCycleDigFltrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIDutyCycleDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIDutyCycleDigFltrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIDutyCycleLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIDutyCycleLogicLvlBehaviorResponse {
  int32 status = 1;
  LogicLvlBehavior data = 2;
  int32 data_raw = 3;
}

message GetCIDutyCycleStartingEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIDutyCycleStartingEdgeResponse {
  int32 status = 1;
  Edge1 data = 2;
  int32 data_raw = 3;
}

message GetCIDutyCycleTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIDutyCycleTermResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIDutyCycleTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIDutyCycleTermCfgResponse {
  int32 status = 1;
  InputTermCfg2 data = 2;
  int32 data_raw = 3;
}

message GetCIEncoderAInputDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIEncoderAInputDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIEncoderAInputDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIEncoderAInputDigFltrMinPulseWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIEncoderAInputDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIEncoderAInputDigFltrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIEncoderAInputDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIEncoderAInputDigFltrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIEncoderAInputDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIEncoderAInputDigSyncEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIEncoderAInputLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIEncoderAInputLogicLvlBehaviorResponse {
  int32 status = 1;
  LogicLvlBehavior data = 2;
  int32 data_raw = 3;
}

message GetCIEncoderAInputTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIEncoderAInputTermResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIEncoderAInputTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIEncoderAInputTermCfgResponse {
  int32 status = 1;
  InputTermCfg2 data = 2;
  int32 data_raw = 3;
}

message GetCIEncoderBInputDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIEncoderBInputDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIEncoderBInputDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIEncoderBInputDigFltrMinPulseWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIEncoderBInputDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIEncoderBInputDigFltrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIEncoderBInputDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIEncoderBInputDigFltrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIEncoderBInputDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIEncoderBInputDigSyncEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIEncoderBInputLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIEncoderBInputLogicLvlBehaviorResponse {
  int32 status = 1;
  LogicLvlBehavior data = 2;
  int32 data_raw = 3;
}

message GetCIEncoderBInputTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIEncoderBInputTermResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIEncoderBInputTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIEncoderBInputTermCfgResponse {
  int32 status = 1;
  InputTermCfg2 data = 2;
  int32 data_raw = 3;
}

message GetCIEncoderDecodingTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIEncoderDecodingTypeResponse {
  int32 status = 1;
  EncoderType2 data = 2;
  int32 data_raw = 3;
}

message GetCIEncoderZIndexEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIEncoderZIndexEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIEncoderZIndexPhaseRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIEncoderZIndexPhaseResponse {
  int32 status = 1;
  EncoderZIndexPhase1 data = 2;
  int32 data_raw = 3;
}

message GetCIEncoderZIndexValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIEncoderZIndexValResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIEncoderZInputDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIEncoderZInputDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIEncoderZInputDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIEncoderZInputDigFltrMinPulseWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIEncoderZInputDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIEncoderZInputDigFltrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIEncoderZInputDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIEncoderZInputDigFltrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIEncoderZInputDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIEncoderZInputDigSyncEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIEncoderZInputLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIEncoderZInputLogicLvlBehaviorResponse {
  int32 status = 1;
  LogicLvlBehavior data = 2;
  int32 data_raw = 3;
}

message GetCIEncoderZInputTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIEncoderZInputTermResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIEncoderZInputTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIEncoderZInputTermCfgResponse {
  int32 status = 1;
  InputTermCfg2 data = 2;
  int32 data_raw = 3;
}

message GetCIFilterDelayRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIFilterDelayResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIFilterDelayUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIFilterDelayUnitsResponse {
  int32 status = 1;
  DigitalWidthUnits4 data = 2;
  int32 data_raw = 3;
}

message GetCIFilterEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIFilterEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIFilterFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIFilterFreqResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIFilterOrderRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIFilterOrderResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCIFilterResponseRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIFilterResponseResponse {
  int32 status = 1;
  FilterResponse1 data = 2;
  int32 data_raw = 3;
}

message GetCIFreqDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIFreqDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIFreqDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIFreqDigFltrMinPulseWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIFreqDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIFreqDigFltrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIFreqDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIFreqDigFltrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIFreqDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIFreqDigSyncEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIFreqDivRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIFreqDivResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCIFreqEnableAveragingRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIFreqEnableAveragingResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIFreqHystRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIFreqHystResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIFreqLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIFreqLogicLvlBehaviorResponse {
  int32 status = 1;
  LogicLvlBehavior data = 2;
  int32 data_raw = 3;
}

message GetCIFreqMeasMethRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIFreqMeasMethResponse {
  int32 status = 1;
  CounterFrequencyMethod data = 2;
  int32 data_raw = 3;
}

message GetCIFreqMeasTimeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIFreqMeasTimeResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIFreqStartingEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIFreqStartingEdgeResponse {
  int32 status = 1;
  Edge1 data = 2;
  int32 data_raw = 3;
}

message GetCIFreqTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIFreqTermResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIFreqTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIFreqTermCfgResponse {
  int32 status = 1;
  InputTermCfg2 data = 2;
  int32 data_raw = 3;
}

message GetCIFreqThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIFreqThreshVoltageResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIFreqUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIFreqUnitsResponse {
  int32 status = 1;
  FrequencyUnits3 data = 2;
  int32 data_raw = 3;
}

message GetCIGPSSyncMethodRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIGPSSyncMethodResponse {
  int32 status = 1;
  GpsSignalType1 data = 2;
  int32 data_raw = 3;
}

message GetCIGPSSyncSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIGPSSyncSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCILinEncoderDistPerPulseRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCILinEncoderDistPerPulseResponse {
  int32 status = 1;
  double data = 2;
}

message GetCILinEncoderInitialPosRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCILinEncoderInitialPosResponse {
  int32 status = 1;
  double data = 2;
}

message GetCILinEncoderUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCILinEncoderUnitsResponse {
  int32 status = 1;
  LengthUnits3 data = 2;
  int32 data_raw = 3;
}

message GetCIMaxRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIMaxResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIMaxMeasPeriodRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIMaxMeasPeriodResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIMeasTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIMeasTypeResponse {
  int32 status = 1;
  CIMeasurementType data = 2;
  int32 data_raw = 3;
}

message GetCIMemMapEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIMemMapEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIMinRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIMinResponse {
  int32 status = 1;
  double data = 2;
}

message GetCINumPossiblyInvalidSampsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCINumPossiblyInvalidSampsResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCIOutputStateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIOutputStateResponse {
  int32 status = 1;
  Level1 data = 2;
  int32 data_raw = 3;
}

message GetCIPeriodDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPeriodDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIPeriodDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPeriodDigFltrMinPulseWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIPeriodDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPeriodDigFltrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIPeriodDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIPeriodDigFltrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIPeriodDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPeriodDigSyncEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIPeriodDivRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPeriodDivResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCIPeriodEnableAveragingRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPeriodEnableAveragingResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIPeriodHystRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPeriodHystResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIPeriodLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPeriodLogicLvlBehaviorResponse {
  int32 status = 1;
  LogicLvlBehavior data = 2;
  int32 data_raw = 3;
}

message GetCIPeriodMeasMethRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPeriodMeasMethResponse {
  int32 status = 1;
  CounterFrequencyMethod data = 2;
  int32 data_raw = 3;
}

message GetCIPeriodMeasTimeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPeriodMeasTimeResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIPeriodStartingEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPeriodStartingEdgeResponse {
  int32 status = 1;
  Edge1 data = 2;
  int32 data_raw = 3;
}

message GetCIPeriodTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIPeriodTermResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIPeriodTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPeriodTermCfgResponse {
  int32 status = 1;
  InputTermCfg2 data = 2;
  int32 data_raw = 3;
}

message GetCIPeriodThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPeriodThreshVoltageResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIPeriodUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPeriodUnitsResponse {
  int32 status = 1;
  TimeUnits3 data = 2;
  int32 data_raw = 3;
}

message GetCIPrescalerRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPrescalerResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCIPulseFreqDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseFreqDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIPulseFreqDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseFreqDigFltrMinPulseWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIPulseFreqDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseFreqDigFltrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIPulseFreqDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIPulseFreqDigFltrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIPulseFreqDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseFreqDigSyncEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIPulseFreqLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseFreqLogicLvlBehaviorResponse {
  int32 status = 1;
  LogicLvlBehavior data = 2;
  int32 data_raw = 3;
}

message GetCIPulseFreqStartEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseFreqStartEdgeResponse {
  int32 status = 1;
  Edge1 data = 2;
  int32 data_raw = 3;
}

message GetCIPulseFreqTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIPulseFreqTermResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIPulseFreqTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseFreqTermCfgResponse {
  int32 status = 1;
  InputTermCfg2 data = 2;
  int32 data_raw = 3;
}

message GetCIPulseFreqUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseFreqUnitsResponse {
  int32 status = 1;
  FrequencyUnits2 data = 2;
  int32 data_raw = 3;
}

message GetCIPulseTicksDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseTicksDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIPulseTicksDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseTicksDigFltrMinPulseWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIPulseTicksDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseTicksDigFltrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIPulseTicksDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIPulseTicksDigFltrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIPulseTicksDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseTicksDigSyncEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIPulseTicksLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseTicksLogicLvlBehaviorResponse {
  int32 status = 1;
  LogicLvlBehavior data = 2;
  int32 data_raw = 3;
}

message GetCIPulseTicksStartEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseTicksStartEdgeResponse {
  int32 status = 1;
  Edge1 data = 2;
  int32 data_raw = 3;
}

message GetCIPulseTicksTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIPulseTicksTermResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIPulseTicksTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseTicksTermCfgResponse {
  int32 status = 1;
  InputTermCfg2 data = 2;
  int32 data_raw = 3;
}

message GetCIPulseTimeDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseTimeDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIPulseTimeDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseTimeDigFltrMinPulseWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIPulseTimeDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseTimeDigFltrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIPulseTimeDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIPulseTimeDigFltrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIPulseTimeDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseTimeDigSyncEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIPulseTimeLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseTimeLogicLvlBehaviorResponse {
  int32 status = 1;
  LogicLvlBehavior data = 2;
  int32 data_raw = 3;
}

message GetCIPulseTimeStartEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseTimeStartEdgeResponse {
  int32 status = 1;
  Edge1 data = 2;
  int32 data_raw = 3;
}

message GetCIPulseTimeTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIPulseTimeTermResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIPulseTimeTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseTimeTermCfgResponse {
  int32 status = 1;
  InputTermCfg2 data = 2;
  int32 data_raw = 3;
}

message GetCIPulseTimeUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseTimeUnitsResponse {
  int32 status = 1;
  TimeUnits2 data = 2;
  int32 data_raw = 3;
}

message GetCIPulseWidthDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseWidthDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIPulseWidthDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseWidthDigFltrMinPulseWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIPulseWidthDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseWidthDigFltrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIPulseWidthDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIPulseWidthDigFltrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIPulseWidthDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseWidthDigSyncEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIPulseWidthLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseWidthLogicLvlBehaviorResponse {
  int32 status = 1;
  LogicLvlBehavior data = 2;
  int32 data_raw = 3;
}

message GetCIPulseWidthStartingEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseWidthStartingEdgeResponse {
  int32 status = 1;
  Edge1 data = 2;
  int32 data_raw = 3;
}

message GetCIPulseWidthTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIPulseWidthTermResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIPulseWidthTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseWidthTermCfgResponse {
  int32 status = 1;
  InputTermCfg2 data = 2;
  int32 data_raw = 3;
}

message GetCIPulseWidthUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIPulseWidthUnitsResponse {
  int32 status = 1;
  TimeUnits3 data = 2;
  int32 data_raw = 3;
}

message GetCISampClkOverrunBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCISampClkOverrunBehaviorResponse {
  int32 status = 1;
  SampClkOverrunBehavior data = 2;
  int32 data_raw = 3;
}

message GetCISampClkOverrunSentinelValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCISampClkOverrunSentinelValResponse {
  int32 status = 1;
  int32 data = 2;
}

message GetCISemiPeriodDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCISemiPeriodDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCISemiPeriodDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCISemiPeriodDigFltrMinPulseWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetCISemiPeriodDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCISemiPeriodDigFltrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCISemiPeriodDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCISemiPeriodDigFltrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCISemiPeriodDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCISemiPeriodDigSyncEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCISemiPeriodLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCISemiPeriodLogicLvlBehaviorResponse {
  int32 status = 1;
  LogicLvlBehavior data = 2;
  int32 data_raw = 3;
}

message GetCISemiPeriodStartingEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCISemiPeriodStartingEdgeResponse {
  int32 status = 1;
  Edge1 data = 2;
  int32 data_raw = 3;
}

message GetCISemiPeriodTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCISemiPeriodTermResponse {
  int32 status = 1;
  string data = 2;
}

message GetCISemiPeriodTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCISemiPeriodTermCfgResponse {
  int32 status = 1;
  InputTermCfg2 data = 2;
  int32 data_raw = 3;
}

message GetCISemiPeriodUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCISemiPeriodUnitsResponse {
  int32 status = 1;
  TimeUnits3 data = 2;
  int32 data_raw = 3;
}

message GetCITCReachedRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCITCReachedResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIThreshVoltageResponse {
  int32 status = 1;
  double data = 2;
}

message GetCITimestampInitialSecondsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCITimestampInitialSecondsResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCITimestampUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCITimestampUnitsResponse {
  int32 status = 1;
  TimeUnits data = 2;
  int32 data_raw = 3;
}

message GetCITwoEdgeSepFirstDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCITwoEdgeSepFirstDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCITwoEdgeSepFirstDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCITwoEdgeSepFirstDigFltrMinPulseWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetCITwoEdgeSepFirstDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCITwoEdgeSepFirstDigFltrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCITwoEdgeSepFirstDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCITwoEdgeSepFirstDigFltrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCITwoEdgeSepFirstDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCITwoEdgeSepFirstDigSyncEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCITwoEdgeSepFirstEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCITwoEdgeSepFirstEdgeResponse {
  int32 status = 1;
  Edge1 data = 2;
  int32 data_raw = 3;
}

message GetCITwoEdgeSepFirstLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCITwoEdgeSepFirstLogicLvlBehaviorResponse {
  int32 status = 1;
  LogicLvlBehavior data = 2;
  int32 data_raw = 3;
}

message GetCITwoEdgeSepFirstTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCITwoEdgeSepFirstTermResponse {
  int32 status = 1;
  string data = 2;
}

message GetCITwoEdgeSepFirstTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCITwoEdgeSepFirstTermCfgResponse {
  int32 status = 1;
  InputTermCfg2 data = 2;
  int32 data_raw = 3;
}

message GetCITwoEdgeSepSecondDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCITwoEdgeSepSecondDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCITwoEdgeSepSecondDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCITwoEdgeSepSecondDigFltrMinPulseWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetCITwoEdgeSepSecondDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCITwoEdgeSepSecondDigFltrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCITwoEdgeSepSecondDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCITwoEdgeSepSecondDigFltrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCITwoEdgeSepSecondDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCITwoEdgeSepSecondDigSyncEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCITwoEdgeSepSecondEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCITwoEdgeSepSecondEdgeResponse {
  int32 status = 1;
  Edge1 data = 2;
  int32 data_raw = 3;
}

message GetCITwoEdgeSepSecondLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCITwoEdgeSepSecondLogicLvlBehaviorResponse {
  int32 status = 1;
  LogicLvlBehavior data = 2;
  int32 data_raw = 3;
}

message GetCITwoEdgeSepSecondTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCITwoEdgeSepSecondTermResponse {
  int32 status = 1;
  string data = 2;
}

message GetCITwoEdgeSepSecondTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCITwoEdgeSepSecondTermCfgResponse {
  int32 status = 1;
  InputTermCfg2 data = 2;
  int32 data_raw = 3;
}

message GetCITwoEdgeSepUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCITwoEdgeSepUnitsResponse {
  int32 status = 1;
  TimeUnits3 data = 2;
  int32 data_raw = 3;
}

message GetCIUsbXferReqCountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIUsbXferReqCountResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCIUsbXferReqSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIUsbXferReqSizeResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCIVelocityAngEncoderPulsesPerRevRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIVelocityAngEncoderPulsesPerRevResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCIVelocityAngEncoderUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIVelocityAngEncoderUnitsResponse {
  int32 status = 1;
  AngularVelocityUnits data = 2;
  int32 data_raw = 3;
}

message GetCIVelocityDivRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIVelocityDivResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCIVelocityEncoderAInputDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIVelocityEncoderAInputDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIVelocityEncoderAInputDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIVelocityEncoderAInputDigFltrMinPulseWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIVelocityEncoderAInputDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIVelocityEncoderAInputDigFltrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIVelocityEncoderAInputDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIVelocityEncoderAInputDigFltrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIVelocityEncoderAInputLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIVelocityEncoderAInputLogicLvlBehaviorResponse {
  int32 status = 1;
  LogicLvlBehavior data = 2;
  int32 data_raw = 3;
}

message GetCIVelocityEncoderAInputTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIVelocityEncoderAInputTermResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIVelocityEncoderAInputTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIVelocityEncoderAInputTermCfgResponse {
  int32 status = 1;
  InputTermCfg2 data = 2;
  int32 data_raw = 3;
}

message GetCIVelocityEncoderBInputDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIVelocityEncoderBInputDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCIVelocityEncoderBInputDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIVelocityEncoderBInputDigFltrMinPulseWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIVelocityEncoderBInputDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIVelocityEncoderBInputDigFltrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIVelocityEncoderBInputDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIVelocityEncoderBInputDigFltrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIVelocityEncoderBInputLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIVelocityEncoderBInputLogicLvlBehaviorResponse {
  int32 status = 1;
  LogicLvlBehavior data = 2;
  int32 data_raw = 3;
}

message GetCIVelocityEncoderBInputTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCIVelocityEncoderBInputTermResponse {
  int32 status = 1;
  string data = 2;
}

message GetCIVelocityEncoderBInputTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIVelocityEncoderBInputTermCfgResponse {
  int32 status = 1;
  InputTermCfg2 data = 2;
  int32 data_raw = 3;
}

message GetCIVelocityEncoderDecodingTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIVelocityEncoderDecodingTypeResponse {
  int32 status = 1;
  EncoderType2 data = 2;
  int32 data_raw = 3;
}

message GetCIVelocityLinEncoderDistPerPulseRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIVelocityLinEncoderDistPerPulseResponse {
  int32 status = 1;
  double data = 2;
}

message GetCIVelocityLinEncoderUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIVelocityLinEncoderUnitsResponse {
  int32 status = 1;
  VelocityUnits data = 2;
  int32 data_raw = 3;
}

message GetCIVelocityMeasTimeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCIVelocityMeasTimeResponse {
  int32 status = 1;
  double data = 2;
}

message GetCOAutoIncrCntRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOAutoIncrCntResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCOConstrainedGenModeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOConstrainedGenModeResponse {
  int32 status = 1;
  ConstrainedGenMode data = 2;
  int32 data_raw = 3;
}

message GetCOCountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOCountResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCOCtrTimebaseActiveEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOCtrTimebaseActiveEdgeResponse {
  int32 status = 1;
  Edge1 data = 2;
  int32 data_raw = 3;
}

message GetCOCtrTimebaseDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOCtrTimebaseDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCOCtrTimebaseDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOCtrTimebaseDigFltrMinPulseWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetCOCtrTimebaseDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOCtrTimebaseDigFltrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCOCtrTimebaseDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCOCtrTimebaseDigFltrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCOCtrTimebaseDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOCtrTimebaseDigSyncEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCOCtrTimebaseMasterTimebaseDivRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOCtrTimebaseMasterTimebaseDivResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCOCtrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOCtrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetCOCtrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCOCtrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetCODataXferMechRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCODataXferMechResponse {
  int32 status = 1;
  DataTransferMechanism data = 2;
  int32 data_raw = 3;
}

message GetCODataXferReqCondRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCODataXferReqCondResponse {
  int32 status = 1;
  OutputDataTransferCondition data = 2;
  int32 data_raw = 3;
}

message GetCOEnableInitialDelayOnRetriggerRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOEnableInitialDelayOnRetriggerResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCOMemMapEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOMemMapEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCOOutputStateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOOutputStateResponse {
  int32 status = 1;
  Level1 data = 2;
  int32 data_raw = 3;
}

message GetCOOutputTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOOutputTypeResponse {
  int32 status = 1;
  COOutputType data = 2;
  int32 data_raw = 3;
}

message GetCOPrescalerRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOPrescalerResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCOPulseDoneRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOPulseDoneResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCOPulseDutyCycRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOPulseDutyCycResponse {
  int32 status = 1;
  double data = 2;
}

message GetCOPulseFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOPulseFreqResponse {
  int32 status = 1;
  double data = 2;
}

message GetCOPulseFreqInitialDelayRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOPulseFreqInitialDelayResponse {
  int32 status = 1;
  double data = 2;
}

message GetCOPulseFreqUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOPulseFreqUnitsResponse {
  int32 status = 1;
  FrequencyUnits2 data = 2;
  int32 data_raw = 3;
}

message GetCOPulseHighTicksRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOPulseHighTicksResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCOPulseHighTimeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOPulseHighTimeResponse {
  int32 status = 1;
  double data = 2;
}

message GetCOPulseIdleStateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOPulseIdleStateResponse {
  int32 status = 1;
  Level1 data = 2;
  int32 data_raw = 3;
}

message GetCOPulseLowTicksRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOPulseLowTicksResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCOPulseLowTimeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOPulseLowTimeResponse {
  int32 status = 1;
  double data = 2;
}

message GetCOPulseTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetCOPulseTermResponse {
  int32 status = 1;
  string data = 2;
}

message GetCOPulseTicksInitialDelayRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOPulseTicksInitialDelayResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCOPulseTimeInitialDelayRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOPulseTimeInitialDelayResponse {
  int32 status = 1;
  double data = 2;
}

message GetCOPulseTimeUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOPulseTimeUnitsResponse {
  int32 status = 1;
  TimeUnits2 data = 2;
  int32 data_raw = 3;
}

message GetCORdyForNewValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCORdyForNewValResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCOUsbXferReqCountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOUsbXferReqCountResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCOUsbXferReqSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOUsbXferReqSizeResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCOUseOnlyOnBrdMemRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetCOUseOnlyOnBrdMemResponse {
  int32 status = 1;
  bool data = 2;
}

message GetCalAccConnectionCountRequest {
  string device_name = 1;
}

message GetCalAccConnectionCountResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCalDevTempRequest {
  string device_name = 1;
}

message GetCalDevTempResponse {
  int32 status = 1;
  double data = 2;
}

message GetCalRecommendedAccConnectionCountLimitRequest {
  string device_name = 1;
}

message GetCalRecommendedAccConnectionCountLimitResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetCalUserDefinedInfoRequest {
  string device_name = 1;
  uint32 buffer_size = 2;
}

message GetCalUserDefinedInfoResponse {
  int32 status = 1;
  string data = 2;
}

message GetCalUserDefinedInfoMaxSizeRequest {
  string device_name = 1;
}

message GetCalUserDefinedInfoMaxSizeResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetChanDescrRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetChanDescrResponse {
  int32 status = 1;
  string data = 2;
}

message GetChanIsGlobalRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetChanIsGlobalResponse {
  int32 status = 1;
  bool data = 2;
}

message GetChanSyncUnlockBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetChanSyncUnlockBehaviorResponse {
  int32 status = 1;
  SyncUnlockBehavior data = 2;
  int32 data_raw = 3;
}

message GetChanTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetChanTypeResponse {
  int32 status = 1;
  ChannelType data = 2;
  int32 data_raw = 3;
}

message GetDIAcquireOnRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDIAcquireOnResponse {
  int32 status = 1;
  SampleClockActiveOrInactiveEdgeSelection data = 2;
  int32 data_raw = 3;
}

message GetDIDataXferMechRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDIDataXferMechResponse {
  int32 status = 1;
  DataTransferMechanism data = 2;
  int32 data_raw = 3;
}

message GetDIDataXferReqCondRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDIDataXferReqCondResponse {
  int32 status = 1;
  InputDataTransferCondition data = 2;
  int32 data_raw = 3;
}

message GetDIDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDIDigFltrEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetDIDigFltrEnableBusModeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDIDigFltrEnableBusModeResponse {
  int32 status = 1;
  bool data = 2;
}

message GetDIDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDIDigFltrMinPulseWidthResponse {
  int32 status = 1;
  double data = 2;
}

message GetDIDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDIDigFltrTimebaseRateResponse {
  int32 status = 1;
  double data = 2;
}

message GetDIDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetDIDigFltrTimebaseSrcResponse {
  int32 status = 1;
  string data = 2;
}

message GetDIDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDIDigSyncEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetDIInvertLinesRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDIInvertLinesResponse {
  int32 status = 1;
  bool data = 2;
}

message GetDILogicFamilyRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDILogicFamilyResponse {
  int32 status = 1;
  LogicFamily data = 2;
  int32 data_raw = 3;
}

message GetDIMemMapEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDIMemMapEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetDINumLinesRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDINumLinesResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetDITristateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDITristateResponse {
  int32 status = 1;
  bool data = 2;
}

message GetDIUsbXferReqCountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDIUsbXferReqCountResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetDIUsbXferReqSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDIUsbXferReqSizeResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetDODataXferMechRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDODataXferMechResponse {
  int32 status = 1;
  DataTransferMechanism data = 2;
  int32 data_raw = 3;
}

message GetDODataXferReqCondRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDODataXferReqCondResponse {
  int32 status = 1;
  OutputDataTransferCondition data = 2;
  int32 data_raw = 3;
}

message GetDOGenerateOnRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDOGenerateOnResponse {
  int32 status = 1;
  SampleClockActiveOrInactiveEdgeSelection data = 2;
  int32 data_raw = 3;
}

message GetDOInvertLinesRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDOInvertLinesResponse {
  int32 status = 1;
  bool data = 2;
}

message GetDOLineStatesDoneStateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDOLineStatesDoneStateResponse {
  int32 status = 1;
  DigitalLineState data = 2;
  int32 data_raw = 3;
}

message GetDOLineStatesPausedStateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDOLineStatesPausedStateResponse {
  int32 status = 1;
  DigitalLineState data = 2;
  int32 data_raw = 3;
}

message GetDOLineStatesStartStateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDOLineStatesStartStateResponse {
  int32 status = 1;
  DigitalLineState data = 2;
  int32 data_raw = 3;
}

message GetDOLogicFamilyRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDOLogicFamilyResponse {
  int32 status = 1;
  LogicFamily data = 2;
  int32 data_raw = 3;
}

message GetDOMemMapEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDOMemMapEnableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetDONumLinesRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDONumLinesResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetDOOutputDriveTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDOOutputDriveTypeResponse {
  int32 status = 1;
  DigitalDriveType data = 2;
  int32 data_raw = 3;
}

message GetDOOvercurrentAutoReenableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDOOvercurrentAutoReenableResponse {
  int32 status = 1;
  bool data = 2;
}

message GetDOOvercurrentLimitRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDOOvercurrentLimitResponse {
  int32 status = 1;
  double data = 2;
}

message GetDOOvercurrentReenablePeriodRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDOOvercurrentReenablePeriodResponse {
  int32 status = 1;
  double data = 2;
}

message GetDOTristateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDOTristateResponse {
  int32 status = 1;
  bool data = 2;
}

message GetDOUsbXferReqCountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDOUsbXferReqCountResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetDOUsbXferReqSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDOUsbXferReqSizeResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetDOUseOnlyOnBrdMemRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message GetDOUseOnlyOnBrdMemResponse {
  int32 status = 1;
  bool data = 2;
}

message GetDigitalLogicFamilyPowerUpStateRequest {
  string device_name = 1;
}

message GetDigitalLogicFamilyPowerUpStateResponse {
  int32 status = 1;
  int32 logic_family = 2;
}

message GetDisconnectedCDAQSyncPortsRequest {
  uint32 port_list_size = 1;
}

message GetDisconnectedCDAQSyncPortsResponse {
  int32 status = 1;
  string port_list = 2;
}

message GetErrorStringRequest {
  int32 error_code = 1;
  uint32 buffer_size = 2;
}

message GetErrorStringResponse {
  int32 status = 1;
  string error_string = 2;
}

message GetExtCalLastTempRequest {
  string device_name = 1;
}

message GetExtCalLastTempResponse {
  int32 status = 1;
  double data = 2;
}

message GetExtCalRecommendedIntervalRequest {
  string device_name = 1;
}

message GetExtCalRecommendedIntervalResponse {
  int32 status = 1;
  uint32 data = 2;
}

message GetExtendedErrorInfoRequest {
  uint32 buffer_size = 1;
}

message GetExtendedErrorInfoResponse {
  int32 status = 1;
  string error_string = 2;
}

message GetFirstSampClkWhenRequest {
  nidevice_grpc.Session task = 1;
}

message GetFirstSampClkWhenResponse {
  int32 status = 1;
  google.protobuf.Timestamp data = 2;
}

message GetFirstSampTimestampValRequest {
  nidevice_grpc.Session task = 1;
}

message GetFirstSampTimestampValResponse {
  int32 status = 1;
  google.protobuf.Timestamp data = 2;
}

message GetNthTaskChannelRequest {
  nidevice_grpc.Session task = 1;
  uint32 index = 2;
  int32 buffer_size = 3;
}

message GetNthTaskChannelResponse {
  int32 status = 1;
  string buffer = 2;
}

message GetNthTaskDeviceRequest {
  nidevice_grpc.Session task = 1;
  uint32 index = 2;
  int32 buffer_size = 3;
}

message GetNthTaskDeviceResponse {
  int32 status = 1;
  string buffer = 2;
}

message GetNthTaskReadChannelRequest {
  nidevice_grpc.Session task = 1;
  uint32 index = 2;
  int32 buffer_size = 3;
}

message GetNthTaskReadChannelResponse {
  int32 status = 1;
  string buffer = 2;
}

message GetPhysicalChanNameRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 buffer_size = 3;
}

message GetPhysicalChanNameResponse {
  int32 status = 1;
  string data = 2;
}

message GetRefTrigTimestampValRequest {
  nidevice_grpc.Session task = 1;
}

message GetRefTrigTimestampValResponse {
  int32 status = 1;
  google.protobuf.Timestamp data = 2;
}

message GetSelfCalLastDateAndTimeRequest {
  string device_name = 1;
}

message GetSelfCalLastDateAndTimeResponse {
  int32 status = 1;
  uint32 year = 2;
  uint32 month = 3;
  uint32 day = 4;
  uint32 hour = 5;
  uint32 minute = 6;
}

message GetSelfCalLastTempRequest {
  string device_name = 1;
}

message GetSelfCalLastTempResponse {
  int32 status = 1;
  double data = 2;
}

message GetSelfCalSupportedRequest {
  string device_name = 1;
}

message GetSelfCalSupportedResponse {
  int32 status = 1;
  bool data = 2;
}

message GetStartTrigTimestampValRequest {
  nidevice_grpc.Session task = 1;
}

message GetStartTrigTimestampValResponse {
  int32 status = 1;
  google.protobuf.Timestamp data = 2;
}

message GetStartTrigTrigWhenRequest {
  nidevice_grpc.Session task = 1;
}

message GetStartTrigTrigWhenResponse {
  int32 status = 1;
  google.protobuf.Timestamp data = 2;
}

message GetSyncPulseTimeWhenRequest {
  nidevice_grpc.Session task = 1;
}

message GetSyncPulseTimeWhenResponse {
  int32 status = 1;
  google.protobuf.Timestamp data = 2;
}

message IsTaskDoneRequest {
  nidevice_grpc.Session task = 1;
}

message IsTaskDoneResponse {
  int32 status = 1;
  bool is_task_done = 2;
}

message LoadTaskRequest {
  string session_name = 1;
}

message LoadTaskResponse {
  int32 status = 1;
  nidevice_grpc.Session task = 2;
}

message ReadAnalogF64Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof fill_mode_enum {
    GroupBy fill_mode = 4;
    int32 fill_mode_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadAnalogF64Response {
  int32 status = 1;
  repeated double read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadAnalogScalarF64Request {
  nidevice_grpc.Session task = 1;
  double timeout = 2;
}

message ReadAnalogScalarF64Response {
  int32 status = 1;
  double value = 2;
}

message ReadBinaryI16Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof fill_mode_enum {
    GroupBy fill_mode = 4;
    int32 fill_mode_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadBinaryI16Response {
  int32 status = 1;
  repeated int32 read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadBinaryI32Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof fill_mode_enum {
    GroupBy fill_mode = 4;
    int32 fill_mode_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadBinaryI32Response {
  int32 status = 1;
  repeated int32 read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadBinaryU16Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof fill_mode_enum {
    GroupBy fill_mode = 4;
    int32 fill_mode_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadBinaryU16Response {
  int32 status = 1;
  repeated uint32 read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadBinaryU32Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof fill_mode_enum {
    GroupBy fill_mode = 4;
    int32 fill_mode_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadBinaryU32Response {
  int32 status = 1;
  repeated uint32 read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadCounterF64Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  uint32 array_size_in_samps = 4;
}

message ReadCounterF64Response {
  int32 status = 1;
  repeated double read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadCounterF64ExRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof fill_mode_enum {
    GroupBy fill_mode = 4;
    int32 fill_mode_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadCounterF64ExResponse {
  int32 status = 1;
  repeated double read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadCounterScalarF64Request {
  nidevice_grpc.Session task = 1;
  double timeout = 2;
}

message ReadCounterScalarF64Response {
  int32 status = 1;
  double value = 2;
}

message ReadCounterScalarU32Request {
  nidevice_grpc.Session task = 1;
  double timeout = 2;
}

message ReadCounterScalarU32Response {
  int32 status = 1;
  uint32 value = 2;
}

message ReadCounterU32Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  uint32 array_size_in_samps = 4;
}

message ReadCounterU32Response {
  int32 status = 1;
  repeated uint32 read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadCounterU32ExRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof fill_mode_enum {
    GroupBy fill_mode = 4;
    int32 fill_mode_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadCounterU32ExResponse {
  int32 status = 1;
  repeated uint32 read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadCtrFreqRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof interleaved_enum {
    GroupBy interleaved = 4;
    int32 interleaved_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadCtrFreqResponse {
  int32 status = 1;
  repeated double read_array_frequency = 2;
  repeated double read_array_duty_cycle = 3;
  int32 samps_per_chan_read = 4;
}

message ReadCtrFreqScalarRequest {
  nidevice_grpc.Session task = 1;
  double timeout = 2;
}

message ReadCtrFreqScalarResponse {
  int32 status = 1;
  double frequency = 2;
  double duty_cycle = 3;
}

message ReadCtrTicksRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof interleaved_enum {
    GroupBy interleaved = 4;
    int32 interleaved_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadCtrTicksResponse {
  int32 status = 1;
  repeated uint32 read_array_high_ticks = 2;
  repeated uint32 read_array_low_ticks = 3;
  int32 samps_per_chan_read = 4;
}

message ReadCtrTicksScalarRequest {
  nidevice_grpc.Session task = 1;
  double timeout = 2;
}

message ReadCtrTicksScalarResponse {
  int32 status = 1;
  uint32 high_ticks = 2;
  uint32 low_ticks = 3;
}

message ReadCtrTimeRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof interleaved_enum {
    GroupBy interleaved = 4;
    int32 interleaved_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadCtrTimeResponse {
  int32 status = 1;
  repeated double read_array_high_time = 2;
  repeated double read_array_low_time = 3;
  int32 samps_per_chan_read = 4;
}

message ReadCtrTimeScalarRequest {
  nidevice_grpc.Session task = 1;
  double timeout = 2;
}

message ReadCtrTimeScalarResponse {
  int32 status = 1;
  double high_time = 2;
  double low_time = 3;
}

message ReadDigitalLinesRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof fill_mode_enum {
    GroupBy fill_mode = 4;
    int32 fill_mode_raw = 5;
  }
  uint32 array_size_in_bytes = 6;
}

message ReadDigitalLinesResponse {
  int32 status = 1;
  bytes read_array = 2;
  int32 samps_per_chan_read = 3;
  int32 num_bytes_per_samp = 4;
}

message ReadDigitalScalarU32Request {
  nidevice_grpc.Session task = 1;
  double timeout = 2;
}

message ReadDigitalScalarU32Response {
  int32 status = 1;
  uint32 value = 2;
}

message ReadDigitalU16Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof fill_mode_enum {
    GroupBy fill_mode = 4;
    int32 fill_mode_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadDigitalU16Response {
  int32 status = 1;
  repeated uint32 read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadDigitalU32Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof fill_mode_enum {
    GroupBy fill_mode = 4;
    int32 fill_mode_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadDigitalU32Response {
  int32 status = 1;
  repeated uint32 read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadDigitalU8Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof fill_mode_enum {
    GroupBy fill_mode = 4;
    int32 fill_mode_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadDigitalU8Response {
  int32 status = 1;
  bytes read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadRawRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  uint32 array_size_in_bytes = 4;
}

message ReadRawResponse {
  int32 status = 1;
  bytes read_array = 2;
  int32 samps_read = 3;
  int32 num_bytes_per_samp = 4;
}

message RegisterDoneEventRequest {
  nidevice_grpc.Session task = 1;
  uint32 options = 2;
}

message RegisterDoneEventResponse {
  int32 status = 1;
}

message RegisterEveryNSamplesEventRequest {
  nidevice_grpc.Session task = 1;
  oneof every_n_samples_event_type_enum {
    EveryNSamplesEventType every_n_samples_event_type = 2;
    int32 every_n_samples_event_type_raw = 3;
  }
  uint32 n_samples = 4;
  uint32 options = 5;
}

message RegisterEveryNSamplesEventResponse {
  int32 status = 1;
  EveryNSamplesEventType every_n_samples_event_type = 2;
  int32 every_n_samples_event_type_raw = 3;
  uint32 n_samples = 4;
}

message RegisterSignalEventRequest {
  nidevice_grpc.Session task = 1;
  oneof signal_id_enum {
    Signal2 signal_id = 2;
    int32 signal_id_raw = 3;
  }
  uint32 options = 4;
}

message RegisterSignalEventResponse {
  int32 status = 1;
  int32 signal_id = 2;
}

message RemoveCDAQSyncConnectionRequest {
  string port_list = 1;
}

message RemoveCDAQSyncConnectionResponse {
  int32 status = 1;
}

message ReserveNetworkDeviceRequest {
  string device_name = 1;
  bool override_reservation = 2;
}

message ReserveNetworkDeviceResponse {
  int32 status = 1;
}

message ResetAIACExcitFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIACExcitFreqResponse {
  int32 status = 1;
}

message ResetAIACExcitSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIACExcitSyncEnableResponse {
  int32 status = 1;
}

message ResetAIACExcitWireModeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIACExcitWireModeResponse {
  int32 status = 1;
}

message ResetAIADCCustomTimingModeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIADCCustomTimingModeResponse {
  int32 status = 1;
}

message ResetAIADCTimingModeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIADCTimingModeResponse {
  int32 status = 1;
}

message ResetAIAccel4WireDCVoltageSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIAccel4WireDCVoltageSensitivityResponse {
  int32 status = 1;
}

message ResetAIAccel4WireDCVoltageSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIAccel4WireDCVoltageSensitivityUnitsResponse {
  int32 status = 1;
}

message ResetAIAccelChargeSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIAccelChargeSensitivityResponse {
  int32 status = 1;
}

message ResetAIAccelChargeSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIAccelChargeSensitivityUnitsResponse {
  int32 status = 1;
}

message ResetAIAccelSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIAccelSensitivityResponse {
  int32 status = 1;
}

message ResetAIAccelSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIAccelSensitivityUnitsResponse {
  int32 status = 1;
}

message ResetAIAccelUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIAccelUnitsResponse {
  int32 status = 1;
}

message ResetAIAcceldBRefRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIAcceldBRefResponse {
  int32 status = 1;
}

message ResetAIAttenRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIAttenResponse {
  int32 status = 1;
}

message ResetAIAutoZeroModeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIAutoZeroModeResponse {
  int32 status = 1;
}

message ResetAIAveragingWinSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIAveragingWinSizeResponse {
  int32 status = 1;
}

message ResetAIBridgeBalanceCoarsePotRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeBalanceCoarsePotResponse {
  int32 status = 1;
}

message ResetAIBridgeBalanceFinePotRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeBalanceFinePotResponse {
  int32 status = 1;
}

message ResetAIBridgeCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeCfgResponse {
  int32 status = 1;
}

message ResetAIBridgeElectricalUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeElectricalUnitsResponse {
  int32 status = 1;
}

message ResetAIBridgeInitialRatioRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeInitialRatioResponse {
  int32 status = 1;
}

message ResetAIBridgeInitialVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeInitialVoltageResponse {
  int32 status = 1;
}

message ResetAIBridgeNomResistanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeNomResistanceResponse {
  int32 status = 1;
}

message ResetAIBridgePhysicalUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgePhysicalUnitsResponse {
  int32 status = 1;
}

message ResetAIBridgePolyForwardCoeffRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgePolyForwardCoeffResponse {
  int32 status = 1;
}

message ResetAIBridgePolyReverseCoeffRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgePolyReverseCoeffResponse {
  int32 status = 1;
}

message ResetAIBridgeScaleTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeScaleTypeResponse {
  int32 status = 1;
}

message ResetAIBridgeShuntCalEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeShuntCalEnableResponse {
  int32 status = 1;
}

message ResetAIBridgeShuntCalGainAdjustRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeShuntCalGainAdjustResponse {
  int32 status = 1;
}

message ResetAIBridgeShuntCalSelectRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeShuntCalSelectResponse {
  int32 status = 1;
}

message ResetAIBridgeShuntCalShuntCalAActualResistanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeShuntCalShuntCalAActualResistanceResponse {
  int32 status = 1;
}

message ResetAIBridgeShuntCalShuntCalAResistanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeShuntCalShuntCalAResistanceResponse {
  int32 status = 1;
}

message ResetAIBridgeShuntCalShuntCalASrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeShuntCalShuntCalASrcResponse {
  int32 status = 1;
}

message ResetAIBridgeShuntCalShuntCalBActualResistanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeShuntCalShuntCalBActualResistanceResponse {
  int32 status = 1;
}

message ResetAIBridgeShuntCalShuntCalBResistanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeShuntCalShuntCalBResistanceResponse {
  int32 status = 1;
}

message ResetAIBridgeTableElectricalValsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeTableElectricalValsResponse {
  int32 status = 1;
}

message ResetAIBridgeTablePhysicalValsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeTablePhysicalValsResponse {
  int32 status = 1;
}

message ResetAIBridgeTwoPointLinFirstElectricalValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeTwoPointLinFirstElectricalValResponse {
  int32 status = 1;
}

message ResetAIBridgeTwoPointLinFirstPhysicalValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeTwoPointLinFirstPhysicalValResponse {
  int32 status = 1;
}

message ResetAIBridgeTwoPointLinSecondElectricalValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeTwoPointLinSecondElectricalValResponse {
  int32 status = 1;
}

message ResetAIBridgeTwoPointLinSecondPhysicalValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeTwoPointLinSecondPhysicalValResponse {
  int32 status = 1;
}

message ResetAIBridgeUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIBridgeUnitsResponse {
  int32 status = 1;
}

message ResetAIChanCalApplyCalIfExpRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIChanCalApplyCalIfExpResponse {
  int32 status = 1;
}

message ResetAIChanCalDescRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIChanCalDescResponse {
  int32 status = 1;
}

message ResetAIChanCalEnableCalRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIChanCalEnableCalResponse {
  int32 status = 1;
}

message ResetAIChanCalOperatorNameRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIChanCalOperatorNameResponse {
  int32 status = 1;
}

message ResetAIChanCalPolyForwardCoeffRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIChanCalPolyForwardCoeffResponse {
  int32 status = 1;
}

message ResetAIChanCalPolyReverseCoeffRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIChanCalPolyReverseCoeffResponse {
  int32 status = 1;
}

message ResetAIChanCalScaleTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIChanCalScaleTypeResponse {
  int32 status = 1;
}

message ResetAIChanCalTablePreScaledValsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIChanCalTablePreScaledValsResponse {
  int32 status = 1;
}

message ResetAIChanCalTableScaledValsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIChanCalTableScaledValsResponse {
  int32 status = 1;
}

message ResetAIChanCalVerifAcqValsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIChanCalVerifAcqValsResponse {
  int32 status = 1;
}

message ResetAIChanCalVerifRefValsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIChanCalVerifRefValsResponse {
  int32 status = 1;
}

message ResetAIChargeUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIChargeUnitsResponse {
  int32 status = 1;
}

message ResetAIChopEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIChopEnableResponse {
  int32 status = 1;
}

message ResetAICouplingRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAICouplingResponse {
  int32 status = 1;
}

message ResetAICurrentACRMSUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAICurrentACRMSUnitsResponse {
  int32 status = 1;
}

message ResetAICurrentShuntLocRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAICurrentShuntLocResponse {
  int32 status = 1;
}

message ResetAICurrentShuntResistanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAICurrentShuntResistanceResponse {
  int32 status = 1;
}

message ResetAICurrentUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAICurrentUnitsResponse {
  int32 status = 1;
}

message ResetAICustomScaleNameRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAICustomScaleNameResponse {
  int32 status = 1;
}

message ResetAIDCOffsetRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIDCOffsetResponse {
  int32 status = 1;
}

message ResetAIDataXferCustomThresholdRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIDataXferCustomThresholdResponse {
  int32 status = 1;
}

message ResetAIDataXferMaxRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIDataXferMaxRateResponse {
  int32 status = 1;
}

message ResetAIDataXferMechRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIDataXferMechResponse {
  int32 status = 1;
}

message ResetAIDataXferReqCondRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIDataXferReqCondResponse {
  int32 status = 1;
}

message ResetAIDigFltrBandpassCenterFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIDigFltrBandpassCenterFreqResponse {
  int32 status = 1;
}

message ResetAIDigFltrBandpassWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIDigFltrBandpassWidthResponse {
  int32 status = 1;
}

message ResetAIDigFltrCoeffRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIDigFltrCoeffResponse {
  int32 status = 1;
}

message ResetAIDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIDigFltrEnableResponse {
  int32 status = 1;
}

message ResetAIDigFltrHighpassCutoffFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIDigFltrHighpassCutoffFreqResponse {
  int32 status = 1;
}

message ResetAIDigFltrLowpassCutoffFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIDigFltrLowpassCutoffFreqResponse {
  int32 status = 1;
}

message ResetAIDigFltrNotchCenterFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIDigFltrNotchCenterFreqResponse {
  int32 status = 1;
}

message ResetAIDigFltrNotchWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIDigFltrNotchWidthResponse {
  int32 status = 1;
}

message ResetAIDigFltrOrderRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIDigFltrOrderResponse {
  int32 status = 1;
}

message ResetAIDigFltrResponseRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIDigFltrResponseResponse {
  int32 status = 1;
}

message ResetAIDigFltrTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIDigFltrTypeResponse {
  int32 status = 1;
}

message ResetAIDitherEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIDitherEnableResponse {
  int32 status = 1;
}

message ResetAIEddyCurrentProxProbeSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIEddyCurrentProxProbeSensitivityResponse {
  int32 status = 1;
}

message ResetAIEddyCurrentProxProbeSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIEddyCurrentProxProbeSensitivityUnitsResponse {
  int32 status = 1;
}

message ResetAIEddyCurrentProxProbeUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIEddyCurrentProxProbeUnitsResponse {
  int32 status = 1;
}

message ResetAIEnhancedAliasRejectionEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIEnhancedAliasRejectionEnableResponse {
  int32 status = 1;
}

message ResetAIExcitActualValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIExcitActualValResponse {
  int32 status = 1;
}

message ResetAIExcitDCorACRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIExcitDCorACResponse {
  int32 status = 1;
}

message ResetAIExcitIdleOutputBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIExcitIdleOutputBehaviorResponse {
  int32 status = 1;
}

message ResetAIExcitSenseRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIExcitSenseResponse {
  int32 status = 1;
}

message ResetAIExcitSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIExcitSrcResponse {
  int32 status = 1;
}

message ResetAIExcitUseForScalingRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIExcitUseForScalingResponse {
  int32 status = 1;
}

message ResetAIExcitUseMultiplexedRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIExcitUseMultiplexedResponse {
  int32 status = 1;
}

message ResetAIExcitValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIExcitValResponse {
  int32 status = 1;
}

message ResetAIExcitVoltageOrCurrentRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIExcitVoltageOrCurrentResponse {
  int32 status = 1;
}

message ResetAIFilterDelayAdjustmentRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIFilterDelayAdjustmentResponse {
  int32 status = 1;
}

message ResetAIFilterDelayUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIFilterDelayUnitsResponse {
  int32 status = 1;
}

message ResetAIFilterEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIFilterEnableResponse {
  int32 status = 1;
}

message ResetAIFilterFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIFilterFreqResponse {
  int32 status = 1;
}

message ResetAIFilterOrderRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIFilterOrderResponse {
  int32 status = 1;
}

message ResetAIFilterResponseRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIFilterResponseResponse {
  int32 status = 1;
}

message ResetAIForceIEPESensorSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIForceIEPESensorSensitivityResponse {
  int32 status = 1;
}

message ResetAIForceIEPESensorSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIForceIEPESensorSensitivityUnitsResponse {
  int32 status = 1;
}

message ResetAIForceReadFromChanRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIForceReadFromChanResponse {
  int32 status = 1;
}

message ResetAIForceUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIForceUnitsResponse {
  int32 status = 1;
}

message ResetAIFreqHystRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIFreqHystResponse {
  int32 status = 1;
}

message ResetAIFreqThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIFreqThreshVoltageResponse {
  int32 status = 1;
}

message ResetAIFreqUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIFreqUnitsResponse {
  int32 status = 1;
}

message ResetAIGainRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIGainResponse {
  int32 status = 1;
}

message ResetAIImpedanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIImpedanceResponse {
  int32 status = 1;
}

message ResetAIInputLimitsFaultDetectEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIInputLimitsFaultDetectEnableResponse {
  int32 status = 1;
}

message ResetAIInputLimitsFaultDetectLowerLimitRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIInputLimitsFaultDetectLowerLimitResponse {
  int32 status = 1;
}

message ResetAIInputLimitsFaultDetectUpperLimitRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIInputLimitsFaultDetectUpperLimitResponse {
  int32 status = 1;
}

message ResetAIInputSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIInputSrcResponse {
  int32 status = 1;
}

message ResetAILVDTSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAILVDTSensitivityResponse {
  int32 status = 1;
}

message ResetAILVDTSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAILVDTSensitivityUnitsResponse {
  int32 status = 1;
}

message ResetAILVDTUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAILVDTUnitsResponse {
  int32 status = 1;
}

message ResetAILeadWireResistanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAILeadWireResistanceResponse {
  int32 status = 1;
}

message ResetAILossyLSBRemovalCompressedSampSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAILossyLSBRemovalCompressedSampSizeResponse {
  int32 status = 1;
}

message ResetAILowpassCutoffFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAILowpassCutoffFreqResponse {
  int32 status = 1;
}

message ResetAILowpassEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAILowpassEnableResponse {
  int32 status = 1;
}

message ResetAILowpassSwitchCapClkSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAILowpassSwitchCapClkSrcResponse {
  int32 status = 1;
}

message ResetAILowpassSwitchCapExtClkDivRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAILowpassSwitchCapExtClkDivResponse {
  int32 status = 1;
}

message ResetAILowpassSwitchCapExtClkFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAILowpassSwitchCapExtClkFreqResponse {
  int32 status = 1;
}

message ResetAILowpassSwitchCapOutClkDivRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAILowpassSwitchCapOutClkDivResponse {
  int32 status = 1;
}

message ResetAIMaxRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIMaxResponse {
  int32 status = 1;
}

message ResetAIMemMapEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIMemMapEnableResponse {
  int32 status = 1;
}

message ResetAIMicrophoneSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIMicrophoneSensitivityResponse {
  int32 status = 1;
}

message ResetAIMinRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIMinResponse {
  int32 status = 1;
}

message ResetAIOpenChanDetectEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIOpenChanDetectEnableResponse {
  int32 status = 1;
}

message ResetAIOpenThrmcplDetectEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIOpenThrmcplDetectEnableResponse {
  int32 status = 1;
}

message ResetAIOvercurrentDetectEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIOvercurrentDetectEnableResponse {
  int32 status = 1;
}

message ResetAIPowerSupplyFaultDetectEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIPowerSupplyFaultDetectEnableResponse {
  int32 status = 1;
}

message ResetAIPressureUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIPressureUnitsResponse {
  int32 status = 1;
}

message ResetAIProbeAttenRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIProbeAttenResponse {
  int32 status = 1;
}

message ResetAIRTDARequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIRTDAResponse {
  int32 status = 1;
}

message ResetAIRTDBRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIRTDBResponse {
  int32 status = 1;
}

message ResetAIRTDCRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIRTDCResponse {
  int32 status = 1;
}

message ResetAIRTDR0Request {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIRTDR0Response {
  int32 status = 1;
}

message ResetAIRTDTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIRTDTypeResponse {
  int32 status = 1;
}

message ResetAIRVDTSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIRVDTSensitivityResponse {
  int32 status = 1;
}

message ResetAIRVDTSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIRVDTSensitivityUnitsResponse {
  int32 status = 1;
}

message ResetAIRVDTUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIRVDTUnitsResponse {
  int32 status = 1;
}

message ResetAIRawDataCompressionTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIRawDataCompressionTypeResponse {
  int32 status = 1;
}

message ResetAIRemoveFilterDelayRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIRemoveFilterDelayResponse {
  int32 status = 1;
}

message ResetAIResistanceCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIResistanceCfgResponse {
  int32 status = 1;
}

message ResetAIResistanceUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIResistanceUnitsResponse {
  int32 status = 1;
}

message ResetAIRngHighRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIRngHighResponse {
  int32 status = 1;
}

message ResetAIRngLowRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIRngLowResponse {
  int32 status = 1;
}

message ResetAIRosetteStrainGageOrientationRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIRosetteStrainGageOrientationResponse {
  int32 status = 1;
}

message ResetAIRosetteStrainGageRosetteMeasTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIRosetteStrainGageRosetteMeasTypeResponse {
  int32 status = 1;
}

message ResetAISampAndHoldEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAISampAndHoldEnableResponse {
  int32 status = 1;
}

message ResetAISensorPowerCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAISensorPowerCfgResponse {
  int32 status = 1;
}

message ResetAISensorPowerTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAISensorPowerTypeResponse {
  int32 status = 1;
}

message ResetAISensorPowerVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAISensorPowerVoltageResponse {
  int32 status = 1;
}

message ResetAISoundPressureMaxSoundPressureLvlRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAISoundPressureMaxSoundPressureLvlResponse {
  int32 status = 1;
}

message ResetAISoundPressureUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAISoundPressureUnitsResponse {
  int32 status = 1;
}

message ResetAISoundPressuredBRefRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAISoundPressuredBRefResponse {
  int32 status = 1;
}

message ResetAIStrainGageCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIStrainGageCfgResponse {
  int32 status = 1;
}

message ResetAIStrainGageForceReadFromChanRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIStrainGageForceReadFromChanResponse {
  int32 status = 1;
}

message ResetAIStrainGageGageFactorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIStrainGageGageFactorResponse {
  int32 status = 1;
}

message ResetAIStrainGagePoissonRatioRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIStrainGagePoissonRatioResponse {
  int32 status = 1;
}

message ResetAIStrainUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIStrainUnitsResponse {
  int32 status = 1;
}

message ResetAITempUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAITempUnitsResponse {
  int32 status = 1;
}

message ResetAITermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAITermCfgResponse {
  int32 status = 1;
}

message ResetAIThrmcplCJCValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIThrmcplCJCValResponse {
  int32 status = 1;
}

message ResetAIThrmcplLeadOffsetVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIThrmcplLeadOffsetVoltageResponse {
  int32 status = 1;
}

message ResetAIThrmcplScaleTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIThrmcplScaleTypeResponse {
  int32 status = 1;
}

message ResetAIThrmcplTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIThrmcplTypeResponse {
  int32 status = 1;
}

message ResetAIThrmstrARequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIThrmstrAResponse {
  int32 status = 1;
}

message ResetAIThrmstrBRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIThrmstrBResponse {
  int32 status = 1;
}

message ResetAIThrmstrCRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIThrmstrCResponse {
  int32 status = 1;
}

message ResetAIThrmstrR1Request {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIThrmstrR1Response {
  int32 status = 1;
}

message ResetAITorqueUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAITorqueUnitsResponse {
  int32 status = 1;
}

message ResetAIUsbXferReqCountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIUsbXferReqCountResponse {
  int32 status = 1;
}

message ResetAIUsbXferReqSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIUsbXferReqSizeResponse {
  int32 status = 1;
}

message ResetAIVelocityIEPESensorSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIVelocityIEPESensorSensitivityResponse {
  int32 status = 1;
}

message ResetAIVelocityIEPESensorSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIVelocityIEPESensorSensitivityUnitsResponse {
  int32 status = 1;
}

message ResetAIVelocityIEPESensordBRefRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIVelocityIEPESensordBRefResponse {
  int32 status = 1;
}

message ResetAIVelocityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIVelocityUnitsResponse {
  int32 status = 1;
}

message ResetAIVoltageACRMSUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIVoltageACRMSUnitsResponse {
  int32 status = 1;
}

message ResetAIVoltageUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIVoltageUnitsResponse {
  int32 status = 1;
}

message ResetAIVoltagedBRefRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAIVoltagedBRefResponse {
  int32 status = 1;
}

message ResetAOCurrentUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOCurrentUnitsResponse {
  int32 status = 1;
}

message ResetAOCustomScaleNameRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOCustomScaleNameResponse {
  int32 status = 1;
}

message ResetAODACOffsetExtSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAODACOffsetExtSrcResponse {
  int32 status = 1;
}

message ResetAODACOffsetSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAODACOffsetSrcResponse {
  int32 status = 1;
}

message ResetAODACOffsetValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAODACOffsetValResponse {
  int32 status = 1;
}

message ResetAODACRefAllowConnToGndRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAODACRefAllowConnToGndResponse {
  int32 status = 1;
}

message ResetAODACRefConnToGndRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAODACRefConnToGndResponse {
  int32 status = 1;
}

message ResetAODACRefExtSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAODACRefExtSrcResponse {
  int32 status = 1;
}

message ResetAODACRefSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAODACRefSrcResponse {
  int32 status = 1;
}

message ResetAODACRefValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAODACRefValResponse {
  int32 status = 1;
}

message ResetAODACRngHighRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAODACRngHighResponse {
  int32 status = 1;
}

message ResetAODACRngLowRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAODACRngLowResponse {
  int32 status = 1;
}

message ResetAODataXferMechRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAODataXferMechResponse {
  int32 status = 1;
}

message ResetAODataXferReqCondRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAODataXferReqCondResponse {
  int32 status = 1;
}

message ResetAOEnhancedImageRejectionEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOEnhancedImageRejectionEnableResponse {
  int32 status = 1;
}

message ResetAOFilterDelayRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOFilterDelayResponse {
  int32 status = 1;
}

message ResetAOFilterDelayAdjustmentRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOFilterDelayAdjustmentResponse {
  int32 status = 1;
}

message ResetAOFilterDelayUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOFilterDelayUnitsResponse {
  int32 status = 1;
}

message ResetAOFuncGenAmplitudeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOFuncGenAmplitudeResponse {
  int32 status = 1;
}

message ResetAOFuncGenFMDeviationRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOFuncGenFMDeviationResponse {
  int32 status = 1;
}

message ResetAOFuncGenFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOFuncGenFreqResponse {
  int32 status = 1;
}

message ResetAOFuncGenModulationTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOFuncGenModulationTypeResponse {
  int32 status = 1;
}

message ResetAOFuncGenOffsetRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOFuncGenOffsetResponse {
  int32 status = 1;
}

message ResetAOFuncGenSquareDutyCycleRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOFuncGenSquareDutyCycleResponse {
  int32 status = 1;
}

message ResetAOFuncGenTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOFuncGenTypeResponse {
  int32 status = 1;
}

message ResetAOGainRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOGainResponse {
  int32 status = 1;
}

message ResetAOIdleOutputBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOIdleOutputBehaviorResponse {
  int32 status = 1;
}

message ResetAOLoadImpedanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOLoadImpedanceResponse {
  int32 status = 1;
}

message ResetAOMaxRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOMaxResponse {
  int32 status = 1;
}

message ResetAOMemMapEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOMemMapEnableResponse {
  int32 status = 1;
}

message ResetAOMinRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOMinResponse {
  int32 status = 1;
}

message ResetAOOutputImpedanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOOutputImpedanceResponse {
  int32 status = 1;
}

message ResetAOReglitchEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOReglitchEnableResponse {
  int32 status = 1;
}

message ResetAOResolutionUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOResolutionUnitsResponse {
  int32 status = 1;
}

message ResetAOTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOTermCfgResponse {
  int32 status = 1;
}

message ResetAOUsbXferReqCountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOUsbXferReqCountResponse {
  int32 status = 1;
}

message ResetAOUsbXferReqSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOUsbXferReqSizeResponse {
  int32 status = 1;
}

message ResetAOUseOnlyOnBrdMemRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOUseOnlyOnBrdMemResponse {
  int32 status = 1;
}

message ResetAOVoltageCurrentLimitRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOVoltageCurrentLimitResponse {
  int32 status = 1;
}

message ResetAOVoltageUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetAOVoltageUnitsResponse {
  int32 status = 1;
}

message ResetBufInputBufSizeRequest {
  nidevice_grpc.Session task = 1;
}

message ResetBufInputBufSizeResponse {
  int32 status = 1;
}

message ResetBufOutputBufSizeRequest {
  nidevice_grpc.Session task = 1;
}

message ResetBufOutputBufSizeResponse {
  int32 status = 1;
}

message ResetBufOutputOnbrdBufSizeRequest {
  nidevice_grpc.Session task = 1;
}

message ResetBufOutputOnbrdBufSizeResponse {
  int32 status = 1;
}

message ResetCIAngEncoderInitialAngleRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIAngEncoderInitialAngleResponse {
  int32 status = 1;
}

message ResetCIAngEncoderPulsesPerRevRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIAngEncoderPulsesPerRevResponse {
  int32 status = 1;
}

message ResetCIAngEncoderUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIAngEncoderUnitsResponse {
  int32 status = 1;
}

message ResetCICountEdgesActiveEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesActiveEdgeResponse {
  int32 status = 1;
}

message ResetCICountEdgesCountDirDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesCountDirDigFltrEnableResponse {
  int32 status = 1;
}

message ResetCICountEdgesCountDirDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesCountDirDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message ResetCICountEdgesCountDirDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesCountDirDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCICountEdgesCountDirDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesCountDirDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCICountEdgesCountDirDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesCountDirDigSyncEnableResponse {
  int32 status = 1;
}

message ResetCICountEdgesCountDirHystRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesCountDirHystResponse {
  int32 status = 1;
}

message ResetCICountEdgesCountDirLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesCountDirLogicLvlBehaviorResponse {
  int32 status = 1;
}

message ResetCICountEdgesCountDirTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesCountDirTermCfgResponse {
  int32 status = 1;
}

message ResetCICountEdgesCountDirThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesCountDirThreshVoltageResponse {
  int32 status = 1;
}

message ResetCICountEdgesCountResetActiveEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesCountResetActiveEdgeResponse {
  int32 status = 1;
}

message ResetCICountEdgesCountResetDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesCountResetDigFltrEnableResponse {
  int32 status = 1;
}

message ResetCICountEdgesCountResetDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesCountResetDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message ResetCICountEdgesCountResetDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesCountResetDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCICountEdgesCountResetDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesCountResetDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCICountEdgesCountResetDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesCountResetDigSyncEnableResponse {
  int32 status = 1;
}

message ResetCICountEdgesCountResetEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesCountResetEnableResponse {
  int32 status = 1;
}

message ResetCICountEdgesCountResetHystRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesCountResetHystResponse {
  int32 status = 1;
}

message ResetCICountEdgesCountResetLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesCountResetLogicLvlBehaviorResponse {
  int32 status = 1;
}

message ResetCICountEdgesCountResetResetCountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesCountResetResetCountResponse {
  int32 status = 1;
}

message ResetCICountEdgesCountResetTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesCountResetTermResponse {
  int32 status = 1;
}

message ResetCICountEdgesCountResetTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesCountResetTermCfgResponse {
  int32 status = 1;
}

message ResetCICountEdgesCountResetThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesCountResetThreshVoltageResponse {
  int32 status = 1;
}

message ResetCICountEdgesDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesDigFltrEnableResponse {
  int32 status = 1;
}

message ResetCICountEdgesDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message ResetCICountEdgesDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCICountEdgesDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCICountEdgesDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesDigSyncEnableResponse {
  int32 status = 1;
}

message ResetCICountEdgesDirRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesDirResponse {
  int32 status = 1;
}

message ResetCICountEdgesDirTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesDirTermResponse {
  int32 status = 1;
}

message ResetCICountEdgesGateDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesGateDigFltrEnableResponse {
  int32 status = 1;
}

message ResetCICountEdgesGateDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesGateDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message ResetCICountEdgesGateDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesGateDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCICountEdgesGateDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesGateDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCICountEdgesGateEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesGateEnableResponse {
  int32 status = 1;
}

message ResetCICountEdgesGateHystRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesGateHystResponse {
  int32 status = 1;
}

message ResetCICountEdgesGateLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesGateLogicLvlBehaviorResponse {
  int32 status = 1;
}

message ResetCICountEdgesGateTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesGateTermResponse {
  int32 status = 1;
}

message ResetCICountEdgesGateTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesGateTermCfgResponse {
  int32 status = 1;
}

message ResetCICountEdgesGateThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesGateThreshVoltageResponse {
  int32 status = 1;
}

message ResetCICountEdgesGateWhenRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesGateWhenResponse {
  int32 status = 1;
}

message ResetCICountEdgesHystRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesHystResponse {
  int32 status = 1;
}

message ResetCICountEdgesInitialCntRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesInitialCntResponse {
  int32 status = 1;
}

message ResetCICountEdgesLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesLogicLvlBehaviorResponse {
  int32 status = 1;
}

message ResetCICountEdgesTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesTermResponse {
  int32 status = 1;
}

message ResetCICountEdgesTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesTermCfgResponse {
  int32 status = 1;
}

message ResetCICountEdgesThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICountEdgesThreshVoltageResponse {
  int32 status = 1;
}

message ResetCICtrTimebaseActiveEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICtrTimebaseActiveEdgeResponse {
  int32 status = 1;
}

message ResetCICtrTimebaseDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICtrTimebaseDigFltrEnableResponse {
  int32 status = 1;
}

message ResetCICtrTimebaseDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICtrTimebaseDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message ResetCICtrTimebaseDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICtrTimebaseDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCICtrTimebaseDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICtrTimebaseDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCICtrTimebaseDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICtrTimebaseDigSyncEnableResponse {
  int32 status = 1;
}

message ResetCICtrTimebaseMasterTimebaseDivRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICtrTimebaseMasterTimebaseDivResponse {
  int32 status = 1;
}

message ResetCICtrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICtrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCICtrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICtrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCICustomScaleNameRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCICustomScaleNameResponse {
  int32 status = 1;
}

message ResetCIDataXferMechRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIDataXferMechResponse {
  int32 status = 1;
}

message ResetCIDataXferReqCondRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIDataXferReqCondResponse {
  int32 status = 1;
}

message ResetCIDupCountPreventRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIDupCountPreventResponse {
  int32 status = 1;
}

message ResetCIDutyCycleDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIDutyCycleDigFltrEnableResponse {
  int32 status = 1;
}

message ResetCIDutyCycleDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIDutyCycleDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message ResetCIDutyCycleDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIDutyCycleDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCIDutyCycleDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIDutyCycleDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCIDutyCycleLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIDutyCycleLogicLvlBehaviorResponse {
  int32 status = 1;
}

message ResetCIDutyCycleStartingEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIDutyCycleStartingEdgeResponse {
  int32 status = 1;
}

message ResetCIDutyCycleTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIDutyCycleTermResponse {
  int32 status = 1;
}

message ResetCIDutyCycleTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIDutyCycleTermCfgResponse {
  int32 status = 1;
}

message ResetCIEncoderAInputDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderAInputDigFltrEnableResponse {
  int32 status = 1;
}

message ResetCIEncoderAInputDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderAInputDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message ResetCIEncoderAInputDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderAInputDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCIEncoderAInputDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderAInputDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCIEncoderAInputDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderAInputDigSyncEnableResponse {
  int32 status = 1;
}

message ResetCIEncoderAInputLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderAInputLogicLvlBehaviorResponse {
  int32 status = 1;
}

message ResetCIEncoderAInputTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderAInputTermResponse {
  int32 status = 1;
}

message ResetCIEncoderAInputTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderAInputTermCfgResponse {
  int32 status = 1;
}

message ResetCIEncoderBInputDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderBInputDigFltrEnableResponse {
  int32 status = 1;
}

message ResetCIEncoderBInputDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderBInputDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message ResetCIEncoderBInputDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderBInputDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCIEncoderBInputDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderBInputDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCIEncoderBInputDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderBInputDigSyncEnableResponse {
  int32 status = 1;
}

message ResetCIEncoderBInputLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderBInputLogicLvlBehaviorResponse {
  int32 status = 1;
}

message ResetCIEncoderBInputTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderBInputTermResponse {
  int32 status = 1;
}

message ResetCIEncoderBInputTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderBInputTermCfgResponse {
  int32 status = 1;
}

message ResetCIEncoderDecodingTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderDecodingTypeResponse {
  int32 status = 1;
}

message ResetCIEncoderZIndexEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderZIndexEnableResponse {
  int32 status = 1;
}

message ResetCIEncoderZIndexPhaseRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderZIndexPhaseResponse {
  int32 status = 1;
}

message ResetCIEncoderZIndexValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderZIndexValResponse {
  int32 status = 1;
}

message ResetCIEncoderZInputDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderZInputDigFltrEnableResponse {
  int32 status = 1;
}

message ResetCIEncoderZInputDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderZInputDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message ResetCIEncoderZInputDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderZInputDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCIEncoderZInputDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderZInputDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCIEncoderZInputDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderZInputDigSyncEnableResponse {
  int32 status = 1;
}

message ResetCIEncoderZInputLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderZInputLogicLvlBehaviorResponse {
  int32 status = 1;
}

message ResetCIEncoderZInputTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderZInputTermResponse {
  int32 status = 1;
}

message ResetCIEncoderZInputTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIEncoderZInputTermCfgResponse {
  int32 status = 1;
}

message ResetCIFilterDelayUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIFilterDelayUnitsResponse {
  int32 status = 1;
}

message ResetCIFilterEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIFilterEnableResponse {
  int32 status = 1;
}

message ResetCIFilterFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIFilterFreqResponse {
  int32 status = 1;
}

message ResetCIFilterOrderRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIFilterOrderResponse {
  int32 status = 1;
}

message ResetCIFilterResponseRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIFilterResponseResponse {
  int32 status = 1;
}

message ResetCIFreqDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIFreqDigFltrEnableResponse {
  int32 status = 1;
}

message ResetCIFreqDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIFreqDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message ResetCIFreqDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIFreqDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCIFreqDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIFreqDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCIFreqDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIFreqDigSyncEnableResponse {
  int32 status = 1;
}

message ResetCIFreqDivRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIFreqDivResponse {
  int32 status = 1;
}

message ResetCIFreqEnableAveragingRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIFreqEnableAveragingResponse {
  int32 status = 1;
}

message ResetCIFreqHystRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIFreqHystResponse {
  int32 status = 1;
}

message ResetCIFreqLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIFreqLogicLvlBehaviorResponse {
  int32 status = 1;
}

message ResetCIFreqMeasMethRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIFreqMeasMethResponse {
  int32 status = 1;
}

message ResetCIFreqMeasTimeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIFreqMeasTimeResponse {
  int32 status = 1;
}

message ResetCIFreqStartingEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIFreqStartingEdgeResponse {
  int32 status = 1;
}

message ResetCIFreqTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIFreqTermResponse {
  int32 status = 1;
}

message ResetCIFreqTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIFreqTermCfgResponse {
  int32 status = 1;
}

message ResetCIFreqThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIFreqThreshVoltageResponse {
  int32 status = 1;
}

message ResetCIFreqUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIFreqUnitsResponse {
  int32 status = 1;
}

message ResetCIGPSSyncMethodRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIGPSSyncMethodResponse {
  int32 status = 1;
}

message ResetCIGPSSyncSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIGPSSyncSrcResponse {
  int32 status = 1;
}

message ResetCILinEncoderDistPerPulseRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCILinEncoderDistPerPulseResponse {
  int32 status = 1;
}

message ResetCILinEncoderInitialPosRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCILinEncoderInitialPosResponse {
  int32 status = 1;
}

message ResetCILinEncoderUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCILinEncoderUnitsResponse {
  int32 status = 1;
}

message ResetCIMaxRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIMaxResponse {
  int32 status = 1;
}

message ResetCIMaxMeasPeriodRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIMaxMeasPeriodResponse {
  int32 status = 1;
}

message ResetCIMemMapEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIMemMapEnableResponse {
  int32 status = 1;
}

message ResetCIMinRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIMinResponse {
  int32 status = 1;
}

message ResetCIPeriodDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPeriodDigFltrEnableResponse {
  int32 status = 1;
}

message ResetCIPeriodDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPeriodDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message ResetCIPeriodDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPeriodDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCIPeriodDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPeriodDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCIPeriodDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPeriodDigSyncEnableResponse {
  int32 status = 1;
}

message ResetCIPeriodDivRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPeriodDivResponse {
  int32 status = 1;
}

message ResetCIPeriodEnableAveragingRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPeriodEnableAveragingResponse {
  int32 status = 1;
}

message ResetCIPeriodHystRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPeriodHystResponse {
  int32 status = 1;
}

message ResetCIPeriodLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPeriodLogicLvlBehaviorResponse {
  int32 status = 1;
}

message ResetCIPeriodMeasMethRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPeriodMeasMethResponse {
  int32 status = 1;
}

message ResetCIPeriodMeasTimeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPeriodMeasTimeResponse {
  int32 status = 1;
}

message ResetCIPeriodStartingEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPeriodStartingEdgeResponse {
  int32 status = 1;
}

message ResetCIPeriodTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPeriodTermResponse {
  int32 status = 1;
}

message ResetCIPeriodTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPeriodTermCfgResponse {
  int32 status = 1;
}

message ResetCIPeriodThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPeriodThreshVoltageResponse {
  int32 status = 1;
}

message ResetCIPeriodUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPeriodUnitsResponse {
  int32 status = 1;
}

message ResetCIPrescalerRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPrescalerResponse {
  int32 status = 1;
}

message ResetCIPulseFreqDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseFreqDigFltrEnableResponse {
  int32 status = 1;
}

message ResetCIPulseFreqDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseFreqDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message ResetCIPulseFreqDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseFreqDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCIPulseFreqDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseFreqDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCIPulseFreqDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseFreqDigSyncEnableResponse {
  int32 status = 1;
}

message ResetCIPulseFreqLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseFreqLogicLvlBehaviorResponse {
  int32 status = 1;
}

message ResetCIPulseFreqStartEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseFreqStartEdgeResponse {
  int32 status = 1;
}

message ResetCIPulseFreqTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseFreqTermResponse {
  int32 status = 1;
}

message ResetCIPulseFreqTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseFreqTermCfgResponse {
  int32 status = 1;
}

message ResetCIPulseFreqUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseFreqUnitsResponse {
  int32 status = 1;
}

message ResetCIPulseTicksDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseTicksDigFltrEnableResponse {
  int32 status = 1;
}

message ResetCIPulseTicksDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseTicksDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message ResetCIPulseTicksDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseTicksDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCIPulseTicksDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseTicksDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCIPulseTicksDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseTicksDigSyncEnableResponse {
  int32 status = 1;
}

message ResetCIPulseTicksLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseTicksLogicLvlBehaviorResponse {
  int32 status = 1;
}

message ResetCIPulseTicksStartEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseTicksStartEdgeResponse {
  int32 status = 1;
}

message ResetCIPulseTicksTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseTicksTermResponse {
  int32 status = 1;
}

message ResetCIPulseTicksTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseTicksTermCfgResponse {
  int32 status = 1;
}

message ResetCIPulseTimeDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseTimeDigFltrEnableResponse {
  int32 status = 1;
}

message ResetCIPulseTimeDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseTimeDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message ResetCIPulseTimeDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseTimeDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCIPulseTimeDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseTimeDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCIPulseTimeDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseTimeDigSyncEnableResponse {
  int32 status = 1;
}

message ResetCIPulseTimeLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseTimeLogicLvlBehaviorResponse {
  int32 status = 1;
}

message ResetCIPulseTimeStartEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseTimeStartEdgeResponse {
  int32 status = 1;
}

message ResetCIPulseTimeTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseTimeTermResponse {
  int32 status = 1;
}

message ResetCIPulseTimeTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseTimeTermCfgResponse {
  int32 status = 1;
}

message ResetCIPulseTimeUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseTimeUnitsResponse {
  int32 status = 1;
}

message ResetCIPulseWidthDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseWidthDigFltrEnableResponse {
  int32 status = 1;
}

message ResetCIPulseWidthDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseWidthDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message ResetCIPulseWidthDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseWidthDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCIPulseWidthDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseWidthDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCIPulseWidthDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseWidthDigSyncEnableResponse {
  int32 status = 1;
}

message ResetCIPulseWidthLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseWidthLogicLvlBehaviorResponse {
  int32 status = 1;
}

message ResetCIPulseWidthStartingEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseWidthStartingEdgeResponse {
  int32 status = 1;
}

message ResetCIPulseWidthTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseWidthTermResponse {
  int32 status = 1;
}

message ResetCIPulseWidthTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseWidthTermCfgResponse {
  int32 status = 1;
}

message ResetCIPulseWidthUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIPulseWidthUnitsResponse {
  int32 status = 1;
}

message ResetCISampClkOverrunBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCISampClkOverrunBehaviorResponse {
  int32 status = 1;
}

message ResetCISampClkOverrunSentinelValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCISampClkOverrunSentinelValResponse {
  int32 status = 1;
}

message ResetCISemiPeriodDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCISemiPeriodDigFltrEnableResponse {
  int32 status = 1;
}

message ResetCISemiPeriodDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCISemiPeriodDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message ResetCISemiPeriodDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCISemiPeriodDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCISemiPeriodDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCISemiPeriodDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCISemiPeriodDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCISemiPeriodDigSyncEnableResponse {
  int32 status = 1;
}

message ResetCISemiPeriodLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCISemiPeriodLogicLvlBehaviorResponse {
  int32 status = 1;
}

message ResetCISemiPeriodStartingEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCISemiPeriodStartingEdgeResponse {
  int32 status = 1;
}

message ResetCISemiPeriodTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCISemiPeriodTermResponse {
  int32 status = 1;
}

message ResetCISemiPeriodTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCISemiPeriodTermCfgResponse {
  int32 status = 1;
}

message ResetCISemiPeriodUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCISemiPeriodUnitsResponse {
  int32 status = 1;
}

message ResetCIThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIThreshVoltageResponse {
  int32 status = 1;
}

message ResetCITimestampInitialSecondsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCITimestampInitialSecondsResponse {
  int32 status = 1;
}

message ResetCITimestampUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCITimestampUnitsResponse {
  int32 status = 1;
}

message ResetCITwoEdgeSepFirstDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCITwoEdgeSepFirstDigFltrEnableResponse {
  int32 status = 1;
}

message ResetCITwoEdgeSepFirstDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCITwoEdgeSepFirstDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message ResetCITwoEdgeSepFirstDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCITwoEdgeSepFirstDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCITwoEdgeSepFirstDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCITwoEdgeSepFirstDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCITwoEdgeSepFirstDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCITwoEdgeSepFirstDigSyncEnableResponse {
  int32 status = 1;
}

message ResetCITwoEdgeSepFirstEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCITwoEdgeSepFirstEdgeResponse {
  int32 status = 1;
}

message ResetCITwoEdgeSepFirstLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCITwoEdgeSepFirstLogicLvlBehaviorResponse {
  int32 status = 1;
}

message ResetCITwoEdgeSepFirstTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCITwoEdgeSepFirstTermResponse {
  int32 status = 1;
}

message ResetCITwoEdgeSepFirstTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCITwoEdgeSepFirstTermCfgResponse {
  int32 status = 1;
}

message ResetCITwoEdgeSepSecondDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCITwoEdgeSepSecondDigFltrEnableResponse {
  int32 status = 1;
}

message ResetCITwoEdgeSepSecondDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCITwoEdgeSepSecondDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message ResetCITwoEdgeSepSecondDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCITwoEdgeSepSecondDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCITwoEdgeSepSecondDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCITwoEdgeSepSecondDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCITwoEdgeSepSecondDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCITwoEdgeSepSecondDigSyncEnableResponse {
  int32 status = 1;
}

message ResetCITwoEdgeSepSecondEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCITwoEdgeSepSecondEdgeResponse {
  int32 status = 1;
}

message ResetCITwoEdgeSepSecondLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCITwoEdgeSepSecondLogicLvlBehaviorResponse {
  int32 status = 1;
}

message ResetCITwoEdgeSepSecondTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCITwoEdgeSepSecondTermResponse {
  int32 status = 1;
}

message ResetCITwoEdgeSepSecondTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCITwoEdgeSepSecondTermCfgResponse {
  int32 status = 1;
}

message ResetCITwoEdgeSepUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCITwoEdgeSepUnitsResponse {
  int32 status = 1;
}

message ResetCIUsbXferReqCountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIUsbXferReqCountResponse {
  int32 status = 1;
}

message ResetCIUsbXferReqSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIUsbXferReqSizeResponse {
  int32 status = 1;
}

message ResetCIVelocityAngEncoderPulsesPerRevRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIVelocityAngEncoderPulsesPerRevResponse {
  int32 status = 1;
}

message ResetCIVelocityAngEncoderUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIVelocityAngEncoderUnitsResponse {
  int32 status = 1;
}

message ResetCIVelocityDivRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIVelocityDivResponse {
  int32 status = 1;
}

message ResetCIVelocityEncoderAInputDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIVelocityEncoderAInputDigFltrEnableResponse {
  int32 status = 1;
}

message ResetCIVelocityEncoderAInputDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIVelocityEncoderAInputDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message ResetCIVelocityEncoderAInputDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIVelocityEncoderAInputDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCIVelocityEncoderAInputDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIVelocityEncoderAInputDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCIVelocityEncoderAInputLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIVelocityEncoderAInputLogicLvlBehaviorResponse {
  int32 status = 1;
}

message ResetCIVelocityEncoderAInputTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIVelocityEncoderAInputTermResponse {
  int32 status = 1;
}

message ResetCIVelocityEncoderAInputTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIVelocityEncoderAInputTermCfgResponse {
  int32 status = 1;
}

message ResetCIVelocityEncoderBInputDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIVelocityEncoderBInputDigFltrEnableResponse {
  int32 status = 1;
}

message ResetCIVelocityEncoderBInputDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIVelocityEncoderBInputDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message ResetCIVelocityEncoderBInputDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIVelocityEncoderBInputDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCIVelocityEncoderBInputDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIVelocityEncoderBInputDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCIVelocityEncoderBInputLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIVelocityEncoderBInputLogicLvlBehaviorResponse {
  int32 status = 1;
}

message ResetCIVelocityEncoderBInputTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIVelocityEncoderBInputTermResponse {
  int32 status = 1;
}

message ResetCIVelocityEncoderBInputTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIVelocityEncoderBInputTermCfgResponse {
  int32 status = 1;
}

message ResetCIVelocityEncoderDecodingTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIVelocityEncoderDecodingTypeResponse {
  int32 status = 1;
}

message ResetCIVelocityLinEncoderDistPerPulseRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIVelocityLinEncoderDistPerPulseResponse {
  int32 status = 1;
}

message ResetCIVelocityLinEncoderUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIVelocityLinEncoderUnitsResponse {
  int32 status = 1;
}

message ResetCIVelocityMeasTimeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCIVelocityMeasTimeResponse {
  int32 status = 1;
}

message ResetCOAutoIncrCntRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOAutoIncrCntResponse {
  int32 status = 1;
}

message ResetCOConstrainedGenModeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOConstrainedGenModeResponse {
  int32 status = 1;
}

message ResetCOCtrTimebaseActiveEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOCtrTimebaseActiveEdgeResponse {
  int32 status = 1;
}

message ResetCOCtrTimebaseDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOCtrTimebaseDigFltrEnableResponse {
  int32 status = 1;
}

message ResetCOCtrTimebaseDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOCtrTimebaseDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message ResetCOCtrTimebaseDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOCtrTimebaseDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCOCtrTimebaseDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOCtrTimebaseDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCOCtrTimebaseDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOCtrTimebaseDigSyncEnableResponse {
  int32 status = 1;
}

message ResetCOCtrTimebaseMasterTimebaseDivRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOCtrTimebaseMasterTimebaseDivResponse {
  int32 status = 1;
}

message ResetCOCtrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOCtrTimebaseRateResponse {
  int32 status = 1;
}

message ResetCOCtrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOCtrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetCODataXferMechRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCODataXferMechResponse {
  int32 status = 1;
}

message ResetCODataXferReqCondRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCODataXferReqCondResponse {
  int32 status = 1;
}

message ResetCOEnableInitialDelayOnRetriggerRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOEnableInitialDelayOnRetriggerResponse {
  int32 status = 1;
}

message ResetCOMemMapEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOMemMapEnableResponse {
  int32 status = 1;
}

message ResetCOPrescalerRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOPrescalerResponse {
  int32 status = 1;
}

message ResetCOPulseDutyCycRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOPulseDutyCycResponse {
  int32 status = 1;
}

message ResetCOPulseFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOPulseFreqResponse {
  int32 status = 1;
}

message ResetCOPulseFreqInitialDelayRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOPulseFreqInitialDelayResponse {
  int32 status = 1;
}

message ResetCOPulseFreqUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOPulseFreqUnitsResponse {
  int32 status = 1;
}

message ResetCOPulseHighTicksRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOPulseHighTicksResponse {
  int32 status = 1;
}

message ResetCOPulseHighTimeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOPulseHighTimeResponse {
  int32 status = 1;
}

message ResetCOPulseIdleStateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOPulseIdleStateResponse {
  int32 status = 1;
}

message ResetCOPulseLowTicksRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOPulseLowTicksResponse {
  int32 status = 1;
}

message ResetCOPulseLowTimeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOPulseLowTimeResponse {
  int32 status = 1;
}

message ResetCOPulseTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOPulseTermResponse {
  int32 status = 1;
}

message ResetCOPulseTicksInitialDelayRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOPulseTicksInitialDelayResponse {
  int32 status = 1;
}

message ResetCOPulseTimeInitialDelayRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOPulseTimeInitialDelayResponse {
  int32 status = 1;
}

message ResetCOPulseTimeUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOPulseTimeUnitsResponse {
  int32 status = 1;
}

message ResetCOUsbXferReqCountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOUsbXferReqCountResponse {
  int32 status = 1;
}

message ResetCOUsbXferReqSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOUsbXferReqSizeResponse {
  int32 status = 1;
}

message ResetCOUseOnlyOnBrdMemRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetCOUseOnlyOnBrdMemResponse {
  int32 status = 1;
}

message ResetChanDescrRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetChanDescrResponse {
  int32 status = 1;
}

message ResetChanSyncUnlockBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetChanSyncUnlockBehaviorResponse {
  int32 status = 1;
}

message ResetDIAcquireOnRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDIAcquireOnResponse {
  int32 status = 1;
}

message ResetDIDataXferMechRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDIDataXferMechResponse {
  int32 status = 1;
}

message ResetDIDataXferReqCondRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDIDataXferReqCondResponse {
  int32 status = 1;
}

message ResetDIDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDIDigFltrEnableResponse {
  int32 status = 1;
}

message ResetDIDigFltrEnableBusModeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDIDigFltrEnableBusModeResponse {
  int32 status = 1;
}

message ResetDIDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDIDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message ResetDIDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDIDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message ResetDIDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDIDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message ResetDIDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDIDigSyncEnableResponse {
  int32 status = 1;
}

message ResetDIInvertLinesRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDIInvertLinesResponse {
  int32 status = 1;
}

message ResetDILogicFamilyRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDILogicFamilyResponse {
  int32 status = 1;
}

message ResetDIMemMapEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDIMemMapEnableResponse {
  int32 status = 1;
}

message ResetDITristateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDITristateResponse {
  int32 status = 1;
}

message ResetDIUsbXferReqCountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDIUsbXferReqCountResponse {
  int32 status = 1;
}

message ResetDIUsbXferReqSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDIUsbXferReqSizeResponse {
  int32 status = 1;
}

message ResetDODataXferMechRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDODataXferMechResponse {
  int32 status = 1;
}

message ResetDODataXferReqCondRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDODataXferReqCondResponse {
  int32 status = 1;
}

message ResetDOGenerateOnRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDOGenerateOnResponse {
  int32 status = 1;
}

message ResetDOInvertLinesRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDOInvertLinesResponse {
  int32 status = 1;
}

message ResetDOLineStatesDoneStateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDOLineStatesDoneStateResponse {
  int32 status = 1;
}

message ResetDOLineStatesPausedStateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDOLineStatesPausedStateResponse {
  int32 status = 1;
}

message ResetDOLineStatesStartStateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDOLineStatesStartStateResponse {
  int32 status = 1;
}

message ResetDOLogicFamilyRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDOLogicFamilyResponse {
  int32 status = 1;
}

message ResetDOMemMapEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDOMemMapEnableResponse {
  int32 status = 1;
}

message ResetDOOutputDriveTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDOOutputDriveTypeResponse {
  int32 status = 1;
}

message ResetDOOvercurrentAutoReenableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDOOvercurrentAutoReenableResponse {
  int32 status = 1;
}

message ResetDOOvercurrentLimitRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDOOvercurrentLimitResponse {
  int32 status = 1;
}

message ResetDOOvercurrentReenablePeriodRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDOOvercurrentReenablePeriodResponse {
  int32 status = 1;
}

message ResetDOTristateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDOTristateResponse {
  int32 status = 1;
}

message ResetDOUsbXferReqCountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDOUsbXferReqCountResponse {
  int32 status = 1;
}

message ResetDOUsbXferReqSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDOUsbXferReqSizeResponse {
  int32 status = 1;
}

message ResetDOUseOnlyOnBrdMemRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
}

message ResetDOUseOnlyOnBrdMemResponse {
  int32 status = 1;
}

message ResetDeviceRequest {
  string device_name = 1;
}

message ResetDeviceResponse {
  int32 status = 1;
}

message SaveGlobalChanRequest {
  nidevice_grpc.Session task = 1;
  string channel_name = 2;
  string save_as = 3;
  string author = 4;
  oneof options_enum {
    SaveOptions options = 5;
    uint32 options_raw = 6;
  }
}

message SaveGlobalChanResponse {
  int32 status = 1;
}

message SaveScaleRequest {
  string scale_name = 1;
  string save_as = 2;
  string author = 3;
  oneof options_enum {
    SaveOptions options = 4;
    uint32 options_raw = 5;
  }
}

message SaveScaleResponse {
  int32 status = 1;
}

message SaveTaskRequest {
  nidevice_grpc.Session task = 1;
  string save_as = 2;
  string author = 3;
  oneof options_enum {
    SaveOptions options = 4;
    uint32 options_raw = 5;
  }
}

message SaveTaskResponse {
  int32 status = 1;
}

message SelfCalRequest {
  string device_name = 1;
}

message SelfCalResponse {
  int32 status = 1;
}

message SelfTestDeviceRequest {
  string device_name = 1;
}

message SelfTestDeviceResponse {
  int32 status = 1;
}

message SetAIACExcitFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIACExcitFreqResponse {
  int32 status = 1;
}

message SetAIACExcitSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAIACExcitSyncEnableResponse {
  int32 status = 1;
}

message SetAIACExcitWireModeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    ACExcitWireMode data = 3;
    int32 data_raw = 4;
  }
}

message SetAIACExcitWireModeResponse {
  int32 status = 1;
}

message SetAIADCCustomTimingModeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetAIADCCustomTimingModeResponse {
  int32 status = 1;
}

message SetAIADCTimingModeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    ADCTimingMode data = 3;
    int32 data_raw = 4;
  }
}

message SetAIADCTimingModeResponse {
  int32 status = 1;
}

message SetAIAccel4WireDCVoltageSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIAccel4WireDCVoltageSensitivityResponse {
  int32 status = 1;
}

message SetAIAccel4WireDCVoltageSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    AccelSensitivityUnits1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAIAccel4WireDCVoltageSensitivityUnitsResponse {
  int32 status = 1;
}

message SetAIAccelChargeSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIAccelChargeSensitivityResponse {
  int32 status = 1;
}

message SetAIAccelChargeSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    AccelChargeSensitivityUnits data = 3;
    int32 data_raw = 4;
  }
}

message SetAIAccelChargeSensitivityUnitsResponse {
  int32 status = 1;
}

message SetAIAccelSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIAccelSensitivityResponse {
  int32 status = 1;
}

message SetAIAccelSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    AccelSensitivityUnits1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAIAccelSensitivityUnitsResponse {
  int32 status = 1;
}

message SetAIAccelUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    AccelUnits2 data = 3;
    int32 data_raw = 4;
  }
}

message SetAIAccelUnitsResponse {
  int32 status = 1;
}

message SetAIAcceldBRefRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIAcceldBRefResponse {
  int32 status = 1;
}

message SetAIAttenRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIAttenResponse {
  int32 status = 1;
}

message SetAIAutoZeroModeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    AutoZeroType1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAIAutoZeroModeResponse {
  int32 status = 1;
}

message SetAIAveragingWinSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetAIAveragingWinSizeResponse {
  int32 status = 1;
}

message SetAIBridgeBalanceCoarsePotRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  int32 data = 3;
}

message SetAIBridgeBalanceCoarsePotResponse {
  int32 status = 1;
}

message SetAIBridgeBalanceFinePotRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  int32 data = 3;
}

message SetAIBridgeBalanceFinePotResponse {
  int32 status = 1;
}

message SetAIBridgeCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    BridgeConfiguration1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAIBridgeCfgResponse {
  int32 status = 1;
}

message SetAIBridgeElectricalUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    BridgeElectricalUnits data = 3;
    int32 data_raw = 4;
  }
}

message SetAIBridgeElectricalUnitsResponse {
  int32 status = 1;
}

message SetAIBridgeInitialRatioRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIBridgeInitialRatioResponse {
  int32 status = 1;
}

message SetAIBridgeInitialVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIBridgeInitialVoltageResponse {
  int32 status = 1;
}

message SetAIBridgeNomResistanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIBridgeNomResistanceResponse {
  int32 status = 1;
}

message SetAIBridgePhysicalUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    BridgePhysicalUnits data = 3;
    int32 data_raw = 4;
  }
}

message SetAIBridgePhysicalUnitsResponse {
  int32 status = 1;
}

message SetAIBridgePolyForwardCoeffRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message SetAIBridgePolyForwardCoeffResponse {
  int32 status = 1;
  double data = 2;
}

message SetAIBridgePolyReverseCoeffRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message SetAIBridgePolyReverseCoeffResponse {
  int32 status = 1;
  double data = 2;
}

message SetAIBridgeScaleTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    ScaleType4 data = 3;
    int32 data_raw = 4;
  }
}

message SetAIBridgeScaleTypeResponse {
  int32 status = 1;
}

message SetAIBridgeShuntCalEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAIBridgeShuntCalEnableResponse {
  int32 status = 1;
}

message SetAIBridgeShuntCalGainAdjustRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIBridgeShuntCalGainAdjustResponse {
  int32 status = 1;
}

message SetAIBridgeShuntCalSelectRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    ShuntCalSelect data = 3;
    int32 data_raw = 4;
  }
}

message SetAIBridgeShuntCalSelectResponse {
  int32 status = 1;
}

message SetAIBridgeShuntCalShuntCalAActualResistanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIBridgeShuntCalShuntCalAActualResistanceResponse {
  int32 status = 1;
}

message SetAIBridgeShuntCalShuntCalAResistanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIBridgeShuntCalShuntCalAResistanceResponse {
  int32 status = 1;
}

message SetAIBridgeShuntCalShuntCalASrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    BridgeShuntCalSource data = 3;
    int32 data_raw = 4;
  }
}

message SetAIBridgeShuntCalShuntCalASrcResponse {
  int32 status = 1;
}

message SetAIBridgeShuntCalShuntCalBActualResistanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIBridgeShuntCalShuntCalBActualResistanceResponse {
  int32 status = 1;
}

message SetAIBridgeShuntCalShuntCalBResistanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIBridgeShuntCalShuntCalBResistanceResponse {
  int32 status = 1;
}

message SetAIBridgeTableElectricalValsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message SetAIBridgeTableElectricalValsResponse {
  int32 status = 1;
  double data = 2;
}

message SetAIBridgeTablePhysicalValsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message SetAIBridgeTablePhysicalValsResponse {
  int32 status = 1;
  double data = 2;
}

message SetAIBridgeTwoPointLinFirstElectricalValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIBridgeTwoPointLinFirstElectricalValResponse {
  int32 status = 1;
}

message SetAIBridgeTwoPointLinFirstPhysicalValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIBridgeTwoPointLinFirstPhysicalValResponse {
  int32 status = 1;
}

message SetAIBridgeTwoPointLinSecondElectricalValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIBridgeTwoPointLinSecondElectricalValResponse {
  int32 status = 1;
}

message SetAIBridgeTwoPointLinSecondPhysicalValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIBridgeTwoPointLinSecondPhysicalValResponse {
  int32 status = 1;
}

message SetAIBridgeUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    BridgeUnits data = 3;
    int32 data_raw = 4;
  }
}

message SetAIBridgeUnitsResponse {
  int32 status = 1;
}

message SetAIChanCalApplyCalIfExpRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAIChanCalApplyCalIfExpResponse {
  int32 status = 1;
}

message SetAIChanCalCalDateRequest {
  nidevice_grpc.Session task = 1;
  string channel_name = 2;
  uint32 year = 3;
  uint32 month = 4;
  uint32 day = 5;
  uint32 hour = 6;
  uint32 minute = 7;
}

message SetAIChanCalCalDateResponse {
  int32 status = 1;
}

message SetAIChanCalDescRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetAIChanCalDescResponse {
  int32 status = 1;
}

message SetAIChanCalEnableCalRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAIChanCalEnableCalResponse {
  int32 status = 1;
}

message SetAIChanCalExpDateRequest {
  nidevice_grpc.Session task = 1;
  string channel_name = 2;
  uint32 year = 3;
  uint32 month = 4;
  uint32 day = 5;
  uint32 hour = 6;
  uint32 minute = 7;
}

message SetAIChanCalExpDateResponse {
  int32 status = 1;
}

message SetAIChanCalOperatorNameRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetAIChanCalOperatorNameResponse {
  int32 status = 1;
}

message SetAIChanCalPolyForwardCoeffRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message SetAIChanCalPolyForwardCoeffResponse {
  int32 status = 1;
  double data = 2;
}

message SetAIChanCalPolyReverseCoeffRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message SetAIChanCalPolyReverseCoeffResponse {
  int32 status = 1;
  double data = 2;
}

message SetAIChanCalScaleTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    ScaleType3 data = 3;
    int32 data_raw = 4;
  }
}

message SetAIChanCalScaleTypeResponse {
  int32 status = 1;
}

message SetAIChanCalTablePreScaledValsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message SetAIChanCalTablePreScaledValsResponse {
  int32 status = 1;
  double data = 2;
}

message SetAIChanCalTableScaledValsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message SetAIChanCalTableScaledValsResponse {
  int32 status = 1;
  double data = 2;
}

message SetAIChanCalVerifAcqValsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message SetAIChanCalVerifAcqValsResponse {
  int32 status = 1;
  double data = 2;
}

message SetAIChanCalVerifRefValsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message SetAIChanCalVerifRefValsResponse {
  int32 status = 1;
  double data = 2;
}

message SetAIChargeUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    ChargeUnits data = 3;
    int32 data_raw = 4;
  }
}

message SetAIChargeUnitsResponse {
  int32 status = 1;
}

message SetAIChopEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAIChopEnableResponse {
  int32 status = 1;
}

message SetAICouplingRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    Coupling1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAICouplingResponse {
  int32 status = 1;
}

message SetAICurrentACRMSUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    CurrentUnits1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAICurrentACRMSUnitsResponse {
  int32 status = 1;
}

message SetAICurrentShuntLocRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    CurrentShuntResistorLocation1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAICurrentShuntLocResponse {
  int32 status = 1;
}

message SetAICurrentShuntResistanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAICurrentShuntResistanceResponse {
  int32 status = 1;
}

message SetAICurrentUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    CurrentUnits1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAICurrentUnitsResponse {
  int32 status = 1;
}

message SetAICustomScaleNameRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetAICustomScaleNameResponse {
  int32 status = 1;
}

message SetAIDCOffsetRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIDCOffsetResponse {
  int32 status = 1;
}

message SetAIDataXferCustomThresholdRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetAIDataXferCustomThresholdResponse {
  int32 status = 1;
}

message SetAIDataXferMaxRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIDataXferMaxRateResponse {
  int32 status = 1;
}

message SetAIDataXferMechRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    DataTransferMechanism data = 3;
    int32 data_raw = 4;
  }
}

message SetAIDataXferMechResponse {
  int32 status = 1;
}

message SetAIDataXferReqCondRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputDataTransferCondition data = 3;
    int32 data_raw = 4;
  }
}

message SetAIDataXferReqCondResponse {
  int32 status = 1;
}

message SetAIDigFltrBandpassCenterFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIDigFltrBandpassCenterFreqResponse {
  int32 status = 1;
}

message SetAIDigFltrBandpassWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIDigFltrBandpassWidthResponse {
  int32 status = 1;
}

message SetAIDigFltrCoeffRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 array_size_in_elements = 3;
}

message SetAIDigFltrCoeffResponse {
  int32 status = 1;
  double data = 2;
}

message SetAIDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAIDigFltrEnableResponse {
  int32 status = 1;
}

message SetAIDigFltrHighpassCutoffFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIDigFltrHighpassCutoffFreqResponse {
  int32 status = 1;
}

message SetAIDigFltrLowpassCutoffFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIDigFltrLowpassCutoffFreqResponse {
  int32 status = 1;
}

message SetAIDigFltrNotchCenterFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIDigFltrNotchCenterFreqResponse {
  int32 status = 1;
}

message SetAIDigFltrNotchWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIDigFltrNotchWidthResponse {
  int32 status = 1;
}

message SetAIDigFltrOrderRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetAIDigFltrOrderResponse {
  int32 status = 1;
}

message SetAIDigFltrResponseRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    FilterResponse data = 3;
    int32 data_raw = 4;
  }
}

message SetAIDigFltrResponseResponse {
  int32 status = 1;
}

message SetAIDigFltrTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    FilterType2 data = 3;
    int32 data_raw = 4;
  }
}

message SetAIDigFltrTypeResponse {
  int32 status = 1;
}

message SetAIDitherEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAIDitherEnableResponse {
  int32 status = 1;
}

message SetAIEddyCurrentProxProbeSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIEddyCurrentProxProbeSensitivityResponse {
  int32 status = 1;
}

message SetAIEddyCurrentProxProbeSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    EddyCurrentProxProbeSensitivityUnits data = 3;
    int32 data_raw = 4;
  }
}

message SetAIEddyCurrentProxProbeSensitivityUnitsResponse {
  int32 status = 1;
}

message SetAIEddyCurrentProxProbeUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LengthUnits2 data = 3;
    int32 data_raw = 4;
  }
}

message SetAIEddyCurrentProxProbeUnitsResponse {
  int32 status = 1;
}

message SetAIEnhancedAliasRejectionEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAIEnhancedAliasRejectionEnableResponse {
  int32 status = 1;
}

message SetAIExcitActualValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIExcitActualValResponse {
  int32 status = 1;
}

message SetAIExcitDCorACRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    ExcitationDCorAC data = 3;
    int32 data_raw = 4;
  }
}

message SetAIExcitDCorACResponse {
  int32 status = 1;
}

message SetAIExcitIdleOutputBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    ExcitationIdleOutputBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetAIExcitIdleOutputBehaviorResponse {
  int32 status = 1;
}

message SetAIExcitSenseRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    Sense data = 3;
    int32 data_raw = 4;
  }
}

message SetAIExcitSenseResponse {
  int32 status = 1;
}

message SetAIExcitSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    ExcitationSource data = 3;
    int32 data_raw = 4;
  }
}

message SetAIExcitSrcResponse {
  int32 status = 1;
}

message SetAIExcitUseForScalingRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAIExcitUseForScalingResponse {
  int32 status = 1;
}

message SetAIExcitUseMultiplexedRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAIExcitUseMultiplexedResponse {
  int32 status = 1;
}

message SetAIExcitValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIExcitValResponse {
  int32 status = 1;
}

message SetAIExcitVoltageOrCurrentRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    ExcitationVoltageOrCurrent data = 3;
    int32 data_raw = 4;
  }
}

message SetAIExcitVoltageOrCurrentResponse {
  int32 status = 1;
}

message SetAIFilterDelayAdjustmentRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIFilterDelayAdjustmentResponse {
  int32 status = 1;
}

message SetAIFilterDelayUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    DigitalWidthUnits4 data = 3;
    int32 data_raw = 4;
  }
}

message SetAIFilterDelayUnitsResponse {
  int32 status = 1;
}

message SetAIFilterEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAIFilterEnableResponse {
  int32 status = 1;
}

message SetAIFilterFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIFilterFreqResponse {
  int32 status = 1;
}

message SetAIFilterOrderRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetAIFilterOrderResponse {
  int32 status = 1;
}

message SetAIFilterResponseRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    FilterResponse1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAIFilterResponseResponse {
  int32 status = 1;
}

message SetAIForceIEPESensorSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIForceIEPESensorSensitivityResponse {
  int32 status = 1;
}

message SetAIForceIEPESensorSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    ForceIEPESensorSensitivityUnits data = 3;
    int32 data_raw = 4;
  }
}

message SetAIForceIEPESensorSensitivityUnitsResponse {
  int32 status = 1;
}

message SetAIForceReadFromChanRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAIForceReadFromChanResponse {
  int32 status = 1;
}

message SetAIForceUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    ForceUnits data = 3;
    int32 data_raw = 4;
  }
}

message SetAIForceUnitsResponse {
  int32 status = 1;
}

message SetAIFreqHystRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIFreqHystResponse {
  int32 status = 1;
}

message SetAIFreqThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIFreqThreshVoltageResponse {
  int32 status = 1;
}

message SetAIFreqUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    FrequencyUnits data = 3;
    int32 data_raw = 4;
  }
}

message SetAIFreqUnitsResponse {
  int32 status = 1;
}

message SetAIGainRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIGainResponse {
  int32 status = 1;
}

message SetAIInputLimitsFaultDetectEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAIInputLimitsFaultDetectEnableResponse {
  int32 status = 1;
}

message SetAIInputLimitsFaultDetectLowerLimitRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIInputLimitsFaultDetectLowerLimitResponse {
  int32 status = 1;
}

message SetAIInputLimitsFaultDetectUpperLimitRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIInputLimitsFaultDetectUpperLimitResponse {
  int32 status = 1;
}

message SetAIInputSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetAIInputSrcResponse {
  int32 status = 1;
}

message SetAILVDTSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAILVDTSensitivityResponse {
  int32 status = 1;
}

message SetAILVDTSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LVDTSensitivityUnits1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAILVDTSensitivityUnitsResponse {
  int32 status = 1;
}

message SetAILVDTUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LengthUnits2 data = 3;
    int32 data_raw = 4;
  }
}

message SetAILVDTUnitsResponse {
  int32 status = 1;
}

message SetAILeadWireResistanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAILeadWireResistanceResponse {
  int32 status = 1;
}

message SetAILossyLSBRemovalCompressedSampSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetAILossyLSBRemovalCompressedSampSizeResponse {
  int32 status = 1;
}

message SetAILowpassCutoffFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAILowpassCutoffFreqResponse {
  int32 status = 1;
}

message SetAILowpassEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAILowpassEnableResponse {
  int32 status = 1;
}

message SetAILowpassSwitchCapClkSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    SourceSelection data = 3;
    int32 data_raw = 4;
  }
}

message SetAILowpassSwitchCapClkSrcResponse {
  int32 status = 1;
}

message SetAILowpassSwitchCapExtClkDivRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetAILowpassSwitchCapExtClkDivResponse {
  int32 status = 1;
}

message SetAILowpassSwitchCapExtClkFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAILowpassSwitchCapExtClkFreqResponse {
  int32 status = 1;
}

message SetAILowpassSwitchCapOutClkDivRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetAILowpassSwitchCapOutClkDivResponse {
  int32 status = 1;
}

message SetAIMaxRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIMaxResponse {
  int32 status = 1;
}

message SetAIMemMapEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAIMemMapEnableResponse {
  int32 status = 1;
}

message SetAIMicrophoneSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIMicrophoneSensitivityResponse {
  int32 status = 1;
}

message SetAIMinRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIMinResponse {
  int32 status = 1;
}

message SetAIOpenChanDetectEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAIOpenChanDetectEnableResponse {
  int32 status = 1;
}

message SetAIOpenThrmcplDetectEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAIOpenThrmcplDetectEnableResponse {
  int32 status = 1;
}

message SetAIOvercurrentDetectEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAIOvercurrentDetectEnableResponse {
  int32 status = 1;
}

message SetAIPowerSupplyFaultDetectEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAIPowerSupplyFaultDetectEnableResponse {
  int32 status = 1;
}

message SetAIPressureUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    PressureUnits data = 3;
    int32 data_raw = 4;
  }
}

message SetAIPressureUnitsResponse {
  int32 status = 1;
}

message SetAIProbeAttenRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIProbeAttenResponse {
  int32 status = 1;
}

message SetAIRTDARequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIRTDAResponse {
  int32 status = 1;
}

message SetAIRTDBRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIRTDBResponse {
  int32 status = 1;
}

message SetAIRTDCRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIRTDCResponse {
  int32 status = 1;
}

message SetAIRTDR0Request {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIRTDR0Response {
  int32 status = 1;
}

message SetAIRTDTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    RTDType1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAIRTDTypeResponse {
  int32 status = 1;
}

message SetAIRVDTSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIRVDTSensitivityResponse {
  int32 status = 1;
}

message SetAIRVDTSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    RVDTSensitivityUnits1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAIRVDTSensitivityUnitsResponse {
  int32 status = 1;
}

message SetAIRVDTUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    AngleUnits1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAIRVDTUnitsResponse {
  int32 status = 1;
}

message SetAIRawDataCompressionTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    RawDataCompressionType data = 3;
    int32 data_raw = 4;
  }
}

message SetAIRawDataCompressionTypeResponse {
  int32 status = 1;
}

message SetAIRemoveFilterDelayRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAIRemoveFilterDelayResponse {
  int32 status = 1;
}

message SetAIResistanceCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    ResistanceConfiguration data = 3;
    int32 data_raw = 4;
  }
}

message SetAIResistanceCfgResponse {
  int32 status = 1;
}

message SetAIResistanceUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    ResistanceUnits1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAIResistanceUnitsResponse {
  int32 status = 1;
}

message SetAIRngHighRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIRngHighResponse {
  int32 status = 1;
}

message SetAIRngLowRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIRngLowResponse {
  int32 status = 1;
}

message SetAIRosetteStrainGageOrientationRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIRosetteStrainGageOrientationResponse {
  int32 status = 1;
}

message SetAIRosetteStrainGageRosetteMeasTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    StrainGageRosetteMeasurementType data = 3;
    int32 data_raw = 4;
  }
}

message SetAIRosetteStrainGageRosetteMeasTypeResponse {
  int32 status = 1;
}

message SetAISampAndHoldEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAISampAndHoldEnableResponse {
  int32 status = 1;
}

message SetAISensorPowerCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    SensorPowerCfg data = 3;
    int32 data_raw = 4;
  }
}

message SetAISensorPowerCfgResponse {
  int32 status = 1;
}

message SetAISensorPowerTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    SensorPowerType data = 3;
    int32 data_raw = 4;
  }
}

message SetAISensorPowerTypeResponse {
  int32 status = 1;
}

message SetAISensorPowerVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAISensorPowerVoltageResponse {
  int32 status = 1;
}

message SetAISoundPressureMaxSoundPressureLvlRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAISoundPressureMaxSoundPressureLvlResponse {
  int32 status = 1;
}

message SetAISoundPressureUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    SoundPressureUnits1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAISoundPressureUnitsResponse {
  int32 status = 1;
}

message SetAISoundPressuredBRefRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAISoundPressuredBRefResponse {
  int32 status = 1;
}

message SetAIStrainGageCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    StrainGageBridgeType1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAIStrainGageCfgResponse {
  int32 status = 1;
}

message SetAIStrainGageForceReadFromChanRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAIStrainGageForceReadFromChanResponse {
  int32 status = 1;
}

message SetAIStrainGageGageFactorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIStrainGageGageFactorResponse {
  int32 status = 1;
}

message SetAIStrainGagePoissonRatioRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIStrainGagePoissonRatioResponse {
  int32 status = 1;
}

message SetAIStrainUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    StrainUnits1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAIStrainUnitsResponse {
  int32 status = 1;
}

message SetAITempUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    TemperatureUnits1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAITempUnitsResponse {
  int32 status = 1;
}

message SetAITermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputTermCfg data = 3;
    int32 data_raw = 4;
  }
}

message SetAITermCfgResponse {
  int32 status = 1;
}

message SetAIThrmcplCJCValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIThrmcplCJCValResponse {
  int32 status = 1;
}

message SetAIThrmcplLeadOffsetVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIThrmcplLeadOffsetVoltageResponse {
  int32 status = 1;
}

message SetAIThrmcplScaleTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    ScaleType2 data = 3;
    int32 data_raw = 4;
  }
}

message SetAIThrmcplScaleTypeResponse {
  int32 status = 1;
}

message SetAIThrmcplTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    ThermocoupleType1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAIThrmcplTypeResponse {
  int32 status = 1;
}

message SetAIThrmstrARequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIThrmstrAResponse {
  int32 status = 1;
}

message SetAIThrmstrBRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIThrmstrBResponse {
  int32 status = 1;
}

message SetAIThrmstrCRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIThrmstrCResponse {
  int32 status = 1;
}

message SetAIThrmstrR1Request {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIThrmstrR1Response {
  int32 status = 1;
}

message SetAITorqueUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    TorqueUnits data = 3;
    int32 data_raw = 4;
  }
}

message SetAITorqueUnitsResponse {
  int32 status = 1;
}

message SetAIUsbXferReqCountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetAIUsbXferReqCountResponse {
  int32 status = 1;
}

message SetAIUsbXferReqSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetAIUsbXferReqSizeResponse {
  int32 status = 1;
}

message SetAIVelocityIEPESensorSensitivityRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIVelocityIEPESensorSensitivityResponse {
  int32 status = 1;
}

message SetAIVelocityIEPESensorSensitivityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    VelocityIEPESensorSensitivityUnits data = 3;
    int32 data_raw = 4;
  }
}

message SetAIVelocityIEPESensorSensitivityUnitsResponse {
  int32 status = 1;
}

message SetAIVelocityIEPESensordBRefRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIVelocityIEPESensordBRefResponse {
  int32 status = 1;
}

message SetAIVelocityUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    VelocityUnits data = 3;
    int32 data_raw = 4;
  }
}

message SetAIVelocityUnitsResponse {
  int32 status = 1;
}

message SetAIVoltageACRMSUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    VoltageUnits1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAIVoltageACRMSUnitsResponse {
  int32 status = 1;
}

message SetAIVoltageUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    VoltageUnits1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAIVoltageUnitsResponse {
  int32 status = 1;
}

message SetAIVoltagedBRefRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAIVoltagedBRefResponse {
  int32 status = 1;
}

message SetAOCurrentUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    CurrentUnits1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAOCurrentUnitsResponse {
  int32 status = 1;
}

message SetAOCustomScaleNameRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetAOCustomScaleNameResponse {
  int32 status = 1;
}

message SetAODACOffsetExtSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetAODACOffsetExtSrcResponse {
  int32 status = 1;
}

message SetAODACOffsetSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    SourceSelection data = 3;
    int32 data_raw = 4;
  }
}

message SetAODACOffsetSrcResponse {
  int32 status = 1;
}

message SetAODACOffsetValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAODACOffsetValResponse {
  int32 status = 1;
}

message SetAODACRefAllowConnToGndRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAODACRefAllowConnToGndResponse {
  int32 status = 1;
}

message SetAODACRefConnToGndRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAODACRefConnToGndResponse {
  int32 status = 1;
}

message SetAODACRefExtSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetAODACRefExtSrcResponse {
  int32 status = 1;
}

message SetAODACRefSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    SourceSelection data = 3;
    int32 data_raw = 4;
  }
}

message SetAODACRefSrcResponse {
  int32 status = 1;
}

message SetAODACRefValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAODACRefValResponse {
  int32 status = 1;
}

message SetAODACRngHighRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAODACRngHighResponse {
  int32 status = 1;
}

message SetAODACRngLowRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAODACRngLowResponse {
  int32 status = 1;
}

message SetAODataXferMechRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    DataTransferMechanism data = 3;
    int32 data_raw = 4;
  }
}

message SetAODataXferMechResponse {
  int32 status = 1;
}

message SetAODataXferReqCondRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    OutputDataTransferCondition data = 3;
    int32 data_raw = 4;
  }
}

message SetAODataXferReqCondResponse {
  int32 status = 1;
}

message SetAOEnhancedImageRejectionEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAOEnhancedImageRejectionEnableResponse {
  int32 status = 1;
}

message SetAOFilterDelayRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAOFilterDelayResponse {
  int32 status = 1;
}

message SetAOFilterDelayAdjustmentRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAOFilterDelayAdjustmentResponse {
  int32 status = 1;
}

message SetAOFilterDelayUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    DigitalWidthUnits4 data = 3;
    int32 data_raw = 4;
  }
}

message SetAOFilterDelayUnitsResponse {
  int32 status = 1;
}

message SetAOFuncGenAmplitudeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAOFuncGenAmplitudeResponse {
  int32 status = 1;
}

message SetAOFuncGenFMDeviationRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAOFuncGenFMDeviationResponse {
  int32 status = 1;
}

message SetAOFuncGenFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAOFuncGenFreqResponse {
  int32 status = 1;
}

message SetAOFuncGenModulationTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    ModulationType data = 3;
    int32 data_raw = 4;
  }
}

message SetAOFuncGenModulationTypeResponse {
  int32 status = 1;
}

message SetAOFuncGenOffsetRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAOFuncGenOffsetResponse {
  int32 status = 1;
}

message SetAOFuncGenSquareDutyCycleRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAOFuncGenSquareDutyCycleResponse {
  int32 status = 1;
}

message SetAOFuncGenTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    FuncGenType data = 3;
    int32 data_raw = 4;
  }
}

message SetAOFuncGenTypeResponse {
  int32 status = 1;
}

message SetAOGainRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAOGainResponse {
  int32 status = 1;
}

message SetAOIdleOutputBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    AOIdleOutputBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetAOIdleOutputBehaviorResponse {
  int32 status = 1;
}

message SetAOLoadImpedanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAOLoadImpedanceResponse {
  int32 status = 1;
}

message SetAOMaxRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAOMaxResponse {
  int32 status = 1;
}

message SetAOMemMapEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAOMemMapEnableResponse {
  int32 status = 1;
}

message SetAOMinRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAOMinResponse {
  int32 status = 1;
}

message SetAOOutputImpedanceRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAOOutputImpedanceResponse {
  int32 status = 1;
}

message SetAOReglitchEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAOReglitchEnableResponse {
  int32 status = 1;
}

message SetAOResolutionUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    ResolutionType1 data = 3;
    int32 data_raw = 4;
  }
}

message SetAOResolutionUnitsResponse {
  int32 status = 1;
}

message SetAOTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    OutputTermCfg data = 3;
    int32 data_raw = 4;
  }
}

message SetAOTermCfgResponse {
  int32 status = 1;
}

message SetAOUsbXferReqCountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetAOUsbXferReqCountResponse {
  int32 status = 1;
}

message SetAOUsbXferReqSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetAOUsbXferReqSizeResponse {
  int32 status = 1;
}

message SetAOUseOnlyOnBrdMemRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetAOUseOnlyOnBrdMemResponse {
  int32 status = 1;
}

message SetAOVoltageCurrentLimitRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetAOVoltageCurrentLimitResponse {
  int32 status = 1;
}

message SetAOVoltageUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    VoltageUnits2 data = 3;
    int32 data_raw = 4;
  }
}

message SetAOVoltageUnitsResponse {
  int32 status = 1;
}

message SetArmStartTrigTrigWhenRequest {
  nidevice_grpc.Session task = 1;
  google.protobuf.Timestamp data = 2;
}

message SetArmStartTrigTrigWhenResponse {
  int32 status = 1;
}

message SetBufInputBufSizeRequest {
  nidevice_grpc.Session task = 1;
  uint32 data = 2;
}

message SetBufInputBufSizeResponse {
  int32 status = 1;
}

message SetBufOutputBufSizeRequest {
  nidevice_grpc.Session task = 1;
  uint32 data = 2;
}

message SetBufOutputBufSizeResponse {
  int32 status = 1;
}

message SetBufOutputOnbrdBufSizeRequest {
  nidevice_grpc.Session task = 1;
  uint32 data = 2;
}

message SetBufOutputOnbrdBufSizeResponse {
  int32 status = 1;
}

message SetCIAngEncoderInitialAngleRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIAngEncoderInitialAngleResponse {
  int32 status = 1;
}

message SetCIAngEncoderPulsesPerRevRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetCIAngEncoderPulsesPerRevResponse {
  int32 status = 1;
}

message SetCIAngEncoderUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    AngleUnits2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIAngEncoderUnitsResponse {
  int32 status = 1;
}

message SetCICountEdgesActiveEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    Edge1 data = 3;
    int32 data_raw = 4;
  }
}

message SetCICountEdgesActiveEdgeResponse {
  int32 status = 1;
}

message SetCICountEdgesCountDirDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCICountEdgesCountDirDigFltrEnableResponse {
  int32 status = 1;
}

message SetCICountEdgesCountDirDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCICountEdgesCountDirDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message SetCICountEdgesCountDirDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCICountEdgesCountDirDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message SetCICountEdgesCountDirDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCICountEdgesCountDirDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCICountEdgesCountDirDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCICountEdgesCountDirDigSyncEnableResponse {
  int32 status = 1;
}

message SetCICountEdgesCountDirHystRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCICountEdgesCountDirHystResponse {
  int32 status = 1;
}

message SetCICountEdgesCountDirLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LogicLvlBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetCICountEdgesCountDirLogicLvlBehaviorResponse {
  int32 status = 1;
}

message SetCICountEdgesCountDirTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputTermCfg2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCICountEdgesCountDirTermCfgResponse {
  int32 status = 1;
}

message SetCICountEdgesCountDirThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCICountEdgesCountDirThreshVoltageResponse {
  int32 status = 1;
}

message SetCICountEdgesCountResetActiveEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    Edge1 data = 3;
    int32 data_raw = 4;
  }
}

message SetCICountEdgesCountResetActiveEdgeResponse {
  int32 status = 1;
}

message SetCICountEdgesCountResetDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCICountEdgesCountResetDigFltrEnableResponse {
  int32 status = 1;
}

message SetCICountEdgesCountResetDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCICountEdgesCountResetDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message SetCICountEdgesCountResetDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCICountEdgesCountResetDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message SetCICountEdgesCountResetDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCICountEdgesCountResetDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCICountEdgesCountResetDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCICountEdgesCountResetDigSyncEnableResponse {
  int32 status = 1;
}

message SetCICountEdgesCountResetEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCICountEdgesCountResetEnableResponse {
  int32 status = 1;
}

message SetCICountEdgesCountResetHystRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCICountEdgesCountResetHystResponse {
  int32 status = 1;
}

message SetCICountEdgesCountResetLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LogicLvlBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetCICountEdgesCountResetLogicLvlBehaviorResponse {
  int32 status = 1;
}

message SetCICountEdgesCountResetResetCountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetCICountEdgesCountResetResetCountResponse {
  int32 status = 1;
}

message SetCICountEdgesCountResetTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCICountEdgesCountResetTermResponse {
  int32 status = 1;
}

message SetCICountEdgesCountResetTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputTermCfg2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCICountEdgesCountResetTermCfgResponse {
  int32 status = 1;
}

message SetCICountEdgesCountResetThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCICountEdgesCountResetThreshVoltageResponse {
  int32 status = 1;
}

message SetCICountEdgesDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCICountEdgesDigFltrEnableResponse {
  int32 status = 1;
}

message SetCICountEdgesDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCICountEdgesDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message SetCICountEdgesDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCICountEdgesDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message SetCICountEdgesDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCICountEdgesDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCICountEdgesDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCICountEdgesDigSyncEnableResponse {
  int32 status = 1;
}

message SetCICountEdgesDirRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    CountDirection1 data = 3;
    int32 data_raw = 4;
  }
}

message SetCICountEdgesDirResponse {
  int32 status = 1;
}

message SetCICountEdgesDirTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCICountEdgesDirTermResponse {
  int32 status = 1;
}

message SetCICountEdgesGateDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCICountEdgesGateDigFltrEnableResponse {
  int32 status = 1;
}

message SetCICountEdgesGateDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCICountEdgesGateDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message SetCICountEdgesGateDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCICountEdgesGateDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message SetCICountEdgesGateDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCICountEdgesGateDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCICountEdgesGateEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCICountEdgesGateEnableResponse {
  int32 status = 1;
}

message SetCICountEdgesGateHystRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCICountEdgesGateHystResponse {
  int32 status = 1;
}

message SetCICountEdgesGateLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LogicLvlBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetCICountEdgesGateLogicLvlBehaviorResponse {
  int32 status = 1;
}

message SetCICountEdgesGateTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCICountEdgesGateTermResponse {
  int32 status = 1;
}

message SetCICountEdgesGateTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputTermCfg2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCICountEdgesGateTermCfgResponse {
  int32 status = 1;
}

message SetCICountEdgesGateThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCICountEdgesGateThreshVoltageResponse {
  int32 status = 1;
}

message SetCICountEdgesGateWhenRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    Level1 data = 3;
    int32 data_raw = 4;
  }
}

message SetCICountEdgesGateWhenResponse {
  int32 status = 1;
}

message SetCICountEdgesHystRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCICountEdgesHystResponse {
  int32 status = 1;
}

message SetCICountEdgesInitialCntRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetCICountEdgesInitialCntResponse {
  int32 status = 1;
}

message SetCICountEdgesLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LogicLvlBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetCICountEdgesLogicLvlBehaviorResponse {
  int32 status = 1;
}

message SetCICountEdgesTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCICountEdgesTermResponse {
  int32 status = 1;
}

message SetCICountEdgesTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputTermCfg2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCICountEdgesTermCfgResponse {
  int32 status = 1;
}

message SetCICountEdgesThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCICountEdgesThreshVoltageResponse {
  int32 status = 1;
}

message SetCICtrTimebaseActiveEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    Edge1 data = 3;
    int32 data_raw = 4;
  }
}

message SetCICtrTimebaseActiveEdgeResponse {
  int32 status = 1;
}

message SetCICtrTimebaseDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCICtrTimebaseDigFltrEnableResponse {
  int32 status = 1;
}

message SetCICtrTimebaseDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCICtrTimebaseDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message SetCICtrTimebaseDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCICtrTimebaseDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message SetCICtrTimebaseDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCICtrTimebaseDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCICtrTimebaseDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCICtrTimebaseDigSyncEnableResponse {
  int32 status = 1;
}

message SetCICtrTimebaseMasterTimebaseDivRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetCICtrTimebaseMasterTimebaseDivResponse {
  int32 status = 1;
}

message SetCICtrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCICtrTimebaseRateResponse {
  int32 status = 1;
}

message SetCICtrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCICtrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCICustomScaleNameRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCICustomScaleNameResponse {
  int32 status = 1;
}

message SetCIDataXferMechRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    DataTransferMechanism data = 3;
    int32 data_raw = 4;
  }
}

message SetCIDataXferMechResponse {
  int32 status = 1;
}

message SetCIDataXferReqCondRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputDataTransferCondition data = 3;
    int32 data_raw = 4;
  }
}

message SetCIDataXferReqCondResponse {
  int32 status = 1;
}

message SetCIDupCountPreventRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIDupCountPreventResponse {
  int32 status = 1;
}

message SetCIDutyCycleDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIDutyCycleDigFltrEnableResponse {
  int32 status = 1;
}

message SetCIDutyCycleDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIDutyCycleDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message SetCIDutyCycleDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIDutyCycleDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message SetCIDutyCycleDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIDutyCycleDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCIDutyCycleLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LogicLvlBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetCIDutyCycleLogicLvlBehaviorResponse {
  int32 status = 1;
}

message SetCIDutyCycleStartingEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    Edge1 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIDutyCycleStartingEdgeResponse {
  int32 status = 1;
}

message SetCIDutyCycleTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIDutyCycleTermResponse {
  int32 status = 1;
}

message SetCIDutyCycleTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputTermCfg2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIDutyCycleTermCfgResponse {
  int32 status = 1;
}

message SetCIEncoderAInputDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIEncoderAInputDigFltrEnableResponse {
  int32 status = 1;
}

message SetCIEncoderAInputDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIEncoderAInputDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message SetCIEncoderAInputDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIEncoderAInputDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message SetCIEncoderAInputDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIEncoderAInputDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCIEncoderAInputDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIEncoderAInputDigSyncEnableResponse {
  int32 status = 1;
}

message SetCIEncoderAInputLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LogicLvlBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetCIEncoderAInputLogicLvlBehaviorResponse {
  int32 status = 1;
}

message SetCIEncoderAInputTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIEncoderAInputTermResponse {
  int32 status = 1;
}

message SetCIEncoderAInputTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputTermCfg2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIEncoderAInputTermCfgResponse {
  int32 status = 1;
}

message SetCIEncoderBInputDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIEncoderBInputDigFltrEnableResponse {
  int32 status = 1;
}

message SetCIEncoderBInputDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIEncoderBInputDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message SetCIEncoderBInputDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIEncoderBInputDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message SetCIEncoderBInputDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIEncoderBInputDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCIEncoderBInputDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIEncoderBInputDigSyncEnableResponse {
  int32 status = 1;
}

message SetCIEncoderBInputLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LogicLvlBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetCIEncoderBInputLogicLvlBehaviorResponse {
  int32 status = 1;
}

message SetCIEncoderBInputTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIEncoderBInputTermResponse {
  int32 status = 1;
}

message SetCIEncoderBInputTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputTermCfg2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIEncoderBInputTermCfgResponse {
  int32 status = 1;
}

message SetCIEncoderDecodingTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    EncoderType2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIEncoderDecodingTypeResponse {
  int32 status = 1;
}

message SetCIEncoderZIndexEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIEncoderZIndexEnableResponse {
  int32 status = 1;
}

message SetCIEncoderZIndexPhaseRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    EncoderZIndexPhase1 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIEncoderZIndexPhaseResponse {
  int32 status = 1;
}

message SetCIEncoderZIndexValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIEncoderZIndexValResponse {
  int32 status = 1;
}

message SetCIEncoderZInputDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIEncoderZInputDigFltrEnableResponse {
  int32 status = 1;
}

message SetCIEncoderZInputDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIEncoderZInputDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message SetCIEncoderZInputDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIEncoderZInputDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message SetCIEncoderZInputDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIEncoderZInputDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCIEncoderZInputDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIEncoderZInputDigSyncEnableResponse {
  int32 status = 1;
}

message SetCIEncoderZInputLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LogicLvlBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetCIEncoderZInputLogicLvlBehaviorResponse {
  int32 status = 1;
}

message SetCIEncoderZInputTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIEncoderZInputTermResponse {
  int32 status = 1;
}

message SetCIEncoderZInputTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputTermCfg2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIEncoderZInputTermCfgResponse {
  int32 status = 1;
}

message SetCIFilterDelayUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    DigitalWidthUnits4 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIFilterDelayUnitsResponse {
  int32 status = 1;
}

message SetCIFilterEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIFilterEnableResponse {
  int32 status = 1;
}

message SetCIFilterFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIFilterFreqResponse {
  int32 status = 1;
}

message SetCIFilterOrderRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetCIFilterOrderResponse {
  int32 status = 1;
}

message SetCIFilterResponseRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    FilterResponse1 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIFilterResponseResponse {
  int32 status = 1;
}

message SetCIFreqDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIFreqDigFltrEnableResponse {
  int32 status = 1;
}

message SetCIFreqDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIFreqDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message SetCIFreqDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIFreqDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message SetCIFreqDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIFreqDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCIFreqDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIFreqDigSyncEnableResponse {
  int32 status = 1;
}

message SetCIFreqDivRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetCIFreqDivResponse {
  int32 status = 1;
}

message SetCIFreqEnableAveragingRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIFreqEnableAveragingResponse {
  int32 status = 1;
}

message SetCIFreqHystRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIFreqHystResponse {
  int32 status = 1;
}

message SetCIFreqLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LogicLvlBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetCIFreqLogicLvlBehaviorResponse {
  int32 status = 1;
}

message SetCIFreqMeasMethRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    CounterFrequencyMethod data = 3;
    int32 data_raw = 4;
  }
}

message SetCIFreqMeasMethResponse {
  int32 status = 1;
}

message SetCIFreqMeasTimeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIFreqMeasTimeResponse {
  int32 status = 1;
}

message SetCIFreqStartingEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    Edge1 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIFreqStartingEdgeResponse {
  int32 status = 1;
}

message SetCIFreqTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIFreqTermResponse {
  int32 status = 1;
}

message SetCIFreqTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputTermCfg2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIFreqTermCfgResponse {
  int32 status = 1;
}

message SetCIFreqThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIFreqThreshVoltageResponse {
  int32 status = 1;
}

message SetCIFreqUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    FrequencyUnits3 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIFreqUnitsResponse {
  int32 status = 1;
}

message SetCIGPSSyncMethodRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    GpsSignalType1 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIGPSSyncMethodResponse {
  int32 status = 1;
}

message SetCIGPSSyncSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIGPSSyncSrcResponse {
  int32 status = 1;
}

message SetCILinEncoderDistPerPulseRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCILinEncoderDistPerPulseResponse {
  int32 status = 1;
}

message SetCILinEncoderInitialPosRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCILinEncoderInitialPosResponse {
  int32 status = 1;
}

message SetCILinEncoderUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LengthUnits3 data = 3;
    int32 data_raw = 4;
  }
}

message SetCILinEncoderUnitsResponse {
  int32 status = 1;
}

message SetCIMaxRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIMaxResponse {
  int32 status = 1;
}

message SetCIMaxMeasPeriodRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIMaxMeasPeriodResponse {
  int32 status = 1;
}

message SetCIMemMapEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIMemMapEnableResponse {
  int32 status = 1;
}

message SetCIMinRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIMinResponse {
  int32 status = 1;
}

message SetCIPeriodDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIPeriodDigFltrEnableResponse {
  int32 status = 1;
}

message SetCIPeriodDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIPeriodDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message SetCIPeriodDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIPeriodDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message SetCIPeriodDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIPeriodDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCIPeriodDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIPeriodDigSyncEnableResponse {
  int32 status = 1;
}

message SetCIPeriodDivRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetCIPeriodDivResponse {
  int32 status = 1;
}

message SetCIPeriodEnableAveragingRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIPeriodEnableAveragingResponse {
  int32 status = 1;
}

message SetCIPeriodHystRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIPeriodHystResponse {
  int32 status = 1;
}

message SetCIPeriodLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LogicLvlBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetCIPeriodLogicLvlBehaviorResponse {
  int32 status = 1;
}

message SetCIPeriodMeasMethRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    CounterFrequencyMethod data = 3;
    int32 data_raw = 4;
  }
}

message SetCIPeriodMeasMethResponse {
  int32 status = 1;
}

message SetCIPeriodMeasTimeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIPeriodMeasTimeResponse {
  int32 status = 1;
}

message SetCIPeriodStartingEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    Edge1 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIPeriodStartingEdgeResponse {
  int32 status = 1;
}

message SetCIPeriodTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIPeriodTermResponse {
  int32 status = 1;
}

message SetCIPeriodTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputTermCfg2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIPeriodTermCfgResponse {
  int32 status = 1;
}

message SetCIPeriodThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIPeriodThreshVoltageResponse {
  int32 status = 1;
}

message SetCIPeriodUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    TimeUnits3 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIPeriodUnitsResponse {
  int32 status = 1;
}

message SetCIPrescalerRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetCIPrescalerResponse {
  int32 status = 1;
}

message SetCIPulseFreqDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIPulseFreqDigFltrEnableResponse {
  int32 status = 1;
}

message SetCIPulseFreqDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIPulseFreqDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message SetCIPulseFreqDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIPulseFreqDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message SetCIPulseFreqDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIPulseFreqDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCIPulseFreqDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIPulseFreqDigSyncEnableResponse {
  int32 status = 1;
}

message SetCIPulseFreqLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LogicLvlBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetCIPulseFreqLogicLvlBehaviorResponse {
  int32 status = 1;
}

message SetCIPulseFreqStartEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    Edge1 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIPulseFreqStartEdgeResponse {
  int32 status = 1;
}

message SetCIPulseFreqTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIPulseFreqTermResponse {
  int32 status = 1;
}

message SetCIPulseFreqTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputTermCfg2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIPulseFreqTermCfgResponse {
  int32 status = 1;
}

message SetCIPulseFreqUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    FrequencyUnits2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIPulseFreqUnitsResponse {
  int32 status = 1;
}

message SetCIPulseTicksDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIPulseTicksDigFltrEnableResponse {
  int32 status = 1;
}

message SetCIPulseTicksDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIPulseTicksDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message SetCIPulseTicksDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIPulseTicksDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message SetCIPulseTicksDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIPulseTicksDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCIPulseTicksDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIPulseTicksDigSyncEnableResponse {
  int32 status = 1;
}

message SetCIPulseTicksLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LogicLvlBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetCIPulseTicksLogicLvlBehaviorResponse {
  int32 status = 1;
}

message SetCIPulseTicksStartEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    Edge1 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIPulseTicksStartEdgeResponse {
  int32 status = 1;
}

message SetCIPulseTicksTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIPulseTicksTermResponse {
  int32 status = 1;
}

message SetCIPulseTicksTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputTermCfg2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIPulseTicksTermCfgResponse {
  int32 status = 1;
}

message SetCIPulseTimeDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIPulseTimeDigFltrEnableResponse {
  int32 status = 1;
}

message SetCIPulseTimeDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIPulseTimeDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message SetCIPulseTimeDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIPulseTimeDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message SetCIPulseTimeDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIPulseTimeDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCIPulseTimeDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIPulseTimeDigSyncEnableResponse {
  int32 status = 1;
}

message SetCIPulseTimeLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LogicLvlBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetCIPulseTimeLogicLvlBehaviorResponse {
  int32 status = 1;
}

message SetCIPulseTimeStartEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    Edge1 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIPulseTimeStartEdgeResponse {
  int32 status = 1;
}

message SetCIPulseTimeTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIPulseTimeTermResponse {
  int32 status = 1;
}

message SetCIPulseTimeTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputTermCfg2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIPulseTimeTermCfgResponse {
  int32 status = 1;
}

message SetCIPulseTimeUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    TimeUnits2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIPulseTimeUnitsResponse {
  int32 status = 1;
}

message SetCIPulseWidthDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIPulseWidthDigFltrEnableResponse {
  int32 status = 1;
}

message SetCIPulseWidthDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIPulseWidthDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message SetCIPulseWidthDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIPulseWidthDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message SetCIPulseWidthDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIPulseWidthDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCIPulseWidthDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIPulseWidthDigSyncEnableResponse {
  int32 status = 1;
}

message SetCIPulseWidthLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LogicLvlBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetCIPulseWidthLogicLvlBehaviorResponse {
  int32 status = 1;
}

message SetCIPulseWidthStartingEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    Edge1 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIPulseWidthStartingEdgeResponse {
  int32 status = 1;
}

message SetCIPulseWidthTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIPulseWidthTermResponse {
  int32 status = 1;
}

message SetCIPulseWidthTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputTermCfg2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIPulseWidthTermCfgResponse {
  int32 status = 1;
}

message SetCIPulseWidthUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    TimeUnits3 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIPulseWidthUnitsResponse {
  int32 status = 1;
}

message SetCISampClkOverrunBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    SampClkOverrunBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetCISampClkOverrunBehaviorResponse {
  int32 status = 1;
}

message SetCISampClkOverrunSentinelValRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  int32 data = 3;
}

message SetCISampClkOverrunSentinelValResponse {
  int32 status = 1;
}

message SetCISemiPeriodDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCISemiPeriodDigFltrEnableResponse {
  int32 status = 1;
}

message SetCISemiPeriodDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCISemiPeriodDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message SetCISemiPeriodDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCISemiPeriodDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message SetCISemiPeriodDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCISemiPeriodDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCISemiPeriodDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCISemiPeriodDigSyncEnableResponse {
  int32 status = 1;
}

message SetCISemiPeriodLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LogicLvlBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetCISemiPeriodLogicLvlBehaviorResponse {
  int32 status = 1;
}

message SetCISemiPeriodStartingEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    Edge1 data = 3;
    int32 data_raw = 4;
  }
}

message SetCISemiPeriodStartingEdgeResponse {
  int32 status = 1;
}

message SetCISemiPeriodTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCISemiPeriodTermResponse {
  int32 status = 1;
}

message SetCISemiPeriodTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputTermCfg2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCISemiPeriodTermCfgResponse {
  int32 status = 1;
}

message SetCISemiPeriodUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    TimeUnits3 data = 3;
    int32 data_raw = 4;
  }
}

message SetCISemiPeriodUnitsResponse {
  int32 status = 1;
}

message SetCIThreshVoltageRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIThreshVoltageResponse {
  int32 status = 1;
}

message SetCITimestampInitialSecondsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetCITimestampInitialSecondsResponse {
  int32 status = 1;
}

message SetCITimestampUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    TimeUnits data = 3;
    int32 data_raw = 4;
  }
}

message SetCITimestampUnitsResponse {
  int32 status = 1;
}

message SetCITwoEdgeSepFirstDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCITwoEdgeSepFirstDigFltrEnableResponse {
  int32 status = 1;
}

message SetCITwoEdgeSepFirstDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCITwoEdgeSepFirstDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message SetCITwoEdgeSepFirstDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCITwoEdgeSepFirstDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message SetCITwoEdgeSepFirstDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCITwoEdgeSepFirstDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCITwoEdgeSepFirstDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCITwoEdgeSepFirstDigSyncEnableResponse {
  int32 status = 1;
}

message SetCITwoEdgeSepFirstEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    Edge1 data = 3;
    int32 data_raw = 4;
  }
}

message SetCITwoEdgeSepFirstEdgeResponse {
  int32 status = 1;
}

message SetCITwoEdgeSepFirstLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LogicLvlBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetCITwoEdgeSepFirstLogicLvlBehaviorResponse {
  int32 status = 1;
}

message SetCITwoEdgeSepFirstTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCITwoEdgeSepFirstTermResponse {
  int32 status = 1;
}

message SetCITwoEdgeSepFirstTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputTermCfg2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCITwoEdgeSepFirstTermCfgResponse {
  int32 status = 1;
}

message SetCITwoEdgeSepSecondDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCITwoEdgeSepSecondDigFltrEnableResponse {
  int32 status = 1;
}

message SetCITwoEdgeSepSecondDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCITwoEdgeSepSecondDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message SetCITwoEdgeSepSecondDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCITwoEdgeSepSecondDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message SetCITwoEdgeSepSecondDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCITwoEdgeSepSecondDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCITwoEdgeSepSecondDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCITwoEdgeSepSecondDigSyncEnableResponse {
  int32 status = 1;
}

message SetCITwoEdgeSepSecondEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    Edge1 data = 3;
    int32 data_raw = 4;
  }
}

message SetCITwoEdgeSepSecondEdgeResponse {
  int32 status = 1;
}

message SetCITwoEdgeSepSecondLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LogicLvlBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetCITwoEdgeSepSecondLogicLvlBehaviorResponse {
  int32 status = 1;
}

message SetCITwoEdgeSepSecondTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCITwoEdgeSepSecondTermResponse {
  int32 status = 1;
}

message SetCITwoEdgeSepSecondTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputTermCfg2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCITwoEdgeSepSecondTermCfgResponse {
  int32 status = 1;
}

message SetCITwoEdgeSepUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    TimeUnits3 data = 3;
    int32 data_raw = 4;
  }
}

message SetCITwoEdgeSepUnitsResponse {
  int32 status = 1;
}

message SetCIUsbXferReqCountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetCIUsbXferReqCountResponse {
  int32 status = 1;
}

message SetCIUsbXferReqSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetCIUsbXferReqSizeResponse {
  int32 status = 1;
}

message SetCIVelocityAngEncoderPulsesPerRevRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetCIVelocityAngEncoderPulsesPerRevResponse {
  int32 status = 1;
}

message SetCIVelocityAngEncoderUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    AngularVelocityUnits data = 3;
    int32 data_raw = 4;
  }
}

message SetCIVelocityAngEncoderUnitsResponse {
  int32 status = 1;
}

message SetCIVelocityDivRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetCIVelocityDivResponse {
  int32 status = 1;
}

message SetCIVelocityEncoderAInputDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIVelocityEncoderAInputDigFltrEnableResponse {
  int32 status = 1;
}

message SetCIVelocityEncoderAInputDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIVelocityEncoderAInputDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message SetCIVelocityEncoderAInputDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIVelocityEncoderAInputDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message SetCIVelocityEncoderAInputDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIVelocityEncoderAInputDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCIVelocityEncoderAInputLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LogicLvlBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetCIVelocityEncoderAInputLogicLvlBehaviorResponse {
  int32 status = 1;
}

message SetCIVelocityEncoderAInputTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIVelocityEncoderAInputTermResponse {
  int32 status = 1;
}

message SetCIVelocityEncoderAInputTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputTermCfg2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIVelocityEncoderAInputTermCfgResponse {
  int32 status = 1;
}

message SetCIVelocityEncoderBInputDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCIVelocityEncoderBInputDigFltrEnableResponse {
  int32 status = 1;
}

message SetCIVelocityEncoderBInputDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIVelocityEncoderBInputDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message SetCIVelocityEncoderBInputDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIVelocityEncoderBInputDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message SetCIVelocityEncoderBInputDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIVelocityEncoderBInputDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCIVelocityEncoderBInputLogicLvlBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LogicLvlBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetCIVelocityEncoderBInputLogicLvlBehaviorResponse {
  int32 status = 1;
}

message SetCIVelocityEncoderBInputTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCIVelocityEncoderBInputTermResponse {
  int32 status = 1;
}

message SetCIVelocityEncoderBInputTermCfgRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputTermCfg2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIVelocityEncoderBInputTermCfgResponse {
  int32 status = 1;
}

message SetCIVelocityEncoderDecodingTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    EncoderType2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCIVelocityEncoderDecodingTypeResponse {
  int32 status = 1;
}

message SetCIVelocityLinEncoderDistPerPulseRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIVelocityLinEncoderDistPerPulseResponse {
  int32 status = 1;
}

message SetCIVelocityLinEncoderUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    VelocityUnits data = 3;
    int32 data_raw = 4;
  }
}

message SetCIVelocityLinEncoderUnitsResponse {
  int32 status = 1;
}

message SetCIVelocityMeasTimeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCIVelocityMeasTimeResponse {
  int32 status = 1;
}

message SetCOAutoIncrCntRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetCOAutoIncrCntResponse {
  int32 status = 1;
}

message SetCOConstrainedGenModeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    ConstrainedGenMode data = 3;
    int32 data_raw = 4;
  }
}

message SetCOConstrainedGenModeResponse {
  int32 status = 1;
}

message SetCOCtrTimebaseActiveEdgeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    Edge1 data = 3;
    int32 data_raw = 4;
  }
}

message SetCOCtrTimebaseActiveEdgeResponse {
  int32 status = 1;
}

message SetCOCtrTimebaseDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCOCtrTimebaseDigFltrEnableResponse {
  int32 status = 1;
}

message SetCOCtrTimebaseDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCOCtrTimebaseDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message SetCOCtrTimebaseDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCOCtrTimebaseDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message SetCOCtrTimebaseDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCOCtrTimebaseDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCOCtrTimebaseDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCOCtrTimebaseDigSyncEnableResponse {
  int32 status = 1;
}

message SetCOCtrTimebaseMasterTimebaseDivRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetCOCtrTimebaseMasterTimebaseDivResponse {
  int32 status = 1;
}

message SetCOCtrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCOCtrTimebaseRateResponse {
  int32 status = 1;
}

message SetCOCtrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCOCtrTimebaseSrcResponse {
  int32 status = 1;
}

message SetCODataXferMechRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    DataTransferMechanism data = 3;
    int32 data_raw = 4;
  }
}

message SetCODataXferMechResponse {
  int32 status = 1;
}

message SetCODataXferReqCondRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    OutputDataTransferCondition data = 3;
    int32 data_raw = 4;
  }
}

message SetCODataXferReqCondResponse {
  int32 status = 1;
}

message SetCOEnableInitialDelayOnRetriggerRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCOEnableInitialDelayOnRetriggerResponse {
  int32 status = 1;
}

message SetCOMemMapEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCOMemMapEnableResponse {
  int32 status = 1;
}

message SetCOPrescalerRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetCOPrescalerResponse {
  int32 status = 1;
}

message SetCOPulseDutyCycRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCOPulseDutyCycResponse {
  int32 status = 1;
}

message SetCOPulseFreqRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCOPulseFreqResponse {
  int32 status = 1;
}

message SetCOPulseFreqInitialDelayRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCOPulseFreqInitialDelayResponse {
  int32 status = 1;
}

message SetCOPulseFreqUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    FrequencyUnits2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCOPulseFreqUnitsResponse {
  int32 status = 1;
}

message SetCOPulseHighTicksRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetCOPulseHighTicksResponse {
  int32 status = 1;
}

message SetCOPulseHighTimeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCOPulseHighTimeResponse {
  int32 status = 1;
}

message SetCOPulseIdleStateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    Level1 data = 3;
    int32 data_raw = 4;
  }
}

message SetCOPulseIdleStateResponse {
  int32 status = 1;
}

message SetCOPulseLowTicksRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetCOPulseLowTicksResponse {
  int32 status = 1;
}

message SetCOPulseLowTimeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCOPulseLowTimeResponse {
  int32 status = 1;
}

message SetCOPulseTermRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetCOPulseTermResponse {
  int32 status = 1;
}

message SetCOPulseTicksInitialDelayRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetCOPulseTicksInitialDelayResponse {
  int32 status = 1;
}

message SetCOPulseTimeInitialDelayRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetCOPulseTimeInitialDelayResponse {
  int32 status = 1;
}

message SetCOPulseTimeUnitsRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    TimeUnits2 data = 3;
    int32 data_raw = 4;
  }
}

message SetCOPulseTimeUnitsResponse {
  int32 status = 1;
}

message SetCOUsbXferReqCountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetCOUsbXferReqCountResponse {
  int32 status = 1;
}

message SetCOUsbXferReqSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetCOUsbXferReqSizeResponse {
  int32 status = 1;
}

message SetCOUseOnlyOnBrdMemRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetCOUseOnlyOnBrdMemResponse {
  int32 status = 1;
}

message SetCalAccConnectionCountRequest {
  string device_name = 1;
  uint32 data = 2;
}

message SetCalAccConnectionCountResponse {
  int32 status = 1;
}

message SetCalUserDefinedInfoRequest {
  string device_name = 1;
  string data = 2;
}

message SetCalUserDefinedInfoResponse {
  int32 status = 1;
}

message SetChanDescrRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetChanDescrResponse {
  int32 status = 1;
}

message SetChanSyncUnlockBehaviorRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    SyncUnlockBehavior data = 3;
    int32 data_raw = 4;
  }
}

message SetChanSyncUnlockBehaviorResponse {
  int32 status = 1;
}

message SetDIAcquireOnRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    SampleClockActiveOrInactiveEdgeSelection data = 3;
    int32 data_raw = 4;
  }
}

message SetDIAcquireOnResponse {
  int32 status = 1;
}

message SetDIDataXferMechRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    DataTransferMechanism data = 3;
    int32 data_raw = 4;
  }
}

message SetDIDataXferMechResponse {
  int32 status = 1;
}

message SetDIDataXferReqCondRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    InputDataTransferCondition data = 3;
    int32 data_raw = 4;
  }
}

message SetDIDataXferReqCondResponse {
  int32 status = 1;
}

message SetDIDigFltrEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetDIDigFltrEnableResponse {
  int32 status = 1;
}

message SetDIDigFltrEnableBusModeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetDIDigFltrEnableBusModeResponse {
  int32 status = 1;
}

message SetDIDigFltrMinPulseWidthRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetDIDigFltrMinPulseWidthResponse {
  int32 status = 1;
}

message SetDIDigFltrTimebaseRateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetDIDigFltrTimebaseRateResponse {
  int32 status = 1;
}

message SetDIDigFltrTimebaseSrcRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetDIDigFltrTimebaseSrcResponse {
  int32 status = 1;
}

message SetDIDigSyncEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetDIDigSyncEnableResponse {
  int32 status = 1;
}

message SetDIInvertLinesRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetDIInvertLinesResponse {
  int32 status = 1;
}

message SetDILogicFamilyRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LogicFamily data = 3;
    int32 data_raw = 4;
  }
}

message SetDILogicFamilyResponse {
  int32 status = 1;
}

message SetDIMemMapEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetDIMemMapEnableResponse {
  int32 status = 1;
}

message SetDITristateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetDITristateResponse {
  int32 status = 1;
}

message SetDIUsbXferReqCountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetDIUsbXferReqCountResponse {
  int32 status = 1;
}

message SetDIUsbXferReqSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetDIUsbXferReqSizeResponse {
  int32 status = 1;
}

message SetDODataXferMechRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    DataTransferMechanism data = 3;
    int32 data_raw = 4;
  }
}

message SetDODataXferMechResponse {
  int32 status = 1;
}

message SetDODataXferReqCondRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    OutputDataTransferCondition data = 3;
    int32 data_raw = 4;
  }
}

message SetDODataXferReqCondResponse {
  int32 status = 1;
}

message SetDOGenerateOnRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    SampleClockActiveOrInactiveEdgeSelection data = 3;
    int32 data_raw = 4;
  }
}

message SetDOGenerateOnResponse {
  int32 status = 1;
}

message SetDOInvertLinesRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetDOInvertLinesResponse {
  int32 status = 1;
}

message SetDOLineStatesDoneStateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    DigitalLineState data = 3;
    int32 data_raw = 4;
  }
}

message SetDOLineStatesDoneStateResponse {
  int32 status = 1;
}

message SetDOLineStatesPausedStateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    DigitalLineState data = 3;
    int32 data_raw = 4;
  }
}

message SetDOLineStatesPausedStateResponse {
  int32 status = 1;
}

message SetDOLineStatesStartStateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    DigitalLineState data = 3;
    int32 data_raw = 4;
  }
}

message SetDOLineStatesStartStateResponse {
  int32 status = 1;
}

message SetDOLogicFamilyRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    LogicFamily data = 3;
    int32 data_raw = 4;
  }
}

message SetDOLogicFamilyResponse {
  int32 status = 1;
}

message SetDOMemMapEnableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetDOMemMapEnableResponse {
  int32 status = 1;
}

message SetDOOutputDriveTypeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  oneof data_enum {
    DigitalDriveType data = 3;
    int32 data_raw = 4;
  }
}

message SetDOOutputDriveTypeResponse {
  int32 status = 1;
}

message SetDOOvercurrentAutoReenableRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetDOOvercurrentAutoReenableResponse {
  int32 status = 1;
}

message SetDOOvercurrentLimitRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetDOOvercurrentLimitResponse {
  int32 status = 1;
}

message SetDOOvercurrentReenablePeriodRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  double data = 3;
}

message SetDOOvercurrentReenablePeriodResponse {
  int32 status = 1;
}

message SetDOTristateRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetDOTristateResponse {
  int32 status = 1;
}

message SetDOUsbXferReqCountRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetDOUsbXferReqCountResponse {
  int32 status = 1;
}

message SetDOUsbXferReqSizeRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  uint32 data = 3;
}

message SetDOUsbXferReqSizeResponse {
  int32 status = 1;
}

message SetDOUseOnlyOnBrdMemRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  bool data = 3;
}

message SetDOUseOnlyOnBrdMemResponse {
  int32 status = 1;
}

message SetDigitalLogicFamilyPowerUpStateRequest {
  string device_name = 1;
  oneof logic_family_enum {
    LogicFamily logic_family = 2;
    int32 logic_family_raw = 3;
  }
}

message SetDigitalLogicFamilyPowerUpStateResponse {
  int32 status = 1;
}

message SetFirstSampClkWhenRequest {
  nidevice_grpc.Session task = 1;
  google.protobuf.Timestamp data = 2;
}

message SetFirstSampClkWhenResponse {
  int32 status = 1;
}

message SetPhysicalChanNameRequest {
  nidevice_grpc.Session task = 1;
  string channel = 2;
  string data = 3;
}

message SetPhysicalChanNameResponse {
  int32 status = 1;
}

message SetStartTrigTrigWhenRequest {
  nidevice_grpc.Session task = 1;
  google.protobuf.Timestamp data = 2;
}

message SetStartTrigTrigWhenResponse {
  int32 status = 1;
}

message SetSyncPulseTimeWhenRequest {
  nidevice_grpc.Session task = 1;
  google.protobuf.Timestamp data = 2;
}

message SetSyncPulseTimeWhenResponse {
  int32 status = 1;
}

message StartNewFileRequest {
  nidevice_grpc.Session task = 1;
  string file_path = 2;
}

message StartNewFileResponse {
  int32 status = 1;
}

message StartTaskRequest {
  nidevice_grpc.Session task = 1;
}

message StartTaskResponse {
  int32 status = 1;
}

message StopTaskRequest {
  nidevice_grpc.Session task = 1;
}

message StopTaskResponse {
  int32 status = 1;
}

message TaskControlRequest {
  nidevice_grpc.Session task = 1;
  oneof action_enum {
    TaskControlAction action = 2;
    int32 action_raw = 3;
  }
}

message TaskControlResponse {
  int32 status = 1;
}

message TristateOutputTermRequest {
  string output_terminal = 1;
}

message TristateOutputTermResponse {
  int32 status = 1;
}

message UnreserveNetworkDeviceRequest {
  string device_name = 1;
}

message UnreserveNetworkDeviceResponse {
  int32 status = 1;
}

message WaitForNextSampleClockRequest {
  nidevice_grpc.Session task = 1;
  double timeout = 2;
}

message WaitForNextSampleClockResponse {
  int32 status = 1;
  bool is_late = 2;
}

message WaitForValidTimestampRequest {
  nidevice_grpc.Session task = 1;
  oneof timestamp_event_enum {
    TimestampEvent timestamp_event = 2;
    int32 timestamp_event_raw = 3;
  }
  double timeout = 4;
}

message WaitForValidTimestampResponse {
  int32 status = 1;
  google.protobuf.Timestamp timestamp = 2;
}

message WaitUntilTaskDoneRequest {
  nidevice_grpc.Session task = 1;
  double time_to_wait = 2;
}

message WaitUntilTaskDoneResponse {
  int32 status = 1;
}

message WriteAnalogF64Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  repeated double write_array = 7;
}

message WriteAnalogF64Response {
  int32 status = 1;
  int32 samps_per_chan_written = 2;
}

message WriteAnalogScalarF64Request {
  nidevice_grpc.Session task = 1;
  bool auto_start = 2;
  double timeout = 3;
  double value = 4;
}

message WriteAnalogScalarF64Response {
  int32 status = 1;
}

message WriteBinaryI16Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  repeated int32 write_array = 7;
}

message WriteBinaryI16Response {
  int32 status = 1;
  int32 samps_per_chan_written = 2;
}

message WriteBinaryI32Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  repeated int32 write_array = 7;
}

message WriteBinaryI32Response {
  int32 status = 1;
  int32 samps_per_chan_written = 2;
}

message WriteBinaryU16Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  repeated uint32 write_array = 7;
}

message WriteBinaryU16Response {
  int32 status = 1;
  int32 samps_per_chan_written = 2;
}

message WriteBinaryU32Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  repeated uint32 write_array = 7;
}

message WriteBinaryU32Response {
  int32 status = 1;
  int32 samps_per_chan_written = 2;
}

message WriteCtrFreqRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  repeated double frequency = 7;
  repeated double duty_cycle = 8;
}

message WriteCtrFreqResponse {
  int32 status = 1;
  int32 num_samps_per_chan_written = 2;
}

message WriteCtrFreqScalarRequest {
  nidevice_grpc.Session task = 1;
  bool auto_start = 2;
  double timeout = 3;
  double frequency = 4;
  double duty_cycle = 5;
}

message WriteCtrFreqScalarResponse {
  int32 status = 1;
}

message WriteCtrTicksRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  repeated uint32 high_ticks = 7;
  repeated uint32 low_ticks = 8;
}

message WriteCtrTicksResponse {
  int32 status = 1;
  int32 num_samps_per_chan_written = 2;
}

message WriteCtrTicksScalarRequest {
  nidevice_grpc.Session task = 1;
  bool auto_start = 2;
  double timeout = 3;
  uint32 high_ticks = 4;
  uint32 low_ticks = 5;
}

message WriteCtrTicksScalarResponse {
  int32 status = 1;
}

message WriteCtrTimeRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  repeated double high_time = 7;
  repeated double low_time = 8;
}

message WriteCtrTimeResponse {
  int32 status = 1;
  int32 num_samps_per_chan_written = 2;
}

message WriteCtrTimeScalarRequest {
  nidevice_grpc.Session task = 1;
  bool auto_start = 2;
  double timeout = 3;
  double high_time = 4;
  double low_time = 5;
}

message WriteCtrTimeScalarResponse {
  int32 status = 1;
}

message WriteDigitalLinesRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  bytes write_array = 7;
}

message WriteDigitalLinesResponse {
  int32 status = 1;
  int32 samps_per_chan_written = 2;
}

message WriteDigitalScalarU32Request {
  nidevice_grpc.Session task = 1;
  bool auto_start = 2;
  double timeout = 3;
  uint32 value = 4;
}

message WriteDigitalScalarU32Response {
  int32 status = 1;
}

message WriteDigitalU16Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  repeated uint32 write_array = 7;
}

message WriteDigitalU16Response {
  int32 status = 1;
  int32 samps_per_chan_written = 2;
}

message WriteDigitalU32Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  repeated uint32 write_array = 7;
}

message WriteDigitalU32Response {
  int32 status = 1;
  int32 samps_per_chan_written = 2;
}

message WriteDigitalU8Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  bytes write_array = 7;
}

message WriteDigitalU8Response {
  int32 status = 1;
  int32 samps_per_chan_written = 2;
}

message WriteRawRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps = 2;
  bool auto_start = 3;
  double timeout = 4;
  bytes write_array = 5;
}

message WriteRawResponse {
  int32 status = 1;
  int32 samps_per_chan_written = 2;
}

message WriteToTEDSFromArrayRequest {
  string physical_channel = 1;
  bytes bit_stream = 2;
  uint32 array_size = 3;
  oneof basic_teds_options_enum {
    WriteBasicTEDSOptions basic_teds_options = 4;
    int32 basic_teds_options_raw = 5;
  }
}

message WriteToTEDSFromArrayResponse {
  int32 status = 1;
}

message WriteToTEDSFromFileRequest {
  string physical_channel = 1;
  string file_path = 2;
  oneof basic_teds_options_enum {
    WriteBasicTEDSOptions basic_teds_options = 3;
    int32 basic_teds_options_raw = 4;
  }
}

message WriteToTEDSFromFileResponse {
  int32 status = 1;
}

