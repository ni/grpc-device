
//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Proto file for the NI-DAQMX Metadata
//---------------------------------------------------------------------
syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.ni.grpc.nidaqmx";
option java_outer_classname = "NiDAQmx";
option csharp_namespace = "NationalInstruments.Grpc.NiDAQmx";

package nidaqmx_grpc;

import "session.proto";
import "google/protobuf/timestamp.proto";

service NiDAQmx {
  rpc AddGlobalChansToTask(AddGlobalChansToTaskRequest) returns (AddGlobalChansToTaskResponse);
  rpc AddNetworkDevice(AddNetworkDeviceRequest) returns (AddNetworkDeviceResponse);
  rpc CalculateReversePolyCoeff(CalculateReversePolyCoeffRequest) returns (CalculateReversePolyCoeffResponse);
  rpc CfgAnlgEdgeRefTrig(CfgAnlgEdgeRefTrigRequest) returns (CfgAnlgEdgeRefTrigResponse);
  rpc CfgAnlgEdgeStartTrig(CfgAnlgEdgeStartTrigRequest) returns (CfgAnlgEdgeStartTrigResponse);
  rpc CfgAnlgMultiEdgeRefTrig(CfgAnlgMultiEdgeRefTrigRequest) returns (CfgAnlgMultiEdgeRefTrigResponse);
  rpc CfgAnlgMultiEdgeStartTrig(CfgAnlgMultiEdgeStartTrigRequest) returns (CfgAnlgMultiEdgeStartTrigResponse);
  rpc CfgAnlgWindowRefTrig(CfgAnlgWindowRefTrigRequest) returns (CfgAnlgWindowRefTrigResponse);
  rpc CfgAnlgWindowStartTrig(CfgAnlgWindowStartTrigRequest) returns (CfgAnlgWindowStartTrigResponse);
  rpc CfgBurstHandshakingTimingExportClock(CfgBurstHandshakingTimingExportClockRequest) returns (CfgBurstHandshakingTimingExportClockResponse);
  rpc CfgBurstHandshakingTimingImportClock(CfgBurstHandshakingTimingImportClockRequest) returns (CfgBurstHandshakingTimingImportClockResponse);
  rpc CfgChangeDetectionTiming(CfgChangeDetectionTimingRequest) returns (CfgChangeDetectionTimingResponse);
  rpc CfgDigEdgeRefTrig(CfgDigEdgeRefTrigRequest) returns (CfgDigEdgeRefTrigResponse);
  rpc CfgDigEdgeStartTrig(CfgDigEdgeStartTrigRequest) returns (CfgDigEdgeStartTrigResponse);
  rpc CfgDigPatternRefTrig(CfgDigPatternRefTrigRequest) returns (CfgDigPatternRefTrigResponse);
  rpc CfgDigPatternStartTrig(CfgDigPatternStartTrigRequest) returns (CfgDigPatternStartTrigResponse);
  rpc CfgHandshakingTiming(CfgHandshakingTimingRequest) returns (CfgHandshakingTimingResponse);
  rpc CfgImplicitTiming(CfgImplicitTimingRequest) returns (CfgImplicitTimingResponse);
  rpc CfgInputBuffer(CfgInputBufferRequest) returns (CfgInputBufferResponse);
  rpc CfgOutputBuffer(CfgOutputBufferRequest) returns (CfgOutputBufferResponse);
  rpc CfgPipelinedSampClkTiming(CfgPipelinedSampClkTimingRequest) returns (CfgPipelinedSampClkTimingResponse);
  rpc CfgSampClkTiming(CfgSampClkTimingRequest) returns (CfgSampClkTimingResponse);
  rpc CfgTimeStartTrig(CfgTimeStartTrigRequest) returns (CfgTimeStartTrigResponse);
  rpc CfgWatchdogAOExpirStates(CfgWatchdogAOExpirStatesRequest) returns (CfgWatchdogAOExpirStatesResponse);
  rpc CfgWatchdogCOExpirStates(CfgWatchdogCOExpirStatesRequest) returns (CfgWatchdogCOExpirStatesResponse);
  rpc CfgWatchdogDOExpirStates(CfgWatchdogDOExpirStatesRequest) returns (CfgWatchdogDOExpirStatesResponse);
  rpc ClearTask(ClearTaskRequest) returns (ClearTaskResponse);
  rpc ConfigureLogging(ConfigureLoggingRequest) returns (ConfigureLoggingResponse);
  rpc ConnectTerms(ConnectTermsRequest) returns (ConnectTermsResponse);
  rpc ControlWatchdogTask(ControlWatchdogTaskRequest) returns (ControlWatchdogTaskResponse);
  rpc CreateAIAccel4WireDCVoltageChan(CreateAIAccel4WireDCVoltageChanRequest) returns (CreateAIAccel4WireDCVoltageChanResponse);
  rpc CreateAIAccelChan(CreateAIAccelChanRequest) returns (CreateAIAccelChanResponse);
  rpc CreateAIAccelChargeChan(CreateAIAccelChargeChanRequest) returns (CreateAIAccelChargeChanResponse);
  rpc CreateAIBridgeChan(CreateAIBridgeChanRequest) returns (CreateAIBridgeChanResponse);
  rpc CreateAIChargeChan(CreateAIChargeChanRequest) returns (CreateAIChargeChanResponse);
  rpc CreateAICurrentChan(CreateAICurrentChanRequest) returns (CreateAICurrentChanResponse);
  rpc CreateAICurrentRMSChan(CreateAICurrentRMSChanRequest) returns (CreateAICurrentRMSChanResponse);
  rpc CreateAIForceBridgePolynomialChan(CreateAIForceBridgePolynomialChanRequest) returns (CreateAIForceBridgePolynomialChanResponse);
  rpc CreateAIForceBridgeTableChan(CreateAIForceBridgeTableChanRequest) returns (CreateAIForceBridgeTableChanResponse);
  rpc CreateAIForceBridgeTwoPointLinChan(CreateAIForceBridgeTwoPointLinChanRequest) returns (CreateAIForceBridgeTwoPointLinChanResponse);
  rpc CreateAIForceIEPEChan(CreateAIForceIEPEChanRequest) returns (CreateAIForceIEPEChanResponse);
  rpc CreateAIFreqVoltageChan(CreateAIFreqVoltageChanRequest) returns (CreateAIFreqVoltageChanResponse);
  rpc CreateAIMicrophoneChan(CreateAIMicrophoneChanRequest) returns (CreateAIMicrophoneChanResponse);
  rpc CreateAIPosEddyCurrProxProbeChan(CreateAIPosEddyCurrProxProbeChanRequest) returns (CreateAIPosEddyCurrProxProbeChanResponse);
  rpc CreateAIPosLVDTChan(CreateAIPosLVDTChanRequest) returns (CreateAIPosLVDTChanResponse);
  rpc CreateAIPosRVDTChan(CreateAIPosRVDTChanRequest) returns (CreateAIPosRVDTChanResponse);
  rpc CreateAIPressureBridgePolynomialChan(CreateAIPressureBridgePolynomialChanRequest) returns (CreateAIPressureBridgePolynomialChanResponse);
  rpc CreateAIPressureBridgeTableChan(CreateAIPressureBridgeTableChanRequest) returns (CreateAIPressureBridgeTableChanResponse);
  rpc CreateAIPressureBridgeTwoPointLinChan(CreateAIPressureBridgeTwoPointLinChanRequest) returns (CreateAIPressureBridgeTwoPointLinChanResponse);
  rpc CreateAIRTDChan(CreateAIRTDChanRequest) returns (CreateAIRTDChanResponse);
  rpc CreateAIResistanceChan(CreateAIResistanceChanRequest) returns (CreateAIResistanceChanResponse);
  rpc CreateAIRosetteStrainGageChan(CreateAIRosetteStrainGageChanRequest) returns (CreateAIRosetteStrainGageChanResponse);
  rpc CreateAIStrainGageChan(CreateAIStrainGageChanRequest) returns (CreateAIStrainGageChanResponse);
  rpc CreateAITempBuiltInSensorChan(CreateAITempBuiltInSensorChanRequest) returns (CreateAITempBuiltInSensorChanResponse);
  rpc CreateAIThrmcplChan(CreateAIThrmcplChanRequest) returns (CreateAIThrmcplChanResponse);
  rpc CreateAIThrmstrChanIex(CreateAIThrmstrChanIexRequest) returns (CreateAIThrmstrChanIexResponse);
  rpc CreateAIThrmstrChanVex(CreateAIThrmstrChanVexRequest) returns (CreateAIThrmstrChanVexResponse);
  rpc CreateAITorqueBridgePolynomialChan(CreateAITorqueBridgePolynomialChanRequest) returns (CreateAITorqueBridgePolynomialChanResponse);
  rpc CreateAITorqueBridgeTableChan(CreateAITorqueBridgeTableChanRequest) returns (CreateAITorqueBridgeTableChanResponse);
  rpc CreateAITorqueBridgeTwoPointLinChan(CreateAITorqueBridgeTwoPointLinChanRequest) returns (CreateAITorqueBridgeTwoPointLinChanResponse);
  rpc CreateAIVelocityIEPEChan(CreateAIVelocityIEPEChanRequest) returns (CreateAIVelocityIEPEChanResponse);
  rpc CreateAIVoltageChan(CreateAIVoltageChanRequest) returns (CreateAIVoltageChanResponse);
  rpc CreateAIVoltageChanWithExcit(CreateAIVoltageChanWithExcitRequest) returns (CreateAIVoltageChanWithExcitResponse);
  rpc CreateAIVoltageRMSChan(CreateAIVoltageRMSChanRequest) returns (CreateAIVoltageRMSChanResponse);
  rpc CreateAOCurrentChan(CreateAOCurrentChanRequest) returns (CreateAOCurrentChanResponse);
  rpc CreateAOFuncGenChan(CreateAOFuncGenChanRequest) returns (CreateAOFuncGenChanResponse);
  rpc CreateAOVoltageChan(CreateAOVoltageChanRequest) returns (CreateAOVoltageChanResponse);
  rpc CreateCIAngEncoderChan(CreateCIAngEncoderChanRequest) returns (CreateCIAngEncoderChanResponse);
  rpc CreateCIAngVelocityChan(CreateCIAngVelocityChanRequest) returns (CreateCIAngVelocityChanResponse);
  rpc CreateCICountEdgesChan(CreateCICountEdgesChanRequest) returns (CreateCICountEdgesChanResponse);
  rpc CreateCIDutyCycleChan(CreateCIDutyCycleChanRequest) returns (CreateCIDutyCycleChanResponse);
  rpc CreateCIFreqChan(CreateCIFreqChanRequest) returns (CreateCIFreqChanResponse);
  rpc CreateCIGPSTimestampChan(CreateCIGPSTimestampChanRequest) returns (CreateCIGPSTimestampChanResponse);
  rpc CreateCILinEncoderChan(CreateCILinEncoderChanRequest) returns (CreateCILinEncoderChanResponse);
  rpc CreateCILinVelocityChan(CreateCILinVelocityChanRequest) returns (CreateCILinVelocityChanResponse);
  rpc CreateCIPeriodChan(CreateCIPeriodChanRequest) returns (CreateCIPeriodChanResponse);
  rpc CreateCIPulseChanFreq(CreateCIPulseChanFreqRequest) returns (CreateCIPulseChanFreqResponse);
  rpc CreateCIPulseChanTicks(CreateCIPulseChanTicksRequest) returns (CreateCIPulseChanTicksResponse);
  rpc CreateCIPulseChanTime(CreateCIPulseChanTimeRequest) returns (CreateCIPulseChanTimeResponse);
  rpc CreateCIPulseWidthChan(CreateCIPulseWidthChanRequest) returns (CreateCIPulseWidthChanResponse);
  rpc CreateCISemiPeriodChan(CreateCISemiPeriodChanRequest) returns (CreateCISemiPeriodChanResponse);
  rpc CreateCITwoEdgeSepChan(CreateCITwoEdgeSepChanRequest) returns (CreateCITwoEdgeSepChanResponse);
  rpc CreateCOPulseChanFreq(CreateCOPulseChanFreqRequest) returns (CreateCOPulseChanFreqResponse);
  rpc CreateCOPulseChanTicks(CreateCOPulseChanTicksRequest) returns (CreateCOPulseChanTicksResponse);
  rpc CreateCOPulseChanTime(CreateCOPulseChanTimeRequest) returns (CreateCOPulseChanTimeResponse);
  rpc CreateDIChan(CreateDIChanRequest) returns (CreateDIChanResponse);
  rpc CreateDOChan(CreateDOChanRequest) returns (CreateDOChanResponse);
  rpc CreateLinScale(CreateLinScaleRequest) returns (CreateLinScaleResponse);
  rpc CreateMapScale(CreateMapScaleRequest) returns (CreateMapScaleResponse);
  rpc CreatePolynomialScale(CreatePolynomialScaleRequest) returns (CreatePolynomialScaleResponse);
  rpc CreateTEDSAIAccelChan(CreateTEDSAIAccelChanRequest) returns (CreateTEDSAIAccelChanResponse);
  rpc CreateTEDSAIBridgeChan(CreateTEDSAIBridgeChanRequest) returns (CreateTEDSAIBridgeChanResponse);
  rpc CreateTEDSAICurrentChan(CreateTEDSAICurrentChanRequest) returns (CreateTEDSAICurrentChanResponse);
  rpc CreateTEDSAIForceBridgeChan(CreateTEDSAIForceBridgeChanRequest) returns (CreateTEDSAIForceBridgeChanResponse);
  rpc CreateTEDSAIForceIEPEChan(CreateTEDSAIForceIEPEChanRequest) returns (CreateTEDSAIForceIEPEChanResponse);
  rpc CreateTEDSAIMicrophoneChan(CreateTEDSAIMicrophoneChanRequest) returns (CreateTEDSAIMicrophoneChanResponse);
  rpc CreateTEDSAIPosLVDTChan(CreateTEDSAIPosLVDTChanRequest) returns (CreateTEDSAIPosLVDTChanResponse);
  rpc CreateTEDSAIPosRVDTChan(CreateTEDSAIPosRVDTChanRequest) returns (CreateTEDSAIPosRVDTChanResponse);
  rpc CreateTEDSAIPressureBridgeChan(CreateTEDSAIPressureBridgeChanRequest) returns (CreateTEDSAIPressureBridgeChanResponse);
  rpc CreateTEDSAIRTDChan(CreateTEDSAIRTDChanRequest) returns (CreateTEDSAIRTDChanResponse);
  rpc CreateTEDSAIResistanceChan(CreateTEDSAIResistanceChanRequest) returns (CreateTEDSAIResistanceChanResponse);
  rpc CreateTEDSAIStrainGageChan(CreateTEDSAIStrainGageChanRequest) returns (CreateTEDSAIStrainGageChanResponse);
  rpc CreateTEDSAIThrmcplChan(CreateTEDSAIThrmcplChanRequest) returns (CreateTEDSAIThrmcplChanResponse);
  rpc CreateTEDSAIThrmstrChanIex(CreateTEDSAIThrmstrChanIexRequest) returns (CreateTEDSAIThrmstrChanIexResponse);
  rpc CreateTEDSAIThrmstrChanVex(CreateTEDSAIThrmstrChanVexRequest) returns (CreateTEDSAIThrmstrChanVexResponse);
  rpc CreateTEDSAITorqueBridgeChan(CreateTEDSAITorqueBridgeChanRequest) returns (CreateTEDSAITorqueBridgeChanResponse);
  rpc CreateTEDSAIVoltageChan(CreateTEDSAIVoltageChanRequest) returns (CreateTEDSAIVoltageChanResponse);
  rpc CreateTEDSAIVoltageChanWithExcit(CreateTEDSAIVoltageChanWithExcitRequest) returns (CreateTEDSAIVoltageChanWithExcitResponse);
  rpc CreateTableScale(CreateTableScaleRequest) returns (CreateTableScaleResponse);
  rpc CreateTask(CreateTaskRequest) returns (CreateTaskResponse);
  rpc CreateWatchdogTimerTask(CreateWatchdogTimerTaskRequest) returns (CreateWatchdogTimerTaskResponse);
  rpc CreateWatchdogTimerTaskEx(CreateWatchdogTimerTaskExRequest) returns (CreateWatchdogTimerTaskExResponse);
  rpc DeleteNetworkDevice(DeleteNetworkDeviceRequest) returns (DeleteNetworkDeviceResponse);
  rpc DisableRefTrig(DisableRefTrigRequest) returns (DisableRefTrigResponse);
  rpc DisableStartTrig(DisableStartTrigRequest) returns (DisableStartTrigResponse);
  rpc DisconnectTerms(DisconnectTermsRequest) returns (DisconnectTermsResponse);
  rpc ExportSignal(ExportSignalRequest) returns (ExportSignalResponse);
  rpc GetAIChanCalCalDate(GetAIChanCalCalDateRequest) returns (GetAIChanCalCalDateResponse);
  rpc GetAIChanCalExpDate(GetAIChanCalExpDateRequest) returns (GetAIChanCalExpDateResponse);
  rpc GetArmStartTrigTimestampVal(GetArmStartTrigTimestampValRequest) returns (GetArmStartTrigTimestampValResponse);
  rpc GetArmStartTrigTrigWhen(GetArmStartTrigTrigWhenRequest) returns (GetArmStartTrigTrigWhenResponse);
  rpc GetDigitalLogicFamilyPowerUpState(GetDigitalLogicFamilyPowerUpStateRequest) returns (GetDigitalLogicFamilyPowerUpStateResponse);
  rpc GetErrorString(GetErrorStringRequest) returns (GetErrorStringResponse);
  rpc GetExtendedErrorInfo(GetExtendedErrorInfoRequest) returns (GetExtendedErrorInfoResponse);
  rpc GetFirstSampClkWhen(GetFirstSampClkWhenRequest) returns (GetFirstSampClkWhenResponse);
  rpc GetFirstSampTimestampVal(GetFirstSampTimestampValRequest) returns (GetFirstSampTimestampValResponse);
  rpc GetNthTaskChannel(GetNthTaskChannelRequest) returns (GetNthTaskChannelResponse);
  rpc GetNthTaskDevice(GetNthTaskDeviceRequest) returns (GetNthTaskDeviceResponse);
  rpc GetNthTaskReadChannel(GetNthTaskReadChannelRequest) returns (GetNthTaskReadChannelResponse);
  rpc GetRefTrigTimestampVal(GetRefTrigTimestampValRequest) returns (GetRefTrigTimestampValResponse);
  rpc GetStartTrigTimestampVal(GetStartTrigTimestampValRequest) returns (GetStartTrigTimestampValResponse);
  rpc GetStartTrigTrigWhen(GetStartTrigTrigWhenRequest) returns (GetStartTrigTrigWhenResponse);
  rpc GetSyncPulseTimeWhen(GetSyncPulseTimeWhenRequest) returns (GetSyncPulseTimeWhenResponse);
  rpc IsTaskDone(IsTaskDoneRequest) returns (IsTaskDoneResponse);
  rpc LoadTask(LoadTaskRequest) returns (LoadTaskResponse);
  rpc ReadAnalogF64(ReadAnalogF64Request) returns (ReadAnalogF64Response);
  rpc ReadAnalogScalarF64(ReadAnalogScalarF64Request) returns (ReadAnalogScalarF64Response);
  rpc ReadBinaryI16(ReadBinaryI16Request) returns (ReadBinaryI16Response);
  rpc ReadBinaryI32(ReadBinaryI32Request) returns (ReadBinaryI32Response);
  rpc ReadBinaryU16(ReadBinaryU16Request) returns (ReadBinaryU16Response);
  rpc ReadBinaryU32(ReadBinaryU32Request) returns (ReadBinaryU32Response);
  rpc ReadCounterF64(ReadCounterF64Request) returns (ReadCounterF64Response);
  rpc ReadCounterF64Ex(ReadCounterF64ExRequest) returns (ReadCounterF64ExResponse);
  rpc ReadCounterScalarF64(ReadCounterScalarF64Request) returns (ReadCounterScalarF64Response);
  rpc ReadCounterScalarU32(ReadCounterScalarU32Request) returns (ReadCounterScalarU32Response);
  rpc ReadCounterU32(ReadCounterU32Request) returns (ReadCounterU32Response);
  rpc ReadCounterU32Ex(ReadCounterU32ExRequest) returns (ReadCounterU32ExResponse);
  rpc ReadCtrFreq(ReadCtrFreqRequest) returns (ReadCtrFreqResponse);
  rpc ReadCtrFreqScalar(ReadCtrFreqScalarRequest) returns (ReadCtrFreqScalarResponse);
  rpc ReadCtrTicks(ReadCtrTicksRequest) returns (ReadCtrTicksResponse);
  rpc ReadCtrTicksScalar(ReadCtrTicksScalarRequest) returns (ReadCtrTicksScalarResponse);
  rpc ReadCtrTime(ReadCtrTimeRequest) returns (ReadCtrTimeResponse);
  rpc ReadCtrTimeScalar(ReadCtrTimeScalarRequest) returns (ReadCtrTimeScalarResponse);
  rpc ReadDigitalLines(ReadDigitalLinesRequest) returns (ReadDigitalLinesResponse);
  rpc ReadDigitalScalarU32(ReadDigitalScalarU32Request) returns (ReadDigitalScalarU32Response);
  rpc ReadDigitalU16(ReadDigitalU16Request) returns (ReadDigitalU16Response);
  rpc ReadDigitalU32(ReadDigitalU32Request) returns (ReadDigitalU32Response);
  rpc ReadDigitalU8(ReadDigitalU8Request) returns (ReadDigitalU8Response);
  rpc ReadRaw(ReadRawRequest) returns (ReadRawResponse);
  rpc RegisterDoneEvent(RegisterDoneEventRequest) returns (stream RegisterDoneEventResponse);
  rpc ReserveNetworkDevice(ReserveNetworkDeviceRequest) returns (ReserveNetworkDeviceResponse);
  rpc ResetDevice(ResetDeviceRequest) returns (ResetDeviceResponse);
  rpc SelfTestDevice(SelfTestDeviceRequest) returns (SelfTestDeviceResponse);
  rpc SetAIChanCalCalDate(SetAIChanCalCalDateRequest) returns (SetAIChanCalCalDateResponse);
  rpc SetAIChanCalExpDate(SetAIChanCalExpDateRequest) returns (SetAIChanCalExpDateResponse);
  rpc SetArmStartTrigTrigWhen(SetArmStartTrigTrigWhenRequest) returns (SetArmStartTrigTrigWhenResponse);
  rpc SetDigitalLogicFamilyPowerUpState(SetDigitalLogicFamilyPowerUpStateRequest) returns (SetDigitalLogicFamilyPowerUpStateResponse);
  rpc SetFirstSampClkWhen(SetFirstSampClkWhenRequest) returns (SetFirstSampClkWhenResponse);
  rpc SetStartTrigTrigWhen(SetStartTrigTrigWhenRequest) returns (SetStartTrigTrigWhenResponse);
  rpc SetSyncPulseTimeWhen(SetSyncPulseTimeWhenRequest) returns (SetSyncPulseTimeWhenResponse);
  rpc StartNewFile(StartNewFileRequest) returns (StartNewFileResponse);
  rpc StartTask(StartTaskRequest) returns (StartTaskResponse);
  rpc StopTask(StopTaskRequest) returns (StopTaskResponse);
  rpc TaskControl(TaskControlRequest) returns (TaskControlResponse);
  rpc TristateOutputTerm(TristateOutputTermRequest) returns (TristateOutputTermResponse);
  rpc UnreserveNetworkDevice(UnreserveNetworkDeviceRequest) returns (UnreserveNetworkDeviceResponse);
  rpc WaitForValidTimestamp(WaitForValidTimestampRequest) returns (WaitForValidTimestampResponse);
  rpc WaitUntilTaskDone(WaitUntilTaskDoneRequest) returns (WaitUntilTaskDoneResponse);
  rpc WriteAnalogF64(WriteAnalogF64Request) returns (WriteAnalogF64Response);
  rpc WriteAnalogScalarF64(WriteAnalogScalarF64Request) returns (WriteAnalogScalarF64Response);
  rpc WriteBinaryI16(WriteBinaryI16Request) returns (WriteBinaryI16Response);
  rpc WriteBinaryI32(WriteBinaryI32Request) returns (WriteBinaryI32Response);
  rpc WriteBinaryU16(WriteBinaryU16Request) returns (WriteBinaryU16Response);
  rpc WriteBinaryU32(WriteBinaryU32Request) returns (WriteBinaryU32Response);
  rpc WriteCtrFreq(WriteCtrFreqRequest) returns (WriteCtrFreqResponse);
  rpc WriteCtrFreqScalar(WriteCtrFreqScalarRequest) returns (WriteCtrFreqScalarResponse);
  rpc WriteCtrTicks(WriteCtrTicksRequest) returns (WriteCtrTicksResponse);
  rpc WriteCtrTicksScalar(WriteCtrTicksScalarRequest) returns (WriteCtrTicksScalarResponse);
  rpc WriteCtrTime(WriteCtrTimeRequest) returns (WriteCtrTimeResponse);
  rpc WriteCtrTimeScalar(WriteCtrTimeScalarRequest) returns (WriteCtrTimeScalarResponse);
  rpc WriteDigitalLines(WriteDigitalLinesRequest) returns (WriteDigitalLinesResponse);
  rpc WriteDigitalScalarU32(WriteDigitalScalarU32Request) returns (WriteDigitalScalarU32Response);
  rpc WriteDigitalU16(WriteDigitalU16Request) returns (WriteDigitalU16Response);
  rpc WriteDigitalU32(WriteDigitalU32Request) returns (WriteDigitalU32Response);
  rpc WriteDigitalU8(WriteDigitalU8Request) returns (WriteDigitalU8Response);
  rpc WriteRaw(WriteRawRequest) returns (WriteRawResponse);
}

enum NiDAQmxAttributes {
  NIDAQMX_ATTRIBUTE_UNSPECIFIED = 0;
}

enum ACExcitWireMode {
  AC_EXCIT_WIRE_MODE_UNSPECIFIED = 0;
  AC_EXCIT_WIRE_MODE_4_WIRE = 4;
  AC_EXCIT_WIRE_MODE_5_WIRE = 5;
  AC_EXCIT_WIRE_MODE_6_WIRE = 6;
}

enum AccelChargeSensitivityUnits {
  ACCEL_CHARGE_SENSITIVITY_UNITS_UNSPECIFIED = 0;
  ACCEL_CHARGE_SENSITIVITY_UNITS_PICO_COULOMBS_PER_G = 16099;
  ACCEL_CHARGE_SENSITIVITY_UNITS_PICO_COULOMBS_PER_METERS_PER_SECOND_SQUARED = 16100;
  ACCEL_CHARGE_SENSITIVITY_UNITS_PICO_COULOMBS_PER_INCHES_PER_SECOND_SQUARED = 16101;
}

enum AccelSensitivityUnits1 {
  ACCEL_SENSITIVITY_UNITS1_UNSPECIFIED = 0;
  ACCEL_SENSITIVITY_UNITS1_M_VOLTS_PER_G = 12509;
  ACCEL_SENSITIVITY_UNITS1_VOLTS_PER_G = 12510;
}

enum AccelUnits2 {
  ACCEL_UNITS2_UNSPECIFIED = 0;
  ACCEL_UNITS2_ACCEL_UNIT_G = 10186;
  ACCEL_UNITS2_METERS_PER_SECOND_SQUARED = 12470;
  ACCEL_UNITS2_INCHES_PER_SECOND_SQUARED = 12471;
  ACCEL_UNITS2_FROM_CUSTOM_SCALE = 10065;
}

enum AcquisitionType {
  ACQUISITION_TYPE_UNSPECIFIED = 0;
  ACQUISITION_TYPE_FINITE_SAMPS = 10178;
  ACQUISITION_TYPE_CONT_SAMPS = 10123;
  ACQUISITION_TYPE_HW_TIMED_SINGLE_POINT = 12522;
}

enum AngleUnits1 {
  ANGLE_UNITS1_UNSPECIFIED = 0;
  ANGLE_UNITS1_DEGREES = 10146;
  ANGLE_UNITS1_RADIANS = 10273;
  ANGLE_UNITS1_FROM_CUSTOM_SCALE = 10065;
}

enum AngleUnits2 {
  ANGLE_UNITS2_UNSPECIFIED = 0;
  ANGLE_UNITS2_DEGREES = 10146;
  ANGLE_UNITS2_RADIANS = 10273;
  ANGLE_UNITS2_TICKS = 10304;
  ANGLE_UNITS2_FROM_CUSTOM_SCALE = 10065;
}

enum AngularVelocityUnits {
  ANGULAR_VELOCITY_UNITS_UNSPECIFIED = 0;
  ANGULAR_VELOCITY_UNITS_RPM = 16080;
  ANGULAR_VELOCITY_UNITS_RADIANS_PER_SECOND = 16081;
  ANGULAR_VELOCITY_UNITS_DEGREES_PER_SECOND = 16082;
  ANGULAR_VELOCITY_UNITS_FROM_CUSTOM_SCALE = 10065;
}

enum BridgeConfiguration1 {
  BRIDGE_CONFIGURATION1_UNSPECIFIED = 0;
  BRIDGE_CONFIGURATION1_FULL_BRIDGE = 10182;
  BRIDGE_CONFIGURATION1_HALF_BRIDGE = 10187;
  BRIDGE_CONFIGURATION1_QUARTER_BRIDGE = 10270;
  BRIDGE_CONFIGURATION1_NO_BRIDGE = 10228;
}

enum BridgeElectricalUnits {
  BRIDGE_ELECTRICAL_UNITS_UNSPECIFIED = 0;
  BRIDGE_ELECTRICAL_UNITS_VOLTS_PER_VOLT = 15896;
  BRIDGE_ELECTRICAL_UNITS_M_VOLTS_PER_VOLT = 15897;
}

enum BridgePhysicalUnits {
  BRIDGE_PHYSICAL_UNITS_UNSPECIFIED = 0;
  BRIDGE_PHYSICAL_UNITS_NEWTONS = 15875;
  BRIDGE_PHYSICAL_UNITS_POUNDS = 15876;
  BRIDGE_PHYSICAL_UNITS_KILOGRAM_FORCE = 15877;
  BRIDGE_PHYSICAL_UNITS_PASCALS = 10081;
  BRIDGE_PHYSICAL_UNITS_POUNDS_PER_SQUARE_INCH = 15879;
  BRIDGE_PHYSICAL_UNITS_BAR = 15880;
  BRIDGE_PHYSICAL_UNITS_NEWTON_METERS = 15881;
  BRIDGE_PHYSICAL_UNITS_INCH_OUNCES = 15882;
  BRIDGE_PHYSICAL_UNITS_INCH_POUNDS = 15883;
  BRIDGE_PHYSICAL_UNITS_FOOT_POUNDS = 15884;
}

enum BridgeUnits {
  BRIDGE_UNITS_UNSPECIFIED = 0;
  BRIDGE_UNITS_VOLTS_PER_VOLT = 15896;
  BRIDGE_UNITS_M_VOLTS_PER_VOLT = 15897;
  BRIDGE_UNITS_FROM_CUSTOM_SCALE = 10065;
  BRIDGE_UNITS_FROM_TEDS = 12516;
}

enum CJCSource1 {
  CJC_SOURCE1_UNSPECIFIED = 0;
  CJC_SOURCE1_BUILT_IN = 10200;
  CJC_SOURCE1_CONST_VAL = 10116;
  CJC_SOURCE1_CHAN = 10113;
}

enum ChargeUnits {
  CHARGE_UNITS_UNSPECIFIED = 0;
  CHARGE_UNITS_COULOMBS = 16102;
  CHARGE_UNITS_PICO_COULOMBS = 16103;
  CHARGE_UNITS_FROM_CUSTOM_SCALE = 10065;
}

enum CountDirection1 {
  COUNT_DIRECTION1_UNSPECIFIED = 0;
  COUNT_DIRECTION1_COUNT_UP = 10128;
  COUNT_DIRECTION1_COUNT_DOWN = 10124;
  COUNT_DIRECTION1_EXT_CONTROLLED = 10326;
}

enum CounterFrequencyMethod {
  COUNTER_FREQUENCY_METHOD_UNSPECIFIED = 0;
  COUNTER_FREQUENCY_METHOD_LOW_FREQ_1_CTR = 10105;
  COUNTER_FREQUENCY_METHOD_HIGH_FREQ_2_CTR = 10157;
  COUNTER_FREQUENCY_METHOD_LARGE_RNG_2_CTR = 10205;
  COUNTER_FREQUENCY_METHOD_DYN_AVG = 16065;
}

enum CurrentShuntResistorLocationWithDefault {
  CURRENT_SHUNT_RESISTOR_LOCATION_WITH_DEFAULT_UNSPECIFIED = 0;
  CURRENT_SHUNT_RESISTOR_LOCATION_WITH_DEFAULT_DEFAULT = -1;
  CURRENT_SHUNT_RESISTOR_LOCATION_WITH_DEFAULT_INTERNAL = 10200;
  CURRENT_SHUNT_RESISTOR_LOCATION_WITH_DEFAULT_EXTERNAL = 10167;
}

enum CurrentUnits2 {
  CURRENT_UNITS2_UNSPECIFIED = 0;
  CURRENT_UNITS2_AMPS = 10342;
  CURRENT_UNITS2_FROM_CUSTOM_SCALE = 10065;
}

enum DigitalLineState {
  DIGITAL_LINE_STATE_UNSPECIFIED = 0;
  DIGITAL_LINE_STATE_HIGH = 10192;
  DIGITAL_LINE_STATE_LOW = 10214;
  DIGITAL_LINE_STATE_TRISTATE = 10310;
  DIGITAL_LINE_STATE_NO_CHANGE = 10160;
}

enum DigitalPatternCondition1 {
  DIGITAL_PATTERN_CONDITION1_UNSPECIFIED = 0;
  DIGITAL_PATTERN_CONDITION1_PATTERN_MATCHES = 10254;
  DIGITAL_PATTERN_CONDITION1_PATTERN_DOES_NOT_MATCH = 10253;
}

enum DigitalWidthUnits3 {
  DIGITAL_WIDTH_UNITS3_UNSPECIFIED = 0;
  DIGITAL_WIDTH_UNITS3_SECONDS = 10364;
}

enum EddyCurrentProxProbeSensitivityUnits {
  EDDY_CURRENT_PROX_PROBE_SENSITIVITY_UNITS_UNSPECIFIED = 0;
  EDDY_CURRENT_PROX_PROBE_SENSITIVITY_UNITS_M_VOLTS_PER_MIL = 14836;
  EDDY_CURRENT_PROX_PROBE_SENSITIVITY_UNITS_VOLTS_PER_MIL = 14837;
  EDDY_CURRENT_PROX_PROBE_SENSITIVITY_UNITS_M_VOLTS_PER_MILLIMETER = 14838;
  EDDY_CURRENT_PROX_PROBE_SENSITIVITY_UNITS_VOLTS_PER_MILLIMETER = 14839;
  EDDY_CURRENT_PROX_PROBE_SENSITIVITY_UNITS_M_VOLTS_PER_MICRON = 14840;
}

enum Edge1 {
  EDGE1_UNSPECIFIED = 0;
  EDGE1_RISING = 10280;
  EDGE1_FALLING = 10171;
}

enum EncoderType2 {
  ENCODER_TYPE2_UNSPECIFIED = 0;
  ENCODER_TYPE2_X_1 = 10090;
  ENCODER_TYPE2_X_2 = 10091;
  ENCODER_TYPE2_X_4 = 10092;
  ENCODER_TYPE2_TWO_PULSE_COUNTING = 10313;
}

enum EncoderZIndexPhase1 {
  ENCODER_Z_INDEX_PHASE1_UNSPECIFIED = 0;
  ENCODER_Z_INDEX_PHASE1_A_HIGH_B_HIGH = 10040;
  ENCODER_Z_INDEX_PHASE1_A_HIGH_B_LOW = 10041;
  ENCODER_Z_INDEX_PHASE1_A_LOW_B_HIGH = 10042;
  ENCODER_Z_INDEX_PHASE1_A_LOW_B_LOW = 10043;
}

enum ExcitationSource {
  EXCITATION_SOURCE_UNSPECIFIED = 0;
  EXCITATION_SOURCE_INTERNAL = 10200;
  EXCITATION_SOURCE_EXTERNAL = 10167;
  EXCITATION_SOURCE_NONE = 10230;
}

enum ForceIEPESensorSensitivityUnits {
  FORCE_IEPE_SENSOR_SENSITIVITY_UNITS_UNSPECIFIED = 0;
  FORCE_IEPE_SENSOR_SENSITIVITY_UNITS_M_VOLTS_PER_NEWTON = 15891;
  FORCE_IEPE_SENSOR_SENSITIVITY_UNITS_M_VOLTS_PER_POUND = 15892;
}

enum ForceIEPEUnits {
  FORCE_IEPE_UNITS_UNSPECIFIED = 0;
  FORCE_IEPE_UNITS_NEWTONS = 15875;
  FORCE_IEPE_UNITS_POUNDS = 15876;
  FORCE_IEPE_UNITS_FROM_CUSTOM_SCALE = 10065;
}

enum ForceUnits {
  FORCE_UNITS_UNSPECIFIED = 0;
  FORCE_UNITS_NEWTONS = 15875;
  FORCE_UNITS_POUNDS = 15876;
  FORCE_UNITS_KILOGRAM_FORCE = 15877;
  FORCE_UNITS_FROM_CUSTOM_SCALE = 10065;
}

enum FrequencyUnits {
  FREQUENCY_UNITS_UNSPECIFIED = 0;
  FREQUENCY_UNITS_HZ = 10373;
  FREQUENCY_UNITS_FROM_CUSTOM_SCALE = 10065;
}

enum FrequencyUnits2 {
  FREQUENCY_UNITS2_UNSPECIFIED = 0;
  FREQUENCY_UNITS2_HZ = 10373;
}

enum FrequencyUnits3 {
  FREQUENCY_UNITS3_UNSPECIFIED = 0;
  FREQUENCY_UNITS3_HZ = 10373;
  FREQUENCY_UNITS3_TICKS = 10304;
  FREQUENCY_UNITS3_FROM_CUSTOM_SCALE = 10065;
}

enum FuncGenType {
  FUNC_GEN_TYPE_UNSPECIFIED = 0;
  FUNC_GEN_TYPE_SINE = 14751;
  FUNC_GEN_TYPE_TRIANGLE = 14752;
  FUNC_GEN_TYPE_SQUARE = 14753;
  FUNC_GEN_TYPE_SAWTOOTH = 14754;
}

enum GpsSignalType1 {
  GPS_SIGNAL_TYPE1_UNSPECIFIED = 0;
  GPS_SIGNAL_TYPE1_IRIGB = 10070;
  GPS_SIGNAL_TYPE1_PPS = 10080;
  GPS_SIGNAL_TYPE1_NONE = 10230;
}

enum GroupBy {
  option allow_alias = true;
  GROUP_BY_UNSPECIFIED = 0;
  GROUP_BY_GROUP_BY_CHANNEL = 0;
  GROUP_BY_GROUP_BY_SCAN_NUMBER = 1;
}

enum InputTermCfgWithDefault {
  INPUT_TERM_CFG_WITH_DEFAULT_UNSPECIFIED = 0;
  INPUT_TERM_CFG_WITH_DEFAULT_CFG_DEFAULT = -1;
  INPUT_TERM_CFG_WITH_DEFAULT_RSE = 10083;
  INPUT_TERM_CFG_WITH_DEFAULT_NRSE = 10078;
  INPUT_TERM_CFG_WITH_DEFAULT_DIFF = 10106;
  INPUT_TERM_CFG_WITH_DEFAULT_PSEUDO_DIFF = 12529;
}

enum InvertPolarity {
  option allow_alias = true;
  INVERT_POLARITY_UNSPECIFIED = 0;
  INVERT_POLARITY_DO_NOT_INVERT_POLARITY = 0;
  INVERT_POLARITY_INVERT_POLARITY = 1;
}

enum LVDTSensitivityUnits1 {
  LVDT_SENSITIVITY_UNITS1_UNSPECIFIED = 0;
  LVDT_SENSITIVITY_UNITS1_M_VOLTS_PER_VOLT_PER_MILLIMETER = 12506;
  LVDT_SENSITIVITY_UNITS1_M_VOLTS_PER_VOLT_PER_MILLI_INCH = 12505;
}

enum LengthUnits2 {
  LENGTH_UNITS2_UNSPECIFIED = 0;
  LENGTH_UNITS2_METERS = 10219;
  LENGTH_UNITS2_INCHES = 10379;
  LENGTH_UNITS2_FROM_CUSTOM_SCALE = 10065;
}

enum LengthUnits3 {
  LENGTH_UNITS3_UNSPECIFIED = 0;
  LENGTH_UNITS3_METERS = 10219;
  LENGTH_UNITS3_INCHES = 10379;
  LENGTH_UNITS3_TICKS = 10304;
  LENGTH_UNITS3_FROM_CUSTOM_SCALE = 10065;
}

enum Level1 {
  LEVEL1_UNSPECIFIED = 0;
  LEVEL1_HIGH = 10192;
  LEVEL1_LOW = 10214;
}

enum LineGrouping {
  option allow_alias = true;
  LINE_GROUPING_UNSPECIFIED = 0;
  LINE_GROUPING_CHAN_FOR_ALL_LINES = 1;
  LINE_GROUPING_CHAN_PER_LINE = 0;
}

enum LoggingMode {
  LOGGING_MODE_UNSPECIFIED = 0;
  LOGGING_MODE_OFF = 10231;
  LOGGING_MODE_LOG = 15844;
  LOGGING_MODE_LOG_AND_READ = 15842;
}

enum LoggingOperation {
  LOGGING_OPERATION_UNSPECIFIED = 0;
  LOGGING_OPERATION_OPEN = 10437;
  LOGGING_OPERATION_OPEN_OR_CREATE = 15846;
  LOGGING_OPERATION_CREATE_OR_REPLACE = 15847;
  LOGGING_OPERATION_CREATE = 15848;
}

enum LogicFamily {
  LOGIC_FAMILY_UNSPECIFIED = 0;
  LOGIC_FAMILY_2POINT_5_V = 14620;
  LOGIC_FAMILY_3POINT_3_V = 14621;
  LOGIC_FAMILY_5_V = 14619;
}

enum Polarity2 {
  POLARITY2_UNSPECIFIED = 0;
  POLARITY2_ACTIVE_HIGH = 10095;
  POLARITY2_ACTIVE_LOW = 10096;
}

enum PressureUnits {
  PRESSURE_UNITS_UNSPECIFIED = 0;
  PRESSURE_UNITS_PASCALS = 10081;
  PRESSURE_UNITS_POUNDS_PER_SQUARE_INCH = 15879;
  PRESSURE_UNITS_BAR = 15880;
  PRESSURE_UNITS_FROM_CUSTOM_SCALE = 10065;
}

enum RTDType1 {
  RTD_TYPE1_UNSPECIFIED = 0;
  RTD_TYPE1_PT_3750 = 12481;
  RTD_TYPE1_PT_3851 = 10071;
  RTD_TYPE1_PT_3911 = 12482;
  RTD_TYPE1_PT_3916 = 10069;
  RTD_TYPE1_PT_3920 = 10053;
  RTD_TYPE1_PT_3928 = 12483;
  RTD_TYPE1_CUSTOM = 10137;
}

enum RVDTSensitivityUnits1 {
  RVDT_SENSITIVITY_UNITS1_UNSPECIFIED = 0;
  RVDT_SENSITIVITY_UNITS1_M_VOLTS_PER_VOLT_PER_DEGREE = 12507;
  RVDT_SENSITIVITY_UNITS1_M_VOLTS_PER_VOLT_PER_RADIAN = 12508;
}

enum ResistanceConfiguration {
  RESISTANCE_CONFIGURATION_UNSPECIFIED = 0;
  RESISTANCE_CONFIGURATION_2_WIRE = 2;
  RESISTANCE_CONFIGURATION_3_WIRE = 3;
  RESISTANCE_CONFIGURATION_4_WIRE = 4;
}

enum ResistanceUnits2 {
  RESISTANCE_UNITS2_UNSPECIFIED = 0;
  RESISTANCE_UNITS2_OHMS = 10384;
  RESISTANCE_UNITS2_FROM_CUSTOM_SCALE = 10065;
}

enum Signal {
  SIGNAL_UNSPECIFIED = 0;
  SIGNAL_AI_CONVERT_CLOCK = 12484;
  SIGNAL_10_M_HZ_REF_CLOCK = 12536;
  SIGNAL_20_M_HZ_TIMEBASE_CLOCK = 12486;
  SIGNAL_SAMPLE_CLOCK = 12487;
  SIGNAL_ADVANCE_TRIGGER = 12488;
  SIGNAL_REFERENCE_TRIGGER = 12490;
  SIGNAL_START_TRIGGER = 12491;
  SIGNAL_ADV_CMPLT_EVENT = 12492;
  SIGNAL_AI_HOLD_CMPLT_EVENT = 12493;
  SIGNAL_COUNTER_OUTPUT_EVENT = 12494;
  SIGNAL_CHANGE_DETECTION_EVENT = 12511;
  SIGNAL_WDT_EXPIRED_EVENT = 12512;
}

enum Slope1 {
  SLOPE1_UNSPECIFIED = 0;
  SLOPE1_RISING_SLOPE = 10280;
  SLOPE1_FALLING_SLOPE = 10171;
}

enum SoundPressureUnits1 {
  SOUND_PRESSURE_UNITS1_UNSPECIFIED = 0;
  SOUND_PRESSURE_UNITS1_PASCALS = 10081;
  SOUND_PRESSURE_UNITS1_FROM_CUSTOM_SCALE = 10065;
}

enum StrainGageBridgeType1 {
  STRAIN_GAGE_BRIDGE_TYPE1_UNSPECIFIED = 0;
  STRAIN_GAGE_BRIDGE_TYPE1_FULL_BRIDGE_I = 10183;
  STRAIN_GAGE_BRIDGE_TYPE1_FULL_BRIDGE_II = 10184;
  STRAIN_GAGE_BRIDGE_TYPE1_FULL_BRIDGE_III = 10185;
  STRAIN_GAGE_BRIDGE_TYPE1_HALF_BRIDGE_I = 10188;
  STRAIN_GAGE_BRIDGE_TYPE1_HALF_BRIDGE_II = 10189;
  STRAIN_GAGE_BRIDGE_TYPE1_QUARTER_BRIDGE_I = 10271;
  STRAIN_GAGE_BRIDGE_TYPE1_QUARTER_BRIDGE_II = 10272;
}

enum StrainGageRosetteType {
  STRAIN_GAGE_ROSETTE_TYPE_UNSPECIFIED = 0;
  STRAIN_GAGE_ROSETTE_TYPE_RECTANGULAR_ROSETTE = 15968;
  STRAIN_GAGE_ROSETTE_TYPE_DELTA_ROSETTE = 15969;
  STRAIN_GAGE_ROSETTE_TYPE_TEE_ROSETTE = 15970;
}

enum StrainUnits1 {
  STRAIN_UNITS1_UNSPECIFIED = 0;
  STRAIN_UNITS1_STRAIN = 10299;
  STRAIN_UNITS1_FROM_CUSTOM_SCALE = 10065;
}

enum TEDSUnits {
  TEDS_UNITS_UNSPECIFIED = 0;
  TEDS_UNITS_FROM_CUSTOM_SCALE = 10065;
  TEDS_UNITS_FROM_TEDS = 12516;
}

enum TaskControlAction {
  option allow_alias = true;
  TASK_CONTROL_ACTION_UNSPECIFIED = 0;
  TASK_CONTROL_ACTION_TASK_START = 0;
  TASK_CONTROL_ACTION_TASK_STOP = 1;
  TASK_CONTROL_ACTION_TASK_VERIFY = 2;
  TASK_CONTROL_ACTION_TASK_COMMIT = 3;
  TASK_CONTROL_ACTION_TASK_RESERVE = 4;
  TASK_CONTROL_ACTION_TASK_UNRESERVE = 5;
  TASK_CONTROL_ACTION_TASK_ABORT = 6;
}

enum TemperatureUnits {
  TEMPERATURE_UNITS_UNSPECIFIED = 0;
  TEMPERATURE_UNITS_DEG_C = 10143;
  TEMPERATURE_UNITS_DEG_F = 10144;
  TEMPERATURE_UNITS_KELVINS = 10325;
  TEMPERATURE_UNITS_DEG_R = 10145;
}

enum ThermocoupleType1 {
  THERMOCOUPLE_TYPE1_UNSPECIFIED = 0;
  THERMOCOUPLE_TYPE1_J_TYPE_TC = 10072;
  THERMOCOUPLE_TYPE1_K_TYPE_TC = 10073;
  THERMOCOUPLE_TYPE1_N_TYPE_TC = 10077;
  THERMOCOUPLE_TYPE1_R_TYPE_TC = 10082;
  THERMOCOUPLE_TYPE1_S_TYPE_TC = 10085;
  THERMOCOUPLE_TYPE1_T_TYPE_TC = 10086;
  THERMOCOUPLE_TYPE1_B_TYPE_TC = 10047;
  THERMOCOUPLE_TYPE1_E_TYPE_TC = 10055;
}

enum TimeUnits {
  TIME_UNITS_UNSPECIFIED = 0;
  TIME_UNITS_SECONDS = 10364;
  TIME_UNITS_FROM_CUSTOM_SCALE = 10065;
}

enum TimeUnits3 {
  TIME_UNITS3_UNSPECIFIED = 0;
  TIME_UNITS3_SECONDS = 10364;
  TIME_UNITS3_TICKS = 10304;
  TIME_UNITS3_FROM_CUSTOM_SCALE = 10065;
}

enum Timescale2 {
  TIMESCALE2_UNSPECIFIED = 0;
  TIMESCALE2_HOST_TIME = 16126;
  TIMESCALE2_IO_DEVICE_TIME = 16127;
}

enum TimestampEvent {
  TIMESTAMP_EVENT_UNSPECIFIED = 0;
  TIMESTAMP_EVENT_START_TRIGGER = 12491;
  TIMESTAMP_EVENT_REFERENCE_TRIGGER = 12490;
  TIMESTAMP_EVENT_ARM_START_TRIGGER = 14641;
  TIMESTAMP_EVENT_FIRST_SAMPLE_TIMESTAMP = 16130;
}

enum TorqueUnits {
  TORQUE_UNITS_UNSPECIFIED = 0;
  TORQUE_UNITS_NEWTON_METERS = 15881;
  TORQUE_UNITS_INCH_OUNCES = 15882;
  TORQUE_UNITS_INCH_POUNDS = 15883;
  TORQUE_UNITS_FOOT_POUNDS = 15884;
  TORQUE_UNITS_FROM_CUSTOM_SCALE = 10065;
}

enum UnitsPreScaled {
  UNITS_PRE_SCALED_UNSPECIFIED = 0;
  UNITS_PRE_SCALED_VOLTS = 10348;
  UNITS_PRE_SCALED_AMPS = 10342;
  UNITS_PRE_SCALED_DEG_F = 10144;
  UNITS_PRE_SCALED_DEG_C = 10143;
  UNITS_PRE_SCALED_DEG_R = 10145;
  UNITS_PRE_SCALED_KELVINS = 10325;
  UNITS_PRE_SCALED_STRAIN = 10299;
  UNITS_PRE_SCALED_OHMS = 10384;
  UNITS_PRE_SCALED_HZ = 10373;
  UNITS_PRE_SCALED_SECONDS = 10364;
  UNITS_PRE_SCALED_METERS = 10219;
  UNITS_PRE_SCALED_INCHES = 10379;
  UNITS_PRE_SCALED_DEGREES = 10146;
  UNITS_PRE_SCALED_RADIANS = 10273;
  UNITS_PRE_SCALED_TICKS = 10304;
  UNITS_PRE_SCALED_RPM = 16080;
  UNITS_PRE_SCALED_RADIANS_PER_SECOND = 16081;
  UNITS_PRE_SCALED_DEGREES_PER_SECOND = 16082;
  UNITS_PRE_SCALED_G = 10186;
  UNITS_PRE_SCALED_METERS_PER_SECOND_SQUARED = 12470;
  UNITS_PRE_SCALED_INCHES_PER_SECOND_SQUARED = 12471;
  UNITS_PRE_SCALED_METERS_PER_SECOND = 15959;
  UNITS_PRE_SCALED_INCHES_PER_SECOND = 15960;
  UNITS_PRE_SCALED_PASCALS = 10081;
  UNITS_PRE_SCALED_NEWTONS = 15875;
  UNITS_PRE_SCALED_POUNDS = 15876;
  UNITS_PRE_SCALED_KILOGRAM_FORCE = 15877;
  UNITS_PRE_SCALED_POUNDS_PER_SQUARE_INCH = 15879;
  UNITS_PRE_SCALED_BAR = 15880;
  UNITS_PRE_SCALED_NEWTON_METERS = 15881;
  UNITS_PRE_SCALED_INCH_OUNCES = 15882;
  UNITS_PRE_SCALED_INCH_POUNDS = 15883;
  UNITS_PRE_SCALED_FOOT_POUNDS = 15884;
  UNITS_PRE_SCALED_VOLTS_PER_VOLT = 15896;
  UNITS_PRE_SCALED_M_VOLTS_PER_VOLT = 15897;
  UNITS_PRE_SCALED_COULOMBS = 16102;
  UNITS_PRE_SCALED_PICO_COULOMBS = 16103;
  UNITS_PRE_SCALED_FROM_TEDS = 12516;
}

enum VelocityIEPESensorSensitivityUnits {
  VELOCITY_IEPE_SENSOR_SENSITIVITY_UNITS_UNSPECIFIED = 0;
  VELOCITY_IEPE_SENSOR_SENSITIVITY_UNITS_MILLIVOLTS_PER_MILLIMETER_PER_SECOND = 15963;
  VELOCITY_IEPE_SENSOR_SENSITIVITY_UNITS_MILLI_VOLTS_PER_INCH_PER_SECOND = 15964;
}

enum VelocityUnits {
  VELOCITY_UNITS_UNSPECIFIED = 0;
  VELOCITY_UNITS_METERS_PER_SECOND = 15959;
  VELOCITY_UNITS_INCHES_PER_SECOND = 15960;
  VELOCITY_UNITS_FROM_CUSTOM_SCALE = 10065;
}

enum VoltageUnits2 {
  VOLTAGE_UNITS2_UNSPECIFIED = 0;
  VOLTAGE_UNITS2_VOLTS = 10348;
  VOLTAGE_UNITS2_FROM_CUSTOM_SCALE = 10065;
}

enum WatchdogControlAction {
  option allow_alias = true;
  WATCHDOG_CONTROL_ACTION_UNSPECIFIED = 0;
  WATCHDOG_CONTROL_ACTION_RESET_TIMER = 0;
  WATCHDOG_CONTROL_ACTION_CLEAR_EXPIRATION = 1;
}

enum WindowTriggerCondition1 {
  WINDOW_TRIGGER_CONDITION1_UNSPECIFIED = 0;
  WINDOW_TRIGGER_CONDITION1_ENTERING_WIN = 10163;
  WINDOW_TRIGGER_CONDITION1_LEAVING_WIN = 10208;
}

message AddGlobalChansToTaskRequest {
  nidevice_grpc.Session task = 1;
  string channel_names = 2;
}

message AddGlobalChansToTaskResponse {
  int32 status = 1;
}

message AddNetworkDeviceRequest {
  string ip_address = 1;
  string device_name = 2;
  bool attempt_reservation = 3;
  double timeout = 4;
  uint32 device_name_out_buffer_size = 5;
}

message AddNetworkDeviceResponse {
  int32 status = 1;
  string device_name_out = 2;
}

message CalculateReversePolyCoeffRequest {
  repeated double forward_coeffs = 1;
  uint32 num_forward_coeffs_in = 2;
  double min_val_x = 3;
  double max_val_x = 4;
  int32 num_points_to_compute = 5;
  int32 reverse_poly_order = 6;
}

message CalculateReversePolyCoeffResponse {
  int32 status = 1;
  repeated double reverse_coeffs = 2;
}

message CfgAnlgEdgeRefTrigRequest {
  nidevice_grpc.Session task = 1;
  string trigger_source = 2;
  oneof trigger_slope_enum {
    Slope1 trigger_slope = 3;
    int32 trigger_slope_raw = 4;
  }
  double trigger_level = 5;
  uint32 pretrigger_samples = 6;
}

message CfgAnlgEdgeRefTrigResponse {
  int32 status = 1;
}

message CfgAnlgEdgeStartTrigRequest {
  nidevice_grpc.Session task = 1;
  string trigger_source = 2;
  oneof trigger_slope_enum {
    Slope1 trigger_slope = 3;
    int32 trigger_slope_raw = 4;
  }
  double trigger_level = 5;
}

message CfgAnlgEdgeStartTrigResponse {
  int32 status = 1;
}

message CfgAnlgMultiEdgeRefTrigRequest {
  nidevice_grpc.Session task = 1;
  string trigger_sources = 2;
  repeated int32 trigger_slope_array = 3;
  repeated double trigger_level_array = 4;
  uint32 pretrigger_samples = 5;
  uint32 array_size = 6;
}

message CfgAnlgMultiEdgeRefTrigResponse {
  int32 status = 1;
}

message CfgAnlgMultiEdgeStartTrigRequest {
  nidevice_grpc.Session task = 1;
  string trigger_sources = 2;
  repeated int32 trigger_slope_array = 3;
  repeated double trigger_level_array = 4;
  uint32 array_size = 5;
}

message CfgAnlgMultiEdgeStartTrigResponse {
  int32 status = 1;
}

message CfgAnlgWindowRefTrigRequest {
  nidevice_grpc.Session task = 1;
  string trigger_source = 2;
  oneof trigger_when_enum {
    WindowTriggerCondition1 trigger_when = 3;
    int32 trigger_when_raw = 4;
  }
  double window_top = 5;
  double window_bottom = 6;
  uint32 pretrigger_samples = 7;
}

message CfgAnlgWindowRefTrigResponse {
  int32 status = 1;
}

message CfgAnlgWindowStartTrigRequest {
  nidevice_grpc.Session task = 1;
  string trigger_source = 2;
  oneof trigger_when_enum {
    WindowTriggerCondition1 trigger_when = 3;
    int32 trigger_when_raw = 4;
  }
  double window_top = 5;
  double window_bottom = 6;
}

message CfgAnlgWindowStartTrigResponse {
  int32 status = 1;
}

message CfgBurstHandshakingTimingExportClockRequest {
  nidevice_grpc.Session task = 1;
  oneof sample_mode_enum {
    AcquisitionType sample_mode = 2;
    int32 sample_mode_raw = 3;
  }
  uint64 samps_per_chan = 4;
  double sample_clk_rate = 5;
  string sample_clk_outp_term = 6;
  oneof sample_clk_pulse_polarity_enum {
    Polarity2 sample_clk_pulse_polarity = 7;
    int32 sample_clk_pulse_polarity_raw = 8;
  }
  oneof pause_when_enum {
    Level1 pause_when = 9;
    int32 pause_when_raw = 10;
  }
  oneof ready_event_active_level_enum {
    Polarity2 ready_event_active_level = 11;
    int32 ready_event_active_level_raw = 12;
  }
}

message CfgBurstHandshakingTimingExportClockResponse {
  int32 status = 1;
}

message CfgBurstHandshakingTimingImportClockRequest {
  nidevice_grpc.Session task = 1;
  oneof sample_mode_enum {
    AcquisitionType sample_mode = 2;
    int32 sample_mode_raw = 3;
  }
  uint64 samps_per_chan = 4;
  double sample_clk_rate = 5;
  string sample_clk_src = 6;
  oneof sample_clk_active_edge_enum {
    Edge1 sample_clk_active_edge = 7;
    int32 sample_clk_active_edge_raw = 8;
  }
  oneof pause_when_enum {
    Level1 pause_when = 9;
    int32 pause_when_raw = 10;
  }
  oneof ready_event_active_level_enum {
    Polarity2 ready_event_active_level = 11;
    int32 ready_event_active_level_raw = 12;
  }
}

message CfgBurstHandshakingTimingImportClockResponse {
  int32 status = 1;
}

message CfgChangeDetectionTimingRequest {
  nidevice_grpc.Session task = 1;
  string rising_edge_chan = 2;
  string falling_edge_chan = 3;
  oneof sample_mode_enum {
    AcquisitionType sample_mode = 4;
    int32 sample_mode_raw = 5;
  }
  uint64 samps_per_chan = 6;
}

message CfgChangeDetectionTimingResponse {
  int32 status = 1;
}

message CfgDigEdgeRefTrigRequest {
  nidevice_grpc.Session task = 1;
  string trigger_source = 2;
  oneof trigger_edge_enum {
    Edge1 trigger_edge = 3;
    int32 trigger_edge_raw = 4;
  }
  uint32 pretrigger_samples = 5;
}

message CfgDigEdgeRefTrigResponse {
  int32 status = 1;
}

message CfgDigEdgeStartTrigRequest {
  nidevice_grpc.Session task = 1;
  string trigger_source = 2;
  oneof trigger_edge_enum {
    Edge1 trigger_edge = 3;
    int32 trigger_edge_raw = 4;
  }
}

message CfgDigEdgeStartTrigResponse {
  int32 status = 1;
}

message CfgDigPatternRefTrigRequest {
  nidevice_grpc.Session task = 1;
  string trigger_source = 2;
  string trigger_pattern = 3;
  oneof trigger_when_enum {
    DigitalPatternCondition1 trigger_when = 4;
    int32 trigger_when_raw = 5;
  }
  uint32 pretrigger_samples = 6;
}

message CfgDigPatternRefTrigResponse {
  int32 status = 1;
}

message CfgDigPatternStartTrigRequest {
  nidevice_grpc.Session task = 1;
  string trigger_source = 2;
  string trigger_pattern = 3;
  oneof trigger_when_enum {
    DigitalPatternCondition1 trigger_when = 4;
    int32 trigger_when_raw = 5;
  }
}

message CfgDigPatternStartTrigResponse {
  int32 status = 1;
}

message CfgHandshakingTimingRequest {
  nidevice_grpc.Session task = 1;
  oneof sample_mode_enum {
    AcquisitionType sample_mode = 2;
    int32 sample_mode_raw = 3;
  }
  uint64 samps_per_chan = 4;
}

message CfgHandshakingTimingResponse {
  int32 status = 1;
}

message CfgImplicitTimingRequest {
  nidevice_grpc.Session task = 1;
  oneof sample_mode_enum {
    AcquisitionType sample_mode = 2;
    int32 sample_mode_raw = 3;
  }
  uint64 samps_per_chan = 4;
}

message CfgImplicitTimingResponse {
  int32 status = 1;
}

message CfgInputBufferRequest {
  nidevice_grpc.Session task = 1;
  uint32 num_samps_per_chan = 2;
}

message CfgInputBufferResponse {
  int32 status = 1;
}

message CfgOutputBufferRequest {
  nidevice_grpc.Session task = 1;
  uint32 num_samps_per_chan = 2;
}

message CfgOutputBufferResponse {
  int32 status = 1;
}

message CfgPipelinedSampClkTimingRequest {
  nidevice_grpc.Session task = 1;
  string source = 2;
  double rate = 3;
  oneof active_edge_enum {
    Edge1 active_edge = 4;
    int32 active_edge_raw = 5;
  }
  oneof sample_mode_enum {
    AcquisitionType sample_mode = 6;
    int32 sample_mode_raw = 7;
  }
  uint64 samps_per_chan = 8;
}

message CfgPipelinedSampClkTimingResponse {
  int32 status = 1;
}

message CfgSampClkTimingRequest {
  nidevice_grpc.Session task = 1;
  string source = 2;
  double rate = 3;
  oneof active_edge_enum {
    Edge1 active_edge = 4;
    int32 active_edge_raw = 5;
  }
  oneof sample_mode_enum {
    AcquisitionType sample_mode = 6;
    int32 sample_mode_raw = 7;
  }
  uint64 samps_per_chan = 8;
}

message CfgSampClkTimingResponse {
  int32 status = 1;
}

message CfgTimeStartTrigRequest {
  nidevice_grpc.Session task = 1;
  google.protobuf.Timestamp when = 2;
  oneof timescale_enum {
    Timescale2 timescale = 3;
    int32 timescale_raw = 4;
  }
}

message CfgTimeStartTrigResponse {
  int32 status = 1;
}

message CfgWatchdogAOExpirStatesRequest {
  nidevice_grpc.Session task = 1;
  string channel_names = 2;
  repeated double expir_state_array = 3;
  repeated int32 output_type_array = 4;
  uint32 array_size = 5;
}

message CfgWatchdogAOExpirStatesResponse {
  int32 status = 1;
}

message CfgWatchdogCOExpirStatesRequest {
  nidevice_grpc.Session task = 1;
  string channel_names = 2;
  repeated int32 expir_state_array = 3;
  uint32 array_size = 4;
}

message CfgWatchdogCOExpirStatesResponse {
  int32 status = 1;
}

message CfgWatchdogDOExpirStatesRequest {
  nidevice_grpc.Session task = 1;
  string channel_names = 2;
  repeated int32 expir_state_array = 3;
  uint32 array_size = 4;
}

message CfgWatchdogDOExpirStatesResponse {
  int32 status = 1;
}

message ClearTaskRequest {
  nidevice_grpc.Session task = 1;
}

message ClearTaskResponse {
  int32 status = 1;
}

message ConfigureLoggingRequest {
  nidevice_grpc.Session task = 1;
  string file_path = 2;
  oneof logging_mode_enum {
    LoggingMode logging_mode = 3;
    int32 logging_mode_raw = 4;
  }
  string group_name = 5;
  oneof operation_enum {
    LoggingOperation operation = 6;
    int32 operation_raw = 7;
  }
}

message ConfigureLoggingResponse {
  int32 status = 1;
}

message ConnectTermsRequest {
  string source_terminal = 1;
  string destination_terminal = 2;
  oneof signal_modifiers_enum {
    InvertPolarity signal_modifiers = 3;
    int32 signal_modifiers_raw = 4;
  }
}

message ConnectTermsResponse {
  int32 status = 1;
}

message ControlWatchdogTaskRequest {
  nidevice_grpc.Session task = 1;
  oneof action_enum {
    WatchdogControlAction action = 2;
    int32 action_raw = 3;
  }
}

message ControlWatchdogTaskResponse {
  int32 status = 1;
}

message CreateAIAccel4WireDCVoltageChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    AccelUnits2 units = 8;
    int32 units_raw = 9;
  }
  double sensitivity = 10;
  oneof sensitivity_units_enum {
    AccelSensitivityUnits1 sensitivity_units = 11;
    int32 sensitivity_units_raw = 12;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 13;
    int32 voltage_excit_source_raw = 14;
  }
  double voltage_excit_val = 15;
  bool use_excit_for_scaling = 16;
  string custom_scale_name = 17;
}

message CreateAIAccel4WireDCVoltageChanResponse {
  int32 status = 1;
}

message CreateAIAccelChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    AccelUnits2 units = 8;
    int32 units_raw = 9;
  }
  double sensitivity = 10;
  oneof sensitivity_units_enum {
    AccelSensitivityUnits1 sensitivity_units = 11;
    int32 sensitivity_units_raw = 12;
  }
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 13;
    int32 current_excit_source_raw = 14;
  }
  double current_excit_val = 15;
  string custom_scale_name = 16;
}

message CreateAIAccelChanResponse {
  int32 status = 1;
}

message CreateAIAccelChargeChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    AccelUnits2 units = 8;
    int32 units_raw = 9;
  }
  double sensitivity = 10;
  oneof sensitivity_units_enum {
    AccelChargeSensitivityUnits sensitivity_units = 11;
    int32 sensitivity_units_raw = 12;
  }
  string custom_scale_name = 13;
}

message CreateAIAccelChargeChanResponse {
  int32 status = 1;
}

message CreateAIBridgeChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    BridgeUnits units = 6;
    int32 units_raw = 7;
  }
  oneof bridge_config_enum {
    BridgeConfiguration1 bridge_config = 8;
    int32 bridge_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double nominal_bridge_resistance = 13;
  string custom_scale_name = 14;
}

message CreateAIBridgeChanResponse {
  int32 status = 1;
}

message CreateAIChargeChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    ChargeUnits units = 8;
    int32 units_raw = 9;
  }
  string custom_scale_name = 10;
}

message CreateAIChargeChanResponse {
  int32 status = 1;
}

message CreateAICurrentChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    CurrentUnits2 units = 8;
    int32 units_raw = 9;
  }
  oneof shunt_resistor_loc_enum {
    CurrentShuntResistorLocationWithDefault shunt_resistor_loc = 10;
    int32 shunt_resistor_loc_raw = 11;
  }
  double ext_shunt_resistor_val = 12;
  string custom_scale_name = 13;
}

message CreateAICurrentChanResponse {
  int32 status = 1;
}

message CreateAICurrentRMSChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    CurrentUnits2 units = 8;
    int32 units_raw = 9;
  }
  oneof shunt_resistor_loc_enum {
    CurrentShuntResistorLocationWithDefault shunt_resistor_loc = 10;
    int32 shunt_resistor_loc_raw = 11;
  }
  double ext_shunt_resistor_val = 12;
  string custom_scale_name = 13;
}

message CreateAICurrentRMSChanResponse {
  int32 status = 1;
}

message CreateAIForceBridgePolynomialChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    ForceUnits units = 6;
    int32 units_raw = 7;
  }
  oneof bridge_config_enum {
    BridgeConfiguration1 bridge_config = 8;
    int32 bridge_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double nominal_bridge_resistance = 13;
  repeated double forward_coeffs = 14;
  uint32 num_forward_coeffs = 15;
  repeated double reverse_coeffs = 16;
  uint32 num_reverse_coeffs = 17;
  oneof electrical_units_enum {
    BridgeElectricalUnits electrical_units = 18;
    int32 electrical_units_raw = 19;
  }
  oneof physical_units_enum {
    BridgePhysicalUnits physical_units = 20;
    int32 physical_units_raw = 21;
  }
  string custom_scale_name = 22;
}

message CreateAIForceBridgePolynomialChanResponse {
  int32 status = 1;
}

message CreateAIForceBridgeTableChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    ForceUnits units = 6;
    int32 units_raw = 7;
  }
  oneof bridge_config_enum {
    BridgeConfiguration1 bridge_config = 8;
    int32 bridge_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double nominal_bridge_resistance = 13;
  repeated double electrical_vals = 14;
  uint32 num_electrical_vals = 15;
  oneof electrical_units_enum {
    BridgeElectricalUnits electrical_units = 16;
    int32 electrical_units_raw = 17;
  }
  repeated double physical_vals = 18;
  uint32 num_physical_vals = 19;
  oneof physical_units_enum {
    BridgePhysicalUnits physical_units = 20;
    int32 physical_units_raw = 21;
  }
  string custom_scale_name = 22;
}

message CreateAIForceBridgeTableChanResponse {
  int32 status = 1;
}

message CreateAIForceBridgeTwoPointLinChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    ForceUnits units = 6;
    int32 units_raw = 7;
  }
  oneof bridge_config_enum {
    BridgeConfiguration1 bridge_config = 8;
    int32 bridge_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double nominal_bridge_resistance = 13;
  double first_electrical_val = 14;
  double second_electrical_val = 15;
  oneof electrical_units_enum {
    BridgeElectricalUnits electrical_units = 16;
    int32 electrical_units_raw = 17;
  }
  double first_physical_val = 18;
  double second_physical_val = 19;
  oneof physical_units_enum {
    BridgePhysicalUnits physical_units = 20;
    int32 physical_units_raw = 21;
  }
  string custom_scale_name = 22;
}

message CreateAIForceBridgeTwoPointLinChanResponse {
  int32 status = 1;
}

message CreateAIForceIEPEChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    ForceIEPEUnits units = 8;
    int32 units_raw = 9;
  }
  double sensitivity = 10;
  oneof sensitivity_units_enum {
    ForceIEPESensorSensitivityUnits sensitivity_units = 11;
    int32 sensitivity_units_raw = 12;
  }
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 13;
    int32 current_excit_source_raw = 14;
  }
  double current_excit_val = 15;
  string custom_scale_name = 16;
}

message CreateAIForceIEPEChanResponse {
  int32 status = 1;
}

message CreateAIFreqVoltageChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    FrequencyUnits units = 6;
    int32 units_raw = 7;
  }
  double threshold_level = 8;
  double hysteresis = 9;
  string custom_scale_name = 10;
}

message CreateAIFreqVoltageChanResponse {
  int32 status = 1;
}

message CreateAIMicrophoneChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  oneof units_enum {
    SoundPressureUnits1 units = 6;
    int32 units_raw = 7;
  }
  double mic_sensitivity = 8;
  double max_snd_press_level = 9;
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 10;
    int32 current_excit_source_raw = 11;
  }
  double current_excit_val = 12;
  string custom_scale_name = 13;
}

message CreateAIMicrophoneChanResponse {
  int32 status = 1;
}

message CreateAIPosEddyCurrProxProbeChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    LengthUnits2 units = 6;
    int32 units_raw = 7;
  }
  double sensitivity = 8;
  oneof sensitivity_units_enum {
    EddyCurrentProxProbeSensitivityUnits sensitivity_units = 9;
    int32 sensitivity_units_raw = 10;
  }
  string custom_scale_name = 11;
}

message CreateAIPosEddyCurrProxProbeChanResponse {
  int32 status = 1;
}

message CreateAIPosLVDTChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    LengthUnits2 units = 6;
    int32 units_raw = 7;
  }
  double sensitivity = 8;
  oneof sensitivity_units_enum {
    LVDTSensitivityUnits1 sensitivity_units = 9;
    int32 sensitivity_units_raw = 10;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 11;
    int32 voltage_excit_source_raw = 12;
  }
  double voltage_excit_val = 13;
  double voltage_excit_freq = 14;
  oneof ac_excit_wire_mode_enum {
    ACExcitWireMode ac_excit_wire_mode = 15;
    int32 ac_excit_wire_mode_raw = 16;
  }
  string custom_scale_name = 17;
}

message CreateAIPosLVDTChanResponse {
  int32 status = 1;
}

message CreateAIPosRVDTChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    AngleUnits1 units = 6;
    int32 units_raw = 7;
  }
  double sensitivity = 8;
  oneof sensitivity_units_enum {
    RVDTSensitivityUnits1 sensitivity_units = 9;
    int32 sensitivity_units_raw = 10;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 11;
    int32 voltage_excit_source_raw = 12;
  }
  double voltage_excit_val = 13;
  double voltage_excit_freq = 14;
  oneof ac_excit_wire_mode_enum {
    ACExcitWireMode ac_excit_wire_mode = 15;
    int32 ac_excit_wire_mode_raw = 16;
  }
  string custom_scale_name = 17;
}

message CreateAIPosRVDTChanResponse {
  int32 status = 1;
}

message CreateAIPressureBridgePolynomialChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    PressureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof bridge_config_enum {
    BridgeConfiguration1 bridge_config = 8;
    int32 bridge_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double nominal_bridge_resistance = 13;
  repeated double forward_coeffs = 14;
  uint32 num_forward_coeffs = 15;
  repeated double reverse_coeffs = 16;
  uint32 num_reverse_coeffs = 17;
  oneof electrical_units_enum {
    BridgeElectricalUnits electrical_units = 18;
    int32 electrical_units_raw = 19;
  }
  oneof physical_units_enum {
    BridgePhysicalUnits physical_units = 20;
    int32 physical_units_raw = 21;
  }
  string custom_scale_name = 22;
}

message CreateAIPressureBridgePolynomialChanResponse {
  int32 status = 1;
}

message CreateAIPressureBridgeTableChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    PressureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof bridge_config_enum {
    BridgeConfiguration1 bridge_config = 8;
    int32 bridge_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double nominal_bridge_resistance = 13;
  repeated double electrical_vals = 14;
  uint32 num_electrical_vals = 15;
  oneof electrical_units_enum {
    BridgeElectricalUnits electrical_units = 16;
    int32 electrical_units_raw = 17;
  }
  repeated double physical_vals = 18;
  uint32 num_physical_vals = 19;
  oneof physical_units_enum {
    BridgePhysicalUnits physical_units = 20;
    int32 physical_units_raw = 21;
  }
  string custom_scale_name = 22;
}

message CreateAIPressureBridgeTableChanResponse {
  int32 status = 1;
}

message CreateAIPressureBridgeTwoPointLinChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    PressureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof bridge_config_enum {
    BridgeConfiguration1 bridge_config = 8;
    int32 bridge_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double nominal_bridge_resistance = 13;
  double first_electrical_val = 14;
  double second_electrical_val = 15;
  oneof electrical_units_enum {
    BridgeElectricalUnits electrical_units = 16;
    int32 electrical_units_raw = 17;
  }
  double first_physical_val = 18;
  double second_physical_val = 19;
  oneof physical_units_enum {
    BridgePhysicalUnits physical_units = 20;
    int32 physical_units_raw = 21;
  }
  string custom_scale_name = 22;
}

message CreateAIPressureBridgeTwoPointLinChanResponse {
  int32 status = 1;
}

message CreateAIRTDChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TemperatureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof rtd_type_enum {
    RTDType1 rtd_type = 8;
    int32 rtd_type_raw = 9;
  }
  oneof resistance_config_enum {
    ResistanceConfiguration resistance_config = 10;
    int32 resistance_config_raw = 11;
  }
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 12;
    int32 current_excit_source_raw = 13;
  }
  double current_excit_val = 14;
  double r0 = 15;
}

message CreateAIRTDChanResponse {
  int32 status = 1;
}

message CreateAIResistanceChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    ResistanceUnits2 units = 6;
    int32 units_raw = 7;
  }
  oneof resistance_config_enum {
    ResistanceConfiguration resistance_config = 8;
    int32 resistance_config_raw = 9;
  }
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 10;
    int32 current_excit_source_raw = 11;
  }
  double current_excit_val = 12;
  string custom_scale_name = 13;
}

message CreateAIResistanceChanResponse {
  int32 status = 1;
}

message CreateAIRosetteStrainGageChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof rosette_type_enum {
    StrainGageRosetteType rosette_type = 6;
    int32 rosette_type_raw = 7;
  }
  double gage_orientation = 8;
  repeated int32 rosette_meas_types = 9;
  uint32 num_rosette_meas_types = 10;
  oneof strain_config_enum {
    StrainGageBridgeType1 strain_config = 11;
    int32 strain_config_raw = 12;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 13;
    int32 voltage_excit_source_raw = 14;
  }
  double voltage_excit_val = 15;
  double gage_factor = 16;
  double nominal_gage_resistance = 17;
  double poisson_ratio = 18;
  double lead_wire_resistance = 19;
}

message CreateAIRosetteStrainGageChanResponse {
  int32 status = 1;
}

message CreateAIStrainGageChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    StrainUnits1 units = 6;
    int32 units_raw = 7;
  }
  oneof strain_config_enum {
    StrainGageBridgeType1 strain_config = 8;
    int32 strain_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double gage_factor = 13;
  double initial_bridge_voltage = 14;
  double nominal_gage_resistance = 15;
  double poisson_ratio = 16;
  double lead_wire_resistance = 17;
  string custom_scale_name = 18;
}

message CreateAIStrainGageChanResponse {
  int32 status = 1;
}

message CreateAITempBuiltInSensorChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof units_enum {
    TemperatureUnits units = 4;
    int32 units_raw = 5;
  }
}

message CreateAITempBuiltInSensorChanResponse {
  int32 status = 1;
}

message CreateAIThrmcplChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TemperatureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof thermocouple_type_enum {
    ThermocoupleType1 thermocouple_type = 8;
    int32 thermocouple_type_raw = 9;
  }
  oneof cjc_source_enum {
    CJCSource1 cjc_source = 10;
    int32 cjc_source_raw = 11;
  }
  double cjc_val = 12;
  string cjc_channel = 13;
}

message CreateAIThrmcplChanResponse {
  int32 status = 1;
}

message CreateAIThrmstrChanIexRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TemperatureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof resistance_config_enum {
    ResistanceConfiguration resistance_config = 8;
    int32 resistance_config_raw = 9;
  }
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 10;
    int32 current_excit_source_raw = 11;
  }
  double current_excit_val = 12;
  double a = 13;
  double b = 14;
  double c = 15;
}

message CreateAIThrmstrChanIexResponse {
  int32 status = 1;
}

message CreateAIThrmstrChanVexRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TemperatureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof resistance_config_enum {
    ResistanceConfiguration resistance_config = 8;
    int32 resistance_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double a = 13;
  double b = 14;
  double c = 15;
  double r1 = 16;
}

message CreateAIThrmstrChanVexResponse {
  int32 status = 1;
}

message CreateAITorqueBridgePolynomialChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TorqueUnits units = 6;
    int32 units_raw = 7;
  }
  oneof bridge_config_enum {
    BridgeConfiguration1 bridge_config = 8;
    int32 bridge_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double nominal_bridge_resistance = 13;
  repeated double forward_coeffs = 14;
  uint32 num_forward_coeffs = 15;
  repeated double reverse_coeffs = 16;
  uint32 num_reverse_coeffs = 17;
  oneof electrical_units_enum {
    BridgeElectricalUnits electrical_units = 18;
    int32 electrical_units_raw = 19;
  }
  oneof physical_units_enum {
    BridgePhysicalUnits physical_units = 20;
    int32 physical_units_raw = 21;
  }
  string custom_scale_name = 22;
}

message CreateAITorqueBridgePolynomialChanResponse {
  int32 status = 1;
}

message CreateAITorqueBridgeTableChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TorqueUnits units = 6;
    int32 units_raw = 7;
  }
  oneof bridge_config_enum {
    BridgeConfiguration1 bridge_config = 8;
    int32 bridge_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double nominal_bridge_resistance = 13;
  repeated double electrical_vals = 14;
  uint32 num_electrical_vals = 15;
  oneof electrical_units_enum {
    BridgeElectricalUnits electrical_units = 16;
    int32 electrical_units_raw = 17;
  }
  repeated double physical_vals = 18;
  uint32 num_physical_vals = 19;
  oneof physical_units_enum {
    BridgePhysicalUnits physical_units = 20;
    int32 physical_units_raw = 21;
  }
  string custom_scale_name = 22;
}

message CreateAITorqueBridgeTableChanResponse {
  int32 status = 1;
}

message CreateAITorqueBridgeTwoPointLinChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TorqueUnits units = 6;
    int32 units_raw = 7;
  }
  oneof bridge_config_enum {
    BridgeConfiguration1 bridge_config = 8;
    int32 bridge_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double nominal_bridge_resistance = 13;
  double first_electrical_val = 14;
  double second_electrical_val = 15;
  oneof electrical_units_enum {
    BridgeElectricalUnits electrical_units = 16;
    int32 electrical_units_raw = 17;
  }
  double first_physical_val = 18;
  double second_physical_val = 19;
  oneof physical_units_enum {
    BridgePhysicalUnits physical_units = 20;
    int32 physical_units_raw = 21;
  }
  string custom_scale_name = 22;
}

message CreateAITorqueBridgeTwoPointLinChanResponse {
  int32 status = 1;
}

message CreateAIVelocityIEPEChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    VelocityUnits units = 8;
    int32 units_raw = 9;
  }
  double sensitivity = 10;
  oneof sensitivity_units_enum {
    VelocityIEPESensorSensitivityUnits sensitivity_units = 11;
    int32 sensitivity_units_raw = 12;
  }
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 13;
    int32 current_excit_source_raw = 14;
  }
  double current_excit_val = 15;
  string custom_scale_name = 16;
}

message CreateAIVelocityIEPEChanResponse {
  int32 status = 1;
}

message CreateAIVoltageChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    VoltageUnits2 units = 8;
    int32 units_raw = 9;
  }
  string custom_scale_name = 10;
}

message CreateAIVoltageChanResponse {
  int32 status = 1;
}

message CreateAIVoltageChanWithExcitRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    VoltageUnits2 units = 8;
    int32 units_raw = 9;
  }
  oneof bridge_config_enum {
    BridgeConfiguration1 bridge_config = 10;
    int32 bridge_config_raw = 11;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 12;
    int32 voltage_excit_source_raw = 13;
  }
  double voltage_excit_val = 14;
  bool use_excit_for_scaling = 15;
  string custom_scale_name = 16;
}

message CreateAIVoltageChanWithExcitResponse {
  int32 status = 1;
}

message CreateAIVoltageRMSChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    VoltageUnits2 units = 8;
    int32 units_raw = 9;
  }
  string custom_scale_name = 10;
}

message CreateAIVoltageRMSChanResponse {
  int32 status = 1;
}

message CreateAOCurrentChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    CurrentUnits2 units = 6;
    int32 units_raw = 7;
  }
  string custom_scale_name = 8;
}

message CreateAOCurrentChanResponse {
  int32 status = 1;
}

message CreateAOFuncGenChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof type_enum {
    FuncGenType type = 4;
    int32 type_raw = 5;
  }
  double freq = 6;
  double amplitude = 7;
  double offset = 8;
}

message CreateAOFuncGenChanResponse {
  int32 status = 1;
}

message CreateAOVoltageChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    VoltageUnits2 units = 6;
    int32 units_raw = 7;
  }
  string custom_scale_name = 8;
}

message CreateAOVoltageChanResponse {
  int32 status = 1;
}

message CreateCIAngEncoderChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  oneof decoding_type_enum {
    EncoderType2 decoding_type = 4;
    int32 decoding_type_raw = 5;
  }
  bool zidx_enable = 6;
  double zidx_val = 7;
  oneof zidx_phase_enum {
    EncoderZIndexPhase1 zidx_phase = 8;
    int32 zidx_phase_raw = 9;
  }
  oneof units_enum {
    AngleUnits2 units = 10;
    int32 units_raw = 11;
  }
  uint32 pulses_per_rev = 12;
  double initial_angle = 13;
  string custom_scale_name = 14;
}

message CreateCIAngEncoderChanResponse {
  int32 status = 1;
}

message CreateCIAngVelocityChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof decoding_type_enum {
    EncoderType2 decoding_type = 6;
    int32 decoding_type_raw = 7;
  }
  oneof units_enum {
    AngularVelocityUnits units = 8;
    int32 units_raw = 9;
  }
  uint32 pulses_per_rev = 10;
  string custom_scale_name = 11;
}

message CreateCIAngVelocityChanResponse {
  int32 status = 1;
}

message CreateCICountEdgesChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  oneof edge_enum {
    Edge1 edge = 4;
    int32 edge_raw = 5;
  }
  uint32 initial_count = 6;
  oneof count_direction_enum {
    CountDirection1 count_direction = 7;
    int32 count_direction_raw = 8;
  }
}

message CreateCICountEdgesChanResponse {
  int32 status = 1;
}

message CreateCIDutyCycleChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  double min_freq = 4;
  double max_freq = 5;
  oneof edge_enum {
    Edge1 edge = 6;
    int32 edge_raw = 7;
  }
  string custom_scale_name = 8;
}

message CreateCIDutyCycleChanResponse {
  int32 status = 1;
}

message CreateCIFreqChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    FrequencyUnits3 units = 6;
    int32 units_raw = 7;
  }
  oneof edge_enum {
    Edge1 edge = 8;
    int32 edge_raw = 9;
  }
  oneof meas_method_enum {
    CounterFrequencyMethod meas_method = 10;
    int32 meas_method_raw = 11;
  }
  double meas_time = 12;
  uint32 divisor = 13;
  string custom_scale_name = 14;
}

message CreateCIFreqChanResponse {
  int32 status = 1;
}

message CreateCIGPSTimestampChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  oneof units_enum {
    TimeUnits units = 4;
    int32 units_raw = 5;
  }
  oneof sync_method_enum {
    GpsSignalType1 sync_method = 6;
    int32 sync_method_raw = 7;
  }
  string custom_scale_name = 8;
}

message CreateCIGPSTimestampChanResponse {
  int32 status = 1;
}

message CreateCILinEncoderChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  oneof decoding_type_enum {
    EncoderType2 decoding_type = 4;
    int32 decoding_type_raw = 5;
  }
  bool zidx_enable = 6;
  double zidx_val = 7;
  oneof zidx_phase_enum {
    EncoderZIndexPhase1 zidx_phase = 8;
    int32 zidx_phase_raw = 9;
  }
  oneof units_enum {
    LengthUnits3 units = 10;
    int32 units_raw = 11;
  }
  double dist_per_pulse = 12;
  double initial_pos = 13;
  string custom_scale_name = 14;
}

message CreateCILinEncoderChanResponse {
  int32 status = 1;
}

message CreateCILinVelocityChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof decoding_type_enum {
    EncoderType2 decoding_type = 6;
    int32 decoding_type_raw = 7;
  }
  oneof units_enum {
    VelocityUnits units = 8;
    int32 units_raw = 9;
  }
  double dist_per_pulse = 10;
  string custom_scale_name = 11;
}

message CreateCILinVelocityChanResponse {
  int32 status = 1;
}

message CreateCIPeriodChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TimeUnits3 units = 6;
    int32 units_raw = 7;
  }
  oneof edge_enum {
    Edge1 edge = 8;
    int32 edge_raw = 9;
  }
  oneof meas_method_enum {
    CounterFrequencyMethod meas_method = 10;
    int32 meas_method_raw = 11;
  }
  double meas_time = 12;
  uint32 divisor = 13;
  string custom_scale_name = 14;
}

message CreateCIPeriodChanResponse {
  int32 status = 1;
}

message CreateCIPulseChanFreqRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    FrequencyUnits2 units = 6;
    int32 units_raw = 7;
  }
}

message CreateCIPulseChanFreqResponse {
  int32 status = 1;
}

message CreateCIPulseChanTicksRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  string source_terminal = 4;
  double min_val = 5;
  double max_val = 6;
}

message CreateCIPulseChanTicksResponse {
  int32 status = 1;
}

message CreateCIPulseChanTimeRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    DigitalWidthUnits3 units = 6;
    int32 units_raw = 7;
  }
}

message CreateCIPulseChanTimeResponse {
  int32 status = 1;
}

message CreateCIPulseWidthChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TimeUnits3 units = 6;
    int32 units_raw = 7;
  }
  oneof starting_edge_enum {
    Edge1 starting_edge = 8;
    int32 starting_edge_raw = 9;
  }
  string custom_scale_name = 10;
}

message CreateCIPulseWidthChanResponse {
  int32 status = 1;
}

message CreateCISemiPeriodChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TimeUnits3 units = 6;
    int32 units_raw = 7;
  }
  string custom_scale_name = 8;
}

message CreateCISemiPeriodChanResponse {
  int32 status = 1;
}

message CreateCITwoEdgeSepChanRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TimeUnits3 units = 6;
    int32 units_raw = 7;
  }
  oneof first_edge_enum {
    Edge1 first_edge = 8;
    int32 first_edge_raw = 9;
  }
  oneof second_edge_enum {
    Edge1 second_edge = 10;
    int32 second_edge_raw = 11;
  }
  string custom_scale_name = 12;
}

message CreateCITwoEdgeSepChanResponse {
  int32 status = 1;
}

message CreateCOPulseChanFreqRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  oneof units_enum {
    FrequencyUnits2 units = 4;
    int32 units_raw = 5;
  }
  oneof idle_state_enum {
    Level1 idle_state = 6;
    int32 idle_state_raw = 7;
  }
  double initial_delay = 8;
  double freq = 9;
  double duty_cycle = 10;
}

message CreateCOPulseChanFreqResponse {
  int32 status = 1;
}

message CreateCOPulseChanTicksRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  string source_terminal = 4;
  oneof idle_state_enum {
    Level1 idle_state = 5;
    int32 idle_state_raw = 6;
  }
  int32 initial_delay = 7;
  int32 low_ticks = 8;
  int32 high_ticks = 9;
}

message CreateCOPulseChanTicksResponse {
  int32 status = 1;
}

message CreateCOPulseChanTimeRequest {
  nidevice_grpc.Session task = 1;
  string counter = 2;
  string name_to_assign_to_channel = 3;
  oneof units_enum {
    DigitalWidthUnits3 units = 4;
    int32 units_raw = 5;
  }
  oneof idle_state_enum {
    Level1 idle_state = 6;
    int32 idle_state_raw = 7;
  }
  double initial_delay = 8;
  double low_time = 9;
  double high_time = 10;
}

message CreateCOPulseChanTimeResponse {
  int32 status = 1;
}

message CreateDIChanRequest {
  nidevice_grpc.Session task = 1;
  string lines = 2;
  string name_to_assign_to_lines = 3;
  oneof line_grouping_enum {
    LineGrouping line_grouping = 4;
    int32 line_grouping_raw = 5;
  }
}

message CreateDIChanResponse {
  int32 status = 1;
}

message CreateDOChanRequest {
  nidevice_grpc.Session task = 1;
  string lines = 2;
  string name_to_assign_to_lines = 3;
  oneof line_grouping_enum {
    LineGrouping line_grouping = 4;
    int32 line_grouping_raw = 5;
  }
}

message CreateDOChanResponse {
  int32 status = 1;
}

message CreateLinScaleRequest {
  string name = 1;
  double slope = 2;
  double y_intercept = 3;
  oneof pre_scaled_units_enum {
    UnitsPreScaled pre_scaled_units = 4;
    int32 pre_scaled_units_raw = 5;
  }
  string scaled_units = 6;
}

message CreateLinScaleResponse {
  int32 status = 1;
}

message CreateMapScaleRequest {
  string name = 1;
  double prescaled_min = 2;
  double prescaled_max = 3;
  double scaled_min = 4;
  double scaled_max = 5;
  oneof pre_scaled_units_enum {
    UnitsPreScaled pre_scaled_units = 6;
    int32 pre_scaled_units_raw = 7;
  }
  string scaled_units = 8;
}

message CreateMapScaleResponse {
  int32 status = 1;
}

message CreatePolynomialScaleRequest {
  string name = 1;
  repeated double forward_coeffs = 2;
  uint32 num_forward_coeffs_in = 3;
  repeated double reverse_coeffs = 4;
  uint32 num_reverse_coeffs_in = 5;
  oneof pre_scaled_units_enum {
    UnitsPreScaled pre_scaled_units = 6;
    int32 pre_scaled_units_raw = 7;
  }
  string scaled_units = 8;
}

message CreatePolynomialScaleResponse {
  int32 status = 1;
}

message CreateTEDSAIAccelChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    AccelUnits2 units = 8;
    int32 units_raw = 9;
  }
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 10;
    int32 current_excit_source_raw = 11;
  }
  double current_excit_val = 12;
  string custom_scale_name = 13;
}

message CreateTEDSAIAccelChanResponse {
  int32 status = 1;
}

message CreateTEDSAIBridgeChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TEDSUnits units = 6;
    int32 units_raw = 7;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 8;
    int32 voltage_excit_source_raw = 9;
  }
  double voltage_excit_val = 10;
  string custom_scale_name = 11;
}

message CreateTEDSAIBridgeChanResponse {
  int32 status = 1;
}

message CreateTEDSAICurrentChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    TEDSUnits units = 8;
    int32 units_raw = 9;
  }
  oneof shunt_resistor_loc_enum {
    CurrentShuntResistorLocationWithDefault shunt_resistor_loc = 10;
    int32 shunt_resistor_loc_raw = 11;
  }
  double ext_shunt_resistor_val = 12;
  string custom_scale_name = 13;
}

message CreateTEDSAICurrentChanResponse {
  int32 status = 1;
}

message CreateTEDSAIForceBridgeChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    ForceUnits units = 6;
    int32 units_raw = 7;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 8;
    int32 voltage_excit_source_raw = 9;
  }
  double voltage_excit_val = 10;
  string custom_scale_name = 11;
}

message CreateTEDSAIForceBridgeChanResponse {
  int32 status = 1;
}

message CreateTEDSAIForceIEPEChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    ForceIEPEUnits units = 8;
    int32 units_raw = 9;
  }
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 10;
    int32 current_excit_source_raw = 11;
  }
  double current_excit_val = 12;
  string custom_scale_name = 13;
}

message CreateTEDSAIForceIEPEChanResponse {
  int32 status = 1;
}

message CreateTEDSAIMicrophoneChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  oneof units_enum {
    SoundPressureUnits1 units = 6;
    int32 units_raw = 7;
  }
  double max_snd_press_level = 8;
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 9;
    int32 current_excit_source_raw = 10;
  }
  double current_excit_val = 11;
  string custom_scale_name = 12;
}

message CreateTEDSAIMicrophoneChanResponse {
  int32 status = 1;
}

message CreateTEDSAIPosLVDTChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    LengthUnits2 units = 6;
    int32 units_raw = 7;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 8;
    int32 voltage_excit_source_raw = 9;
  }
  double voltage_excit_val = 10;
  double voltage_excit_freq = 11;
  oneof ac_excit_wire_mode_enum {
    ACExcitWireMode ac_excit_wire_mode = 12;
    int32 ac_excit_wire_mode_raw = 13;
  }
  string custom_scale_name = 14;
}

message CreateTEDSAIPosLVDTChanResponse {
  int32 status = 1;
}

message CreateTEDSAIPosRVDTChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    AngleUnits1 units = 6;
    int32 units_raw = 7;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 8;
    int32 voltage_excit_source_raw = 9;
  }
  double voltage_excit_val = 10;
  double voltage_excit_freq = 11;
  oneof ac_excit_wire_mode_enum {
    ACExcitWireMode ac_excit_wire_mode = 12;
    int32 ac_excit_wire_mode_raw = 13;
  }
  string custom_scale_name = 14;
}

message CreateTEDSAIPosRVDTChanResponse {
  int32 status = 1;
}

message CreateTEDSAIPressureBridgeChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    PressureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 8;
    int32 voltage_excit_source_raw = 9;
  }
  double voltage_excit_val = 10;
  string custom_scale_name = 11;
}

message CreateTEDSAIPressureBridgeChanResponse {
  int32 status = 1;
}

message CreateTEDSAIRTDChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TemperatureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof resistance_config_enum {
    ResistanceConfiguration resistance_config = 8;
    int32 resistance_config_raw = 9;
  }
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 10;
    int32 current_excit_source_raw = 11;
  }
  double current_excit_val = 12;
}

message CreateTEDSAIRTDChanResponse {
  int32 status = 1;
}

message CreateTEDSAIResistanceChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TEDSUnits units = 6;
    int32 units_raw = 7;
  }
  oneof resistance_config_enum {
    ResistanceConfiguration resistance_config = 8;
    int32 resistance_config_raw = 9;
  }
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 10;
    int32 current_excit_source_raw = 11;
  }
  double current_excit_val = 12;
  string custom_scale_name = 13;
}

message CreateTEDSAIResistanceChanResponse {
  int32 status = 1;
}

message CreateTEDSAIStrainGageChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    StrainUnits1 units = 6;
    int32 units_raw = 7;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 8;
    int32 voltage_excit_source_raw = 9;
  }
  double voltage_excit_val = 10;
  double initial_bridge_voltage = 11;
  double lead_wire_resistance = 12;
  string custom_scale_name = 13;
}

message CreateTEDSAIStrainGageChanResponse {
  int32 status = 1;
}

message CreateTEDSAIThrmcplChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TemperatureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof cjc_source_enum {
    CJCSource1 cjc_source = 8;
    int32 cjc_source_raw = 9;
  }
  double cjc_val = 10;
  string cjc_channel = 11;
}

message CreateTEDSAIThrmcplChanResponse {
  int32 status = 1;
}

message CreateTEDSAIThrmstrChanIexRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TemperatureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof resistance_config_enum {
    ResistanceConfiguration resistance_config = 8;
    int32 resistance_config_raw = 9;
  }
  oneof current_excit_source_enum {
    ExcitationSource current_excit_source = 10;
    int32 current_excit_source_raw = 11;
  }
  double current_excit_val = 12;
}

message CreateTEDSAIThrmstrChanIexResponse {
  int32 status = 1;
}

message CreateTEDSAIThrmstrChanVexRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TemperatureUnits units = 6;
    int32 units_raw = 7;
  }
  oneof resistance_config_enum {
    ResistanceConfiguration resistance_config = 8;
    int32 resistance_config_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  double r1 = 13;
}

message CreateTEDSAIThrmstrChanVexResponse {
  int32 status = 1;
}

message CreateTEDSAITorqueBridgeChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  double min_val = 4;
  double max_val = 5;
  oneof units_enum {
    TorqueUnits units = 6;
    int32 units_raw = 7;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 8;
    int32 voltage_excit_source_raw = 9;
  }
  double voltage_excit_val = 10;
  string custom_scale_name = 11;
}

message CreateTEDSAITorqueBridgeChanResponse {
  int32 status = 1;
}

message CreateTEDSAIVoltageChanRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    TEDSUnits units = 8;
    int32 units_raw = 9;
  }
  string custom_scale_name = 10;
}

message CreateTEDSAIVoltageChanResponse {
  int32 status = 1;
}

message CreateTEDSAIVoltageChanWithExcitRequest {
  nidevice_grpc.Session task = 1;
  string physical_channel = 2;
  string name_to_assign_to_channel = 3;
  oneof terminal_config_enum {
    InputTermCfgWithDefault terminal_config = 4;
    int32 terminal_config_raw = 5;
  }
  double min_val = 6;
  double max_val = 7;
  oneof units_enum {
    TEDSUnits units = 8;
    int32 units_raw = 9;
  }
  oneof voltage_excit_source_enum {
    ExcitationSource voltage_excit_source = 10;
    int32 voltage_excit_source_raw = 11;
  }
  double voltage_excit_val = 12;
  string custom_scale_name = 13;
}

message CreateTEDSAIVoltageChanWithExcitResponse {
  int32 status = 1;
}

message CreateTableScaleRequest {
  string name = 1;
  repeated double prescaled_vals = 2;
  uint32 num_prescaled_vals_in = 3;
  repeated double scaled_vals = 4;
  uint32 num_scaled_vals_in = 5;
  oneof pre_scaled_units_enum {
    UnitsPreScaled pre_scaled_units = 6;
    int32 pre_scaled_units_raw = 7;
  }
  string scaled_units = 8;
}

message CreateTableScaleResponse {
  int32 status = 1;
}

message CreateTaskRequest {
  string session_name = 1;
}

message CreateTaskResponse {
  int32 status = 1;
  nidevice_grpc.Session task = 2;
}

message CreateWatchdogTimerTaskRequest {
  string device_name = 1;
  string session_name = 2;
  double timeout = 3;
  string lines = 4;
  oneof exp_state_enum {
    DigitalLineState exp_state = 5;
    int32 exp_state_raw = 6;
  }
}

message CreateWatchdogTimerTaskResponse {
  int32 status = 1;
  nidevice_grpc.Session task = 2;
}

message CreateWatchdogTimerTaskExRequest {
  string device_name = 1;
  string session_name = 2;
  double timeout = 3;
}

message CreateWatchdogTimerTaskExResponse {
  int32 status = 1;
  nidevice_grpc.Session task = 2;
}

message DeleteNetworkDeviceRequest {
  string device_name = 1;
}

message DeleteNetworkDeviceResponse {
  int32 status = 1;
}

message DisableRefTrigRequest {
  nidevice_grpc.Session task = 1;
}

message DisableRefTrigResponse {
  int32 status = 1;
}

message DisableStartTrigRequest {
  nidevice_grpc.Session task = 1;
}

message DisableStartTrigResponse {
  int32 status = 1;
}

message DisconnectTermsRequest {
  string source_terminal = 1;
  string destination_terminal = 2;
}

message DisconnectTermsResponse {
  int32 status = 1;
}

message ExportSignalRequest {
  nidevice_grpc.Session task = 1;
  oneof signal_id_enum {
    Signal signal_id = 2;
    int32 signal_id_raw = 3;
  }
  string output_terminal = 4;
}

message ExportSignalResponse {
  int32 status = 1;
}

message GetAIChanCalCalDateRequest {
  nidevice_grpc.Session task = 1;
  string channel_name = 2;
}

message GetAIChanCalCalDateResponse {
  int32 status = 1;
  uint32 year = 2;
  uint32 month = 3;
  uint32 day = 4;
  uint32 hour = 5;
  uint32 minute = 6;
}

message GetAIChanCalExpDateRequest {
  nidevice_grpc.Session task = 1;
  string channel_name = 2;
}

message GetAIChanCalExpDateResponse {
  int32 status = 1;
  uint32 year = 2;
  uint32 month = 3;
  uint32 day = 4;
  uint32 hour = 5;
  uint32 minute = 6;
}

message GetArmStartTrigTimestampValRequest {
  nidevice_grpc.Session task = 1;
}

message GetArmStartTrigTimestampValResponse {
  int32 status = 1;
  google.protobuf.Timestamp data = 2;
}

message GetArmStartTrigTrigWhenRequest {
  nidevice_grpc.Session task = 1;
}

message GetArmStartTrigTrigWhenResponse {
  int32 status = 1;
  google.protobuf.Timestamp data = 2;
}

message GetDigitalLogicFamilyPowerUpStateRequest {
  string device_name = 1;
}

message GetDigitalLogicFamilyPowerUpStateResponse {
  int32 status = 1;
  int32 logic_family = 2;
}

message GetErrorStringRequest {
  int32 error_code = 1;
  uint32 buffer_size = 2;
}

message GetErrorStringResponse {
  int32 status = 1;
  string error_string = 2;
}

message GetExtendedErrorInfoRequest {
  uint32 buffer_size = 1;
}

message GetExtendedErrorInfoResponse {
  int32 status = 1;
  string error_string = 2;
}

message GetFirstSampClkWhenRequest {
  nidevice_grpc.Session task = 1;
}

message GetFirstSampClkWhenResponse {
  int32 status = 1;
  google.protobuf.Timestamp data = 2;
}

message GetFirstSampTimestampValRequest {
  nidevice_grpc.Session task = 1;
}

message GetFirstSampTimestampValResponse {
  int32 status = 1;
  google.protobuf.Timestamp data = 2;
}

message GetNthTaskChannelRequest {
  nidevice_grpc.Session task = 1;
  uint32 index = 2;
  int32 buffer_size = 3;
}

message GetNthTaskChannelResponse {
  int32 status = 1;
  string buffer = 2;
}

message GetNthTaskDeviceRequest {
  nidevice_grpc.Session task = 1;
  uint32 index = 2;
  int32 buffer_size = 3;
}

message GetNthTaskDeviceResponse {
  int32 status = 1;
  string buffer = 2;
}

message GetNthTaskReadChannelRequest {
  nidevice_grpc.Session task = 1;
  uint32 index = 2;
  int32 buffer_size = 3;
}

message GetNthTaskReadChannelResponse {
  int32 status = 1;
  string buffer = 2;
}

message GetRefTrigTimestampValRequest {
  nidevice_grpc.Session task = 1;
}

message GetRefTrigTimestampValResponse {
  int32 status = 1;
  google.protobuf.Timestamp data = 2;
}

message GetStartTrigTimestampValRequest {
  nidevice_grpc.Session task = 1;
}

message GetStartTrigTimestampValResponse {
  int32 status = 1;
  google.protobuf.Timestamp data = 2;
}

message GetStartTrigTrigWhenRequest {
  nidevice_grpc.Session task = 1;
}

message GetStartTrigTrigWhenResponse {
  int32 status = 1;
  google.protobuf.Timestamp data = 2;
}

message GetSyncPulseTimeWhenRequest {
  nidevice_grpc.Session task = 1;
}

message GetSyncPulseTimeWhenResponse {
  int32 status = 1;
  google.protobuf.Timestamp data = 2;
}

message IsTaskDoneRequest {
  nidevice_grpc.Session task = 1;
}

message IsTaskDoneResponse {
  int32 status = 1;
  bool is_task_done = 2;
}

message LoadTaskRequest {
  string session_name = 1;
}

message LoadTaskResponse {
  int32 status = 1;
  nidevice_grpc.Session task = 2;
}

message ReadAnalogF64Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof fill_mode_enum {
    GroupBy fill_mode = 4;
    int32 fill_mode_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadAnalogF64Response {
  int32 status = 1;
  repeated double read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadAnalogScalarF64Request {
  nidevice_grpc.Session task = 1;
  double timeout = 2;
}

message ReadAnalogScalarF64Response {
  int32 status = 1;
  double value = 2;
}

message ReadBinaryI16Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof fill_mode_enum {
    GroupBy fill_mode = 4;
    int32 fill_mode_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadBinaryI16Response {
  int32 status = 1;
  repeated int32 read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadBinaryI32Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof fill_mode_enum {
    GroupBy fill_mode = 4;
    int32 fill_mode_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadBinaryI32Response {
  int32 status = 1;
  repeated int32 read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadBinaryU16Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof fill_mode_enum {
    GroupBy fill_mode = 4;
    int32 fill_mode_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadBinaryU16Response {
  int32 status = 1;
  repeated uint32 read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadBinaryU32Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof fill_mode_enum {
    GroupBy fill_mode = 4;
    int32 fill_mode_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadBinaryU32Response {
  int32 status = 1;
  repeated uint32 read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadCounterF64Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  uint32 array_size_in_samps = 4;
}

message ReadCounterF64Response {
  int32 status = 1;
  repeated double read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadCounterF64ExRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof fill_mode_enum {
    GroupBy fill_mode = 4;
    int32 fill_mode_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadCounterF64ExResponse {
  int32 status = 1;
  repeated double read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadCounterScalarF64Request {
  nidevice_grpc.Session task = 1;
  double timeout = 2;
}

message ReadCounterScalarF64Response {
  int32 status = 1;
  double value = 2;
}

message ReadCounterScalarU32Request {
  nidevice_grpc.Session task = 1;
  double timeout = 2;
}

message ReadCounterScalarU32Response {
  int32 status = 1;
  uint32 value = 2;
}

message ReadCounterU32Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  uint32 array_size_in_samps = 4;
}

message ReadCounterU32Response {
  int32 status = 1;
  repeated uint32 read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadCounterU32ExRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof fill_mode_enum {
    GroupBy fill_mode = 4;
    int32 fill_mode_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadCounterU32ExResponse {
  int32 status = 1;
  repeated uint32 read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadCtrFreqRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof interleaved_enum {
    GroupBy interleaved = 4;
    int32 interleaved_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadCtrFreqResponse {
  int32 status = 1;
  repeated double read_array_frequency = 2;
  repeated double read_array_duty_cycle = 3;
  int32 samps_per_chan_read = 4;
}

message ReadCtrFreqScalarRequest {
  nidevice_grpc.Session task = 1;
  double timeout = 2;
}

message ReadCtrFreqScalarResponse {
  int32 status = 1;
  double frequency = 2;
  double duty_cycle = 3;
}

message ReadCtrTicksRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof interleaved_enum {
    GroupBy interleaved = 4;
    int32 interleaved_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadCtrTicksResponse {
  int32 status = 1;
  repeated uint32 read_array_high_ticks = 2;
  repeated uint32 read_array_low_ticks = 3;
  int32 samps_per_chan_read = 4;
}

message ReadCtrTicksScalarRequest {
  nidevice_grpc.Session task = 1;
  double timeout = 2;
}

message ReadCtrTicksScalarResponse {
  int32 status = 1;
  uint32 high_ticks = 2;
  uint32 low_ticks = 3;
}

message ReadCtrTimeRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof interleaved_enum {
    GroupBy interleaved = 4;
    int32 interleaved_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadCtrTimeResponse {
  int32 status = 1;
  repeated double read_array_high_time = 2;
  repeated double read_array_low_time = 3;
  int32 samps_per_chan_read = 4;
}

message ReadCtrTimeScalarRequest {
  nidevice_grpc.Session task = 1;
  double timeout = 2;
}

message ReadCtrTimeScalarResponse {
  int32 status = 1;
  double high_time = 2;
  double low_time = 3;
}

message ReadDigitalLinesRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof fill_mode_enum {
    GroupBy fill_mode = 4;
    int32 fill_mode_raw = 5;
  }
  uint32 array_size_in_bytes = 6;
}

message ReadDigitalLinesResponse {
  int32 status = 1;
  bytes read_array = 2;
  int32 samps_per_chan_read = 3;
  int32 num_bytes_per_samp = 4;
}

message ReadDigitalScalarU32Request {
  nidevice_grpc.Session task = 1;
  double timeout = 2;
}

message ReadDigitalScalarU32Response {
  int32 status = 1;
  uint32 value = 2;
}

message ReadDigitalU16Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof fill_mode_enum {
    GroupBy fill_mode = 4;
    int32 fill_mode_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadDigitalU16Response {
  int32 status = 1;
  repeated uint32 read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadDigitalU32Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof fill_mode_enum {
    GroupBy fill_mode = 4;
    int32 fill_mode_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadDigitalU32Response {
  int32 status = 1;
  repeated uint32 read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadDigitalU8Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  oneof fill_mode_enum {
    GroupBy fill_mode = 4;
    int32 fill_mode_raw = 5;
  }
  uint32 array_size_in_samps = 6;
}

message ReadDigitalU8Response {
  int32 status = 1;
  bytes read_array = 2;
  int32 samps_per_chan_read = 3;
}

message ReadRawRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  double timeout = 3;
  uint32 array_size_in_bytes = 4;
}

message ReadRawResponse {
  int32 status = 1;
  bytes read_array = 2;
  int32 samps_read = 3;
  int32 num_bytes_per_samp = 4;
}

message RegisterDoneEventRequest {
  nidevice_grpc.Session task = 1;
  uint32 options = 2;
}

message RegisterDoneEventResponse {
  int32 status = 1;
}

message ReserveNetworkDeviceRequest {
  string device_name = 1;
  bool override_reservation = 2;
}

message ReserveNetworkDeviceResponse {
  int32 status = 1;
}

message ResetDeviceRequest {
  string device_name = 1;
}

message ResetDeviceResponse {
  int32 status = 1;
}

message SelfTestDeviceRequest {
  string device_name = 1;
}

message SelfTestDeviceResponse {
  int32 status = 1;
}

message SetAIChanCalCalDateRequest {
  nidevice_grpc.Session task = 1;
  string channel_name = 2;
  uint32 year = 3;
  uint32 month = 4;
  uint32 day = 5;
  uint32 hour = 6;
  uint32 minute = 7;
}

message SetAIChanCalCalDateResponse {
  int32 status = 1;
}

message SetAIChanCalExpDateRequest {
  nidevice_grpc.Session task = 1;
  string channel_name = 2;
  uint32 year = 3;
  uint32 month = 4;
  uint32 day = 5;
  uint32 hour = 6;
  uint32 minute = 7;
}

message SetAIChanCalExpDateResponse {
  int32 status = 1;
}

message SetArmStartTrigTrigWhenRequest {
  nidevice_grpc.Session task = 1;
  google.protobuf.Timestamp data = 2;
}

message SetArmStartTrigTrigWhenResponse {
  int32 status = 1;
}

message SetDigitalLogicFamilyPowerUpStateRequest {
  string device_name = 1;
  oneof logic_family_enum {
    LogicFamily logic_family = 2;
    int32 logic_family_raw = 3;
  }
}

message SetDigitalLogicFamilyPowerUpStateResponse {
  int32 status = 1;
}

message SetFirstSampClkWhenRequest {
  nidevice_grpc.Session task = 1;
  google.protobuf.Timestamp data = 2;
}

message SetFirstSampClkWhenResponse {
  int32 status = 1;
}

message SetStartTrigTrigWhenRequest {
  nidevice_grpc.Session task = 1;
  google.protobuf.Timestamp data = 2;
}

message SetStartTrigTrigWhenResponse {
  int32 status = 1;
}

message SetSyncPulseTimeWhenRequest {
  nidevice_grpc.Session task = 1;
  google.protobuf.Timestamp data = 2;
}

message SetSyncPulseTimeWhenResponse {
  int32 status = 1;
}

message StartNewFileRequest {
  nidevice_grpc.Session task = 1;
  string file_path = 2;
}

message StartNewFileResponse {
  int32 status = 1;
}

message StartTaskRequest {
  nidevice_grpc.Session task = 1;
}

message StartTaskResponse {
  int32 status = 1;
}

message StopTaskRequest {
  nidevice_grpc.Session task = 1;
}

message StopTaskResponse {
  int32 status = 1;
}

message TaskControlRequest {
  nidevice_grpc.Session task = 1;
  oneof action_enum {
    TaskControlAction action = 2;
    int32 action_raw = 3;
  }
}

message TaskControlResponse {
  int32 status = 1;
}

message TristateOutputTermRequest {
  string output_terminal = 1;
}

message TristateOutputTermResponse {
  int32 status = 1;
}

message UnreserveNetworkDeviceRequest {
  string device_name = 1;
}

message UnreserveNetworkDeviceResponse {
  int32 status = 1;
}

message WaitForValidTimestampRequest {
  nidevice_grpc.Session task = 1;
  oneof timestamp_event_enum {
    TimestampEvent timestamp_event = 2;
    int32 timestamp_event_raw = 3;
  }
  double timeout = 4;
}

message WaitForValidTimestampResponse {
  int32 status = 1;
  google.protobuf.Timestamp timestamp = 2;
}

message WaitUntilTaskDoneRequest {
  nidevice_grpc.Session task = 1;
  double time_to_wait = 2;
}

message WaitUntilTaskDoneResponse {
  int32 status = 1;
}

message WriteAnalogF64Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  repeated double write_array = 7;
}

message WriteAnalogF64Response {
  int32 status = 1;
  int32 samps_per_chan_written = 2;
}

message WriteAnalogScalarF64Request {
  nidevice_grpc.Session task = 1;
  bool auto_start = 2;
  double timeout = 3;
  double value = 4;
}

message WriteAnalogScalarF64Response {
  int32 status = 1;
}

message WriteBinaryI16Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  repeated int32 write_array = 7;
}

message WriteBinaryI16Response {
  int32 status = 1;
  int32 samps_per_chan_written = 2;
}

message WriteBinaryI32Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  repeated int32 write_array = 7;
}

message WriteBinaryI32Response {
  int32 status = 1;
  int32 samps_per_chan_written = 2;
}

message WriteBinaryU16Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  repeated uint32 write_array = 7;
}

message WriteBinaryU16Response {
  int32 status = 1;
  int32 samps_per_chan_written = 2;
}

message WriteBinaryU32Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  repeated uint32 write_array = 7;
}

message WriteBinaryU32Response {
  int32 status = 1;
  int32 samps_per_chan_written = 2;
}

message WriteCtrFreqRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  repeated double frequency = 7;
  repeated double duty_cycle = 8;
}

message WriteCtrFreqResponse {
  int32 status = 1;
  int32 num_samps_per_chan_written = 2;
}

message WriteCtrFreqScalarRequest {
  nidevice_grpc.Session task = 1;
  bool auto_start = 2;
  double timeout = 3;
  double frequency = 4;
  double duty_cycle = 5;
}

message WriteCtrFreqScalarResponse {
  int32 status = 1;
}

message WriteCtrTicksRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  repeated uint32 high_ticks = 7;
  repeated uint32 low_ticks = 8;
}

message WriteCtrTicksResponse {
  int32 status = 1;
  int32 num_samps_per_chan_written = 2;
}

message WriteCtrTicksScalarRequest {
  nidevice_grpc.Session task = 1;
  bool auto_start = 2;
  double timeout = 3;
  uint32 high_ticks = 4;
  uint32 low_ticks = 5;
}

message WriteCtrTicksScalarResponse {
  int32 status = 1;
}

message WriteCtrTimeRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  repeated double high_time = 7;
  repeated double low_time = 8;
}

message WriteCtrTimeResponse {
  int32 status = 1;
  int32 num_samps_per_chan_written = 2;
}

message WriteCtrTimeScalarRequest {
  nidevice_grpc.Session task = 1;
  bool auto_start = 2;
  double timeout = 3;
  double high_time = 4;
  double low_time = 5;
}

message WriteCtrTimeScalarResponse {
  int32 status = 1;
}

message WriteDigitalLinesRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  bytes write_array = 7;
}

message WriteDigitalLinesResponse {
  int32 status = 1;
  int32 samps_per_chan_written = 2;
}

message WriteDigitalScalarU32Request {
  nidevice_grpc.Session task = 1;
  bool auto_start = 2;
  double timeout = 3;
  uint32 value = 4;
}

message WriteDigitalScalarU32Response {
  int32 status = 1;
}

message WriteDigitalU16Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  repeated uint32 write_array = 7;
}

message WriteDigitalU16Response {
  int32 status = 1;
  int32 samps_per_chan_written = 2;
}

message WriteDigitalU32Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  repeated uint32 write_array = 7;
}

message WriteDigitalU32Response {
  int32 status = 1;
  int32 samps_per_chan_written = 2;
}

message WriteDigitalU8Request {
  nidevice_grpc.Session task = 1;
  int32 num_samps_per_chan = 2;
  bool auto_start = 3;
  double timeout = 4;
  oneof data_layout_enum {
    GroupBy data_layout = 5;
    int32 data_layout_raw = 6;
  }
  bytes write_array = 7;
}

message WriteDigitalU8Response {
  int32 status = 1;
  int32 samps_per_chan_written = 2;
}

message WriteRawRequest {
  nidevice_grpc.Session task = 1;
  int32 num_samps = 2;
  bool auto_start = 3;
  double timeout = 4;
  bytes write_array = 5;
}

message WriteRawResponse {
  int32 status = 1;
  int32 samps_per_chan_written = 2;
}

