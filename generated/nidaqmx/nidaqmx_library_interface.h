//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Library wrapper for implementing interactions with NI-DAQMX
//---------------------------------------------------------------------
#ifndef NIDAQMX_GRPC_LIBRARY_WRAPPER_H
#define NIDAQMX_GRPC_LIBRARY_WRAPPER_H

#include <grpcpp/grpcpp.h>
#include <NIDAQmx.h>

namespace nidaqmx_grpc {

class NiDAQmxLibraryInterface {
 public:
  virtual ~NiDAQmxLibraryInterface() {}

  virtual int32 AddCDAQSyncConnection(const char portList[]) = 0;
  virtual int32 AddGlobalChansToTask(TaskHandle task, const char channelNames[]) = 0;
  virtual int32 AddNetworkDevice(const char ipAddress[], const char deviceName[], bool32 attemptReservation, float64 timeout, char deviceNameOut[], uInt32 deviceNameOutBufferSize) = 0;
  virtual int32 AreConfiguredCDAQSyncPortsDisconnected(const char chassisDevicesPorts[], float64 timeout, bool32* disconnectedPortsExist) = 0;
  virtual int32 AutoConfigureCDAQSyncConnections(const char chassisDevicesPorts[], float64 timeout) = 0;
  virtual int32 CalculateReversePolyCoeff(const float64 forwardCoeffs[], uInt32 numForwardCoeffsIn, float64 minValX, float64 maxValX, int32 numPointsToCompute, int32 reversePolyOrder, float64 reverseCoeffs[]) = 0;
  virtual int32 CfgAnlgEdgeRefTrig(TaskHandle task, const char triggerSource[], int32 triggerSlope, float64 triggerLevel, uInt32 pretriggerSamples) = 0;
  virtual int32 CfgAnlgEdgeStartTrig(TaskHandle task, const char triggerSource[], int32 triggerSlope, float64 triggerLevel) = 0;
  virtual int32 CfgAnlgMultiEdgeRefTrig(TaskHandle task, const char triggerSources[], int32 triggerSlopeArray[], const float64 triggerLevelArray[], uInt32 pretriggerSamples, uInt32 arraySize) = 0;
  virtual int32 CfgAnlgMultiEdgeStartTrig(TaskHandle task, const char triggerSources[], int32 triggerSlopeArray[], const float64 triggerLevelArray[], uInt32 arraySize) = 0;
  virtual int32 CfgAnlgWindowRefTrig(TaskHandle task, const char triggerSource[], int32 triggerWhen, float64 windowTop, float64 windowBottom, uInt32 pretriggerSamples) = 0;
  virtual int32 CfgAnlgWindowStartTrig(TaskHandle task, const char triggerSource[], int32 triggerWhen, float64 windowTop, float64 windowBottom) = 0;
  virtual int32 CfgBurstHandshakingTimingExportClock(TaskHandle task, int32 sampleMode, uInt64 sampsPerChan, float64 sampleClkRate, const char sampleClkOutpTerm[], int32 sampleClkPulsePolarity, int32 pauseWhen, int32 readyEventActiveLevel) = 0;
  virtual int32 CfgBurstHandshakingTimingImportClock(TaskHandle task, int32 sampleMode, uInt64 sampsPerChan, float64 sampleClkRate, const char sampleClkSrc[], int32 sampleClkActiveEdge, int32 pauseWhen, int32 readyEventActiveLevel) = 0;
  virtual int32 CfgChangeDetectionTiming(TaskHandle task, const char risingEdgeChan[], const char fallingEdgeChan[], int32 sampleMode, uInt64 sampsPerChan) = 0;
  virtual int32 CfgDigEdgeRefTrig(TaskHandle task, const char triggerSource[], int32 triggerEdge, uInt32 pretriggerSamples) = 0;
  virtual int32 CfgDigEdgeStartTrig(TaskHandle task, const char triggerSource[], int32 triggerEdge) = 0;
  virtual int32 CfgDigPatternRefTrig(TaskHandle task, const char triggerSource[], const char triggerPattern[], int32 triggerWhen, uInt32 pretriggerSamples) = 0;
  virtual int32 CfgDigPatternStartTrig(TaskHandle task, const char triggerSource[], const char triggerPattern[], int32 triggerWhen) = 0;
  virtual int32 CfgHandshakingTiming(TaskHandle task, int32 sampleMode, uInt64 sampsPerChan) = 0;
  virtual int32 CfgImplicitTiming(TaskHandle task, int32 sampleMode, uInt64 sampsPerChan) = 0;
  virtual int32 CfgInputBuffer(TaskHandle task, uInt32 numSampsPerChan) = 0;
  virtual int32 CfgOutputBuffer(TaskHandle task, uInt32 numSampsPerChan) = 0;
  virtual int32 CfgPipelinedSampClkTiming(TaskHandle task, const char source[], float64 rate, int32 activeEdge, int32 sampleMode, uInt64 sampsPerChan) = 0;
  virtual int32 CfgSampClkTiming(TaskHandle task, const char source[], float64 rate, int32 activeEdge, int32 sampleMode, uInt64 sampsPerChan) = 0;
  virtual int32 CfgTimeStartTrig(TaskHandle task, CVIAbsoluteTime when, int32 timescale) = 0;
  virtual int32 CfgWatchdogAOExpirStates(TaskHandle task, const char channelNames[], const float64 expirStateArray[], int32 outputTypeArray[], uInt32 arraySize) = 0;
  virtual int32 CfgWatchdogCOExpirStates(TaskHandle task, const char channelNames[], int32 expirStateArray[], uInt32 arraySize) = 0;
  virtual int32 CfgWatchdogDOExpirStates(TaskHandle task, const char channelNames[], int32 expirStateArray[], uInt32 arraySize) = 0;
  virtual int32 ClearTEDS(const char physicalChannel[]) = 0;
  virtual int32 ClearTask(TaskHandle task) = 0;
  virtual int32 ConfigureLogging(TaskHandle task, const char filePath[], int32 loggingMode, const char groupName[], int32 operation) = 0;
  virtual int32 ConfigureTEDS(const char physicalChannel[], const char filePath[]) = 0;
  virtual int32 ConnectTerms(const char sourceTerminal[], const char destinationTerminal[], int32 signalModifiers) = 0;
  virtual int32 ControlWatchdogTask(TaskHandle task, int32 action) = 0;
  virtual int32 CreateAIAccel4WireDCVoltageChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], int32 terminalConfig, float64 minVal, float64 maxVal, int32 units, float64 sensitivity, int32 sensitivityUnits, int32 voltageExcitSource, float64 voltageExcitVal, bool32 useExcitForScaling, const char customScaleName[]) = 0;
  virtual int32 CreateAIAccelChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], int32 terminalConfig, float64 minVal, float64 maxVal, int32 units, float64 sensitivity, int32 sensitivityUnits, int32 currentExcitSource, float64 currentExcitVal, const char customScaleName[]) = 0;
  virtual int32 CreateAIAccelChargeChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], int32 terminalConfig, float64 minVal, float64 maxVal, int32 units, float64 sensitivity, int32 sensitivityUnits, const char customScaleName[]) = 0;
  virtual int32 CreateAIBridgeChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 bridgeConfig, int32 voltageExcitSource, float64 voltageExcitVal, float64 nominalBridgeResistance, const char customScaleName[]) = 0;
  virtual int32 CreateAIChargeChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], int32 terminalConfig, float64 minVal, float64 maxVal, int32 units, const char customScaleName[]) = 0;
  virtual int32 CreateAICurrentChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], int32 terminalConfig, float64 minVal, float64 maxVal, int32 units, int32 shuntResistorLoc, float64 extShuntResistorVal, const char customScaleName[]) = 0;
  virtual int32 CreateAICurrentRMSChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], int32 terminalConfig, float64 minVal, float64 maxVal, int32 units, int32 shuntResistorLoc, float64 extShuntResistorVal, const char customScaleName[]) = 0;
  virtual int32 CreateAIForceBridgePolynomialChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 bridgeConfig, int32 voltageExcitSource, float64 voltageExcitVal, float64 nominalBridgeResistance, const float64 forwardCoeffs[], uInt32 numForwardCoeffs, const float64 reverseCoeffs[], uInt32 numReverseCoeffs, int32 electricalUnits, int32 physicalUnits, const char customScaleName[]) = 0;
  virtual int32 CreateAIForceBridgeTableChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 bridgeConfig, int32 voltageExcitSource, float64 voltageExcitVal, float64 nominalBridgeResistance, const float64 electricalVals[], uInt32 numElectricalVals, int32 electricalUnits, const float64 physicalVals[], uInt32 numPhysicalVals, int32 physicalUnits, const char customScaleName[]) = 0;
  virtual int32 CreateAIForceBridgeTwoPointLinChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 bridgeConfig, int32 voltageExcitSource, float64 voltageExcitVal, float64 nominalBridgeResistance, float64 firstElectricalVal, float64 secondElectricalVal, int32 electricalUnits, float64 firstPhysicalVal, float64 secondPhysicalVal, int32 physicalUnits, const char customScaleName[]) = 0;
  virtual int32 CreateAIForceIEPEChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], int32 terminalConfig, float64 minVal, float64 maxVal, int32 units, float64 sensitivity, int32 sensitivityUnits, int32 currentExcitSource, float64 currentExcitVal, const char customScaleName[]) = 0;
  virtual int32 CreateAIFreqVoltageChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, float64 thresholdLevel, float64 hysteresis, const char customScaleName[]) = 0;
  virtual int32 CreateAIMicrophoneChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], int32 terminalConfig, int32 units, float64 micSensitivity, float64 maxSndPressLevel, int32 currentExcitSource, float64 currentExcitVal, const char customScaleName[]) = 0;
  virtual int32 CreateAIPosEddyCurrProxProbeChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, float64 sensitivity, int32 sensitivityUnits, const char customScaleName[]) = 0;
  virtual int32 CreateAIPosLVDTChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, float64 sensitivity, int32 sensitivityUnits, int32 voltageExcitSource, float64 voltageExcitVal, float64 voltageExcitFreq, int32 acExcitWireMode, const char customScaleName[]) = 0;
  virtual int32 CreateAIPosRVDTChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, float64 sensitivity, int32 sensitivityUnits, int32 voltageExcitSource, float64 voltageExcitVal, float64 voltageExcitFreq, int32 acExcitWireMode, const char customScaleName[]) = 0;
  virtual int32 CreateAIPressureBridgePolynomialChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 bridgeConfig, int32 voltageExcitSource, float64 voltageExcitVal, float64 nominalBridgeResistance, const float64 forwardCoeffs[], uInt32 numForwardCoeffs, const float64 reverseCoeffs[], uInt32 numReverseCoeffs, int32 electricalUnits, int32 physicalUnits, const char customScaleName[]) = 0;
  virtual int32 CreateAIPressureBridgeTableChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 bridgeConfig, int32 voltageExcitSource, float64 voltageExcitVal, float64 nominalBridgeResistance, const float64 electricalVals[], uInt32 numElectricalVals, int32 electricalUnits, const float64 physicalVals[], uInt32 numPhysicalVals, int32 physicalUnits, const char customScaleName[]) = 0;
  virtual int32 CreateAIPressureBridgeTwoPointLinChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 bridgeConfig, int32 voltageExcitSource, float64 voltageExcitVal, float64 nominalBridgeResistance, float64 firstElectricalVal, float64 secondElectricalVal, int32 electricalUnits, float64 firstPhysicalVal, float64 secondPhysicalVal, int32 physicalUnits, const char customScaleName[]) = 0;
  virtual int32 CreateAIRTDChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 rtdType, int32 resistanceConfig, int32 currentExcitSource, float64 currentExcitVal, float64 r0) = 0;
  virtual int32 CreateAIResistanceChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 resistanceConfig, int32 currentExcitSource, float64 currentExcitVal, const char customScaleName[]) = 0;
  virtual int32 CreateAIRosetteStrainGageChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 rosetteType, float64 gageOrientation, int32 rosetteMeasTypes[], uInt32 numRosetteMeasTypes, int32 strainConfig, int32 voltageExcitSource, float64 voltageExcitVal, float64 gageFactor, float64 nominalGageResistance, float64 poissonRatio, float64 leadWireResistance) = 0;
  virtual int32 CreateAIStrainGageChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 strainConfig, int32 voltageExcitSource, float64 voltageExcitVal, float64 gageFactor, float64 initialBridgeVoltage, float64 nominalGageResistance, float64 poissonRatio, float64 leadWireResistance, const char customScaleName[]) = 0;
  virtual int32 CreateAITempBuiltInSensorChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], int32 units) = 0;
  virtual int32 CreateAIThrmcplChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 thermocoupleType, int32 cjcSource, float64 cjcVal, const char cjcChannel[]) = 0;
  virtual int32 CreateAIThrmstrChanIex(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 resistanceConfig, int32 currentExcitSource, float64 currentExcitVal, float64 a, float64 b, float64 c) = 0;
  virtual int32 CreateAIThrmstrChanVex(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 resistanceConfig, int32 voltageExcitSource, float64 voltageExcitVal, float64 a, float64 b, float64 c, float64 r1) = 0;
  virtual int32 CreateAITorqueBridgePolynomialChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 bridgeConfig, int32 voltageExcitSource, float64 voltageExcitVal, float64 nominalBridgeResistance, const float64 forwardCoeffs[], uInt32 numForwardCoeffs, const float64 reverseCoeffs[], uInt32 numReverseCoeffs, int32 electricalUnits, int32 physicalUnits, const char customScaleName[]) = 0;
  virtual int32 CreateAITorqueBridgeTableChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 bridgeConfig, int32 voltageExcitSource, float64 voltageExcitVal, float64 nominalBridgeResistance, const float64 electricalVals[], uInt32 numElectricalVals, int32 electricalUnits, const float64 physicalVals[], uInt32 numPhysicalVals, int32 physicalUnits, const char customScaleName[]) = 0;
  virtual int32 CreateAITorqueBridgeTwoPointLinChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 bridgeConfig, int32 voltageExcitSource, float64 voltageExcitVal, float64 nominalBridgeResistance, float64 firstElectricalVal, float64 secondElectricalVal, int32 electricalUnits, float64 firstPhysicalVal, float64 secondPhysicalVal, int32 physicalUnits, const char customScaleName[]) = 0;
  virtual int32 CreateAIVelocityIEPEChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], int32 terminalConfig, float64 minVal, float64 maxVal, int32 units, float64 sensitivity, int32 sensitivityUnits, int32 currentExcitSource, float64 currentExcitVal, const char customScaleName[]) = 0;
  virtual int32 CreateAIVoltageChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], int32 terminalConfig, float64 minVal, float64 maxVal, int32 units, const char customScaleName[]) = 0;
  virtual int32 CreateAIVoltageChanWithExcit(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], int32 terminalConfig, float64 minVal, float64 maxVal, int32 units, int32 bridgeConfig, int32 voltageExcitSource, float64 voltageExcitVal, bool32 useExcitForScaling, const char customScaleName[]) = 0;
  virtual int32 CreateAIVoltageRMSChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], int32 terminalConfig, float64 minVal, float64 maxVal, int32 units, const char customScaleName[]) = 0;
  virtual int32 CreateAOCurrentChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, const char customScaleName[]) = 0;
  virtual int32 CreateAOFuncGenChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], int32 type, float64 freq, float64 amplitude, float64 offset) = 0;
  virtual int32 CreateAOVoltageChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, const char customScaleName[]) = 0;
  virtual int32 CreateCIAngEncoderChan(TaskHandle task, const char counter[], const char nameToAssignToChannel[], int32 decodingType, bool32 zidxEnable, float64 zidxVal, int32 zidxPhase, int32 units, uInt32 pulsesPerRev, float64 initialAngle, const char customScaleName[]) = 0;
  virtual int32 CreateCIAngVelocityChan(TaskHandle task, const char counter[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 decodingType, int32 units, uInt32 pulsesPerRev, const char customScaleName[]) = 0;
  virtual int32 CreateCICountEdgesChan(TaskHandle task, const char counter[], const char nameToAssignToChannel[], int32 edge, uInt32 initialCount, int32 countDirection) = 0;
  virtual int32 CreateCIDutyCycleChan(TaskHandle task, const char counter[], const char nameToAssignToChannel[], float64 minFreq, float64 maxFreq, int32 edge, const char customScaleName[]) = 0;
  virtual int32 CreateCIFreqChan(TaskHandle task, const char counter[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 edge, int32 measMethod, float64 measTime, uInt32 divisor, const char customScaleName[]) = 0;
  virtual int32 CreateCIGPSTimestampChan(TaskHandle task, const char counter[], const char nameToAssignToChannel[], int32 units, int32 syncMethod, const char customScaleName[]) = 0;
  virtual int32 CreateCILinEncoderChan(TaskHandle task, const char counter[], const char nameToAssignToChannel[], int32 decodingType, bool32 zidxEnable, float64 zidxVal, int32 zidxPhase, int32 units, float64 distPerPulse, float64 initialPos, const char customScaleName[]) = 0;
  virtual int32 CreateCILinVelocityChan(TaskHandle task, const char counter[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 decodingType, int32 units, float64 distPerPulse, const char customScaleName[]) = 0;
  virtual int32 CreateCIPeriodChan(TaskHandle task, const char counter[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 edge, int32 measMethod, float64 measTime, uInt32 divisor, const char customScaleName[]) = 0;
  virtual int32 CreateCIPulseChanFreq(TaskHandle task, const char counter[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units) = 0;
  virtual int32 CreateCIPulseChanTicks(TaskHandle task, const char counter[], const char nameToAssignToChannel[], const char sourceTerminal[], float64 minVal, float64 maxVal) = 0;
  virtual int32 CreateCIPulseChanTime(TaskHandle task, const char counter[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units) = 0;
  virtual int32 CreateCIPulseWidthChan(TaskHandle task, const char counter[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 startingEdge, const char customScaleName[]) = 0;
  virtual int32 CreateCISemiPeriodChan(TaskHandle task, const char counter[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, const char customScaleName[]) = 0;
  virtual int32 CreateCITwoEdgeSepChan(TaskHandle task, const char counter[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 firstEdge, int32 secondEdge, const char customScaleName[]) = 0;
  virtual int32 CreateCOPulseChanFreq(TaskHandle task, const char counter[], const char nameToAssignToChannel[], int32 units, int32 idleState, float64 initialDelay, float64 freq, float64 dutyCycle) = 0;
  virtual int32 CreateCOPulseChanTicks(TaskHandle task, const char counter[], const char nameToAssignToChannel[], const char sourceTerminal[], int32 idleState, int32 initialDelay, int32 lowTicks, int32 highTicks) = 0;
  virtual int32 CreateCOPulseChanTime(TaskHandle task, const char counter[], const char nameToAssignToChannel[], int32 units, int32 idleState, float64 initialDelay, float64 lowTime, float64 highTime) = 0;
  virtual int32 CreateDIChan(TaskHandle task, const char lines[], const char nameToAssignToLines[], int32 lineGrouping) = 0;
  virtual int32 CreateDOChan(TaskHandle task, const char lines[], const char nameToAssignToLines[], int32 lineGrouping) = 0;
  virtual int32 CreateLinScale(const char name[], float64 slope, float64 yIntercept, int32 preScaledUnits, const char scaledUnits[]) = 0;
  virtual int32 CreateMapScale(const char name[], float64 prescaledMin, float64 prescaledMax, float64 scaledMin, float64 scaledMax, int32 preScaledUnits, const char scaledUnits[]) = 0;
  virtual int32 CreatePolynomialScale(const char name[], const float64 forwardCoeffs[], uInt32 numForwardCoeffsIn, const float64 reverseCoeffs[], uInt32 numReverseCoeffsIn, int32 preScaledUnits, const char scaledUnits[]) = 0;
  virtual int32 CreateTEDSAIAccelChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], int32 terminalConfig, float64 minVal, float64 maxVal, int32 units, int32 currentExcitSource, float64 currentExcitVal, const char customScaleName[]) = 0;
  virtual int32 CreateTEDSAIBridgeChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 voltageExcitSource, float64 voltageExcitVal, const char customScaleName[]) = 0;
  virtual int32 CreateTEDSAICurrentChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], int32 terminalConfig, float64 minVal, float64 maxVal, int32 units, int32 shuntResistorLoc, float64 extShuntResistorVal, const char customScaleName[]) = 0;
  virtual int32 CreateTEDSAIForceBridgeChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 voltageExcitSource, float64 voltageExcitVal, const char customScaleName[]) = 0;
  virtual int32 CreateTEDSAIForceIEPEChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], int32 terminalConfig, float64 minVal, float64 maxVal, int32 units, int32 currentExcitSource, float64 currentExcitVal, const char customScaleName[]) = 0;
  virtual int32 CreateTEDSAIMicrophoneChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], int32 terminalConfig, int32 units, float64 maxSndPressLevel, int32 currentExcitSource, float64 currentExcitVal, const char customScaleName[]) = 0;
  virtual int32 CreateTEDSAIPosLVDTChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 voltageExcitSource, float64 voltageExcitVal, float64 voltageExcitFreq, int32 acExcitWireMode, const char customScaleName[]) = 0;
  virtual int32 CreateTEDSAIPosRVDTChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 voltageExcitSource, float64 voltageExcitVal, float64 voltageExcitFreq, int32 acExcitWireMode, const char customScaleName[]) = 0;
  virtual int32 CreateTEDSAIPressureBridgeChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 voltageExcitSource, float64 voltageExcitVal, const char customScaleName[]) = 0;
  virtual int32 CreateTEDSAIRTDChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 resistanceConfig, int32 currentExcitSource, float64 currentExcitVal) = 0;
  virtual int32 CreateTEDSAIResistanceChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 resistanceConfig, int32 currentExcitSource, float64 currentExcitVal, const char customScaleName[]) = 0;
  virtual int32 CreateTEDSAIStrainGageChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 voltageExcitSource, float64 voltageExcitVal, float64 initialBridgeVoltage, float64 leadWireResistance, const char customScaleName[]) = 0;
  virtual int32 CreateTEDSAIThrmcplChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 cjcSource, float64 cjcVal, const char cjcChannel[]) = 0;
  virtual int32 CreateTEDSAIThrmstrChanIex(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 resistanceConfig, int32 currentExcitSource, float64 currentExcitVal) = 0;
  virtual int32 CreateTEDSAIThrmstrChanVex(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 resistanceConfig, int32 voltageExcitSource, float64 voltageExcitVal, float64 r1) = 0;
  virtual int32 CreateTEDSAITorqueBridgeChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], float64 minVal, float64 maxVal, int32 units, int32 voltageExcitSource, float64 voltageExcitVal, const char customScaleName[]) = 0;
  virtual int32 CreateTEDSAIVoltageChan(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], int32 terminalConfig, float64 minVal, float64 maxVal, int32 units, const char customScaleName[]) = 0;
  virtual int32 CreateTEDSAIVoltageChanWithExcit(TaskHandle task, const char physicalChannel[], const char nameToAssignToChannel[], int32 terminalConfig, float64 minVal, float64 maxVal, int32 units, int32 voltageExcitSource, float64 voltageExcitVal, const char customScaleName[]) = 0;
  virtual int32 CreateTableScale(const char name[], const float64 prescaledVals[], uInt32 numPrescaledValsIn, const float64 scaledVals[], uInt32 numScaledValsIn, int32 preScaledUnits, const char scaledUnits[]) = 0;
  virtual int32 CreateTask(const char sessionName[], TaskHandle* task) = 0;
  virtual int32 CreateWatchdogTimerTask(const char deviceName[], const char sessionName[], TaskHandle* task, float64 timeout, const char lines[], int32 expState) = 0;
  virtual int32 CreateWatchdogTimerTaskEx(const char deviceName[], const char sessionName[], TaskHandle* task, float64 timeout) = 0;
  virtual int32 DeleteNetworkDevice(const char deviceName[]) = 0;
  virtual int32 DeleteSavedGlobalChan(const char channelName[]) = 0;
  virtual int32 DeleteSavedScale(const char scaleName[]) = 0;
  virtual int32 DeleteSavedTask(const char taskName[]) = 0;
  virtual int32 DeviceSupportsCal(const char deviceName[], bool32* calSupported) = 0;
  virtual int32 DisableRefTrig(TaskHandle task) = 0;
  virtual int32 DisableStartTrig(TaskHandle task) = 0;
  virtual int32 DisconnectTerms(const char sourceTerminal[], const char destinationTerminal[]) = 0;
  virtual int32 ExportSignal(TaskHandle task, int32 signalID, const char outputTerminal[]) = 0;
  virtual int32 GetAIACExcitFreq(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIACExcitSyncEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAIACExcitWireMode(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIADCCustomTimingMode(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetAIADCTimingMode(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIAccel4WireDCVoltageSensitivity(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIAccel4WireDCVoltageSensitivityUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIAccelChargeSensitivity(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIAccelChargeSensitivityUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIAccelSensitivity(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIAccelSensitivityUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIAccelUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIAcceldBRef(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIAtten(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIAutoZeroMode(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIAveragingWinSize(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetAIBridgeBalanceCoarsePot(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIBridgeBalanceFinePot(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIBridgeCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIBridgeElectricalUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIBridgeInitialRatio(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIBridgeInitialVoltage(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIBridgeNomResistance(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIBridgePhysicalUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIBridgePolyForwardCoeff(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 GetAIBridgePolyReverseCoeff(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 GetAIBridgeScaleType(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIBridgeShuntCalEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAIBridgeShuntCalGainAdjust(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIBridgeShuntCalSelect(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIBridgeShuntCalShuntCalAActualResistance(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIBridgeShuntCalShuntCalAResistance(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIBridgeShuntCalShuntCalASrc(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIBridgeShuntCalShuntCalBActualResistance(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIBridgeShuntCalShuntCalBResistance(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIBridgeTableElectricalVals(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 GetAIBridgeTablePhysicalVals(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 GetAIBridgeTwoPointLinFirstElectricalVal(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIBridgeTwoPointLinFirstPhysicalVal(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIBridgeTwoPointLinSecondElectricalVal(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIBridgeTwoPointLinSecondPhysicalVal(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIBridgeUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIChanCalApplyCalIfExp(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAIChanCalCalDate(TaskHandle task, const char channelName[], uInt32* year, uInt32* month, uInt32* day, uInt32* hour, uInt32* minute) = 0;
  virtual int32 GetAIChanCalDesc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetAIChanCalEnableCal(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAIChanCalExpDate(TaskHandle task, const char channelName[], uInt32* year, uInt32* month, uInt32* day, uInt32* hour, uInt32* minute) = 0;
  virtual int32 GetAIChanCalHasValidCalInfo(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAIChanCalOperatorName(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetAIChanCalPolyForwardCoeff(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 GetAIChanCalPolyReverseCoeff(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 GetAIChanCalScaleType(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIChanCalTablePreScaledVals(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 GetAIChanCalTableScaledVals(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 GetAIChanCalVerifAcqVals(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 GetAIChanCalVerifRefVals(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 GetAIChargeUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIChopEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAICoupling(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAICurrentACRMSUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAICurrentShuntLoc(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAICurrentShuntResistance(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAICurrentUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAICustomScaleName(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetAIDCOffset(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIDataXferCustomThreshold(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetAIDataXferMaxRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIDataXferMech(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIDataXferReqCond(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIDevScalingCoeff(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 GetAIDigFltrBandpassCenterFreq(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIDigFltrBandpassWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIDigFltrCoeff(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 GetAIDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAIDigFltrHighpassCutoffFreq(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIDigFltrLowpassCutoffFreq(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIDigFltrNotchCenterFreq(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIDigFltrNotchWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIDigFltrOrder(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetAIDigFltrResponse(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIDigFltrType(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIDitherEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAIEddyCurrentProxProbeSensitivity(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIEddyCurrentProxProbeSensitivityUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIEddyCurrentProxProbeUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIEnhancedAliasRejectionEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAIExcitActualVal(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIExcitDCorAC(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIExcitIdleOutputBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIExcitSense(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIExcitSrc(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIExcitUseForScaling(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAIExcitUseMultiplexed(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAIExcitVal(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIExcitVoltageOrCurrent(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIFilterDelay(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIFilterDelayAdjustment(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIFilterDelayUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIFilterEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAIFilterFreq(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIFilterOrder(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetAIFilterResponse(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIForceIEPESensorSensitivity(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIForceIEPESensorSensitivityUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIForceReadFromChan(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAIForceUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIFreqHyst(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIFreqThreshVoltage(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIFreqUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIGain(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIInputLimitsFaultDetectEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAIInputLimitsFaultDetectLowerLimit(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIInputLimitsFaultDetectUpperLimit(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIInputSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetAIIsTEDS(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAILVDTSensitivity(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAILVDTSensitivityUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAILVDTUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAILeadWireResistance(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAILossyLSBRemovalCompressedSampSize(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetAILowpassCutoffFreq(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAILowpassEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAILowpassSwitchCapClkSrc(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAILowpassSwitchCapExtClkDiv(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetAILowpassSwitchCapExtClkFreq(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAILowpassSwitchCapOutClkDiv(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetAIMax(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIMeasType(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIMemMapEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAIMicrophoneSensitivity(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIMin(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIOpenChanDetectEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAIOpenThrmcplDetectEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAIOvercurrentDetectEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAIPowerSupplyFaultDetectEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAIPressureUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIProbeAtten(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIRTDA(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIRTDB(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIRTDC(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIRTDR0(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIRTDType(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIRVDTSensitivity(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIRVDTSensitivityUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIRVDTUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIRawDataCompressionType(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIRawSampJustification(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIRawSampSize(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetAIRemoveFilterDelay(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAIResistanceCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIResistanceUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIResolution(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIResolutionUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIRngHigh(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIRngLow(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIRosetteStrainGageOrientation(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIRosetteStrainGageRosetteMeasType(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIRosetteStrainGageRosetteType(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIRosetteStrainGageStrainChans(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetAISampAndHoldEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAISensorPowerCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAISensorPowerType(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAISensorPowerVoltage(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAISoundPressureMaxSoundPressureLvl(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAISoundPressureUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAISoundPressuredBRef(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIStrainGageCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIStrainGageForceReadFromChan(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAIStrainGageGageFactor(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIStrainGagePoissonRatio(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIStrainUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAITEDSUnits(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetAITempUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAITermCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIThrmcplCJCChan(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetAIThrmcplCJCSrc(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIThrmcplCJCVal(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIThrmcplLeadOffsetVoltage(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIThrmcplScaleType(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIThrmcplType(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIThrmstrA(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIThrmstrB(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIThrmstrC(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIThrmstrR1(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAITorqueUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIUsbXferReqCount(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetAIUsbXferReqSize(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetAIVelocityIEPESensorSensitivity(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIVelocityIEPESensorSensitivityUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIVelocityIEPESensordBRef(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAIVelocityUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIVoltageACRMSUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIVoltageUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAIVoltagedBRef(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAOCurrentUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAOCustomScaleName(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetAODACOffsetExtSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetAODACOffsetSrc(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAODACOffsetVal(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAODACRefAllowConnToGnd(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAODACRefConnToGnd(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAODACRefExtSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetAODACRefSrc(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAODACRefVal(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAODACRngHigh(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAODACRngLow(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAODataXferMech(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAODataXferReqCond(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAODevScalingCoeff(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 GetAOEnhancedImageRejectionEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAOFilterDelay(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAOFilterDelayAdjustment(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAOFilterDelayUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAOFuncGenAmplitude(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAOFuncGenFMDeviation(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAOFuncGenFreq(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAOFuncGenModulationType(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAOFuncGenOffset(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAOFuncGenSquareDutyCycle(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAOFuncGenType(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAOGain(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAOIdleOutputBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAOLoadImpedance(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAOMax(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAOMemMapEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAOMin(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAOOutputImpedance(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAOOutputType(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAOReglitchEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAOResolution(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAOResolutionUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAOTermCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetAOUsbXferReqCount(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetAOUsbXferReqSize(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetAOUseOnlyOnBrdMem(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetAOVoltageCurrentLimit(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetAOVoltageUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetArmStartTrigTimestampVal(TaskHandle task, CVIAbsoluteTime* data) = 0;
  virtual int32 GetArmStartTrigTrigWhen(TaskHandle task, CVIAbsoluteTime* data) = 0;
  virtual int32 GetAutoConfiguredCDAQSyncConnections(char portList[], uInt32 portListSize) = 0;
  virtual int32 GetBufInputBufSize(TaskHandle task, uInt32* data) = 0;
  virtual int32 GetBufInputOnbrdBufSize(TaskHandle task, uInt32* data) = 0;
  virtual int32 GetBufOutputBufSize(TaskHandle task, uInt32* data) = 0;
  virtual int32 GetBufOutputOnbrdBufSize(TaskHandle task, uInt32* data) = 0;
  virtual int32 GetCIAngEncoderInitialAngle(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIAngEncoderPulsesPerRev(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCIAngEncoderUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCICount(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCICountEdgesActiveEdge(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCICountEdgesCountDirDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCICountEdgesCountDirDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCICountEdgesCountDirDigFltrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCICountEdgesCountDirDigFltrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCICountEdgesCountDirDigSyncEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCICountEdgesCountDirHyst(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCICountEdgesCountDirLogicLvlBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCICountEdgesCountDirTermCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCICountEdgesCountDirThreshVoltage(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCICountEdgesCountResetActiveEdge(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCICountEdgesCountResetDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCICountEdgesCountResetDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCICountEdgesCountResetDigFltrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCICountEdgesCountResetDigFltrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCICountEdgesCountResetDigSyncEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCICountEdgesCountResetEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCICountEdgesCountResetHyst(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCICountEdgesCountResetLogicLvlBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCICountEdgesCountResetResetCount(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCICountEdgesCountResetTerm(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCICountEdgesCountResetTermCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCICountEdgesCountResetThreshVoltage(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCICountEdgesDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCICountEdgesDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCICountEdgesDigFltrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCICountEdgesDigFltrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCICountEdgesDigSyncEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCICountEdgesDir(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCICountEdgesDirTerm(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCICountEdgesGateDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCICountEdgesGateDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCICountEdgesGateDigFltrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCICountEdgesGateDigFltrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCICountEdgesGateEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCICountEdgesGateHyst(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCICountEdgesGateLogicLvlBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCICountEdgesGateTerm(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCICountEdgesGateTermCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCICountEdgesGateThreshVoltage(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCICountEdgesGateWhen(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCICountEdgesHyst(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCICountEdgesInitialCnt(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCICountEdgesLogicLvlBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCICountEdgesTerm(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCICountEdgesTermCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCICountEdgesThreshVoltage(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCICtrTimebaseActiveEdge(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCICtrTimebaseDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCICtrTimebaseDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCICtrTimebaseDigFltrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCICtrTimebaseDigFltrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCICtrTimebaseDigSyncEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCICtrTimebaseMasterTimebaseDiv(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCICtrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCICtrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCICustomScaleName(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIDataXferMech(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIDataXferReqCond(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIDupCountPrevent(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIDutyCycleDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIDutyCycleDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIDutyCycleDigFltrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIDutyCycleDigFltrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIDutyCycleLogicLvlBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIDutyCycleStartingEdge(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIDutyCycleTerm(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIDutyCycleTermCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIEncoderAInputDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIEncoderAInputDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIEncoderAInputDigFltrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIEncoderAInputDigFltrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIEncoderAInputDigSyncEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIEncoderAInputLogicLvlBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIEncoderAInputTerm(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIEncoderAInputTermCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIEncoderBInputDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIEncoderBInputDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIEncoderBInputDigFltrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIEncoderBInputDigFltrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIEncoderBInputDigSyncEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIEncoderBInputLogicLvlBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIEncoderBInputTerm(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIEncoderBInputTermCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIEncoderDecodingType(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIEncoderZIndexEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIEncoderZIndexPhase(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIEncoderZIndexVal(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIEncoderZInputDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIEncoderZInputDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIEncoderZInputDigFltrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIEncoderZInputDigFltrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIEncoderZInputDigSyncEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIEncoderZInputLogicLvlBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIEncoderZInputTerm(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIEncoderZInputTermCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIFilterDelay(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIFilterDelayUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIFilterEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIFilterFreq(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIFilterOrder(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCIFilterResponse(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIFreqDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIFreqDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIFreqDigFltrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIFreqDigFltrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIFreqDigSyncEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIFreqDiv(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCIFreqEnableAveraging(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIFreqHyst(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIFreqLogicLvlBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIFreqMeasMeth(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIFreqMeasTime(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIFreqStartingEdge(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIFreqTerm(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIFreqTermCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIFreqThreshVoltage(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIFreqUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIGPSSyncMethod(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIGPSSyncSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCILinEncoderDistPerPulse(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCILinEncoderInitialPos(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCILinEncoderUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIMax(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIMaxMeasPeriod(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIMeasType(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIMemMapEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIMin(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCINumPossiblyInvalidSamps(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCIOutputState(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIPeriodDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIPeriodDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIPeriodDigFltrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIPeriodDigFltrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIPeriodDigSyncEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIPeriodDiv(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCIPeriodEnableAveraging(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIPeriodHyst(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIPeriodLogicLvlBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIPeriodMeasMeth(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIPeriodMeasTime(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIPeriodStartingEdge(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIPeriodTerm(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIPeriodTermCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIPeriodThreshVoltage(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIPeriodUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIPrescaler(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCIPulseFreqDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIPulseFreqDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIPulseFreqDigFltrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIPulseFreqDigFltrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIPulseFreqDigSyncEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIPulseFreqLogicLvlBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIPulseFreqStartEdge(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIPulseFreqTerm(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIPulseFreqTermCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIPulseFreqUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIPulseTicksDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIPulseTicksDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIPulseTicksDigFltrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIPulseTicksDigFltrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIPulseTicksDigSyncEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIPulseTicksLogicLvlBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIPulseTicksStartEdge(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIPulseTicksTerm(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIPulseTicksTermCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIPulseTimeDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIPulseTimeDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIPulseTimeDigFltrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIPulseTimeDigFltrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIPulseTimeDigSyncEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIPulseTimeLogicLvlBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIPulseTimeStartEdge(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIPulseTimeTerm(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIPulseTimeTermCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIPulseTimeUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIPulseWidthDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIPulseWidthDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIPulseWidthDigFltrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIPulseWidthDigFltrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIPulseWidthDigSyncEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIPulseWidthLogicLvlBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIPulseWidthStartingEdge(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIPulseWidthTerm(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIPulseWidthTermCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIPulseWidthUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCISampClkOverrunBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCISampClkOverrunSentinelVal(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCISemiPeriodDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCISemiPeriodDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCISemiPeriodDigFltrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCISemiPeriodDigFltrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCISemiPeriodDigSyncEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCISemiPeriodLogicLvlBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCISemiPeriodStartingEdge(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCISemiPeriodTerm(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCISemiPeriodTermCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCISemiPeriodUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCITCReached(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIThreshVoltage(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCITimestampInitialSeconds(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCITimestampUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCITwoEdgeSepFirstDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCITwoEdgeSepFirstDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCITwoEdgeSepFirstDigFltrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCITwoEdgeSepFirstDigFltrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCITwoEdgeSepFirstDigSyncEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCITwoEdgeSepFirstEdge(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCITwoEdgeSepFirstLogicLvlBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCITwoEdgeSepFirstTerm(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCITwoEdgeSepFirstTermCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCITwoEdgeSepSecondDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCITwoEdgeSepSecondDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCITwoEdgeSepSecondDigFltrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCITwoEdgeSepSecondDigFltrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCITwoEdgeSepSecondDigSyncEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCITwoEdgeSepSecondEdge(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCITwoEdgeSepSecondLogicLvlBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCITwoEdgeSepSecondTerm(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCITwoEdgeSepSecondTermCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCITwoEdgeSepUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIUsbXferReqCount(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCIUsbXferReqSize(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCIVelocityAngEncoderPulsesPerRev(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCIVelocityAngEncoderUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIVelocityDiv(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCIVelocityEncoderAInputDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIVelocityEncoderAInputDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIVelocityEncoderAInputDigFltrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIVelocityEncoderAInputDigFltrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIVelocityEncoderAInputLogicLvlBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIVelocityEncoderAInputTerm(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIVelocityEncoderAInputTermCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIVelocityEncoderBInputDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCIVelocityEncoderBInputDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIVelocityEncoderBInputDigFltrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIVelocityEncoderBInputDigFltrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIVelocityEncoderBInputLogicLvlBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIVelocityEncoderBInputTerm(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCIVelocityEncoderBInputTermCfg(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIVelocityEncoderDecodingType(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIVelocityLinEncoderDistPerPulse(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCIVelocityLinEncoderUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCIVelocityMeasTime(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCOAutoIncrCnt(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCOConstrainedGenMode(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCOCount(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCOCtrTimebaseActiveEdge(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCOCtrTimebaseDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCOCtrTimebaseDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCOCtrTimebaseDigFltrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCOCtrTimebaseDigFltrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCOCtrTimebaseDigSyncEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCOCtrTimebaseMasterTimebaseDiv(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCOCtrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCOCtrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCODataXferMech(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCODataXferReqCond(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCOEnableInitialDelayOnRetrigger(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCOMemMapEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCOOutputState(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCOOutputType(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCOPrescaler(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCOPulseDone(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCOPulseDutyCyc(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCOPulseFreq(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCOPulseFreqInitialDelay(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCOPulseFreqUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCOPulseHighTicks(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCOPulseHighTime(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCOPulseIdleState(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCOPulseLowTicks(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCOPulseLowTime(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCOPulseTerm(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCOPulseTicksInitialDelay(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCOPulseTimeInitialDelay(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetCOPulseTimeUnits(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetCORdyForNewVal(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCOUsbXferReqCount(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCOUsbXferReqSize(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetCOUseOnlyOnBrdMem(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetCalAccConnectionCount(const char deviceName[], uInt32* data) = 0;
  virtual int32 GetCalDevTemp(const char deviceName[], float64* data) = 0;
  virtual int32 GetCalRecommendedAccConnectionCountLimit(const char deviceName[], uInt32* data) = 0;
  virtual int32 GetCalUserDefinedInfo(const char deviceName[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetCalUserDefinedInfoMaxSize(const char deviceName[], uInt32* data) = 0;
  virtual int32 GetChanDescr(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetChanIsGlobal(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetChanSyncUnlockBehavior(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetChanType(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetDIAcquireOn(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetDIDataXferMech(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetDIDataXferReqCond(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetDIDigFltrEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetDIDigFltrEnableBusMode(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetDIDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetDIDigFltrTimebaseRate(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetDIDigFltrTimebaseSrc(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetDIDigSyncEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetDIInvertLines(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetDILogicFamily(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetDIMemMapEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetDINumLines(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetDITristate(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetDIUsbXferReqCount(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetDIUsbXferReqSize(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetDODataXferMech(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetDODataXferReqCond(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetDOGenerateOn(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetDOInvertLines(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetDOLineStatesDoneState(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetDOLineStatesPausedState(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetDOLineStatesStartState(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetDOLogicFamily(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetDOMemMapEnable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetDONumLines(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetDOOutputDriveType(TaskHandle task, const char channel[], int32* data) = 0;
  virtual int32 GetDOOvercurrentAutoReenable(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetDOOvercurrentLimit(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetDOOvercurrentReenablePeriod(TaskHandle task, const char channel[], float64* data) = 0;
  virtual int32 GetDOTristate(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetDOUsbXferReqCount(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetDOUsbXferReqSize(TaskHandle task, const char channel[], uInt32* data) = 0;
  virtual int32 GetDOUseOnlyOnBrdMem(TaskHandle task, const char channel[], bool32* data) = 0;
  virtual int32 GetDigitalLogicFamilyPowerUpState(const char deviceName[], int32* logicFamily) = 0;
  virtual int32 GetDisconnectedCDAQSyncPorts(char portList[], uInt32 portListSize) = 0;
  virtual int32 GetErrorString(int32 errorCode, char errorString[], uInt32 bufferSize) = 0;
  virtual int32 GetExtCalLastTemp(const char deviceName[], float64* data) = 0;
  virtual int32 GetExtCalRecommendedInterval(const char deviceName[], uInt32* data) = 0;
  virtual int32 GetExtendedErrorInfo(char errorString[], uInt32 bufferSize) = 0;
  virtual int32 GetFirstSampClkWhen(TaskHandle task, CVIAbsoluteTime* data) = 0;
  virtual int32 GetFirstSampTimestampVal(TaskHandle task, CVIAbsoluteTime* data) = 0;
  virtual int32 GetNthTaskChannel(TaskHandle task, uInt32 index, char buffer[], int32 bufferSize) = 0;
  virtual int32 GetNthTaskDevice(TaskHandle task, uInt32 index, char buffer[], int32 bufferSize) = 0;
  virtual int32 GetNthTaskReadChannel(TaskHandle task, uInt32 index, char buffer[], int32 bufferSize) = 0;
  virtual int32 GetPhysicalChanName(TaskHandle task, const char channel[], char data[], uInt32 bufferSize) = 0;
  virtual int32 GetRefTrigTimestampVal(TaskHandle task, CVIAbsoluteTime* data) = 0;
  virtual int32 GetSelfCalLastDateAndTime(const char deviceName[], uInt32* year, uInt32* month, uInt32* day, uInt32* hour, uInt32* minute) = 0;
  virtual int32 GetSelfCalLastTemp(const char deviceName[], float64* data) = 0;
  virtual int32 GetSelfCalSupported(const char deviceName[], bool32* data) = 0;
  virtual int32 GetStartTrigTimestampVal(TaskHandle task, CVIAbsoluteTime* data) = 0;
  virtual int32 GetStartTrigTrigWhen(TaskHandle task, CVIAbsoluteTime* data) = 0;
  virtual int32 GetSyncPulseTimeWhen(TaskHandle task, CVIAbsoluteTime* data) = 0;
  virtual int32 IsTaskDone(TaskHandle task, bool32* isTaskDone) = 0;
  virtual int32 LoadTask(const char sessionName[], TaskHandle* task) = 0;
  virtual int32 ReadAnalogF64(TaskHandle task, int32 numSampsPerChan, float64 timeout, int32 fillMode, float64 readArray[], uInt32 arraySizeInSamps, int32* sampsPerChanRead, bool32* reserved) = 0;
  virtual int32 ReadAnalogScalarF64(TaskHandle task, float64 timeout, float64* value, bool32* reserved) = 0;
  virtual int32 ReadBinaryI16(TaskHandle task, int32 numSampsPerChan, float64 timeout, int32 fillMode, int16 readArray[], uInt32 arraySizeInSamps, int32* sampsPerChanRead, bool32* reserved) = 0;
  virtual int32 ReadBinaryI32(TaskHandle task, int32 numSampsPerChan, float64 timeout, int32 fillMode, int32 readArray[], uInt32 arraySizeInSamps, int32* sampsPerChanRead, bool32* reserved) = 0;
  virtual int32 ReadBinaryU16(TaskHandle task, int32 numSampsPerChan, float64 timeout, int32 fillMode, uInt16 readArray[], uInt32 arraySizeInSamps, int32* sampsPerChanRead, bool32* reserved) = 0;
  virtual int32 ReadBinaryU32(TaskHandle task, int32 numSampsPerChan, float64 timeout, int32 fillMode, uInt32 readArray[], uInt32 arraySizeInSamps, int32* sampsPerChanRead, bool32* reserved) = 0;
  virtual int32 ReadCounterF64(TaskHandle task, int32 numSampsPerChan, float64 timeout, float64 readArray[], uInt32 arraySizeInSamps, int32* sampsPerChanRead, bool32* reserved) = 0;
  virtual int32 ReadCounterF64Ex(TaskHandle task, int32 numSampsPerChan, float64 timeout, int32 fillMode, float64 readArray[], uInt32 arraySizeInSamps, int32* sampsPerChanRead, bool32* reserved) = 0;
  virtual int32 ReadCounterScalarF64(TaskHandle task, float64 timeout, float64* value, bool32* reserved) = 0;
  virtual int32 ReadCounterScalarU32(TaskHandle task, float64 timeout, uInt32* value, bool32* reserved) = 0;
  virtual int32 ReadCounterU32(TaskHandle task, int32 numSampsPerChan, float64 timeout, uInt32 readArray[], uInt32 arraySizeInSamps, int32* sampsPerChanRead, bool32* reserved) = 0;
  virtual int32 ReadCounterU32Ex(TaskHandle task, int32 numSampsPerChan, float64 timeout, int32 fillMode, uInt32 readArray[], uInt32 arraySizeInSamps, int32* sampsPerChanRead, bool32* reserved) = 0;
  virtual int32 ReadCtrFreq(TaskHandle task, int32 numSampsPerChan, float64 timeout, int32 interleaved, float64 readArrayFrequency[], float64 readArrayDutyCycle[], uInt32 arraySizeInSamps, int32* sampsPerChanRead, bool32* reserved) = 0;
  virtual int32 ReadCtrFreqScalar(TaskHandle task, float64 timeout, float64* frequency, float64* dutyCycle, bool32* reserved) = 0;
  virtual int32 ReadCtrTicks(TaskHandle task, int32 numSampsPerChan, float64 timeout, int32 interleaved, uInt32 readArrayHighTicks[], uInt32 readArrayLowTicks[], uInt32 arraySizeInSamps, int32* sampsPerChanRead, bool32* reserved) = 0;
  virtual int32 ReadCtrTicksScalar(TaskHandle task, float64 timeout, uInt32* highTicks, uInt32* lowTicks, bool32* reserved) = 0;
  virtual int32 ReadCtrTime(TaskHandle task, int32 numSampsPerChan, float64 timeout, int32 interleaved, float64 readArrayHighTime[], float64 readArrayLowTime[], uInt32 arraySizeInSamps, int32* sampsPerChanRead, bool32* reserved) = 0;
  virtual int32 ReadCtrTimeScalar(TaskHandle task, float64 timeout, float64* highTime, float64* lowTime, bool32* reserved) = 0;
  virtual int32 ReadDigitalLines(TaskHandle task, int32 numSampsPerChan, float64 timeout, int32 fillMode, uInt8 readArray[], uInt32 arraySizeInBytes, int32* sampsPerChanRead, int32* numBytesPerSamp, bool32* reserved) = 0;
  virtual int32 ReadDigitalScalarU32(TaskHandle task, float64 timeout, uInt32* value, bool32* reserved) = 0;
  virtual int32 ReadDigitalU16(TaskHandle task, int32 numSampsPerChan, float64 timeout, int32 fillMode, uInt16 readArray[], uInt32 arraySizeInSamps, int32* sampsPerChanRead, bool32* reserved) = 0;
  virtual int32 ReadDigitalU32(TaskHandle task, int32 numSampsPerChan, float64 timeout, int32 fillMode, uInt32 readArray[], uInt32 arraySizeInSamps, int32* sampsPerChanRead, bool32* reserved) = 0;
  virtual int32 ReadDigitalU8(TaskHandle task, int32 numSampsPerChan, float64 timeout, int32 fillMode, uInt8 readArray[], uInt32 arraySizeInSamps, int32* sampsPerChanRead, bool32* reserved) = 0;
  virtual int32 ReadRaw(TaskHandle task, int32 numSampsPerChan, float64 timeout, uInt8 readArray[], uInt32 arraySizeInBytes, int32* sampsRead, int32* numBytesPerSamp, bool32* reserved) = 0;
  virtual int32 RegisterDoneEvent(TaskHandle task, uInt32 options, DAQmxDoneEventCallbackPtr callbackFunction, void* callbackData) = 0;
  virtual int32 RegisterEveryNSamplesEvent(TaskHandle task, int32 everyNSamplesEventType, uInt32 nSamples, uInt32 options, DAQmxEveryNSamplesEventCallbackPtr callbackFunction, void* callbackData) = 0;
  virtual int32 RegisterSignalEvent(TaskHandle task, int32 signalID, uInt32 options, DAQmxSignalEventCallbackPtr callbackFunction, void* callbackData) = 0;
  virtual int32 RemoveCDAQSyncConnection(const char portList[]) = 0;
  virtual int32 ReserveNetworkDevice(const char deviceName[], bool32 overrideReservation) = 0;
  virtual int32 ResetAIACExcitFreq(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIACExcitSyncEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIACExcitWireMode(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIADCCustomTimingMode(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIADCTimingMode(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIAccel4WireDCVoltageSensitivity(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIAccel4WireDCVoltageSensitivityUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIAccelChargeSensitivity(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIAccelChargeSensitivityUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIAccelSensitivity(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIAccelSensitivityUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIAccelUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIAcceldBRef(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIAtten(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIAutoZeroMode(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIAveragingWinSize(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeBalanceCoarsePot(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeBalanceFinePot(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeElectricalUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeInitialRatio(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeInitialVoltage(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeNomResistance(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgePhysicalUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgePolyForwardCoeff(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgePolyReverseCoeff(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeScaleType(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeShuntCalEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeShuntCalGainAdjust(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeShuntCalSelect(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeShuntCalShuntCalAActualResistance(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeShuntCalShuntCalAResistance(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeShuntCalShuntCalASrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeShuntCalShuntCalBActualResistance(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeShuntCalShuntCalBResistance(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeTableElectricalVals(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeTablePhysicalVals(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeTwoPointLinFirstElectricalVal(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeTwoPointLinFirstPhysicalVal(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeTwoPointLinSecondElectricalVal(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeTwoPointLinSecondPhysicalVal(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIBridgeUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIChanCalApplyCalIfExp(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIChanCalDesc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIChanCalEnableCal(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIChanCalOperatorName(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIChanCalPolyForwardCoeff(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIChanCalPolyReverseCoeff(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIChanCalScaleType(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIChanCalTablePreScaledVals(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIChanCalTableScaledVals(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIChanCalVerifAcqVals(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIChanCalVerifRefVals(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIChargeUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIChopEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAICoupling(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAICurrentACRMSUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAICurrentShuntLoc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAICurrentShuntResistance(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAICurrentUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAICustomScaleName(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIDCOffset(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIDataXferCustomThreshold(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIDataXferMaxRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIDataXferMech(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIDataXferReqCond(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIDigFltrBandpassCenterFreq(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIDigFltrBandpassWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIDigFltrCoeff(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIDigFltrHighpassCutoffFreq(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIDigFltrLowpassCutoffFreq(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIDigFltrNotchCenterFreq(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIDigFltrNotchWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIDigFltrOrder(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIDigFltrResponse(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIDigFltrType(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIDitherEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIEddyCurrentProxProbeSensitivity(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIEddyCurrentProxProbeSensitivityUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIEddyCurrentProxProbeUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIEnhancedAliasRejectionEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIExcitActualVal(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIExcitDCorAC(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIExcitIdleOutputBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIExcitSense(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIExcitSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIExcitUseForScaling(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIExcitUseMultiplexed(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIExcitVal(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIExcitVoltageOrCurrent(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIFilterDelayAdjustment(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIFilterDelayUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIFilterEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIFilterFreq(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIFilterOrder(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIFilterResponse(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIForceIEPESensorSensitivity(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIForceIEPESensorSensitivityUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIForceReadFromChan(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIForceUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIFreqHyst(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIFreqThreshVoltage(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIFreqUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIGain(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIImpedance(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIInputLimitsFaultDetectEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIInputLimitsFaultDetectLowerLimit(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIInputLimitsFaultDetectUpperLimit(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIInputSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAILVDTSensitivity(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAILVDTSensitivityUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAILVDTUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAILeadWireResistance(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAILossyLSBRemovalCompressedSampSize(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAILowpassCutoffFreq(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAILowpassEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAILowpassSwitchCapClkSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAILowpassSwitchCapExtClkDiv(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAILowpassSwitchCapExtClkFreq(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAILowpassSwitchCapOutClkDiv(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIMax(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIMemMapEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIMicrophoneSensitivity(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIMin(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIOpenChanDetectEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIOpenThrmcplDetectEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIOvercurrentDetectEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIPowerSupplyFaultDetectEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIPressureUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIProbeAtten(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIRTDA(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIRTDB(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIRTDC(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIRTDR0(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIRTDType(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIRVDTSensitivity(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIRVDTSensitivityUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIRVDTUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIRawDataCompressionType(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIRemoveFilterDelay(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIResistanceCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIResistanceUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIRngHigh(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIRngLow(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIRosetteStrainGageOrientation(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIRosetteStrainGageRosetteMeasType(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAISampAndHoldEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAISensorPowerCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAISensorPowerType(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAISensorPowerVoltage(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAISoundPressureMaxSoundPressureLvl(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAISoundPressureUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAISoundPressuredBRef(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIStrainGageCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIStrainGageForceReadFromChan(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIStrainGageGageFactor(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIStrainGagePoissonRatio(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIStrainUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAITempUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAITermCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIThrmcplCJCVal(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIThrmcplLeadOffsetVoltage(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIThrmcplScaleType(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIThrmcplType(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIThrmstrA(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIThrmstrB(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIThrmstrC(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIThrmstrR1(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAITorqueUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIUsbXferReqCount(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIUsbXferReqSize(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIVelocityIEPESensorSensitivity(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIVelocityIEPESensorSensitivityUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIVelocityIEPESensordBRef(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIVelocityUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIVoltageACRMSUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIVoltageUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAIVoltagedBRef(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOCurrentUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOCustomScaleName(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAODACOffsetExtSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAODACOffsetSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAODACOffsetVal(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAODACRefAllowConnToGnd(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAODACRefConnToGnd(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAODACRefExtSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAODACRefSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAODACRefVal(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAODACRngHigh(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAODACRngLow(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAODataXferMech(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAODataXferReqCond(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOEnhancedImageRejectionEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOFilterDelay(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOFilterDelayAdjustment(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOFilterDelayUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOFuncGenAmplitude(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOFuncGenFMDeviation(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOFuncGenFreq(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOFuncGenModulationType(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOFuncGenOffset(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOFuncGenSquareDutyCycle(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOFuncGenType(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOGain(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOIdleOutputBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOLoadImpedance(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOMax(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOMemMapEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOMin(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOOutputImpedance(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOReglitchEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOResolutionUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOTermCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOUsbXferReqCount(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOUsbXferReqSize(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOUseOnlyOnBrdMem(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOVoltageCurrentLimit(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetAOVoltageUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetBufInputBufSize(TaskHandle task) = 0;
  virtual int32 ResetBufOutputBufSize(TaskHandle task) = 0;
  virtual int32 ResetBufOutputOnbrdBufSize(TaskHandle task) = 0;
  virtual int32 ResetCIAngEncoderInitialAngle(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIAngEncoderPulsesPerRev(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIAngEncoderUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesActiveEdge(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesCountDirDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesCountDirDigFltrMinPulseWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesCountDirDigFltrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesCountDirDigFltrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesCountDirDigSyncEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesCountDirHyst(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesCountDirLogicLvlBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesCountDirTermCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesCountDirThreshVoltage(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesCountResetActiveEdge(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesCountResetDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesCountResetDigFltrMinPulseWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesCountResetDigFltrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesCountResetDigFltrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesCountResetDigSyncEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesCountResetEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesCountResetHyst(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesCountResetLogicLvlBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesCountResetResetCount(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesCountResetTerm(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesCountResetTermCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesCountResetThreshVoltage(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesDigFltrMinPulseWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesDigFltrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesDigFltrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesDigSyncEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesDir(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesDirTerm(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesGateDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesGateDigFltrMinPulseWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesGateDigFltrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesGateDigFltrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesGateEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesGateHyst(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesGateLogicLvlBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesGateTerm(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesGateTermCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesGateThreshVoltage(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesGateWhen(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesHyst(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesInitialCnt(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesLogicLvlBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesTerm(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesTermCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICountEdgesThreshVoltage(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICtrTimebaseActiveEdge(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICtrTimebaseDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICtrTimebaseDigFltrMinPulseWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICtrTimebaseDigFltrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICtrTimebaseDigFltrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICtrTimebaseDigSyncEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICtrTimebaseMasterTimebaseDiv(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICtrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICtrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCICustomScaleName(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIDataXferMech(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIDataXferReqCond(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIDupCountPrevent(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIDutyCycleDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIDutyCycleDigFltrMinPulseWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIDutyCycleDigFltrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIDutyCycleDigFltrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIDutyCycleLogicLvlBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIDutyCycleStartingEdge(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIDutyCycleTerm(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIDutyCycleTermCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderAInputDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderAInputDigFltrMinPulseWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderAInputDigFltrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderAInputDigFltrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderAInputDigSyncEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderAInputLogicLvlBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderAInputTerm(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderAInputTermCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderBInputDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderBInputDigFltrMinPulseWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderBInputDigFltrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderBInputDigFltrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderBInputDigSyncEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderBInputLogicLvlBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderBInputTerm(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderBInputTermCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderDecodingType(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderZIndexEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderZIndexPhase(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderZIndexVal(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderZInputDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderZInputDigFltrMinPulseWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderZInputDigFltrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderZInputDigFltrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderZInputDigSyncEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderZInputLogicLvlBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderZInputTerm(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIEncoderZInputTermCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIFilterDelayUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIFilterEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIFilterFreq(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIFilterOrder(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIFilterResponse(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIFreqDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIFreqDigFltrMinPulseWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIFreqDigFltrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIFreqDigFltrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIFreqDigSyncEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIFreqDiv(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIFreqEnableAveraging(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIFreqHyst(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIFreqLogicLvlBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIFreqMeasMeth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIFreqMeasTime(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIFreqStartingEdge(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIFreqTerm(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIFreqTermCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIFreqThreshVoltage(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIFreqUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIGPSSyncMethod(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIGPSSyncSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCILinEncoderDistPerPulse(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCILinEncoderInitialPos(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCILinEncoderUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIMax(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIMaxMeasPeriod(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIMemMapEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIMin(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPeriodDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPeriodDigFltrMinPulseWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPeriodDigFltrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPeriodDigFltrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPeriodDigSyncEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPeriodDiv(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPeriodEnableAveraging(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPeriodHyst(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPeriodLogicLvlBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPeriodMeasMeth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPeriodMeasTime(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPeriodStartingEdge(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPeriodTerm(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPeriodTermCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPeriodThreshVoltage(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPeriodUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPrescaler(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseFreqDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseFreqDigFltrMinPulseWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseFreqDigFltrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseFreqDigFltrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseFreqDigSyncEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseFreqLogicLvlBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseFreqStartEdge(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseFreqTerm(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseFreqTermCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseFreqUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseTicksDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseTicksDigFltrMinPulseWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseTicksDigFltrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseTicksDigFltrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseTicksDigSyncEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseTicksLogicLvlBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseTicksStartEdge(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseTicksTerm(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseTicksTermCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseTimeDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseTimeDigFltrMinPulseWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseTimeDigFltrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseTimeDigFltrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseTimeDigSyncEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseTimeLogicLvlBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseTimeStartEdge(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseTimeTerm(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseTimeTermCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseTimeUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseWidthDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseWidthDigFltrMinPulseWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseWidthDigFltrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseWidthDigFltrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseWidthDigSyncEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseWidthLogicLvlBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseWidthStartingEdge(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseWidthTerm(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseWidthTermCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIPulseWidthUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCISampClkOverrunBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCISampClkOverrunSentinelVal(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCISemiPeriodDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCISemiPeriodDigFltrMinPulseWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCISemiPeriodDigFltrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCISemiPeriodDigFltrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCISemiPeriodDigSyncEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCISemiPeriodLogicLvlBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCISemiPeriodStartingEdge(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCISemiPeriodTerm(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCISemiPeriodTermCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCISemiPeriodUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIThreshVoltage(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCITimestampInitialSeconds(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCITimestampUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCITwoEdgeSepFirstDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCITwoEdgeSepFirstDigFltrMinPulseWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCITwoEdgeSepFirstDigFltrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCITwoEdgeSepFirstDigFltrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCITwoEdgeSepFirstDigSyncEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCITwoEdgeSepFirstEdge(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCITwoEdgeSepFirstLogicLvlBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCITwoEdgeSepFirstTerm(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCITwoEdgeSepFirstTermCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCITwoEdgeSepSecondDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCITwoEdgeSepSecondDigFltrMinPulseWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCITwoEdgeSepSecondDigFltrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCITwoEdgeSepSecondDigFltrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCITwoEdgeSepSecondDigSyncEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCITwoEdgeSepSecondEdge(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCITwoEdgeSepSecondLogicLvlBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCITwoEdgeSepSecondTerm(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCITwoEdgeSepSecondTermCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCITwoEdgeSepUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIUsbXferReqCount(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIUsbXferReqSize(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIVelocityAngEncoderPulsesPerRev(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIVelocityAngEncoderUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIVelocityDiv(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIVelocityEncoderAInputDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIVelocityEncoderAInputDigFltrMinPulseWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIVelocityEncoderAInputDigFltrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIVelocityEncoderAInputDigFltrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIVelocityEncoderAInputLogicLvlBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIVelocityEncoderAInputTerm(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIVelocityEncoderAInputTermCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIVelocityEncoderBInputDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIVelocityEncoderBInputDigFltrMinPulseWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIVelocityEncoderBInputDigFltrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIVelocityEncoderBInputDigFltrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIVelocityEncoderBInputLogicLvlBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIVelocityEncoderBInputTerm(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIVelocityEncoderBInputTermCfg(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIVelocityEncoderDecodingType(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIVelocityLinEncoderDistPerPulse(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIVelocityLinEncoderUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCIVelocityMeasTime(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOAutoIncrCnt(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOConstrainedGenMode(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOCtrTimebaseActiveEdge(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOCtrTimebaseDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOCtrTimebaseDigFltrMinPulseWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOCtrTimebaseDigFltrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOCtrTimebaseDigFltrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOCtrTimebaseDigSyncEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOCtrTimebaseMasterTimebaseDiv(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOCtrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOCtrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCODataXferMech(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCODataXferReqCond(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOEnableInitialDelayOnRetrigger(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOMemMapEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOPrescaler(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOPulseDutyCyc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOPulseFreq(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOPulseFreqInitialDelay(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOPulseFreqUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOPulseHighTicks(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOPulseHighTime(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOPulseIdleState(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOPulseLowTicks(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOPulseLowTime(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOPulseTerm(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOPulseTicksInitialDelay(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOPulseTimeInitialDelay(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOPulseTimeUnits(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOUsbXferReqCount(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOUsbXferReqSize(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetCOUseOnlyOnBrdMem(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetChanDescr(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetChanSyncUnlockBehavior(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDIAcquireOn(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDIDataXferMech(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDIDataXferReqCond(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDIDigFltrEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDIDigFltrEnableBusMode(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDIDigFltrMinPulseWidth(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDIDigFltrTimebaseRate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDIDigFltrTimebaseSrc(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDIDigSyncEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDIInvertLines(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDILogicFamily(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDIMemMapEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDITristate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDIUsbXferReqCount(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDIUsbXferReqSize(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDODataXferMech(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDODataXferReqCond(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDOGenerateOn(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDOInvertLines(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDOLineStatesDoneState(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDOLineStatesPausedState(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDOLineStatesStartState(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDOLogicFamily(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDOMemMapEnable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDOOutputDriveType(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDOOvercurrentAutoReenable(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDOOvercurrentLimit(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDOOvercurrentReenablePeriod(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDOTristate(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDOUsbXferReqCount(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDOUsbXferReqSize(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDOUseOnlyOnBrdMem(TaskHandle task, const char channel[]) = 0;
  virtual int32 ResetDevice(const char deviceName[]) = 0;
  virtual int32 SaveGlobalChan(TaskHandle task, const char channelName[], const char saveAs[], const char author[], uInt32 options) = 0;
  virtual int32 SaveScale(const char scaleName[], const char saveAs[], const char author[], uInt32 options) = 0;
  virtual int32 SaveTask(TaskHandle task, const char saveAs[], const char author[], uInt32 options) = 0;
  virtual int32 SelfCal(const char deviceName[]) = 0;
  virtual int32 SelfTestDevice(const char deviceName[]) = 0;
  virtual int32 SetAIACExcitFreq(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIACExcitSyncEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAIACExcitWireMode(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIADCCustomTimingMode(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetAIADCTimingMode(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIAccel4WireDCVoltageSensitivity(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIAccel4WireDCVoltageSensitivityUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIAccelChargeSensitivity(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIAccelChargeSensitivityUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIAccelSensitivity(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIAccelSensitivityUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIAccelUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIAcceldBRef(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIAtten(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIAutoZeroMode(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIAveragingWinSize(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetAIBridgeBalanceCoarsePot(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIBridgeBalanceFinePot(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIBridgeCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIBridgeElectricalUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIBridgeInitialRatio(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIBridgeInitialVoltage(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIBridgeNomResistance(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIBridgePhysicalUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIBridgePolyForwardCoeff(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 SetAIBridgePolyReverseCoeff(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 SetAIBridgeScaleType(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIBridgeShuntCalEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAIBridgeShuntCalGainAdjust(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIBridgeShuntCalSelect(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIBridgeShuntCalShuntCalAActualResistance(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIBridgeShuntCalShuntCalAResistance(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIBridgeShuntCalShuntCalASrc(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIBridgeShuntCalShuntCalBActualResistance(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIBridgeShuntCalShuntCalBResistance(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIBridgeTableElectricalVals(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 SetAIBridgeTablePhysicalVals(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 SetAIBridgeTwoPointLinFirstElectricalVal(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIBridgeTwoPointLinFirstPhysicalVal(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIBridgeTwoPointLinSecondElectricalVal(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIBridgeTwoPointLinSecondPhysicalVal(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIBridgeUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIChanCalApplyCalIfExp(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAIChanCalCalDate(TaskHandle task, const char channelName[], uInt32 year, uInt32 month, uInt32 day, uInt32 hour, uInt32 minute) = 0;
  virtual int32 SetAIChanCalDesc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetAIChanCalEnableCal(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAIChanCalExpDate(TaskHandle task, const char channelName[], uInt32 year, uInt32 month, uInt32 day, uInt32 hour, uInt32 minute) = 0;
  virtual int32 SetAIChanCalOperatorName(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetAIChanCalPolyForwardCoeff(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 SetAIChanCalPolyReverseCoeff(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 SetAIChanCalScaleType(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIChanCalTablePreScaledVals(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 SetAIChanCalTableScaledVals(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 SetAIChanCalVerifAcqVals(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 SetAIChanCalVerifRefVals(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 SetAIChargeUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIChopEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAICoupling(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAICurrentACRMSUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAICurrentShuntLoc(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAICurrentShuntResistance(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAICurrentUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAICustomScaleName(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetAIDCOffset(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIDataXferCustomThreshold(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetAIDataXferMaxRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIDataXferMech(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIDataXferReqCond(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIDigFltrBandpassCenterFreq(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIDigFltrBandpassWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIDigFltrCoeff(TaskHandle task, const char channel[], float64* data, uInt32 arraySizeInElements) = 0;
  virtual int32 SetAIDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAIDigFltrHighpassCutoffFreq(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIDigFltrLowpassCutoffFreq(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIDigFltrNotchCenterFreq(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIDigFltrNotchWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIDigFltrOrder(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetAIDigFltrResponse(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIDigFltrType(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIDitherEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAIEddyCurrentProxProbeSensitivity(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIEddyCurrentProxProbeSensitivityUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIEddyCurrentProxProbeUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIEnhancedAliasRejectionEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAIExcitActualVal(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIExcitDCorAC(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIExcitIdleOutputBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIExcitSense(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIExcitSrc(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIExcitUseForScaling(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAIExcitUseMultiplexed(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAIExcitVal(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIExcitVoltageOrCurrent(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIFilterDelayAdjustment(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIFilterDelayUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIFilterEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAIFilterFreq(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIFilterOrder(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetAIFilterResponse(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIForceIEPESensorSensitivity(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIForceIEPESensorSensitivityUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIForceReadFromChan(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAIForceUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIFreqHyst(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIFreqThreshVoltage(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIFreqUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIGain(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIInputLimitsFaultDetectEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAIInputLimitsFaultDetectLowerLimit(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIInputLimitsFaultDetectUpperLimit(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIInputSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetAILVDTSensitivity(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAILVDTSensitivityUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAILVDTUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAILeadWireResistance(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAILossyLSBRemovalCompressedSampSize(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetAILowpassCutoffFreq(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAILowpassEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAILowpassSwitchCapClkSrc(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAILowpassSwitchCapExtClkDiv(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetAILowpassSwitchCapExtClkFreq(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAILowpassSwitchCapOutClkDiv(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetAIMax(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIMemMapEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAIMicrophoneSensitivity(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIMin(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIOpenChanDetectEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAIOpenThrmcplDetectEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAIOvercurrentDetectEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAIPowerSupplyFaultDetectEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAIPressureUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIProbeAtten(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIRTDA(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIRTDB(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIRTDC(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIRTDR0(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIRTDType(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIRVDTSensitivity(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIRVDTSensitivityUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIRVDTUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIRawDataCompressionType(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIRemoveFilterDelay(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAIResistanceCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIResistanceUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIRngHigh(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIRngLow(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIRosetteStrainGageOrientation(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIRosetteStrainGageRosetteMeasType(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAISampAndHoldEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAISensorPowerCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAISensorPowerType(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAISensorPowerVoltage(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAISoundPressureMaxSoundPressureLvl(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAISoundPressureUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAISoundPressuredBRef(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIStrainGageCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIStrainGageForceReadFromChan(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAIStrainGageGageFactor(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIStrainGagePoissonRatio(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIStrainUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAITempUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAITermCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIThrmcplCJCVal(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIThrmcplLeadOffsetVoltage(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIThrmcplScaleType(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIThrmcplType(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIThrmstrA(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIThrmstrB(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIThrmstrC(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIThrmstrR1(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAITorqueUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIUsbXferReqCount(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetAIUsbXferReqSize(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetAIVelocityIEPESensorSensitivity(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIVelocityIEPESensorSensitivityUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIVelocityIEPESensordBRef(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAIVelocityUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIVoltageACRMSUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIVoltageUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAIVoltagedBRef(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAOCurrentUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAOCustomScaleName(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetAODACOffsetExtSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetAODACOffsetSrc(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAODACOffsetVal(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAODACRefAllowConnToGnd(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAODACRefConnToGnd(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAODACRefExtSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetAODACRefSrc(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAODACRefVal(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAODACRngHigh(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAODACRngLow(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAODataXferMech(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAODataXferReqCond(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAOEnhancedImageRejectionEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAOFilterDelay(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAOFilterDelayAdjustment(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAOFilterDelayUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAOFuncGenAmplitude(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAOFuncGenFMDeviation(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAOFuncGenFreq(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAOFuncGenModulationType(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAOFuncGenOffset(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAOFuncGenSquareDutyCycle(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAOFuncGenType(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAOGain(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAOIdleOutputBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAOLoadImpedance(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAOMax(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAOMemMapEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAOMin(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAOOutputImpedance(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAOReglitchEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAOResolutionUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAOTermCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetAOUsbXferReqCount(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetAOUsbXferReqSize(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetAOUseOnlyOnBrdMem(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetAOVoltageCurrentLimit(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetAOVoltageUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetArmStartTrigTrigWhen(TaskHandle task, CVIAbsoluteTime data) = 0;
  virtual int32 SetBufInputBufSize(TaskHandle task, uInt32 data) = 0;
  virtual int32 SetBufOutputBufSize(TaskHandle task, uInt32 data) = 0;
  virtual int32 SetBufOutputOnbrdBufSize(TaskHandle task, uInt32 data) = 0;
  virtual int32 SetCIAngEncoderInitialAngle(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIAngEncoderPulsesPerRev(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetCIAngEncoderUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCICountEdgesActiveEdge(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCICountEdgesCountDirDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCICountEdgesCountDirDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCICountEdgesCountDirDigFltrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCICountEdgesCountDirDigFltrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCICountEdgesCountDirDigSyncEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCICountEdgesCountDirHyst(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCICountEdgesCountDirLogicLvlBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCICountEdgesCountDirTermCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCICountEdgesCountDirThreshVoltage(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCICountEdgesCountResetActiveEdge(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCICountEdgesCountResetDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCICountEdgesCountResetDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCICountEdgesCountResetDigFltrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCICountEdgesCountResetDigFltrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCICountEdgesCountResetDigSyncEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCICountEdgesCountResetEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCICountEdgesCountResetHyst(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCICountEdgesCountResetLogicLvlBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCICountEdgesCountResetResetCount(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetCICountEdgesCountResetTerm(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCICountEdgesCountResetTermCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCICountEdgesCountResetThreshVoltage(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCICountEdgesDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCICountEdgesDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCICountEdgesDigFltrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCICountEdgesDigFltrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCICountEdgesDigSyncEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCICountEdgesDir(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCICountEdgesDirTerm(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCICountEdgesGateDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCICountEdgesGateDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCICountEdgesGateDigFltrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCICountEdgesGateDigFltrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCICountEdgesGateEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCICountEdgesGateHyst(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCICountEdgesGateLogicLvlBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCICountEdgesGateTerm(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCICountEdgesGateTermCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCICountEdgesGateThreshVoltage(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCICountEdgesGateWhen(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCICountEdgesHyst(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCICountEdgesInitialCnt(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetCICountEdgesLogicLvlBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCICountEdgesTerm(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCICountEdgesTermCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCICountEdgesThreshVoltage(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCICtrTimebaseActiveEdge(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCICtrTimebaseDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCICtrTimebaseDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCICtrTimebaseDigFltrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCICtrTimebaseDigFltrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCICtrTimebaseDigSyncEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCICtrTimebaseMasterTimebaseDiv(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetCICtrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCICtrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCICustomScaleName(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIDataXferMech(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIDataXferReqCond(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIDupCountPrevent(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIDutyCycleDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIDutyCycleDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIDutyCycleDigFltrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIDutyCycleDigFltrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIDutyCycleLogicLvlBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIDutyCycleStartingEdge(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIDutyCycleTerm(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIDutyCycleTermCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIEncoderAInputDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIEncoderAInputDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIEncoderAInputDigFltrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIEncoderAInputDigFltrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIEncoderAInputDigSyncEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIEncoderAInputLogicLvlBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIEncoderAInputTerm(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIEncoderAInputTermCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIEncoderBInputDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIEncoderBInputDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIEncoderBInputDigFltrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIEncoderBInputDigFltrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIEncoderBInputDigSyncEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIEncoderBInputLogicLvlBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIEncoderBInputTerm(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIEncoderBInputTermCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIEncoderDecodingType(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIEncoderZIndexEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIEncoderZIndexPhase(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIEncoderZIndexVal(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIEncoderZInputDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIEncoderZInputDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIEncoderZInputDigFltrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIEncoderZInputDigFltrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIEncoderZInputDigSyncEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIEncoderZInputLogicLvlBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIEncoderZInputTerm(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIEncoderZInputTermCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIFilterDelayUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIFilterEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIFilterFreq(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIFilterOrder(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetCIFilterResponse(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIFreqDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIFreqDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIFreqDigFltrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIFreqDigFltrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIFreqDigSyncEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIFreqDiv(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetCIFreqEnableAveraging(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIFreqHyst(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIFreqLogicLvlBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIFreqMeasMeth(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIFreqMeasTime(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIFreqStartingEdge(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIFreqTerm(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIFreqTermCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIFreqThreshVoltage(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIFreqUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIGPSSyncMethod(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIGPSSyncSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCILinEncoderDistPerPulse(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCILinEncoderInitialPos(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCILinEncoderUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIMax(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIMaxMeasPeriod(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIMemMapEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIMin(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIPeriodDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIPeriodDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIPeriodDigFltrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIPeriodDigFltrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIPeriodDigSyncEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIPeriodDiv(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetCIPeriodEnableAveraging(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIPeriodHyst(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIPeriodLogicLvlBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIPeriodMeasMeth(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIPeriodMeasTime(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIPeriodStartingEdge(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIPeriodTerm(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIPeriodTermCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIPeriodThreshVoltage(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIPeriodUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIPrescaler(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetCIPulseFreqDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIPulseFreqDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIPulseFreqDigFltrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIPulseFreqDigFltrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIPulseFreqDigSyncEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIPulseFreqLogicLvlBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIPulseFreqStartEdge(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIPulseFreqTerm(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIPulseFreqTermCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIPulseFreqUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIPulseTicksDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIPulseTicksDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIPulseTicksDigFltrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIPulseTicksDigFltrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIPulseTicksDigSyncEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIPulseTicksLogicLvlBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIPulseTicksStartEdge(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIPulseTicksTerm(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIPulseTicksTermCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIPulseTimeDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIPulseTimeDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIPulseTimeDigFltrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIPulseTimeDigFltrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIPulseTimeDigSyncEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIPulseTimeLogicLvlBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIPulseTimeStartEdge(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIPulseTimeTerm(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIPulseTimeTermCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIPulseTimeUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIPulseWidthDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIPulseWidthDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIPulseWidthDigFltrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIPulseWidthDigFltrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIPulseWidthDigSyncEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIPulseWidthLogicLvlBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIPulseWidthStartingEdge(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIPulseWidthTerm(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIPulseWidthTermCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIPulseWidthUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCISampClkOverrunBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCISampClkOverrunSentinelVal(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCISemiPeriodDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCISemiPeriodDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCISemiPeriodDigFltrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCISemiPeriodDigFltrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCISemiPeriodDigSyncEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCISemiPeriodLogicLvlBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCISemiPeriodStartingEdge(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCISemiPeriodTerm(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCISemiPeriodTermCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCISemiPeriodUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIThreshVoltage(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCITimestampInitialSeconds(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetCITimestampUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCITwoEdgeSepFirstDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCITwoEdgeSepFirstDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCITwoEdgeSepFirstDigFltrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCITwoEdgeSepFirstDigFltrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCITwoEdgeSepFirstDigSyncEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCITwoEdgeSepFirstEdge(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCITwoEdgeSepFirstLogicLvlBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCITwoEdgeSepFirstTerm(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCITwoEdgeSepFirstTermCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCITwoEdgeSepSecondDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCITwoEdgeSepSecondDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCITwoEdgeSepSecondDigFltrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCITwoEdgeSepSecondDigFltrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCITwoEdgeSepSecondDigSyncEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCITwoEdgeSepSecondEdge(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCITwoEdgeSepSecondLogicLvlBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCITwoEdgeSepSecondTerm(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCITwoEdgeSepSecondTermCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCITwoEdgeSepUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIUsbXferReqCount(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetCIUsbXferReqSize(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetCIVelocityAngEncoderPulsesPerRev(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetCIVelocityAngEncoderUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIVelocityDiv(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetCIVelocityEncoderAInputDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIVelocityEncoderAInputDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIVelocityEncoderAInputDigFltrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIVelocityEncoderAInputDigFltrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIVelocityEncoderAInputLogicLvlBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIVelocityEncoderAInputTerm(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIVelocityEncoderAInputTermCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIVelocityEncoderBInputDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCIVelocityEncoderBInputDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIVelocityEncoderBInputDigFltrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIVelocityEncoderBInputDigFltrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIVelocityEncoderBInputLogicLvlBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIVelocityEncoderBInputTerm(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCIVelocityEncoderBInputTermCfg(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIVelocityEncoderDecodingType(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIVelocityLinEncoderDistPerPulse(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCIVelocityLinEncoderUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCIVelocityMeasTime(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCOAutoIncrCnt(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetCOConstrainedGenMode(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCOCtrTimebaseActiveEdge(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCOCtrTimebaseDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCOCtrTimebaseDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCOCtrTimebaseDigFltrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCOCtrTimebaseDigFltrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCOCtrTimebaseDigSyncEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCOCtrTimebaseMasterTimebaseDiv(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetCOCtrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCOCtrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCODataXferMech(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCODataXferReqCond(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCOEnableInitialDelayOnRetrigger(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCOMemMapEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCOPrescaler(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetCOPulseDutyCyc(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCOPulseFreq(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCOPulseFreqInitialDelay(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCOPulseFreqUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCOPulseHighTicks(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetCOPulseHighTime(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCOPulseIdleState(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCOPulseLowTicks(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetCOPulseLowTime(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCOPulseTerm(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetCOPulseTicksInitialDelay(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetCOPulseTimeInitialDelay(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetCOPulseTimeUnits(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetCOUsbXferReqCount(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetCOUsbXferReqSize(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetCOUseOnlyOnBrdMem(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetCalAccConnectionCount(const char deviceName[], uInt32 data) = 0;
  virtual int32 SetCalUserDefinedInfo(const char deviceName[], const char data[]) = 0;
  virtual int32 SetChanDescr(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetChanSyncUnlockBehavior(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetDIAcquireOn(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetDIDataXferMech(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetDIDataXferReqCond(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetDIDigFltrEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetDIDigFltrEnableBusMode(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetDIDigFltrMinPulseWidth(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetDIDigFltrTimebaseRate(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetDIDigFltrTimebaseSrc(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetDIDigSyncEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetDIInvertLines(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetDILogicFamily(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetDIMemMapEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetDITristate(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetDIUsbXferReqCount(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetDIUsbXferReqSize(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetDODataXferMech(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetDODataXferReqCond(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetDOGenerateOn(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetDOInvertLines(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetDOLineStatesDoneState(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetDOLineStatesPausedState(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetDOLineStatesStartState(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetDOLogicFamily(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetDOMemMapEnable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetDOOutputDriveType(TaskHandle task, const char channel[], int32 data) = 0;
  virtual int32 SetDOOvercurrentAutoReenable(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetDOOvercurrentLimit(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetDOOvercurrentReenablePeriod(TaskHandle task, const char channel[], float64 data) = 0;
  virtual int32 SetDOTristate(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetDOUsbXferReqCount(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetDOUsbXferReqSize(TaskHandle task, const char channel[], uInt32 data) = 0;
  virtual int32 SetDOUseOnlyOnBrdMem(TaskHandle task, const char channel[], bool32 data) = 0;
  virtual int32 SetDigitalLogicFamilyPowerUpState(const char deviceName[], int32 logicFamily) = 0;
  virtual int32 SetFirstSampClkWhen(TaskHandle task, CVIAbsoluteTime data) = 0;
  virtual int32 SetPhysicalChanName(TaskHandle task, const char channel[], const char data[]) = 0;
  virtual int32 SetStartTrigTrigWhen(TaskHandle task, CVIAbsoluteTime data) = 0;
  virtual int32 SetSyncPulseTimeWhen(TaskHandle task, CVIAbsoluteTime data) = 0;
  virtual int32 StartNewFile(TaskHandle task, const char filePath[]) = 0;
  virtual int32 StartTask(TaskHandle task) = 0;
  virtual int32 StopTask(TaskHandle task) = 0;
  virtual int32 TaskControl(TaskHandle task, int32 action) = 0;
  virtual int32 TristateOutputTerm(const char outputTerminal[]) = 0;
  virtual int32 UnreserveNetworkDevice(const char deviceName[]) = 0;
  virtual int32 WaitForNextSampleClock(TaskHandle task, float64 timeout, bool32* isLate) = 0;
  virtual int32 WaitForValidTimestamp(TaskHandle task, int32 timestampEvent, float64 timeout, CVIAbsoluteTime* timestamp) = 0;
  virtual int32 WaitUntilTaskDone(TaskHandle task, float64 timeToWait) = 0;
  virtual int32 WriteAnalogF64(TaskHandle task, int32 numSampsPerChan, bool32 autoStart, float64 timeout, int32 dataLayout, const float64 writeArray[], int32* sampsPerChanWritten, bool32* reserved) = 0;
  virtual int32 WriteAnalogScalarF64(TaskHandle task, bool32 autoStart, float64 timeout, float64 value, bool32* reserved) = 0;
  virtual int32 WriteBinaryI16(TaskHandle task, int32 numSampsPerChan, bool32 autoStart, float64 timeout, int32 dataLayout, int16 writeArray[], int32* sampsPerChanWritten, bool32* reserved) = 0;
  virtual int32 WriteBinaryI32(TaskHandle task, int32 numSampsPerChan, bool32 autoStart, float64 timeout, int32 dataLayout, int32 writeArray[], int32* sampsPerChanWritten, bool32* reserved) = 0;
  virtual int32 WriteBinaryU16(TaskHandle task, int32 numSampsPerChan, bool32 autoStart, float64 timeout, int32 dataLayout, const uInt16 writeArray[], int32* sampsPerChanWritten, bool32* reserved) = 0;
  virtual int32 WriteBinaryU32(TaskHandle task, int32 numSampsPerChan, bool32 autoStart, float64 timeout, int32 dataLayout, const uInt32 writeArray[], int32* sampsPerChanWritten, bool32* reserved) = 0;
  virtual int32 WriteCtrFreq(TaskHandle task, int32 numSampsPerChan, bool32 autoStart, float64 timeout, int32 dataLayout, const float64 frequency[], const float64 dutyCycle[], int32* numSampsPerChanWritten, bool32* reserved) = 0;
  virtual int32 WriteCtrFreqScalar(TaskHandle task, bool32 autoStart, float64 timeout, float64 frequency, float64 dutyCycle, bool32* reserved) = 0;
  virtual int32 WriteCtrTicks(TaskHandle task, int32 numSampsPerChan, bool32 autoStart, float64 timeout, int32 dataLayout, const uInt32 highTicks[], const uInt32 lowTicks[], int32* numSampsPerChanWritten, bool32* reserved) = 0;
  virtual int32 WriteCtrTicksScalar(TaskHandle task, bool32 autoStart, float64 timeout, uInt32 highTicks, uInt32 lowTicks, bool32* reserved) = 0;
  virtual int32 WriteCtrTime(TaskHandle task, int32 numSampsPerChan, bool32 autoStart, float64 timeout, int32 dataLayout, const float64 highTime[], const float64 lowTime[], int32* numSampsPerChanWritten, bool32* reserved) = 0;
  virtual int32 WriteCtrTimeScalar(TaskHandle task, bool32 autoStart, float64 timeout, float64 highTime, float64 lowTime, bool32* reserved) = 0;
  virtual int32 WriteDigitalLines(TaskHandle task, int32 numSampsPerChan, bool32 autoStart, float64 timeout, int32 dataLayout, const uInt8 writeArray[], int32* sampsPerChanWritten, bool32* reserved) = 0;
  virtual int32 WriteDigitalScalarU32(TaskHandle task, bool32 autoStart, float64 timeout, uInt32 value, bool32* reserved) = 0;
  virtual int32 WriteDigitalU16(TaskHandle task, int32 numSampsPerChan, bool32 autoStart, float64 timeout, int32 dataLayout, const uInt16 writeArray[], int32* sampsPerChanWritten, bool32* reserved) = 0;
  virtual int32 WriteDigitalU32(TaskHandle task, int32 numSampsPerChan, bool32 autoStart, float64 timeout, int32 dataLayout, const uInt32 writeArray[], int32* sampsPerChanWritten, bool32* reserved) = 0;
  virtual int32 WriteDigitalU8(TaskHandle task, int32 numSampsPerChan, bool32 autoStart, float64 timeout, int32 dataLayout, const uInt8 writeArray[], int32* sampsPerChanWritten, bool32* reserved) = 0;
  virtual int32 WriteRaw(TaskHandle task, int32 numSamps, bool32 autoStart, float64 timeout, const uInt8 writeArray[], int32* sampsPerChanWritten, bool32* reserved) = 0;
  virtual int32 WriteToTEDSFromArray(const char physicalChannel[], const uInt8 bitStream[], uInt32 arraySize, int32 basicTEDSOptions) = 0;
  virtual int32 WriteToTEDSFromFile(const char physicalChannel[], const char filePath[], int32 basicTEDSOptions) = 0;
};

}  // namespace nidaqmx_grpc
#endif  // NIDAQMX_GRPC_LIBRARY_WRAPPER_H
