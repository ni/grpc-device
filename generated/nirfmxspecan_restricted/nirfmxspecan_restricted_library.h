//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Real implementation of LibraryInterface for NI-RFMXSPECAN-RESTRICTED
//---------------------------------------------------------------------
#ifndef NIRFMXSPECAN_RESTRICTED_GRPC_LIBRARY_H
#define NIRFMXSPECAN_RESTRICTED_GRPC_LIBRARY_H

#include "nirfmxspecan_restricted_library_interface.h"

#include <server/shared_library_interface.h>

#include <memory>

namespace nirfmxspecan_restricted_grpc {

class NiRFmxSpecAnRestrictedLibrary : public nirfmxspecan_restricted_grpc::NiRFmxSpecAnRestrictedLibraryInterface {
 public:
  NiRFmxSpecAnRestrictedLibrary();
  explicit NiRFmxSpecAnRestrictedLibrary(std::shared_ptr<nidevice_grpc::SharedLibraryInterface> shared_library);
  virtual ~NiRFmxSpecAnRestrictedLibrary();

  ::grpc::Status check_function_exists(std::string functionName);
  int32 AMPMLoadReferenceWaveformFromTDMSFile(niRFmxInstrHandle instrumentHandle, char selectorString[], char waveformFilePath[], int32 idleDurationPresent, int32 signalType, int32 waveformIndex) override;
  int32 CacheResult(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 selectorStringOutSize, char selectorStringOut[]) override;
  int32 GetError(niRFmxInstrHandle instrumentHandle, int32* errorCode, int32 errorDescriptionBufferSize, char errorDescription[]) override;
  int32 GetErrorString(niRFmxInstrHandle instrumentHandle, int32 errorCode, int32 errorDescriptionBufferSize, char errorDescription[]) override;
  int32 IQFetchDataOverrideBehavior(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 recordToFetch, int64 samplesToRead, int32 deleteOnFetch, float64* t0, float64* dt, NIComplexSingle data[], int32 arraySize, int32* actualArraySize) override;

 private:
  using AMPMLoadReferenceWaveformFromTDMSFilePtr = int32 (*)(niRFmxInstrHandle instrumentHandle, char selectorString[], char waveformFilePath[], int32 idleDurationPresent, int32 signalType, int32 waveformIndex);
  using CacheResultPtr = int32 (*)(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 selectorStringOutSize, char selectorStringOut[]);
  using GetErrorPtr = int32 (*)(niRFmxInstrHandle instrumentHandle, int32* errorCode, int32 errorDescriptionBufferSize, char errorDescription[]);
  using GetErrorStringPtr = int32 (*)(niRFmxInstrHandle instrumentHandle, int32 errorCode, int32 errorDescriptionBufferSize, char errorDescription[]);
  using IQFetchDataOverrideBehaviorPtr = int32 (*)(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 recordToFetch, int64 samplesToRead, int32 deleteOnFetch, float64* t0, float64* dt, NIComplexSingle data[], int32 arraySize, int32* actualArraySize);

  typedef struct FunctionPointers {
    AMPMLoadReferenceWaveformFromTDMSFilePtr AMPMLoadReferenceWaveformFromTDMSFile;
    CacheResultPtr CacheResult;
    GetErrorPtr GetError;
    GetErrorStringPtr GetErrorString;
    IQFetchDataOverrideBehaviorPtr IQFetchDataOverrideBehavior;
  } FunctionLoadStatus;

  std::shared_ptr<nidevice_grpc::SharedLibraryInterface> shared_library_;
  FunctionPointers function_pointers_;
};

}  // namespace nirfmxspecan_restricted_grpc

#endif  // NIRFMXSPECAN_RESTRICTED_GRPC_LIBRARY_H
