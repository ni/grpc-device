
//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Service header for the NI-RFMXSPECAN-RESTRICTED Metadata
//---------------------------------------------------------------------
#ifndef NIRFMXSPECAN_RESTRICTED_GRPC_SERVICE_H
#define NIRFMXSPECAN_RESTRICTED_GRPC_SERVICE_H

#include <nirfmxspecan_restricted.grpc.pb.h>
#include <condition_variable>
#include <grpcpp/grpcpp.h>
#include <grpcpp/health_check_service_interface.h>
#include <grpcpp/ext/proto_server_reflection_plugin.h>
#include <map>
#include <server/converters.h>
#include <server/feature_toggles.h>
#include <server/session_resource_repository.h>
#include <server/shared_library.h>
#include <server/exceptions.h>

#include "nirfmxspecan_restricted_library_interface.h"

namespace nirfmxspecan_restricted_grpc {

struct NiRFmxSpecAnRestrictedFeatureToggles
{
  using CodeReadiness = nidevice_grpc::FeatureToggles::CodeReadiness;
  NiRFmxSpecAnRestrictedFeatureToggles(const nidevice_grpc::FeatureToggles& feature_toggles = {});

  bool is_enabled;
};

class NiRFmxSpecAnRestrictedService final : public NiRFmxSpecAnRestricted::Service {
public:
  using LibrarySharedPtr = std::shared_ptr<NiRFmxSpecAnRestrictedLibraryInterface>;
  using ResourceRepositorySharedPtr = std::shared_ptr<nidevice_grpc::SessionResourceRepository<niRFmxInstrHandle>>;

  NiRFmxSpecAnRestrictedService(
    LibrarySharedPtr library,
    ResourceRepositorySharedPtr resource_repository,
    const NiRFmxSpecAnRestrictedFeatureToggles& feature_toggles = {});
  virtual ~NiRFmxSpecAnRestrictedService();

  ::grpc::Status AMPMLoadReferenceWaveformFromTDMSFile(::grpc::ServerContext* context, const AMPMLoadReferenceWaveformFromTDMSFileRequest* request, AMPMLoadReferenceWaveformFromTDMSFileResponse* response) override;
  ::grpc::Status CacheResult(::grpc::ServerContext* context, const CacheResultRequest* request, CacheResultResponse* response) override;
  ::grpc::Status IQFetchDataOverrideBehavior(::grpc::ServerContext* context, const IQFetchDataOverrideBehaviorRequest* request, IQFetchDataOverrideBehaviorResponse* response) override;
private:
  LibrarySharedPtr library_;
  ResourceRepositorySharedPtr session_repository_;
  ::grpc::Status ConvertApiErrorStatusForNiRFmxInstrHandle(::grpc::ServerContextBase* context, int32_t status, niRFmxInstrHandle instrumentHandle);

  NiRFmxSpecAnRestrictedFeatureToggles feature_toggles_;
};

} // namespace nirfmxspecan_restricted_grpc

#endif  // NIRFMXSPECAN_RESTRICTED_GRPC_SERVICE_H
