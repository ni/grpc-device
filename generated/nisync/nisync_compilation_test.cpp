//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Compilation test for the NI-SYNC Metadata
//---------------------------------------------------------------------
#include "nisync_library.h"

namespace nisync_grpc {

ViStatus Init(ViRsrc resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViSession* vi)
{
  return niSync_init(resourceName, idQuery, resetDevice, vi);
}

ViStatus Close(ViSession vi)
{
  return niSync_close(vi);
}

ViStatus ErrorMessage(ViSession vi, ViStatus errorCode, ViChar errorMessage[256])
{
  return niSync_error_message(vi, errorCode, errorMessage);
}

ViStatus Reset(ViSession vi)
{
  return niSync_reset(vi);
}

ViStatus PersistConfig(ViSession vi)
{
  return niSync_PersistConfig(vi);
}

ViStatus SelfTest(ViSession vi, ViInt16* selfTestResult, ViChar selfTestMessage[256])
{
  return niSync_self_test(vi, selfTestResult, selfTestMessage);
}

ViStatus RevisionQuery(ViSession vi, ViChar driverRevision[256], ViChar firmwareRevision[256])
{
  return niSync_revision_query(vi, driverRevision, firmwareRevision);
}

ViStatus ConnectTrigTerminals(ViSession vi, ViConstString srcTerminal, ViConstString destTerminal, ViConstString syncClock, ViInt32 invert, ViInt32 updateEdge)
{
  return niSync_ConnectTrigTerminals(vi, srcTerminal, destTerminal, syncClock, invert, updateEdge);
}

ViStatus DisconnectTrigTerminals(ViSession vi, ViConstString srcTerminal, ViConstString destTerminal)
{
  return niSync_DisconnectTrigTerminals(vi, srcTerminal, destTerminal);
}

ViStatus ConnectSWTrigToTerminal(ViSession vi, ViConstString srcTerminal, ViConstString destTerminal, ViConstString syncClock, ViInt32 invert, ViInt32 updateEdge, ViReal64 delay)
{
  return niSync_ConnectSWTrigToTerminal(vi, srcTerminal, destTerminal, syncClock, invert, updateEdge, delay);
}

ViStatus DisconnectSWTrigFromTerminal(ViSession vi, ViConstString srcTerminal, ViConstString destTerminal)
{
  return niSync_DisconnectSWTrigFromTerminal(vi, srcTerminal, destTerminal);
}

ViStatus SendSoftwareTrigger(ViSession vi, ViConstString srcTerminal)
{
  return niSync_SendSoftwareTrigger(vi, srcTerminal);
}

ViStatus ConnectClkTerminals(ViSession vi, ViConstString srcTerminal, ViConstString destTerminal)
{
  return niSync_ConnectClkTerminals(vi, srcTerminal, destTerminal);
}

ViStatus DisconnectClkTerminals(ViSession vi, ViConstString srcTerminal, ViConstString destTerminal)
{
  return niSync_DisconnectClkTerminals(vi, srcTerminal, destTerminal);
}

ViStatus MeasureFrequency(ViSession vi, ViConstString srcTerminal, ViReal64 duration, ViReal64* actualDuration, ViReal64* frequency, ViReal64* error)
{
  return niSync_MeasureFrequency(vi, srcTerminal, duration, actualDuration, frequency, error);
}

ViStatus MeasureFrequencyEx(ViSession vi, ViConstString srcTerminal, ViReal64 duration, ViUInt32 decimationCount, ViReal64* actualDuration, ViReal64* frequency, ViReal64* frequencyError)
{
  return niSync_MeasureFrequencyEx(vi, srcTerminal, duration, decimationCount, actualDuration, frequency, frequencyError);
}

ViStatus Start1588(ViSession vi)
{
  return niSync_Start1588(vi);
}

ViStatus Stop1588(ViSession vi)
{
  return niSync_Stop1588(vi);
}

ViStatus Start8021AS(ViSession vi)
{
  return niSync_Start8021AS(vi);
}

ViStatus Stop8021AS(ViSession vi)
{
  return niSync_Stop8021AS(vi);
}

ViStatus SetTime(ViSession vi, ViInt32 timeSource, ViUInt32 timeSeconds, ViUInt32 timeNanoseconds, ViUInt16 timeFractionalNanoseconds)
{
  return niSync_SetTime(vi, timeSource, timeSeconds, timeNanoseconds, timeFractionalNanoseconds);
}

ViStatus GetTime(ViSession vi, ViUInt32* timeSeconds, ViUInt32* timeNanoseconds, ViUInt16* timeFractionalNanoseconds)
{
  return niSync_GetTime(vi, timeSeconds, timeNanoseconds, timeFractionalNanoseconds);
}

ViStatus ResetFrequency(ViSession vi)
{
  return niSync_ResetFrequency(vi);
}

ViStatus CreateFutureTimeEvent(ViSession vi, ViConstString terminal, ViInt32 outputLevel, ViUInt32 timeSeconds, ViUInt32 timeNanoseconds, ViUInt16 timeFractionalNanoseconds)
{
  return niSync_CreateFutureTimeEvent(vi, terminal, outputLevel, timeSeconds, timeNanoseconds, timeFractionalNanoseconds);
}

ViStatus ClearFutureTimeEvents(ViSession vi, ViConstString terminal)
{
  return niSync_ClearFutureTimeEvents(vi, terminal);
}

ViStatus EnableTimeStampTrigger(ViSession vi, ViConstString terminal, ViInt32 activeEdge)
{
  return niSync_EnableTimeStampTrigger(vi, terminal, activeEdge);
}

ViStatus EnableTimeStampTriggerWithDecimation(ViSession vi, ViConstString terminal, ViInt32 activeEdge, ViUInt32 decimationCount)
{
  return niSync_EnableTimeStampTriggerWithDecimation(vi, terminal, activeEdge, decimationCount);
}

ViStatus ReadTriggerTimeStamp(ViSession vi, ViConstString terminal, ViReal64 timeout, ViUInt32* timeSeconds, ViUInt32* timeNanoseconds, ViUInt16* timeFractionalNanoseconds, ViInt32* detectedEdge)
{
  return niSync_ReadTriggerTimeStamp(vi, terminal, timeout, timeSeconds, timeNanoseconds, timeFractionalNanoseconds, detectedEdge);
}

ViStatus ReadMultipleTriggerTimeStamp(ViSession vi, ViConstString terminal, ViUInt32 timestampsToRead, ViReal64 timeout, ViUInt32 timeSecondsBuffer[], ViUInt32 timeNanosecondsBuffer[], ViUInt16 timeFractionalNanosecondsBuffer[], ViInt32 detectedEdgeBuffer[], ViUInt32* timestampsRead)
{
  return niSync_ReadMultipleTriggerTimeStamp(vi, terminal, timestampsToRead, timeout, timeSecondsBuffer, timeNanosecondsBuffer, timeFractionalNanosecondsBuffer, detectedEdgeBuffer, timestampsRead);
}

ViStatus DisableTimeStampTrigger(ViSession vi, ViConstString terminal)
{
  return niSync_DisableTimeStampTrigger(vi, terminal);
}

ViStatus CreateClock(ViSession vi, ViConstString terminal, ViUInt32 highTicks, ViUInt32 lowTicks, ViUInt32 startTimeSeconds, ViUInt32 startTimeNanoseconds, ViUInt16 startTimeFractionalNanoseconds, ViUInt32 stopTimeSeconds, ViUInt32 stopTimeNanoseconds, ViUInt16 stopTimeFractionalNanoseconds)
{
  return niSync_CreateClock(vi, terminal, highTicks, lowTicks, startTimeSeconds, startTimeNanoseconds, startTimeFractionalNanoseconds, stopTimeSeconds, stopTimeNanoseconds, stopTimeFractionalNanoseconds);
}

ViStatus ClearClock(ViSession vi, ViConstString terminal)
{
  return niSync_ClearClock(vi, terminal);
}

ViStatus SetTimeReferenceFreeRunning(ViSession vi)
{
  return niSync_SetTimeReferenceFreeRunning(vi);
}

ViStatus SetTimeReferenceGPS(ViSession vi)
{
  return niSync_SetTimeReferenceGPS(vi);
}

ViStatus SetTimeReferenceIRIG(ViSession vi, ViInt32 irigType, ViConstString terminalName)
{
  return niSync_SetTimeReferenceIRIG(vi, irigType, terminalName);
}

ViStatus SetTimeReferencePPS(ViSession vi, ViConstString terminalName, ViBoolean useManualTime, ViUInt32 initialTimeSeconds, ViUInt32 initialTimeNanoseconds, ViUInt16 initialTimeFractionalNanoseconds)
{
  return niSync_SetTimeReferencePPS(vi, terminalName, useManualTime, initialTimeSeconds, initialTimeNanoseconds, initialTimeFractionalNanoseconds);
}

ViStatus SetTimeReference1588OrdinaryClock(ViSession vi)
{
  return niSync_SetTimeReference1588OrdinaryClock(vi);
}

ViStatus SetTimeReference8021AS(ViSession vi)
{
  return niSync_SetTimeReference8021AS(vi);
}

ViStatus EnableGPSTimestamping(ViSession vi)
{
  return niSync_EnableGPSTimestamping(vi);
}

ViStatus EnableIRIGTimestamping(ViSession vi, ViInt32 irigType, ViConstString terminalName)
{
  return niSync_EnableIRIGTimestamping(vi, irigType, terminalName);
}

ViStatus ReadLastGPSTimestamp(ViSession vi, ViUInt32* timestampSeconds, ViUInt32* timestampNanoseconds, ViUInt16* timestampFractionalNanoseconds, ViUInt32* gpsSeconds, ViUInt32* gpsNanoseconds, ViUInt16* gpsFractionalNanoseconds)
{
  return niSync_ReadLastGPSTimestamp(vi, timestampSeconds, timestampNanoseconds, timestampFractionalNanoseconds, gpsSeconds, gpsNanoseconds, gpsFractionalNanoseconds);
}

ViStatus ReadLastIRIGTimestamp(ViSession vi, ViConstString terminal, ViUInt32* timestampSeconds, ViUInt32* timestampNanoseconds, ViUInt16* timestampFractionalNanoseconds, ViUInt32* irigbSeconds, ViUInt32* irigbNanoseconds, ViUInt16* irigbFractionalNanoseconds)
{
  return niSync_ReadLastIRIGTimestamp(vi, terminal, timestampSeconds, timestampNanoseconds, timestampFractionalNanoseconds, irigbSeconds, irigbNanoseconds, irigbFractionalNanoseconds);
}

ViStatus DisableGPSTimestamping(ViSession vi)
{
  return niSync_DisableGPSTimestamping(vi);
}

ViStatus DisableIRIGTimestamping(ViSession vi, ViConstString terminalName)
{
  return niSync_DisableIRIGTimestamping(vi, terminalName);
}

ViStatus GetVelocity(ViSession vi, ViReal64* eastVelocity, ViReal64* northVelocity, ViReal64* upVelocity)
{
  return niSync_GetVelocity(vi, eastVelocity, northVelocity, upVelocity);
}

ViStatus GetLocation(ViSession vi, ViReal64* latitude, ViReal64* longitude, ViReal64* altitude)
{
  return niSync_GetLocation(vi, latitude, longitude, altitude);
}

ViStatus GetTimeReferenceNames(ViSession vi, ViUInt32 bufferSize, ViChar timeReferenceNames[])
{
  return niSync_GetTimeReferenceNames(vi, bufferSize, timeReferenceNames);
}

ViStatus GetAttributeViInt32(ViSession vi, ViConstString activeItem, ViAttr attribute, ViInt32* value)
{
  return niSync_GetAttributeViInt32(vi, activeItem, attribute, value);
}

ViStatus GetAttributeViReal64(ViSession vi, ViConstString activeItem, ViAttr attribute, ViReal64* value)
{
  return niSync_GetAttributeViReal64(vi, activeItem, attribute, value);
}

ViStatus GetAttributeViBoolean(ViSession vi, ViConstString activeItem, ViAttr attribute, ViBoolean* value)
{
  return niSync_GetAttributeViBoolean(vi, activeItem, attribute, value);
}

ViStatus GetAttributeViString(ViSession vi, ViConstString activeItem, ViAttr attribute, ViInt32 bufferSize, ViChar value[])
{
  return niSync_GetAttributeViString(vi, activeItem, attribute, bufferSize, value);
}

ViStatus SetAttributeViInt32(ViSession vi, ViConstString activeItem, ViAttr attribute, ViInt32 value)
{
  return niSync_SetAttributeViInt32(vi, activeItem, attribute, value);
}

ViStatus SetAttributeViReal64(ViSession vi, ViConstString activeItem, ViAttr attribute, ViReal64 value)
{
  return niSync_SetAttributeViReal64(vi, activeItem, attribute, value);
}

ViStatus SetAttributeViBoolean(ViSession vi, ViConstString activeItem, ViAttr attribute, ViBoolean value)
{
  return niSync_SetAttributeViBoolean(vi, activeItem, attribute, value);
}

ViStatus SetAttributeViString(ViSession vi, ViConstString activeItem, ViAttr attribute, ViConstString value)
{
  return niSync_SetAttributeViString(vi, activeItem, attribute, value);
}

ViStatus GetExtCalLastDateAndTime(ViSession vi, ViInt32* year, ViInt32* month, ViInt32* day, ViInt32* hour, ViInt32* minute)
{
  return niSync_GetExtCalLastDateAndTime(vi, year, month, day, hour, minute);
}

ViStatus GetExtCalLastTemp(ViSession vi, ViReal64* temp)
{
  return niSync_GetExtCalLastTemp(vi, temp);
}

ViStatus GetExtCalRecommendedInterval(ViSession vi, ViInt32* months)
{
  return niSync_GetExtCalRecommendedInterval(vi, months);
}

ViStatus ChangeExtCalPassword(ViSession vi, ViConstString oldPassword, ViConstString newPassword)
{
  return niSync_ChangeExtCalPassword(vi, oldPassword, newPassword);
}

ViStatus ReadCurrentTemperature(ViSession vi, ViReal64* temperature)
{
  return niSync_ReadCurrentTemperature(vi, temperature);
}

ViStatus CalGetOscillatorVoltage(ViSession vi, ViReal64* voltage)
{
  return niSync_CalGetOscillatorVoltage(vi, voltage);
}

ViStatus CalGetClk10PhaseVoltage(ViSession vi, ViReal64* voltage)
{
  return niSync_CalGetClk10PhaseVoltage(vi, voltage);
}

ViStatus CalGetDDSStartPulsePhaseVoltage(ViSession vi, ViReal64* voltage)
{
  return niSync_CalGetDDSStartPulsePhaseVoltage(vi, voltage);
}

ViStatus CalGetDDSInitialPhase(ViSession vi, ViReal64* phase)
{
  return niSync_CalGetDDSInitialPhase(vi, phase);
}

ViStatus InitExtCal(ViRsrc resourceName, ViConstString password, ViSession* vi)
{
  return niSync_InitExtCal(resourceName, password, vi);
}

ViStatus CloseExtCal(ViSession vi, ViInt32 action)
{
  return niSync_CloseExtCal(vi, action);
}

ViStatus CalAdjustOscillatorVoltage(ViSession vi, ViReal64 measuredVoltage, ViReal64* oldVoltage)
{
  return niSync_CalAdjustOscillatorVoltage(vi, measuredVoltage, oldVoltage);
}

ViStatus CalAdjustClk10PhaseVoltage(ViSession vi, ViReal64 measuredVoltage, ViReal64* oldVoltage)
{
  return niSync_CalAdjustClk10PhaseVoltage(vi, measuredVoltage, oldVoltage);
}

ViStatus CalAdjustDDSStartPulsePhaseVoltage(ViSession vi, ViReal64 measuredVoltage, ViReal64* oldVoltage)
{
  return niSync_CalAdjustDDSStartPulsePhaseVoltage(vi, measuredVoltage, oldVoltage);
}

ViStatus CalAdjustDDSInitialPhase(ViSession vi, ViReal64 measuredPhase, ViReal64* oldPhase)
{
  return niSync_CalAdjustDDSInitialPhase(vi, measuredPhase, oldPhase);
}

}  // namespace nisync_grpc
