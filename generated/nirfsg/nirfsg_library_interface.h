//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Library wrapper for implementing interactions with NI-RFSG
//---------------------------------------------------------------------
#ifndef NIRFSG_GRPC_LIBRARY_WRAPPER_H
#define NIRFSG_GRPC_LIBRARY_WRAPPER_H

#include <grpcpp/grpcpp.h>
#include <niRFSG.h>

namespace nirfsg_grpc {

class NiRFSGLibraryInterface {
 public:
  virtual ~NiRFSGLibraryInterface() {}

  virtual ViStatus Abort(ViSession vi) = 0;
  virtual ViStatus AllocateArbWaveform(ViSession vi, ViConstString waveformName, ViInt32 sizeInSamples) = 0;
  virtual ViStatus CheckAttributeViBoolean(ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean value) = 0;
  virtual ViStatus CheckAttributeViInt32(ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 value) = 0;
  virtual ViStatus CheckAttributeViInt64(ViSession vi, ViConstString channelName, ViAttr attribute, ViInt64 value) = 0;
  virtual ViStatus CheckAttributeViReal64(ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64 value) = 0;
  virtual ViStatus CheckAttributeViSession(ViSession vi, ViConstString channelName, ViAttr attribute, ViSession value) = 0;
  virtual ViStatus CheckAttributeViString(ViSession vi, ViConstString channelName, ViAttr attribute, ViConstString value) = 0;
  virtual ViStatus CheckGenerationStatus(ViSession vi, ViBoolean* isDone) = 0;
  virtual ViStatus CheckIfConfigurationListExists(ViSession vi, ViConstString listName, ViBoolean* listExists) = 0;
  virtual ViStatus CheckIfScriptExists(ViSession vi, ViConstString scriptName, ViBoolean* scriptExists) = 0;
  virtual ViStatus CheckIfWaveformExists(ViSession vi, ViConstString waveformName, ViBoolean* waveformExists) = 0;
  virtual ViStatus ClearAllArbWaveforms(ViSession vi) = 0;
  virtual ViStatus ClearArbWaveform(ViSession vi, ViConstString name) = 0;
  virtual ViStatus ClearError(ViSession vi) = 0;
  virtual ViStatus ClearSelfCalibrateRange(ViSession vi) = 0;
  virtual ViStatus Close(ViSession vi) = 0;
  virtual ViStatus Commit(ViSession vi) = 0;
  virtual ViStatus ConfigureDeembeddingTableInterpolationLinear(ViSession vi, ViConstString port, ViConstString tableName, ViInt32 format) = 0;
  virtual ViStatus ConfigureDeembeddingTableInterpolationNearest(ViSession vi, ViConstString port, ViConstString tableName) = 0;
  virtual ViStatus ConfigureDeembeddingTableInterpolationSpline(ViSession vi, ViConstString port, ViConstString tableName) = 0;
  virtual ViStatus ConfigureDigitalEdgeConfigurationListStepTrigger(ViSession vi, ViConstString source, ViInt32 edge) = 0;
  virtual ViStatus ConfigureDigitalEdgeScriptTrigger(ViSession vi, ViConstString triggerID, ViConstString source, ViInt32 edge) = 0;
  virtual ViStatus ConfigureDigitalEdgeStartTrigger(ViSession vi, ViConstString source, ViInt32 edge) = 0;
  virtual ViStatus ConfigureDigitalLevelScriptTrigger(ViSession vi, ViConstString triggerID, ViConstString source, ViInt32 level) = 0;
  virtual ViStatus ConfigureDigitalModulationUserDefinedWaveform(ViSession vi, ViInt32 numberOfSamples, ViInt8 userDefinedWaveform[]) = 0;
  virtual ViStatus ConfigureGenerationMode(ViSession vi, ViInt32 generationMode) = 0;
  virtual ViStatus ConfigureOutputEnabled(ViSession vi, ViBoolean outputEnabled) = 0;
  virtual ViStatus ConfigureP2PEndpointFullnessStartTrigger(ViSession vi, ViInt64 p2pEndpointFullnessLevel) = 0;
  virtual ViStatus ConfigurePXIChassisClk10(ViSession vi, ViConstString pxiClk10Source) = 0;
  virtual ViStatus ConfigurePowerLevelType(ViSession vi, ViInt32 powerLevelType) = 0;
  virtual ViStatus ConfigureRF(ViSession vi, ViReal64 frequency, ViReal64 powerLevel) = 0;
  virtual ViStatus ConfigureRefClock(ViSession vi, ViConstString refClockSource, ViReal64 refClockRate) = 0;
  virtual ViStatus ConfigureSignalBandwidth(ViSession vi, ViReal64 signalBandwidth) = 0;
  virtual ViStatus ConfigureSoftwareScriptTrigger(ViSession vi, ViConstString triggerID) = 0;
  virtual ViStatus ConfigureSoftwareStartTrigger(ViSession vi) = 0;
  virtual ViStatus ConfigureUpconverterPLLSettlingTime(ViSession vi, ViReal64 pllSettlingTime, ViBoolean ensurePLLLocked, ViInt32 reservedForFutureUse) = 0;
  virtual ViStatus CreateConfigurationList(ViSession vi, ViConstString listName, ViInt32 numberOfAttributes, ViAttr configurationListAttributes[], ViBoolean setAsActiveList) = 0;
  virtual ViStatus CreateConfigurationListStep(ViSession vi, ViBoolean setAsActiveStep) = 0;
  virtual ViStatus CreateDeembeddingSparameterTableArray(ViSession vi, ViConstString port, ViConstString tableName, ViReal64 frequencies[], ViInt32 frequenciesSize, NIComplexNumber_struct sparameterTable[], ViInt32 sparameterTableSize, ViInt32 numberOfPorts, ViInt32 sparameterOrientation) = 0;
  virtual ViStatus CreateDeembeddingSparameterTableS2PFile(ViSession vi, ViConstString port, ViConstString tableName, ViConstString s2pFilePath, ViInt32 sparameterOrientation) = 0;
  virtual ViStatus DeleteAllDeembeddingTables(ViSession vi) = 0;
  virtual ViStatus DeleteConfigurationList(ViSession vi, ViConstString listName) = 0;
  virtual ViStatus DeleteDeembeddingTable(ViSession vi, ViConstString port, ViConstString tableName) = 0;
  virtual ViStatus DeleteScript(ViSession vi, ViConstString scriptName) = 0;
  virtual ViStatus Disable(ViSession vi) = 0;
  virtual ViStatus DisableAllModulation(ViSession vi) = 0;
  virtual ViStatus DisableConfigurationListStepTrigger(ViSession vi) = 0;
  virtual ViStatus DisableScriptTrigger(ViSession vi, ViConstString triggerID) = 0;
  virtual ViStatus DisableStartTrigger(ViSession vi) = 0;
  virtual ViStatus ErrorMessage(ViSession vi, ViStatus errorCode, ViChar errorMessage[256]) = 0;
  virtual ViStatus ErrorQuery(ViSession vi, ViInt32* errorCode, ViChar errorMessage[256]) = 0;
  virtual ViStatus ExportSignal(ViSession vi, ViInt32 signal, ViConstString signalIdentifier, ViConstString outputTerminal) = 0;
  virtual ViStatus GetAttributeViBoolean(ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean* value) = 0;
  virtual ViStatus GetAttributeViInt32(ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32* value) = 0;
  virtual ViStatus GetAttributeViInt64(ViSession vi, ViConstString channelName, ViAttr attribute, ViInt64* value) = 0;
  virtual ViStatus GetAttributeViReal64(ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64* value) = 0;
  virtual ViStatus GetAttributeViSession(ViSession vi, ViConstString channelName, ViAttr attribute, ViSession* value) = 0;
  virtual ViStatus GetAttributeViString(ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 bufSize, ViChar value[]) = 0;
  virtual ViStatus GetChannelName(ViSession vi, ViInt32 index, ViInt32 bufferSize, ViChar name[]) = 0;
  virtual ViStatus GetDeembeddingSparameters(ViSession vi, NIComplexNumber_struct sparameters[], ViInt32 sparametersArraySize, ViInt32* numberOfSparameters, ViInt32* numberOfPorts) = 0;
  virtual ViStatus GetError(ViSession vi, ViStatus* errorCode, ViInt32 errorDescriptionBufferSize, ViChar errorDescription[]) = 0;
  virtual ViStatus GetExternalCalibrationLastDateAndTime(ViSession vi, ViInt32* year, ViInt32* month, ViInt32* day, ViInt32* hour, ViInt32* minute, ViInt32* second) = 0;
  virtual ViStatus GetSelfCalibrationDateAndTime(ViSession vi, ViInt32 module, ViInt32* year, ViInt32* month, ViInt32* day, ViInt32* hour, ViInt32* minute, ViInt32* second) = 0;
  virtual ViStatus GetSelfCalibrationTemperature(ViSession vi, ViInt32 module, ViReal64* temperature) = 0;
  virtual ViStatus GetStreamEndpointHandle(ViSession vi, ViConstString streamEndpoint, ViUInt32* readerHandle) = 0;
  virtual ViStatus GetTerminalName(ViSession vi, ViInt32 signal, ViConstString signalIdentifier, ViInt32 bufferSize, ViChar terminalName[]) = 0;
  virtual ViStatus GetUserData(ViSession vi, ViConstString identifier, ViInt32 bufferSize, ViInt8 data[], ViInt32* actualDataSize) = 0;
  virtual ViStatus GetWaveformBurstStartLocations(ViSession vi, ViConstString channelName, ViInt32 numberOfLocations, ViReal64 locations[], ViInt32* requiredSize) = 0;
  virtual ViStatus GetWaveformBurstStopLocations(ViSession vi, ViConstString channelName, ViInt32 numberOfLocations, ViReal64 locations[], ViInt32* requiredSize) = 0;
  virtual ViStatus GetWaveformMarkerEventLocations(ViSession vi, ViConstString channelName, ViInt32 numberOfLocations, ViReal64 locations[], ViInt32* requiredSize) = 0;
  virtual ViStatus Init(ViRsrc resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViSession* newVi) = 0;
  virtual ViStatus InitWithOptions(ViRsrc resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViConstString optionString, ViSession* vi) = 0;
  virtual ViStatus Initiate(ViSession vi) = 0;
  virtual ViStatus InvalidateAllAttributes(ViSession vi) = 0;
  virtual ViStatus LoadConfigurationsFromFile(ViSession vi, ViConstString channelName, ViConstString filePath) = 0;
  virtual ViStatus LockSession(ViSession vi, ViBoolean* callerHasLock) = 0;
  virtual ViStatus PerformPowerSearch(ViSession vi) = 0;
  virtual ViStatus PerformThermalCorrection(ViSession vi) = 0;
  virtual ViStatus QueryArbWaveformCapabilities(ViSession vi, ViInt32* maxNumberWaveforms, ViInt32* waveformQuantum, ViInt32* minWaveformSize, ViInt32* maxWaveformSize) = 0;
  virtual ViStatus ReadAndDownloadWaveformFromFileTDMS(ViSession vi, ViConstString waveformName, ViConstString filePath, ViUInt32 waveformIndex) = 0;
  virtual ViStatus Reset(ViSession vi) = 0;
  virtual ViStatus ResetAttribute(ViSession vi, ViConstString channelName, ViAttr attributeId) = 0;
  virtual ViStatus ResetDevice(ViSession vi) = 0;
  virtual ViStatus ResetWithDefaults(ViSession vi) = 0;
  virtual ViStatus ResetWithOptions(ViSession vi, ViUInt64 stepsToOmit) = 0;
  virtual ViStatus RevisionQuery(ViSession vi, ViChar instrumentDriverRevision[256], ViChar firmwareRevision[256]) = 0;
  virtual ViStatus SaveConfigurationsToFile(ViSession vi, ViConstString channelName, ViConstString filePath) = 0;
  virtual ViStatus SelectArbWaveform(ViSession vi, ViConstString name) = 0;
  virtual ViStatus SelfCal(ViSession vi) = 0;
  virtual ViStatus SelfCalibrateRange(ViSession vi, ViInt64 stepsToOmit, ViReal64 minFrequency, ViReal64 maxFrequency, ViReal64 minPowerLevel, ViReal64 maxPowerLevel) = 0;
  virtual ViStatus SelfTest(ViSession vi, ViInt16* selfTestResult, ViChar selfTestMessage[256]) = 0;
  virtual ViStatus SendSoftwareEdgeTrigger(ViSession vi, ViInt32 trigger, ViConstString triggerIdentifier) = 0;
  virtual ViStatus SetArbWaveformNextWritePosition(ViSession vi, ViConstString waveformName, ViInt32 relativeTo, ViInt32 offset) = 0;
  virtual ViStatus SetAttributeViBoolean(ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean value) = 0;
  virtual ViStatus SetAttributeViInt32(ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 value) = 0;
  virtual ViStatus SetAttributeViInt64(ViSession vi, ViConstString channelName, ViAttr attribute, ViInt64 value) = 0;
  virtual ViStatus SetAttributeViReal64(ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64 value) = 0;
  virtual ViStatus SetAttributeViSession(ViSession vi, ViConstString channelName, ViAttr attribute, ViSession value) = 0;
  virtual ViStatus SetAttributeViString(ViSession vi, ViConstString channelName, ViAttr attribute, ViConstString value) = 0;
  virtual ViStatus SetUserData(ViSession vi, ViConstString identifier, ViInt32 bufferSize, ViInt8 data[]) = 0;
  virtual ViStatus SetWaveformBurstStartLocations(ViSession vi, ViConstString channelName, ViInt32 numberOfLocations, ViReal64 locations[]) = 0;
  virtual ViStatus SetWaveformBurstStopLocations(ViSession vi, ViConstString channelName, ViInt32 numberOfLocations, ViReal64 locations[]) = 0;
  virtual ViStatus SetWaveformMarkerEventLocations(ViSession vi, ViConstString channelName, ViInt32 numberOfLocations, ViReal64 locations[]) = 0;
  virtual ViStatus UnlockSession(ViSession vi, ViBoolean* callerHasLock) = 0;
  virtual ViStatus WaitUntilSettled(ViSession vi, ViInt32 maxTimeMilliseconds) = 0;
  virtual ViStatus WriteArbWaveform(ViSession vi, ViConstString waveformName, ViInt32 numberOfSamples, ViReal64 iData[], ViReal64 qData[], ViBoolean moreDataPending) = 0;
  virtual ViStatus WriteArbWaveformComplexF32(ViSession vi, ViConstString waveformName, ViInt32 numberOfSamples, NIComplexNumberF32_struct wfmData[], ViBoolean moreDataPending) = 0;
  virtual ViStatus WriteArbWaveformComplexF64(ViSession vi, ViConstString waveformName, ViInt32 numberOfSamples, NIComplexNumber_struct wfmData[], ViBoolean moreDataPending) = 0;
  virtual ViStatus WriteArbWaveformComplexI16(ViSession vi, ViConstString waveformName, ViInt32 numberOfSamples, NIComplexI16_struct wfmData[]) = 0;
  virtual ViStatus WriteArbWaveformF32(ViSession vi, ViConstString waveformName, ViInt32 numberOfSamples, ViReal32 iData[], ViReal32 qData[], ViBoolean moreDataPending) = 0;
  virtual ViStatus WriteP2PEndpointI16(ViSession vi, ViConstString streamEndpoint, ViInt32 numberOfSamples, ViInt16 endpointData[]) = 0;
  virtual ViStatus WriteScript(ViSession vi, ViConstString script) = 0;
};

}  // namespace nirfsg_grpc
#endif  // NIRFSG_GRPC_LIBRARY_WRAPPER_H
