
//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Proto file for the NI-XNETSOCKET Metadata
//---------------------------------------------------------------------
syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.ni.grpc.xnetsocket";
option java_outer_classname = "NiXnetSocket";
option csharp_namespace = "NationalInstruments.Grpc.NiXnetSocket";

package nixnetsocket_grpc;

import "session.proto";
import "google/protobuf/duration.proto";

service NiXnetSocket {
  rpc Bind(BindRequest) returns (BindResponse);
  rpc Close(CloseRequest) returns (CloseResponse);
  rpc GetLastErrorNum(GetLastErrorNumRequest) returns (GetLastErrorNumResponse);
  rpc GetLastErrorStr(GetLastErrorStrRequest) returns (GetLastErrorStrResponse);
  rpc GetSocketOption(GetSocketOptionRequest) returns (GetSocketOptionResponse);
  rpc IsSet(IsSetRequest) returns (IsSetResponse);
  rpc Select(SelectRequest) returns (SelectResponse);
  rpc SetSocketOption(SetSocketOptionRequest) returns (SetSocketOptionResponse);
  rpc Socket(SocketRequest) returns (SocketResponse);
}

enum NiXnetSocketAttribute {
  NIXNETSOCKET_ATTRIBUTE_UNSPECIFIED = 0;
}

enum SocketOptions {
  SOCKET_OPTIONS_UNSPECIFIED = 0;
  SOCKET_OPTIONS_RX_DATA = 257;
  SOCKET_OPTIONS_RCV_BUF = 258;
  SOCKET_OPTIONS_SND_BUF = 259;
  SOCKET_OPTIONS_NON_BLOCK = 260;
  SOCKET_OPTIONS_BIND_TO_DEVICE = 261;
  SOCKET_OPTIONS_ERROR = 262;
  SOCKET_OPTIONS_LINGER = 263;
  SOCKET_OPTIONS_REUSE_ADDR = 264;
}

message SockAddrIPv4 {
  uint32 port = 1;
  uint32 addr = 2;
}

message SockAddrIPv6 {
  uint32 port = 1;
  uint32 flow_info = 2;
  bytes addr = 3;
  uint32 scope_id = 4;
}

message SockAddr {
  oneof addr {
    SockAddrIPv4 ipv4 = 1;
    SockAddrIPv6 ipv6 = 2;
  }
}

message SockOptData {
  int32 opt = 1;
  oneof data {
    int32 data_int32 = 2;
    bool data_bool = 3;
    string data_string = 4;
  }
}

message BindRequest {
  nidevice_grpc.Session socket = 1;
  SockAddr name = 2;
}

message BindResponse {
  int32 status = 1;
}

message CloseRequest {
  nidevice_grpc.Session socket = 1;
}

message CloseResponse {
  int32 status = 1;
}

message GetLastErrorNumRequest {
}

message GetLastErrorNumResponse {
  int32 status = 1;
}

message GetLastErrorStrRequest {
  uint64 buf_len = 1;
}

message GetLastErrorStrResponse {
  int32 status = 1;
  string error = 2;
}

message GetSocketOptionRequest {
  nidevice_grpc.Session socket = 1;
  int32 level = 2;
  oneof opt_name_enum {
    SocketOptions opt_name = 3;
    int32 opt_name_raw = 4;
  }
}

message GetSocketOptionResponse {
  int32 status = 1;
  SockOptData optval = 2;
}

message IsSetRequest {
  nidevice_grpc.Session fd = 1;
  repeated nidevice_grpc.Session set = 2;
}

message IsSetResponse {
  int32 status = 1;
  int32 is_set = 2;
}

message SelectRequest {
  repeated nidevice_grpc.Session read_fds = 1;
  repeated nidevice_grpc.Session write_fds = 2;
  repeated nidevice_grpc.Session except_fds = 3;
  google.protobuf.Duration timeout = 4;
}

message SelectResponse {
  int32 status = 1;
}

message SetSocketOptionRequest {
  nidevice_grpc.Session socket = 1;
  int32 level = 2;
  SockOptData opt_data = 3;
}

message SetSocketOptionResponse {
  int32 status = 1;
}

message SocketRequest {
  string session_name = 1;
  int32 domain = 2;
  int32 type = 3;
  int32 prototcol = 4;
}

message SocketResponse {
  int32 status = 1;
  nidevice_grpc.Session socket = 2;
}

