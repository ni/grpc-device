
//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Proto file for the NI-XNETSOCKET Metadata
//---------------------------------------------------------------------
syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.ni.grpc.xnetsocket";
option java_outer_classname = "NiXnetSocket";
option csharp_namespace = "NationalInstruments.Grpc.NiXnetSocket";

package nixnetsocket_grpc;

import "session.proto";
import "google/protobuf/duration.proto";

service NiXnetSocket {
  rpc Accept(AcceptRequest) returns (AcceptResponse);
  rpc Bind(BindRequest) returns (BindResponse);
  rpc Connect(ConnectRequest) returns (ConnectResponse);
  rpc Listen(ListenRequest) returns (ListenResponse);
  rpc SendTo(SendToRequest) returns (SendToResponse);
  rpc Send(SendRequest) returns (SendResponse);
  rpc Recv(RecvRequest) returns (RecvResponse);
  rpc Shutdown(ShutdownRequest) returns (ShutdownResponse);
  rpc Close(CloseRequest) returns (CloseResponse);
  rpc IpStackClear(IpStackClearRequest) returns (IpStackClearResponse);
  rpc IpStackCreate(IpStackCreateRequest) returns (IpStackCreateResponse);
  rpc IsSet(IsSetRequest) returns (IsSetResponse);
  rpc Select(SelectRequest) returns (SelectResponse);
  rpc Socket(SocketRequest) returns (SocketResponse);
}

enum NiXnetSocketAttribute {
  NIXNETSOCKET_ATTRIBUTE_UNSPECIFIED = 0;
}

message SockAddrIPv4 {
  uint32 port = 1;
  uint32 addr = 2;
}

message SockAddrIPv6 {
  uint32 port = 1;
  uint32 flow_info = 2;
  bytes addr = 3;
  uint32 scope_id = 4;
}

message SockAddr {
  oneof addr {
    SockAddrIPv4 ipv4 = 1;
    SockAddrIPv6 ipv6 = 2;
  }
}

message AcceptRequest {
  nidevice_grpc.Session socket = 1;
}

message AcceptResponse {
  int32 status = 1;
  SockAddr addr = 2;
  string error_message = 3;
  int32 error_num = 4;
}

message BindRequest {
  nidevice_grpc.Session socket = 1;
  SockAddr name = 2;
}

message BindResponse {
  int32 status = 1;
  string error_message = 2;
  int32 error_num = 3;
}

message ConnectRequest {
  nidevice_grpc.Session socket = 1;
  SockAddr name = 2;
}

message ConnectResponse {
  int32 status = 1;
  string error_message = 2;
  int32 error_num = 3;
}

message ListenRequest {
  nidevice_grpc.Session socket = 1;
  int32 backlog = 2;
}

message ListenResponse {
  int32 status = 1;
  string error_message = 2;
  int32 error_num = 3;
}

message SendToRequest {
  nidevice_grpc.Session socket = 1;
  bytes dataptr = 2;
  int32 flags = 3;
  SockAddr to = 4;
}

message SendToResponse {
  int32 status = 1;
  string error_message = 2;
  int32 error_num = 3;
}

message SendRequest {
  nidevice_grpc.Session socket = 1;
  bytes dataptr = 2;
  int32 flags = 3;
}

message SendResponse {
  int32 status = 1;
  string error_message = 2;
  int32 error_num = 3;
}

message RecvRequest {
  nidevice_grpc.Session socket = 1;
  bytes mem = 2;
  int32 flags = 3;
}

message RecvResponse {
  int32 status = 1;
  string error_message = 2;
  int32 error_num = 3;
}

message ShutdownRequest {
  nidevice_grpc.Session socket = 1;
  int32 how = 2;
}

message ShutdownResponse {
  int32 status = 1;
  string error_message = 2;
  int32 error_num = 3;
}

message CloseRequest {
  nidevice_grpc.Session socket = 1;
}

message CloseResponse {
  int32 status = 1;
  string error_message = 2;
  int32 error_num = 3;
}

message IpStackClearRequest {
  nidevice_grpc.Session stack_ref = 1;
}

message IpStackClearResponse {
  int32 status = 1;
  string error_message = 2;
  int32 error_num = 3;
}

message IpStackCreateRequest {
  string session_name = 1;
  string stack_name = 2;
  string config = 3;
}

message IpStackCreateResponse {
  int32 status = 1;
  nidevice_grpc.Session stack_ref = 2;
  string error_message = 3;
  int32 error_num = 4;
}

message IsSetRequest {
  nidevice_grpc.Session fd = 1;
  repeated nidevice_grpc.Session set = 2;
}

message IsSetResponse {
  int32 status = 1;
  int32 is_set = 2;
  string error_message = 3;
  int32 error_num = 4;
}

message SelectRequest {
  repeated nidevice_grpc.Session read_fds = 1;
  repeated nidevice_grpc.Session write_fds = 2;
  repeated nidevice_grpc.Session except_fds = 3;
  google.protobuf.Duration timeout = 4;
}

message SelectResponse {
  int32 status = 1;
  string error_message = 2;
  int32 error_num = 3;
}

message SocketRequest {
  string session_name = 1;
  nidevice_grpc.Session stack_ref = 2;
  int32 domain = 3;
  int32 type = 4;
  int32 prototcol = 5;
}

message SocketResponse {
  int32 status = 1;
  nidevice_grpc.Session socket = 2;
  string error_message = 3;
  int32 error_num = 4;
}

