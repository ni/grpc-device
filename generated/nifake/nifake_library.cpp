//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Service implementation for the NI-FAKE Metadata
//---------------------------------------------------------------------
#include "nifake_library.h"

#if defined(_MSC_VER)
static const char* kLibraryName = "nifake_64.dll";
#else
static const char* kLibraryName = "libnifake.so";
#endif

namespace nifake_grpc {

NiFakeLibrary::NiFakeLibrary() : shared_library_(kLibraryName)
{
  shared_library_.load();
  bool loaded = shared_library_.is_loaded();
  memset(&function_pointers_, 0, sizeof(function_pointers_));
  if (!loaded) {
    return;
  }
  function_pointers_.Abort = reinterpret_cast<AbortPtr>(shared_library_.get_function_pointer("niFake_Abort"));
  function_pointers_.AcceptListOfDurationsInSeconds = reinterpret_cast<AcceptListOfDurationsInSecondsPtr>(shared_library_.get_function_pointer("niFake_AcceptListOfDurationsInSeconds"));
  function_pointers_.AcceptViSessionArray = reinterpret_cast<AcceptViSessionArrayPtr>(shared_library_.get_function_pointer("niFake_AcceptViSessionArray"));
  function_pointers_.AcceptViUInt32Array = reinterpret_cast<AcceptViUInt32ArrayPtr>(shared_library_.get_function_pointer("niFake_AcceptViUInt32Array"));
  function_pointers_.BoolArrayInputFunction = reinterpret_cast<BoolArrayInputFunctionPtr>(shared_library_.get_function_pointer("niFake_BoolArrayInputFunction"));
  function_pointers_.BoolArrayOutputFunction = reinterpret_cast<BoolArrayOutputFunctionPtr>(shared_library_.get_function_pointer("niFake_BoolArrayOutputFunction"));
  function_pointers_.Close = reinterpret_cast<ClosePtr>(shared_library_.get_function_pointer("niFake_close"));
  function_pointers_.CloseExtCal = reinterpret_cast<CloseExtCalPtr>(shared_library_.get_function_pointer("niFake_CloseExtCal"));
  function_pointers_.CommandWithReservedParam = reinterpret_cast<CommandWithReservedParamPtr>(shared_library_.get_function_pointer("niFake_CommandWithReservedParam"));
  function_pointers_.Control4022 = reinterpret_cast<Control4022Ptr>(shared_library_.get_function_pointer("niFake_4022Control"));
  function_pointers_.CreateConfigurationList = reinterpret_cast<CreateConfigurationListPtr>(shared_library_.get_function_pointer("niFake_CreateConfigurationList"));
  function_pointers_.CustomNestedStructRoundtrip = reinterpret_cast<CustomNestedStructRoundtripPtr>(shared_library_.get_function_pointer("niFake_CustomNestedStructRoundtrip"));
  function_pointers_.DoubleAllTheNums = reinterpret_cast<DoubleAllTheNumsPtr>(shared_library_.get_function_pointer("niFake_DoubleAllTheNums"));
  function_pointers_.EnumArrayOutputFunction = reinterpret_cast<EnumArrayOutputFunctionPtr>(shared_library_.get_function_pointer("niFake_EnumArrayOutputFunction"));
  function_pointers_.EnumInputFunctionWithDefaults = reinterpret_cast<EnumInputFunctionWithDefaultsPtr>(shared_library_.get_function_pointer("niFake_EnumInputFunctionWithDefaults"));
  function_pointers_.ErrorMessage = reinterpret_cast<ErrorMessagePtr>(shared_library_.get_function_pointer("niFake_error_message"));
  function_pointers_.ExportAttributeConfigurationBuffer = reinterpret_cast<ExportAttributeConfigurationBufferPtr>(shared_library_.get_function_pointer("niFake_ExportAttributeConfigurationBuffer"));
  function_pointers_.FetchWaveform = reinterpret_cast<FetchWaveformPtr>(shared_library_.get_function_pointer("niFake_FetchWaveform"));
  function_pointers_.GetABoolean = reinterpret_cast<GetABooleanPtr>(shared_library_.get_function_pointer("niFake_GetABoolean"));
  function_pointers_.GetANumber = reinterpret_cast<GetANumberPtr>(shared_library_.get_function_pointer("niFake_GetANumber"));
  function_pointers_.GetAStringOfFixedMaximumSize = reinterpret_cast<GetAStringOfFixedMaximumSizePtr>(shared_library_.get_function_pointer("niFake_GetAStringOfFixedMaximumSize"));
  function_pointers_.GetAnIviDanceString = reinterpret_cast<GetAnIviDanceStringPtr>(shared_library_.get_function_pointer("niFake_GetAnIviDanceString"));
  function_pointers_.GetAnIviDanceWithATwistArray = reinterpret_cast<GetAnIviDanceWithATwistArrayPtr>(shared_library_.get_function_pointer("niFake_GetAnIviDanceWithATwistArray"));
  function_pointers_.GetAnIviDanceWithATwistArrayOfCustomType = reinterpret_cast<GetAnIviDanceWithATwistArrayOfCustomTypePtr>(shared_library_.get_function_pointer("niFake_GetAnIviDanceWithATwistArrayOfCustomType"));
  function_pointers_.GetAnIviDanceWithATwistArrayWithInputArray = reinterpret_cast<GetAnIviDanceWithATwistArrayWithInputArrayPtr>(shared_library_.get_function_pointer("niFake_GetAnIviDanceWithATwistArrayWithInputArray"));
  function_pointers_.GetAnIviDanceWithATwistByteArray = reinterpret_cast<GetAnIviDanceWithATwistByteArrayPtr>(shared_library_.get_function_pointer("niFake_GetAnIviDanceWithATwistByteArray"));
  function_pointers_.GetAnIviDanceWithATwistString = reinterpret_cast<GetAnIviDanceWithATwistStringPtr>(shared_library_.get_function_pointer("niFake_GetAnIviDanceWithATwistString"));
  function_pointers_.GetAnIviDanceWithATwistStringStrlenBug = reinterpret_cast<GetAnIviDanceWithATwistStringStrlenBugPtr>(shared_library_.get_function_pointer("niFake_GetAnIviDanceWithATwistStringStrlenBug"));
  function_pointers_.GetArraySizeForCustomCode = reinterpret_cast<GetArraySizeForCustomCodePtr>(shared_library_.get_function_pointer("niFake_GetArraySizeForCustomCode"));
  function_pointers_.GetArrayUsingIviDance = reinterpret_cast<GetArrayUsingIviDancePtr>(shared_library_.get_function_pointer("niFake_GetArrayUsingIviDance"));
  function_pointers_.GetArrayViUInt8WithEnum = reinterpret_cast<GetArrayViUInt8WithEnumPtr>(shared_library_.get_function_pointer("niFake_GetArrayViUInt8WithEnum"));
  function_pointers_.GetAttributeViBoolean = reinterpret_cast<GetAttributeViBooleanPtr>(shared_library_.get_function_pointer("niFake_GetAttributeViBoolean"));
  function_pointers_.GetAttributeViInt32 = reinterpret_cast<GetAttributeViInt32Ptr>(shared_library_.get_function_pointer("niFake_GetAttributeViInt32"));
  function_pointers_.GetAttributeViInt64 = reinterpret_cast<GetAttributeViInt64Ptr>(shared_library_.get_function_pointer("niFake_GetAttributeViInt64"));
  function_pointers_.GetAttributeViReal64 = reinterpret_cast<GetAttributeViReal64Ptr>(shared_library_.get_function_pointer("niFake_GetAttributeViReal64"));
  function_pointers_.GetAttributeViSession = reinterpret_cast<GetAttributeViSessionPtr>(shared_library_.get_function_pointer("niFake_GetAttributeViSession"));
  function_pointers_.GetAttributeViString = reinterpret_cast<GetAttributeViStringPtr>(shared_library_.get_function_pointer("niFake_GetAttributeViString"));
  function_pointers_.GetBitfieldAsEnumArray = reinterpret_cast<GetBitfieldAsEnumArrayPtr>(shared_library_.get_function_pointer("niFake_GetBitfieldAsEnumArray"));
  function_pointers_.GetCalDateAndTime = reinterpret_cast<GetCalDateAndTimePtr>(shared_library_.get_function_pointer("niFake_GetCalDateAndTime"));
  function_pointers_.GetCalInterval = reinterpret_cast<GetCalIntervalPtr>(shared_library_.get_function_pointer("niFake_GetCalInterval"));
  function_pointers_.GetCustomType = reinterpret_cast<GetCustomTypePtr>(shared_library_.get_function_pointer("niFake_GetCustomType"));
  function_pointers_.GetCustomTypeArray = reinterpret_cast<GetCustomTypeArrayPtr>(shared_library_.get_function_pointer("niFake_GetCustomTypeArray"));
  function_pointers_.GetEnumValue = reinterpret_cast<GetEnumValuePtr>(shared_library_.get_function_pointer("niFake_GetEnumValue"));
  function_pointers_.GetError = reinterpret_cast<GetErrorPtr>(shared_library_.get_function_pointer("niFake_GetError"));
  function_pointers_.GetViInt32Array = reinterpret_cast<GetViInt32ArrayPtr>(shared_library_.get_function_pointer("niFake_GetViInt32Array"));
  function_pointers_.GetViUInt32Array = reinterpret_cast<GetViUInt32ArrayPtr>(shared_library_.get_function_pointer("niFake_GetViUInt32Array"));
  function_pointers_.GetViUInt8 = reinterpret_cast<GetViUInt8Ptr>(shared_library_.get_function_pointer("niFake_GetViUInt8"));
  function_pointers_.ImportAttributeConfigurationBuffer = reinterpret_cast<ImportAttributeConfigurationBufferPtr>(shared_library_.get_function_pointer("niFake_ImportAttributeConfigurationBuffer"));
  function_pointers_.InitExtCal = reinterpret_cast<InitExtCalPtr>(shared_library_.get_function_pointer("niFake_InitExtCal"));
  function_pointers_.InitWithOptions = reinterpret_cast<InitWithOptionsPtr>(shared_library_.get_function_pointer("niFake_InitWithOptions"));
  function_pointers_.InitWithVarArgs = reinterpret_cast<InitWithVarArgsPtr>(shared_library_.get_function_pointer("niFake_InitWithVarArgs"));
  function_pointers_.Initiate = reinterpret_cast<InitiatePtr>(shared_library_.get_function_pointer("niFake_Initiate"));
  function_pointers_.MethodUsingEnumWithGrpcNameValues = reinterpret_cast<MethodUsingEnumWithGrpcNameValuesPtr>(shared_library_.get_function_pointer("niFake_MethodUsingEnumWithGrpcNameValues"));
  function_pointers_.MethodUsingWholeAndFractionalNumbers = reinterpret_cast<MethodUsingWholeAndFractionalNumbersPtr>(shared_library_.get_function_pointer("niFake_MethodUsingWholeAndFractionalNumbers"));
  function_pointers_.MethodUsingWholeMappedNumbers = reinterpret_cast<MethodUsingWholeMappedNumbersPtr>(shared_library_.get_function_pointer("niFake_MethodUsingWholeMappedNumbers"));
  function_pointers_.MethodWithGetLastErrorParam = reinterpret_cast<MethodWithGetLastErrorParamPtr>(shared_library_.get_function_pointer("niFake_MethodWithGetLastErrorParam"));
  function_pointers_.MethodWithGrpcFieldNumber = reinterpret_cast<MethodWithGrpcFieldNumberPtr>(shared_library_.get_function_pointer("niFake_MethodWithGrpcFieldNumber"));
  function_pointers_.MethodWithGrpcOnlyParam = reinterpret_cast<MethodWithGrpcOnlyParamPtr>(shared_library_.get_function_pointer("niFake_MethodWithGrpcOnlyParam"));
  function_pointers_.MethodWithProtoOnlyParameter = reinterpret_cast<MethodWithProtoOnlyParameterPtr>(shared_library_.get_function_pointer("niFake_MethodWithProtoOnlyParameter"));
  function_pointers_.MultipleArrayTypes = reinterpret_cast<MultipleArrayTypesPtr>(shared_library_.get_function_pointer("niFake_MultipleArrayTypes"));
  function_pointers_.MultipleArraysSameSize = reinterpret_cast<MultipleArraysSameSizePtr>(shared_library_.get_function_pointer("niFake_MultipleArraysSameSize"));
  function_pointers_.MultipleArraysSameSizeWithOptional = reinterpret_cast<MultipleArraysSameSizeWithOptionalPtr>(shared_library_.get_function_pointer("niFake_MultipleArraysSameSizeWithOptional"));
  function_pointers_.OneInputFunction = reinterpret_cast<OneInputFunctionPtr>(shared_library_.get_function_pointer("niFake_OneInputFunction"));
  function_pointers_.ParametersAreMultipleTypes = reinterpret_cast<ParametersAreMultipleTypesPtr>(shared_library_.get_function_pointer("niFake_ParametersAreMultipleTypes"));
  function_pointers_.PoorlyNamedSimpleFunction = reinterpret_cast<PoorlyNamedSimpleFunctionPtr>(shared_library_.get_function_pointer("niFake_PoorlyNamedSimpleFunction"));
  function_pointers_.Read = reinterpret_cast<ReadPtr>(shared_library_.get_function_pointer("niFake_Read"));
  function_pointers_.ReadDataWithInOutIviTwist = reinterpret_cast<ReadDataWithInOutIviTwistPtr>(shared_library_.get_function_pointer("niFake_ReadDataWithInOutIviTwist"));
  function_pointers_.ReadDataWithMultipleIviTwistParamSets = reinterpret_cast<ReadDataWithMultipleIviTwistParamSetsPtr>(shared_library_.get_function_pointer("niFake_ReadDataWithMultipleIviTwistParamSets"));
  function_pointers_.ReadFromChannel = reinterpret_cast<ReadFromChannelPtr>(shared_library_.get_function_pointer("niFake_ReadFromChannel"));
  function_pointers_.ReturnANumberAndAString = reinterpret_cast<ReturnANumberAndAStringPtr>(shared_library_.get_function_pointer("niFake_ReturnANumberAndAString"));
  function_pointers_.ReturnDurationInSeconds = reinterpret_cast<ReturnDurationInSecondsPtr>(shared_library_.get_function_pointer("niFake_ReturnDurationInSeconds"));
  function_pointers_.ReturnListOfDurationsInSeconds = reinterpret_cast<ReturnListOfDurationsInSecondsPtr>(shared_library_.get_function_pointer("niFake_ReturnListOfDurationsInSeconds"));
  function_pointers_.ReturnMultipleTypes = reinterpret_cast<ReturnMultipleTypesPtr>(shared_library_.get_function_pointer("niFake_ReturnMultipleTypes"));
  function_pointers_.SelfTest = reinterpret_cast<SelfTestPtr>(shared_library_.get_function_pointer("niFake_self_test"));
  function_pointers_.SetAttributeViBoolean = reinterpret_cast<SetAttributeViBooleanPtr>(shared_library_.get_function_pointer("niFake_SetAttributeViBoolean"));
  function_pointers_.SetAttributeViInt32 = reinterpret_cast<SetAttributeViInt32Ptr>(shared_library_.get_function_pointer("niFake_SetAttributeViInt32"));
  function_pointers_.SetAttributeViInt64 = reinterpret_cast<SetAttributeViInt64Ptr>(shared_library_.get_function_pointer("niFake_SetAttributeViInt64"));
  function_pointers_.SetAttributeViReal64 = reinterpret_cast<SetAttributeViReal64Ptr>(shared_library_.get_function_pointer("niFake_SetAttributeViReal64"));
  function_pointers_.SetAttributeViString = reinterpret_cast<SetAttributeViStringPtr>(shared_library_.get_function_pointer("niFake_SetAttributeViString"));
  function_pointers_.SetCustomType = reinterpret_cast<SetCustomTypePtr>(shared_library_.get_function_pointer("niFake_SetCustomType"));
  function_pointers_.SetCustomTypeArray = reinterpret_cast<SetCustomTypeArrayPtr>(shared_library_.get_function_pointer("niFake_SetCustomTypeArray"));
  function_pointers_.StringValuedEnumInputFunctionWithDefaults = reinterpret_cast<StringValuedEnumInputFunctionWithDefaultsPtr>(shared_library_.get_function_pointer("niFake_StringValuedEnumInputFunctionWithDefaults"));
  function_pointers_.TwoInputFunction = reinterpret_cast<TwoInputFunctionPtr>(shared_library_.get_function_pointer("niFake_TwoInputFunction"));
  function_pointers_.Use64BitNumber = reinterpret_cast<Use64BitNumberPtr>(shared_library_.get_function_pointer("niFake_Use64BitNumber"));
  function_pointers_.UseATwoDimensionParameter = reinterpret_cast<UseATwoDimensionParameterPtr>(shared_library_.get_function_pointer("niFake_UseATwoDimensionParameter"));
  function_pointers_.ViInt16ArrayInputFunction = reinterpret_cast<ViInt16ArrayInputFunctionPtr>(shared_library_.get_function_pointer("niFake_ViInt16ArrayInputFunction"));
  function_pointers_.ViUInt8ArrayInputFunction = reinterpret_cast<ViUInt8ArrayInputFunctionPtr>(shared_library_.get_function_pointer("niFake_ViUInt8ArrayInputFunction"));
  function_pointers_.ViUInt8ArrayOutputFunction = reinterpret_cast<ViUInt8ArrayOutputFunctionPtr>(shared_library_.get_function_pointer("niFake_ViUInt8ArrayOutputFunction"));
  function_pointers_.WriteWaveform = reinterpret_cast<WriteWaveformPtr>(shared_library_.get_function_pointer("niFake_WriteWaveform"));
}

NiFakeLibrary::~NiFakeLibrary()
{
}

::grpc::Status NiFakeLibrary::check_function_exists(std::string functionName)
{
  return shared_library_.function_exists(functionName.c_str())
    ? ::grpc::Status::OK
    : ::grpc::Status(::grpc::NOT_FOUND, "Could not find the function " + functionName);
}

ViStatus NiFakeLibrary::Abort(ViSession vi)
{
  if (!function_pointers_.Abort) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_Abort.");
  }
  return function_pointers_.Abort(vi);
}

ViStatus NiFakeLibrary::AcceptListOfDurationsInSeconds(ViSession vi, ViInt32 count, ViReal64 delays[])
{
  if (!function_pointers_.AcceptListOfDurationsInSeconds) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_AcceptListOfDurationsInSeconds.");
  }
  return function_pointers_.AcceptListOfDurationsInSeconds(vi, count, delays);
}

ViStatus NiFakeLibrary::AcceptViSessionArray(ViUInt32 sessionCount, ViSession sessionArray[])
{
  if (!function_pointers_.AcceptViSessionArray) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_AcceptViSessionArray.");
  }
  return function_pointers_.AcceptViSessionArray(sessionCount, sessionArray);
}

ViStatus NiFakeLibrary::AcceptViUInt32Array(ViSession vi, ViInt32 arrayLen, ViUInt32 uInt32Array[])
{
  if (!function_pointers_.AcceptViUInt32Array) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_AcceptViUInt32Array.");
  }
  return function_pointers_.AcceptViUInt32Array(vi, arrayLen, uInt32Array);
}

ViStatus NiFakeLibrary::BoolArrayInputFunction(ViSession vi, ViInt32 numberOfElements, ViBoolean anArray[])
{
  if (!function_pointers_.BoolArrayInputFunction) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_BoolArrayInputFunction.");
  }
  return function_pointers_.BoolArrayInputFunction(vi, numberOfElements, anArray);
}

ViStatus NiFakeLibrary::BoolArrayOutputFunction(ViSession vi, ViInt32 numberOfElements, ViBoolean anArray[])
{
  if (!function_pointers_.BoolArrayOutputFunction) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_BoolArrayOutputFunction.");
  }
  return function_pointers_.BoolArrayOutputFunction(vi, numberOfElements, anArray);
}

ViStatus NiFakeLibrary::Close(ViSession vi)
{
  if (!function_pointers_.Close) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_close.");
  }
  return function_pointers_.Close(vi);
}

ViStatus NiFakeLibrary::CloseExtCal(ViSession vi, ViInt32 action)
{
  if (!function_pointers_.CloseExtCal) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_CloseExtCal.");
  }
  return function_pointers_.CloseExtCal(vi, action);
}

ViStatus NiFakeLibrary::CommandWithReservedParam(ViSession vi, ViBoolean* reserved)
{
  if (!function_pointers_.CommandWithReservedParam) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_CommandWithReservedParam.");
  }
  return function_pointers_.CommandWithReservedParam(vi, reserved);
}

ViStatus NiFakeLibrary::Control4022(ViString resourceName, ViInt32 configuration)
{
  if (!function_pointers_.Control4022) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_4022Control.");
  }
  return function_pointers_.Control4022(resourceName, configuration);
}

ViStatus NiFakeLibrary::CreateConfigurationList(ViInt32 numberOfListAttributes, ViAttr listAttributeIds[])
{
  if (!function_pointers_.CreateConfigurationList) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_CreateConfigurationList.");
  }
  return function_pointers_.CreateConfigurationList(numberOfListAttributes, listAttributeIds);
}

ViStatus NiFakeLibrary::CustomNestedStructRoundtrip(CustomStructNestedTypedef_struct nestedCustomTypeIn, CustomStructNestedTypedef_struct* nestedCustomTypeOut)
{
  if (!function_pointers_.CustomNestedStructRoundtrip) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_CustomNestedStructRoundtrip.");
  }
  return function_pointers_.CustomNestedStructRoundtrip(nestedCustomTypeIn, nestedCustomTypeOut);
}

ViStatus NiFakeLibrary::DoubleAllTheNums(ViSession vi, ViInt32 numberCount, ViReal64 numbers[])
{
  if (!function_pointers_.DoubleAllTheNums) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_DoubleAllTheNums.");
  }
  return function_pointers_.DoubleAllTheNums(vi, numberCount, numbers);
}

ViStatus NiFakeLibrary::EnumArrayOutputFunction(ViSession vi, ViInt32 numberOfElements, ViInt16 anArray[])
{
  if (!function_pointers_.EnumArrayOutputFunction) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_EnumArrayOutputFunction.");
  }
  return function_pointers_.EnumArrayOutputFunction(vi, numberOfElements, anArray);
}

ViStatus NiFakeLibrary::EnumInputFunctionWithDefaults(ViSession vi, ViInt16 aTurtle)
{
  if (!function_pointers_.EnumInputFunctionWithDefaults) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_EnumInputFunctionWithDefaults.");
  }
  return function_pointers_.EnumInputFunctionWithDefaults(vi, aTurtle);
}

ViStatus NiFakeLibrary::ErrorMessage(ViSession vi, ViStatus errorCode, ViChar errorMessage[256])
{
  if (!function_pointers_.ErrorMessage) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_error_message.");
  }
  return function_pointers_.ErrorMessage(vi, errorCode, errorMessage);
}

ViStatus NiFakeLibrary::ExportAttributeConfigurationBuffer(ViSession vi, ViInt32 sizeInBytes, ViInt8 configuration[])
{
  if (!function_pointers_.ExportAttributeConfigurationBuffer) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_ExportAttributeConfigurationBuffer.");
  }
  return function_pointers_.ExportAttributeConfigurationBuffer(vi, sizeInBytes, configuration);
}

ViStatus NiFakeLibrary::FetchWaveform(ViSession vi, ViInt32 numberOfSamples, ViReal64 waveformData[], ViInt32* actualNumberOfSamples)
{
  if (!function_pointers_.FetchWaveform) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_FetchWaveform.");
  }
  return function_pointers_.FetchWaveform(vi, numberOfSamples, waveformData, actualNumberOfSamples);
}

ViStatus NiFakeLibrary::GetABoolean(ViSession vi, ViBoolean* aBoolean)
{
  if (!function_pointers_.GetABoolean) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetABoolean.");
  }
  return function_pointers_.GetABoolean(vi, aBoolean);
}

ViStatus NiFakeLibrary::GetANumber(ViSession vi, ViInt16* aNumber)
{
  if (!function_pointers_.GetANumber) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetANumber.");
  }
  return function_pointers_.GetANumber(vi, aNumber);
}

ViStatus NiFakeLibrary::GetAStringOfFixedMaximumSize(ViSession vi, ViChar aString[256])
{
  if (!function_pointers_.GetAStringOfFixedMaximumSize) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetAStringOfFixedMaximumSize.");
  }
  return function_pointers_.GetAStringOfFixedMaximumSize(vi, aString);
}

ViStatus NiFakeLibrary::GetAnIviDanceString(ViSession vi, ViInt32 bufferSize, ViChar aString[])
{
  if (!function_pointers_.GetAnIviDanceString) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetAnIviDanceString.");
  }
  return function_pointers_.GetAnIviDanceString(vi, bufferSize, aString);
}

ViStatus NiFakeLibrary::GetAnIviDanceWithATwistArray(ViSession vi, ViConstString aString, ViInt32 bufferSize, ViInt32 arrayOut[], ViInt32* actualSize)
{
  if (!function_pointers_.GetAnIviDanceWithATwistArray) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetAnIviDanceWithATwistArray.");
  }
  return function_pointers_.GetAnIviDanceWithATwistArray(vi, aString, bufferSize, arrayOut, actualSize);
}

ViStatus NiFakeLibrary::GetAnIviDanceWithATwistArrayOfCustomType(ViSession vi, ViInt32 bufferSize, CustomStruct arrayOut[], ViInt32* actualSize)
{
  if (!function_pointers_.GetAnIviDanceWithATwistArrayOfCustomType) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetAnIviDanceWithATwistArrayOfCustomType.");
  }
  return function_pointers_.GetAnIviDanceWithATwistArrayOfCustomType(vi, bufferSize, arrayOut, actualSize);
}

ViStatus NiFakeLibrary::GetAnIviDanceWithATwistArrayWithInputArray(ViInt32 dataIn[], ViInt32 arraySizeIn, ViInt32 bufferSize, ViInt32 arrayOut[], ViInt32* actualSize)
{
  if (!function_pointers_.GetAnIviDanceWithATwistArrayWithInputArray) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetAnIviDanceWithATwistArrayWithInputArray.");
  }
  return function_pointers_.GetAnIviDanceWithATwistArrayWithInputArray(dataIn, arraySizeIn, bufferSize, arrayOut, actualSize);
}

ViStatus NiFakeLibrary::GetAnIviDanceWithATwistByteArray(ViInt32 bufferSize, ViInt8 arrayOut[], ViInt32* actualSize)
{
  if (!function_pointers_.GetAnIviDanceWithATwistByteArray) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetAnIviDanceWithATwistByteArray.");
  }
  return function_pointers_.GetAnIviDanceWithATwistByteArray(bufferSize, arrayOut, actualSize);
}

ViStatus NiFakeLibrary::GetAnIviDanceWithATwistString(ViSession vi, ViInt32 bufferSize, ViChar aString[], ViInt32* actualSize)
{
  if (!function_pointers_.GetAnIviDanceWithATwistString) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetAnIviDanceWithATwistString.");
  }
  return function_pointers_.GetAnIviDanceWithATwistString(vi, bufferSize, aString, actualSize);
}

ViStatus NiFakeLibrary::GetAnIviDanceWithATwistStringStrlenBug(ViInt32 bufferSize, ViChar stringOut[], ViInt32* actualSize)
{
  if (!function_pointers_.GetAnIviDanceWithATwistStringStrlenBug) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetAnIviDanceWithATwistStringStrlenBug.");
  }
  return function_pointers_.GetAnIviDanceWithATwistStringStrlenBug(bufferSize, stringOut, actualSize);
}

ViStatus NiFakeLibrary::GetArraySizeForCustomCode(ViSession vi, ViInt32* sizeOut)
{
  if (!function_pointers_.GetArraySizeForCustomCode) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetArraySizeForCustomCode.");
  }
  return function_pointers_.GetArraySizeForCustomCode(vi, sizeOut);
}

ViStatus NiFakeLibrary::GetArrayUsingIviDance(ViSession vi, ViInt32 arraySize, ViReal64 arrayOut[])
{
  if (!function_pointers_.GetArrayUsingIviDance) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetArrayUsingIviDance.");
  }
  return function_pointers_.GetArrayUsingIviDance(vi, arraySize, arrayOut);
}

ViStatus NiFakeLibrary::GetArrayViUInt8WithEnum(ViSession vi, ViInt32 arrayLen, ViUInt8 uInt8EnumArray[])
{
  if (!function_pointers_.GetArrayViUInt8WithEnum) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetArrayViUInt8WithEnum.");
  }
  return function_pointers_.GetArrayViUInt8WithEnum(vi, arrayLen, uInt8EnumArray);
}

ViStatus NiFakeLibrary::GetAttributeViBoolean(ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean* attributeValue)
{
  if (!function_pointers_.GetAttributeViBoolean) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetAttributeViBoolean.");
  }
  return function_pointers_.GetAttributeViBoolean(vi, channelName, attributeId, attributeValue);
}

ViStatus NiFakeLibrary::GetAttributeViInt32(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32* attributeValue)
{
  if (!function_pointers_.GetAttributeViInt32) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetAttributeViInt32.");
  }
  return function_pointers_.GetAttributeViInt32(vi, channelName, attributeId, attributeValue);
}

ViStatus NiFakeLibrary::GetAttributeViInt64(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt64* attributeValue)
{
  if (!function_pointers_.GetAttributeViInt64) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetAttributeViInt64.");
  }
  return function_pointers_.GetAttributeViInt64(vi, channelName, attributeId, attributeValue);
}

ViStatus NiFakeLibrary::GetAttributeViReal64(ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64* attributeValue)
{
  if (!function_pointers_.GetAttributeViReal64) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetAttributeViReal64.");
  }
  return function_pointers_.GetAttributeViReal64(vi, channelName, attributeId, attributeValue);
}

ViStatus NiFakeLibrary::GetAttributeViSession(ViSession vi, ViConstString channelName, ViAttr attributeId, ViSession* attributeValue)
{
  if (!function_pointers_.GetAttributeViSession) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetAttributeViSession.");
  }
  return function_pointers_.GetAttributeViSession(vi, channelName, attributeId, attributeValue);
}

ViStatus NiFakeLibrary::GetAttributeViString(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 bufferSize, ViChar attributeValue[])
{
  if (!function_pointers_.GetAttributeViString) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetAttributeViString.");
  }
  return function_pointers_.GetAttributeViString(vi, channelName, attributeId, bufferSize, attributeValue);
}

ViStatus NiFakeLibrary::GetBitfieldAsEnumArray(ViInt64* flags)
{
  if (!function_pointers_.GetBitfieldAsEnumArray) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetBitfieldAsEnumArray.");
  }
  return function_pointers_.GetBitfieldAsEnumArray(flags);
}

ViStatus NiFakeLibrary::GetCalDateAndTime(ViSession vi, ViInt32 calType, ViInt32* month, ViInt32* day, ViInt32* year, ViInt32* hour, ViInt32* minute)
{
  if (!function_pointers_.GetCalDateAndTime) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetCalDateAndTime.");
  }
  return function_pointers_.GetCalDateAndTime(vi, calType, month, day, year, hour, minute);
}

ViStatus NiFakeLibrary::GetCalInterval(ViSession vi, ViInt32* months)
{
  if (!function_pointers_.GetCalInterval) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetCalInterval.");
  }
  return function_pointers_.GetCalInterval(vi, months);
}

ViStatus NiFakeLibrary::GetCustomType(ViSession vi, CustomStruct* cs)
{
  if (!function_pointers_.GetCustomType) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetCustomType.");
  }
  return function_pointers_.GetCustomType(vi, cs);
}

ViStatus NiFakeLibrary::GetCustomTypeArray(ViSession vi, ViInt32 numberOfElements, CustomStruct cs[])
{
  if (!function_pointers_.GetCustomTypeArray) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetCustomTypeArray.");
  }
  return function_pointers_.GetCustomTypeArray(vi, numberOfElements, cs);
}

ViStatus NiFakeLibrary::GetEnumValue(ViSession vi, ViInt32* aQuantity, ViInt16* aTurtle)
{
  if (!function_pointers_.GetEnumValue) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetEnumValue.");
  }
  return function_pointers_.GetEnumValue(vi, aQuantity, aTurtle);
}

ViStatus NiFakeLibrary::GetError(ViSession vi, ViStatus* errorCode, ViInt32 bufferSize, ViChar description[])
{
  if (!function_pointers_.GetError) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetError.");
  }
  return function_pointers_.GetError(vi, errorCode, bufferSize, description);
}

ViStatus NiFakeLibrary::GetViInt32Array(ViSession vi, ViInt32 arrayLen, ViInt32 int32Array[])
{
  if (!function_pointers_.GetViInt32Array) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetViInt32Array.");
  }
  return function_pointers_.GetViInt32Array(vi, arrayLen, int32Array);
}

ViStatus NiFakeLibrary::GetViUInt32Array(ViSession vi, ViInt32 arrayLen, ViUInt32 uInt32Array[])
{
  if (!function_pointers_.GetViUInt32Array) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetViUInt32Array.");
  }
  return function_pointers_.GetViUInt32Array(vi, arrayLen, uInt32Array);
}

ViStatus NiFakeLibrary::GetViUInt8(ViSession vi, ViUInt8* aUint8Number)
{
  if (!function_pointers_.GetViUInt8) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_GetViUInt8.");
  }
  return function_pointers_.GetViUInt8(vi, aUint8Number);
}

ViStatus NiFakeLibrary::ImportAttributeConfigurationBuffer(ViSession vi, ViInt32 sizeInBytes, ViInt8 configuration[])
{
  if (!function_pointers_.ImportAttributeConfigurationBuffer) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_ImportAttributeConfigurationBuffer.");
  }
  return function_pointers_.ImportAttributeConfigurationBuffer(vi, sizeInBytes, configuration);
}

ViStatus NiFakeLibrary::InitExtCal(ViRsrc resourceName, ViString calibrationPassword, ViSession* vi)
{
  if (!function_pointers_.InitExtCal) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_InitExtCal.");
  }
  return function_pointers_.InitExtCal(resourceName, calibrationPassword, vi);
}

ViStatus NiFakeLibrary::InitWithOptions(ViString resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViConstString optionString, ViSession* vi)
{
  if (!function_pointers_.InitWithOptions) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_InitWithOptions.");
  }
  return function_pointers_.InitWithOptions(resourceName, idQuery, resetDevice, optionString, vi);
}

ViStatus NiFakeLibrary::InitWithVarArgs(ViRsrc resourceName, ViSession* vi, ViConstString stringArg, ViInt16 turtle, ViConstString stringArg0, ViInt16 turtle0, ViConstString stringArg1, ViInt16 turtle1, ViConstString stringArg2, ViInt16 turtle2)
{
  if (!function_pointers_.InitWithVarArgs) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_InitWithVarArgs.");
  }
  return function_pointers_.InitWithVarArgs(resourceName, vi, stringArg, turtle, stringArg0, turtle0, stringArg1, turtle1, stringArg2, turtle2);
}

ViStatus NiFakeLibrary::Initiate(ViSession vi)
{
  if (!function_pointers_.Initiate) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_Initiate.");
  }
  return function_pointers_.Initiate(vi);
}

ViStatus NiFakeLibrary::MethodUsingEnumWithGrpcNameValues(ViInt32 usingEnum)
{
  if (!function_pointers_.MethodUsingEnumWithGrpcNameValues) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_MethodUsingEnumWithGrpcNameValues.");
  }
  return function_pointers_.MethodUsingEnumWithGrpcNameValues(usingEnum);
}

ViStatus NiFakeLibrary::MethodUsingWholeAndFractionalNumbers(ViInt32* wholeNumber, ViReal64* fractionalNumber)
{
  if (!function_pointers_.MethodUsingWholeAndFractionalNumbers) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_MethodUsingWholeAndFractionalNumbers.");
  }
  return function_pointers_.MethodUsingWholeAndFractionalNumbers(wholeNumber, fractionalNumber);
}

ViStatus NiFakeLibrary::MethodUsingWholeMappedNumbers(ViReal64* wholeNumber)
{
  if (!function_pointers_.MethodUsingWholeMappedNumbers) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_MethodUsingWholeMappedNumbers.");
  }
  return function_pointers_.MethodUsingWholeMappedNumbers(wholeNumber);
}

ViStatus NiFakeLibrary::MethodWithGetLastErrorParam()
{
  if (!function_pointers_.MethodWithGetLastErrorParam) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_MethodWithGetLastErrorParam.");
  }
  return function_pointers_.MethodWithGetLastErrorParam();
}

ViStatus NiFakeLibrary::MethodWithGrpcFieldNumber(ViInt32 attributeValue)
{
  if (!function_pointers_.MethodWithGrpcFieldNumber) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_MethodWithGrpcFieldNumber.");
  }
  return function_pointers_.MethodWithGrpcFieldNumber(attributeValue);
}

ViStatus NiFakeLibrary::MethodWithGrpcOnlyParam(ViInt32 simpleParam, ViInt32* grpcOnlyParam)
{
  if (!function_pointers_.MethodWithGrpcOnlyParam) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_MethodWithGrpcOnlyParam.");
  }
  return function_pointers_.MethodWithGrpcOnlyParam(simpleParam, grpcOnlyParam);
}

ViStatus NiFakeLibrary::MethodWithProtoOnlyParameter()
{
  if (!function_pointers_.MethodWithProtoOnlyParameter) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_MethodWithProtoOnlyParameter.");
  }
  return function_pointers_.MethodWithProtoOnlyParameter();
}

ViStatus NiFakeLibrary::MultipleArrayTypes(ViSession vi, ViInt32 outputArraySize, ViReal64 outputArray[], ViReal64 outputArrayOfFixedLength[3], ViInt32 inputArraySizes, ViReal64 inputArrayOfFloats[], ViInt16 inputArrayOfIntegers[])
{
  if (!function_pointers_.MultipleArrayTypes) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_MultipleArrayTypes.");
  }
  return function_pointers_.MultipleArrayTypes(vi, outputArraySize, outputArray, outputArrayOfFixedLength, inputArraySizes, inputArrayOfFloats, inputArrayOfIntegers);
}

ViStatus NiFakeLibrary::MultipleArraysSameSize(ViSession vi, ViReal64 values1[], ViReal64 values2[], ViReal64 values3[], ViReal64 values4[], ViInt32 size)
{
  if (!function_pointers_.MultipleArraysSameSize) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_MultipleArraysSameSize.");
  }
  return function_pointers_.MultipleArraysSameSize(vi, values1, values2, values3, values4, size);
}

ViStatus NiFakeLibrary::MultipleArraysSameSizeWithOptional(ViSession vi, ViReal64 values1[], ViReal64 values2[], ViReal64 values3[], ViReal64 values4[], CustomStruct values5[], ViInt32 size)
{
  if (!function_pointers_.MultipleArraysSameSizeWithOptional) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_MultipleArraysSameSizeWithOptional.");
  }
  return function_pointers_.MultipleArraysSameSizeWithOptional(vi, values1, values2, values3, values4, values5, size);
}

ViStatus NiFakeLibrary::OneInputFunction(ViSession vi, ViInt32 aNumber)
{
  if (!function_pointers_.OneInputFunction) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_OneInputFunction.");
  }
  return function_pointers_.OneInputFunction(vi, aNumber);
}

ViStatus NiFakeLibrary::ParametersAreMultipleTypes(ViSession vi, ViBoolean aBoolean, ViInt32 anInt32, ViInt64 anInt64, ViInt16 anIntEnum, ViReal64 aFloat, ViReal64 aFloatEnum, ViInt32 stringSize, ViConstString aString)
{
  if (!function_pointers_.ParametersAreMultipleTypes) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_ParametersAreMultipleTypes.");
  }
  return function_pointers_.ParametersAreMultipleTypes(vi, aBoolean, anInt32, anInt64, anIntEnum, aFloat, aFloatEnum, stringSize, aString);
}

ViStatus NiFakeLibrary::PoorlyNamedSimpleFunction(ViSession vi)
{
  if (!function_pointers_.PoorlyNamedSimpleFunction) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_PoorlyNamedSimpleFunction.");
  }
  return function_pointers_.PoorlyNamedSimpleFunction(vi);
}

ViStatus NiFakeLibrary::Read(ViSession vi, ViReal64 maximumTime, ViReal64* reading)
{
  if (!function_pointers_.Read) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_Read.");
  }
  return function_pointers_.Read(vi, maximumTime, reading);
}

ViStatus NiFakeLibrary::ReadDataWithInOutIviTwist(ViInt32 data[], ViInt32* bufferSize)
{
  if (!function_pointers_.ReadDataWithInOutIviTwist) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_ReadDataWithInOutIviTwist.");
  }
  return function_pointers_.ReadDataWithInOutIviTwist(data, bufferSize);
}

ViStatus NiFakeLibrary::ReadDataWithMultipleIviTwistParamSets(ViInt32 bufferSize, ViInt32 arrayOut[], ViInt32* actualSize, ViInt32 otherBufferSize, ViInt32 otherArrayOut[], ViInt32* otherActualSize)
{
  if (!function_pointers_.ReadDataWithMultipleIviTwistParamSets) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_ReadDataWithMultipleIviTwistParamSets.");
  }
  return function_pointers_.ReadDataWithMultipleIviTwistParamSets(bufferSize, arrayOut, actualSize, otherBufferSize, otherArrayOut, otherActualSize);
}

ViStatus NiFakeLibrary::ReadFromChannel(ViSession vi, ViConstString channelName, ViInt32 maximumTime, ViReal64* reading)
{
  if (!function_pointers_.ReadFromChannel) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_ReadFromChannel.");
  }
  return function_pointers_.ReadFromChannel(vi, channelName, maximumTime, reading);
}

ViStatus NiFakeLibrary::ReturnANumberAndAString(ViSession vi, ViInt16* aNumber, ViChar aString[256])
{
  if (!function_pointers_.ReturnANumberAndAString) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_ReturnANumberAndAString.");
  }
  return function_pointers_.ReturnANumberAndAString(vi, aNumber, aString);
}

ViStatus NiFakeLibrary::ReturnDurationInSeconds(ViSession vi, ViReal64* timedelta)
{
  if (!function_pointers_.ReturnDurationInSeconds) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_ReturnDurationInSeconds.");
  }
  return function_pointers_.ReturnDurationInSeconds(vi, timedelta);
}

ViStatus NiFakeLibrary::ReturnListOfDurationsInSeconds(ViSession vi, ViInt32 numberOfElements, ViReal64 timedeltas[])
{
  if (!function_pointers_.ReturnListOfDurationsInSeconds) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_ReturnListOfDurationsInSeconds.");
  }
  return function_pointers_.ReturnListOfDurationsInSeconds(vi, numberOfElements, timedeltas);
}

ViStatus NiFakeLibrary::ReturnMultipleTypes(ViSession vi, ViBoolean* aBoolean, ViInt32* anInt32, ViInt64* anInt64, ViInt16* anIntEnum, ViReal64* aFloat, ViReal64* aFloatEnum, ViInt32 arraySize, ViReal64 anArray[], ViInt32 stringSize, ViChar aString[])
{
  if (!function_pointers_.ReturnMultipleTypes) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_ReturnMultipleTypes.");
  }
  return function_pointers_.ReturnMultipleTypes(vi, aBoolean, anInt32, anInt64, anIntEnum, aFloat, aFloatEnum, arraySize, anArray, stringSize, aString);
}

ViStatus NiFakeLibrary::SelfTest(ViSession vi, ViInt16* selfTestResult, ViChar selfTestMessage[256])
{
  if (!function_pointers_.SelfTest) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_self_test.");
  }
  return function_pointers_.SelfTest(vi, selfTestResult, selfTestMessage);
}

ViStatus NiFakeLibrary::SetAttributeViBoolean(ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean attributeValue)
{
  if (!function_pointers_.SetAttributeViBoolean) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_SetAttributeViBoolean.");
  }
  return function_pointers_.SetAttributeViBoolean(vi, channelName, attributeId, attributeValue);
}

ViStatus NiFakeLibrary::SetAttributeViInt32(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 attributeValue)
{
  if (!function_pointers_.SetAttributeViInt32) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_SetAttributeViInt32.");
  }
  return function_pointers_.SetAttributeViInt32(vi, channelName, attributeId, attributeValue);
}

ViStatus NiFakeLibrary::SetAttributeViInt64(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt64 attributeValue)
{
  if (!function_pointers_.SetAttributeViInt64) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_SetAttributeViInt64.");
  }
  return function_pointers_.SetAttributeViInt64(vi, channelName, attributeId, attributeValue);
}

ViStatus NiFakeLibrary::SetAttributeViReal64(ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64 attributeValue)
{
  if (!function_pointers_.SetAttributeViReal64) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_SetAttributeViReal64.");
  }
  return function_pointers_.SetAttributeViReal64(vi, channelName, attributeId, attributeValue);
}

ViStatus NiFakeLibrary::SetAttributeViString(ViSession vi, ViConstString channelName, ViAttr attributeId, ViConstString attributeValue)
{
  if (!function_pointers_.SetAttributeViString) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_SetAttributeViString.");
  }
  return function_pointers_.SetAttributeViString(vi, channelName, attributeId, attributeValue);
}

ViStatus NiFakeLibrary::SetCustomType(ViSession vi, CustomStruct cs)
{
  if (!function_pointers_.SetCustomType) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_SetCustomType.");
  }
  return function_pointers_.SetCustomType(vi, cs);
}

ViStatus NiFakeLibrary::SetCustomTypeArray(ViSession vi, ViInt32 numberOfElements, CustomStruct cs[])
{
  if (!function_pointers_.SetCustomTypeArray) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_SetCustomTypeArray.");
  }
  return function_pointers_.SetCustomTypeArray(vi, numberOfElements, cs);
}

ViStatus NiFakeLibrary::StringValuedEnumInputFunctionWithDefaults(ViSession vi, ViConstString aMobileOSName)
{
  if (!function_pointers_.StringValuedEnumInputFunctionWithDefaults) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_StringValuedEnumInputFunctionWithDefaults.");
  }
  return function_pointers_.StringValuedEnumInputFunctionWithDefaults(vi, aMobileOSName);
}

ViStatus NiFakeLibrary::TwoInputFunction(ViSession vi, ViReal64 aNumber, ViString aString)
{
  if (!function_pointers_.TwoInputFunction) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_TwoInputFunction.");
  }
  return function_pointers_.TwoInputFunction(vi, aNumber, aString);
}

ViStatus NiFakeLibrary::Use64BitNumber(ViSession vi, ViInt64 input, ViInt64* output)
{
  if (!function_pointers_.Use64BitNumber) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_Use64BitNumber.");
  }
  return function_pointers_.Use64BitNumber(vi, input, output);
}

ViStatus NiFakeLibrary::UseATwoDimensionParameter(ViSession vi, ViInt32 array[], ViInt32 arrayLengths[], ViInt32 arraySize)
{
  if (!function_pointers_.UseATwoDimensionParameter) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_UseATwoDimensionParameter.");
  }
  return function_pointers_.UseATwoDimensionParameter(vi, array, arrayLengths, arraySize);
}

ViStatus NiFakeLibrary::ViInt16ArrayInputFunction(ViSession vi, ViInt32 numberOfElements, ViInt16 anArray[])
{
  if (!function_pointers_.ViInt16ArrayInputFunction) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_ViInt16ArrayInputFunction.");
  }
  return function_pointers_.ViInt16ArrayInputFunction(vi, numberOfElements, anArray);
}

ViStatus NiFakeLibrary::ViUInt8ArrayInputFunction(ViSession vi, ViInt32 numberOfElements, ViUInt8 anArray[])
{
  if (!function_pointers_.ViUInt8ArrayInputFunction) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_ViUInt8ArrayInputFunction.");
  }
  return function_pointers_.ViUInt8ArrayInputFunction(vi, numberOfElements, anArray);
}

ViStatus NiFakeLibrary::ViUInt8ArrayOutputFunction(ViSession vi, ViInt32 numberOfElements, ViUInt8 anArray[])
{
  if (!function_pointers_.ViUInt8ArrayOutputFunction) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_ViUInt8ArrayOutputFunction.");
  }
  return function_pointers_.ViUInt8ArrayOutputFunction(vi, numberOfElements, anArray);
}

ViStatus NiFakeLibrary::WriteWaveform(ViSession vi, ViInt32 numberOfSamples, ViReal64 waveform[])
{
  if (!function_pointers_.WriteWaveform) {
    throw nidevice_grpc::LibraryLoadException("Could not find niFake_WriteWaveform.");
  }
  return function_pointers_.WriteWaveform(vi, numberOfSamples, waveform);
}

}  // namespace nifake_grpc
