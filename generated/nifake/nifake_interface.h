//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Interface header for implementing interactions with NI-FAKE
//---------------------------------------------------------------------
#ifndef NI_FAKE_GRPC_INTERFACE_H
#define NI_FAKE_GRPC_INTERFACE_H

#include <grpcpp/grpcpp.h>

namespace ni {
namespace fake {
namespace grpc {

class NiFakeInterface {
 public:
  virtual ::grpc::Status CheckIfFunctionExists(const char* functionName) = 0;
  virtual int Abort(std::uint64_t) = 0;
  virtual int EnumInputFunctionWithDefaults(std::uint64_t, std::uint32_t) = 0;
  virtual int GetABoolean(std::uint64_t, bool*) = 0;
  virtual int GetANumber(std::uint64_t, std::uint32_t*) = 0;
  virtual int GetArraySizeForPythonCode(std::uint64_t, std::int32_t*) = 0;
  virtual int GetCalInterval(std::uint64_t, std::int32_t*) = 0;
  virtual int GetCustomType(std::uint64_t, std::uint64_t*) = 0;
  virtual int GetEnumValue(std::uint64_t, std::int32_t*, std::uint32_t*) = 0;
  virtual int LockSession(std::uint64_t, bool*) = 0;
  virtual int OneInputFunction(std::uint64_t, std::int32_t) = 0;
  virtual int ParametersAreMultipleTypes(std::uint64_t, bool, std::int32_t, std::int64_t, std::uint32_t, double, double, std::int32_t, std::string) = 0;
  virtual int PoorlyNamedSimpleFunction(std::uint64_t) = 0;
  virtual int Read(std::uint64_t, double, double*) = 0;
  virtual int ReadFromChannel(std::uint64_t, std::string, std::int32_t, double*) = 0;
  virtual int ReturnDurationInSeconds(std::uint64_t, double*) = 0;
  virtual int SetCustomType(std::uint64_t, std::uint64_t) = 0;
  virtual int StringValuedEnumInputFunctionWithDefaults(std::uint64_t, std::string) = 0;
  virtual int TwoInputFunction(std::uint64_t, double, std::string) = 0;
  virtual int UnlockSession(std::uint64_t, bool*) = 0;
  virtual int Use64BitNumber(std::uint64_t, std::int64_t, std::int64_t*) = 0;
};

} // namespace grpc
} // namespace fake
} // namespace ni
#endif  // NI_FAKE_GRPC_INTERFACE_H
