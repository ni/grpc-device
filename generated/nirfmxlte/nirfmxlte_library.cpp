//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Service implementation for the NI-RFMXLTE Metadata
//---------------------------------------------------------------------
#include "nirfmxlte_library.h"

#if defined(_MSC_VER)
static const char* kLibraryName = "niRFmxLTE.dll";
#else
static const char* kLibraryName = "libnirfmxlte.so.1";
#endif

namespace nirfmxlte_grpc {

NiRFmxLTELibrary::NiRFmxLTELibrary() : shared_library_(kLibraryName)
{
  shared_library_.load();
  bool loaded = shared_library_.is_loaded();
  memset(&function_pointers_, 0, sizeof(function_pointers_));
  if (!loaded) {
    return;
  }
  function_pointers_.Close = reinterpret_cast<ClosePtr>(shared_library_.get_function_pointer("RFmxLTE_Close"));
  function_pointers_.Initialize = reinterpret_cast<InitializePtr>(shared_library_.get_function_pointer("RFmxLTE_Initialize"));
}

NiRFmxLTELibrary::~NiRFmxLTELibrary()
{
}

::grpc::Status NiRFmxLTELibrary::check_function_exists(std::string functionName)
{
  return shared_library_.function_exists(functionName.c_str())
    ? ::grpc::Status::OK
    : ::grpc::Status(::grpc::NOT_FOUND, "Could not find the function " + functionName);
}

int32 NiRFmxLTELibrary::Close(niRFmxInstrHandle instrumentHandle, int32 forceDestroy)
{
  if (!function_pointers_.Close) {
    throw nidevice_grpc::LibraryLoadException("Could not find RFmxLTE_Close.");
  }
#if defined(_MSC_VER)
  return RFmxLTE_Close(instrumentHandle, forceDestroy);
#else
  return function_pointers_.Close(instrumentHandle, forceDestroy);
#endif
}

int32 NiRFmxLTELibrary::Initialize(char resourceName[], char optionString[], niRFmxInstrHandle* handleOut, int32* isNewSession)
{
  if (!function_pointers_.Initialize) {
    throw nidevice_grpc::LibraryLoadException("Could not find RFmxLTE_Initialize.");
  }
#if defined(_MSC_VER)
  return RFmxLTE_Initialize(resourceName, optionString, handleOut, isNewSession);
#else
  return function_pointers_.Initialize(resourceName, optionString, handleOut, isNewSession);
#endif
}

}  // namespace nirfmxlte_grpc
