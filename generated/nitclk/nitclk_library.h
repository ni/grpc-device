//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Real implementation of LibraryInterface for NI-TClk
//---------------------------------------------------------------------
#ifndef NITCLK_GRPC_LIBRARY_H
#define NITCLK_GRPC_LIBRARY_H

#include "nitclk_library_interface.h"

#include <server/shared_library_interface.h>

#include <memory>

namespace nitclk_grpc {

class NiTClkLibrary : public nitclk_grpc::NiTClkLibraryInterface {
 public:
  NiTClkLibrary();
  explicit NiTClkLibrary(std::shared_ptr<nidevice_grpc::SharedLibraryInterface> shared_library);
  virtual ~NiTClkLibrary();

  ::grpc::Status check_function_exists(std::string functionName);
  ViStatus ConfigureForHomogeneousTriggers(ViUInt32 sessionCount, ViSession sessions[]) override;
  ViStatus FinishSyncPulseSenderSynchronize(ViUInt32 sessionCount, ViSession sessions[], ViReal64 minTime) override;
  ViStatus GetAttributeViReal64(ViSession session, ViConstString channelName, ViAttr attributeId, ViReal64* value) override;
  ViStatus GetAttributeViSession(ViSession session, ViConstString channelName, ViAttr attributeId, ViSession* value) override;
  ViStatus GetAttributeViString(ViSession session, ViConstString channelName, ViAttr attributeId, ViInt32 bufSize, ViChar value[]) override;
  ViStatus GetExtendedErrorInfo(ViChar errorString[], ViUInt32 errorStringSize) override;
  ViStatus Initiate(ViUInt32 sessionCount, ViSession sessions[]) override;
  ViStatus IsDone(ViUInt32 sessionCount, ViSession sessions[], ViBoolean* done) override;
  ViStatus SetAttributeViReal64(ViSession session, ViConstString channelName, ViAttr attributeId, ViReal64 value) override;
  ViStatus SetAttributeViSession(ViSession session, ViConstString channelName, ViAttr attributeId, ViSession value) override;
  ViStatus SetAttributeViString(ViSession session, ViConstString channelName, ViAttr attributeId, ViConstString value) override;
  ViStatus SetupForSyncPulseSenderSynchronize(ViUInt32 sessionCount, ViSession sessions[], ViReal64 minTime) override;
  ViStatus Synchronize(ViUInt32 sessionCount, ViSession sessions[], ViReal64 minTclkPeriod) override;
  ViStatus SynchronizeToSyncPulseSender(ViUInt32 sessionCount, ViSession sessions[], ViReal64 minTime) override;
  ViStatus WaitUntilDone(ViUInt32 sessionCount, ViSession sessions[], ViReal64 timeout) override;

 private:
  using ConfigureForHomogeneousTriggersPtr = decltype(&niTClk_ConfigureForHomogeneousTriggers);
  using FinishSyncPulseSenderSynchronizePtr = decltype(&niTClk_FinishSyncPulseSenderSynchronize);
  using GetAttributeViReal64Ptr = decltype(&niTClk_GetAttributeViReal64);
  using GetAttributeViSessionPtr = decltype(&niTClk_GetAttributeViSession);
  using GetAttributeViStringPtr = decltype(&niTClk_GetAttributeViString);
  using GetExtendedErrorInfoPtr = decltype(&niTClk_GetExtendedErrorInfo);
  using InitiatePtr = decltype(&niTClk_Initiate);
  using IsDonePtr = decltype(&niTClk_IsDone);
  using SetAttributeViReal64Ptr = decltype(&niTClk_SetAttributeViReal64);
  using SetAttributeViSessionPtr = decltype(&niTClk_SetAttributeViSession);
  using SetAttributeViStringPtr = decltype(&niTClk_SetAttributeViString);
  using SetupForSyncPulseSenderSynchronizePtr = decltype(&niTClk_SetupForSyncPulseSenderSynchronize);
  using SynchronizePtr = decltype(&niTClk_Synchronize);
  using SynchronizeToSyncPulseSenderPtr = decltype(&niTClk_SynchronizeToSyncPulseSender);
  using WaitUntilDonePtr = decltype(&niTClk_WaitUntilDone);

  typedef struct FunctionPointers {
    ConfigureForHomogeneousTriggersPtr ConfigureForHomogeneousTriggers;
    FinishSyncPulseSenderSynchronizePtr FinishSyncPulseSenderSynchronize;
    GetAttributeViReal64Ptr GetAttributeViReal64;
    GetAttributeViSessionPtr GetAttributeViSession;
    GetAttributeViStringPtr GetAttributeViString;
    GetExtendedErrorInfoPtr GetExtendedErrorInfo;
    InitiatePtr Initiate;
    IsDonePtr IsDone;
    SetAttributeViReal64Ptr SetAttributeViReal64;
    SetAttributeViSessionPtr SetAttributeViSession;
    SetAttributeViStringPtr SetAttributeViString;
    SetupForSyncPulseSenderSynchronizePtr SetupForSyncPulseSenderSynchronize;
    SynchronizePtr Synchronize;
    SynchronizeToSyncPulseSenderPtr SynchronizeToSyncPulseSender;
    WaitUntilDonePtr WaitUntilDone;
  } FunctionLoadStatus;

  std::shared_ptr<nidevice_grpc::SharedLibraryInterface> shared_library_;
  FunctionPointers function_pointers_;
};

}  // namespace nitclk_grpc

#endif  // NITCLK_GRPC_LIBRARY_H
