//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Mock of LibraryInterface for NI-RFSA
//---------------------------------------------------------------------
#ifndef NIRFSA_GRPC_MOCK_LIBRARY_H
#define NIRFSA_GRPC_MOCK_LIBRARY_H

#include <gmock/gmock.h>
#include <gtest/gtest.h>

#include "nirfsa_library_interface.h"

namespace ni {
namespace tests {
namespace unit {

class NiRFSAMockLibrary : public nirfsa_grpc::NiRFSALibraryInterface {
 public:
  MOCK_METHOD(ViStatus, Abort, (ViSession vi), (override));
  MOCK_METHOD(ViStatus, CheckAcquisitionStatus, (ViSession vi, ViBoolean* isDone), (override));
  MOCK_METHOD(ViStatus, ClearError, (ViSession vi), (override));
  MOCK_METHOD(ViStatus, ClearSelfCalibrateRange, (ViSession vi), (override));
  MOCK_METHOD(ViStatus, Close, (ViSession vi), (override));
  MOCK_METHOD(ViStatus, Commit, (ViSession vi), (override));
  MOCK_METHOD(ViStatus, ConfigureAcquisitionType, (ViSession vi, ViInt32 acquisitionType), (override));
  MOCK_METHOD(ViStatus, ConfigureDeembeddingTableInterpolationLinear, (ViSession vi, ViConstString port, ViConstString tableName, ViInt32 format), (override));
  MOCK_METHOD(ViStatus, ConfigureDeembeddingTableInterpolationNearest, (ViSession vi, ViConstString port, ViConstString tableName), (override));
  MOCK_METHOD(ViStatus, ConfigureDeembeddingTableInterpolationSpline, (ViSession vi, ViConstString port, ViConstString tableName), (override));
  MOCK_METHOD(ViStatus, ConfigureDigitalEdgeAdvanceTrigger, (ViSession vi, ViConstString source, ViInt32 edge), (override));
  MOCK_METHOD(ViStatus, ConfigureDigitalEdgeRefTrigger, (ViSession vi, ViConstString source, ViInt32 edge, ViInt64 pretriggerSamples), (override));
  MOCK_METHOD(ViStatus, ConfigureDigitalEdgeStartTrigger, (ViSession vi, ViConstString source, ViInt32 edge), (override));
  MOCK_METHOD(ViStatus, ConfigureIQCarrierFrequency, (ViSession vi, ViConstString channelList, ViReal64 carrierFrequency), (override));
  MOCK_METHOD(ViStatus, ConfigureIQPowerEdgeRefTrigger, (ViSession vi, ViConstString source, ViReal64 level, ViInt32 slope, ViInt64 pretriggerSamples), (override));
  MOCK_METHOD(ViStatus, ConfigureIQRate, (ViSession vi, ViConstString channelList, ViReal64 iqRate), (override));
  MOCK_METHOD(ViStatus, ConfigureNumberOfRecords, (ViSession vi, ViConstString channelList, ViBoolean numberOfRecordsIsFinite, ViInt64 numberOfRecords), (override));
  MOCK_METHOD(ViStatus, ConfigureNumberOfSamples, (ViSession vi, ViConstString channelList, ViBoolean numberOfSamplesIsFinite, ViInt64 samplesPerRecord), (override));
  MOCK_METHOD(ViStatus, ConfigurePXIChassisClk10, (ViSession vi, ViConstString pxiClk10Source), (override));
  MOCK_METHOD(ViStatus, ConfigureRefClock, (ViSession vi, ViConstString clockSource, ViReal64 refClockRate), (override));
  MOCK_METHOD(ViStatus, ConfigureReferenceLevel, (ViSession vi, ViConstString channelList, ViReal64 referenceLevel), (override));
  MOCK_METHOD(ViStatus, ConfigureResolutionBandwidth, (ViSession vi, ViConstString channelList, ViReal64 resolutionBandwidth), (override));
  MOCK_METHOD(ViStatus, ConfigureSoftwareEdgeAdvanceTrigger, (ViSession vi), (override));
  MOCK_METHOD(ViStatus, ConfigureSoftwareEdgeRefTrigger, (ViSession vi, ViInt64 pretriggerSamples), (override));
  MOCK_METHOD(ViStatus, ConfigureSoftwareEdgeStartTrigger, (ViSession vi), (override));
  MOCK_METHOD(ViStatus, ConfigureSpectrumFrequencyCenterSpan, (ViSession vi, ViConstString channelList, ViReal64 centerFrequency, ViReal64 span), (override));
  MOCK_METHOD(ViStatus, ConfigureSpectrumFrequencyStartStop, (ViSession vi, ViConstString channelList, ViReal64 startFrequency, ViReal64 stopFrequency), (override));
  MOCK_METHOD(ViStatus, CreateConfigurationList, (ViSession vi, ViConstString listName, ViInt32 numberOfListAttributes, ViAttr listAttributeIds[], ViBoolean setAsActiveList), (override));
  MOCK_METHOD(ViStatus, CreateConfigurationListStep, (ViSession vi, ViBoolean setAsActiveStep), (override));
  MOCK_METHOD(ViStatus, CreateDeembeddingSparameterTableArray, (ViSession vi, ViConstString port, ViConstString tableName, ViReal64 frequencies[], ViInt32 frequenciesSize, NIComplexNumber_struct sparameterTable[], ViInt32 sparameterTableSize, ViInt32 numberOfPorts, ViInt32 sparameterOrientation), (override));
  MOCK_METHOD(ViStatus, CreateDeembeddingSparameterTableS2PFile, (ViSession vi, ViConstString port, ViConstString tableName, ViConstString s2pFilePath, ViInt32 sparameterOrientation), (override));
  MOCK_METHOD(ViStatus, DeleteAllDeembeddingTables, (ViSession vi), (override));
  MOCK_METHOD(ViStatus, DeleteConfigurationList, (ViSession vi, ViConstString listName), (override));
  MOCK_METHOD(ViStatus, DeleteDeembeddingTable, (ViSession vi, ViConstString port, ViConstString tableName), (override));
  MOCK_METHOD(ViStatus, Disable, (ViSession vi), (override));
  MOCK_METHOD(ViStatus, DisableAdvanceTrigger, (ViSession vi), (override));
  MOCK_METHOD(ViStatus, DisableRefTrigger, (ViSession vi), (override));
  MOCK_METHOD(ViStatus, DisableStartTrigger, (ViSession vi), (override));
  MOCK_METHOD(ViStatus, EnableSessionAccess, (ViSession vi, ViBoolean enable), (override));
  MOCK_METHOD(ViStatus, ErrorMessage, (ViSession vi, ViStatus statusCode, ViChar errorMessage[1024]), (override));
  MOCK_METHOD(ViStatus, ErrorQuery, (ViSession vi, ViInt32* errorCode, ViChar errorMessage[1024]), (override));
  MOCK_METHOD(ViStatus, ExportSignal, (ViSession vi, ViInt32 signal, ViConstString signalIdentifier, ViConstString outputTerminal), (override));
  MOCK_METHOD(ViStatus, FetchIQMultiRecordComplexF32, (ViSession vi, ViConstString channelList, ViInt64 startingRecord, ViInt64 numberOfRecords, ViInt64 numberOfSamples, ViReal64 timeout, NIComplexNumberF32_struct data[], niRFSA_wfmInfo_struct wfmInfo[]), (override));
  MOCK_METHOD(ViStatus, FetchIQMultiRecordComplexF64, (ViSession vi, ViConstString channelList, ViInt64 startingRecord, ViInt64 numberOfRecords, ViInt64 numberOfSamples, ViReal64 timeout, NIComplexNumber_struct data[], niRFSA_wfmInfo_struct wfmInfo[]), (override));
  MOCK_METHOD(ViStatus, FetchIQMultiRecordComplexI16, (ViSession vi, ViConstString channelList, ViInt64 startingRecord, ViInt64 numberOfRecords, ViInt64 numberOfSamples, ViReal64 timeout, NIComplexI16_struct data[], niRFSA_wfmInfo_struct wfmInfo[]), (override));
  MOCK_METHOD(ViStatus, FetchIQSingleRecordComplexF32, (ViSession vi, ViConstString channelList, ViInt64 recordNumber, ViInt64 numberOfSamples, ViReal64 timeout, NIComplexNumberF32_struct data[], niRFSA_wfmInfo_struct* wfmInfo), (override));
  MOCK_METHOD(ViStatus, FetchIQSingleRecordComplexF64, (ViSession vi, ViConstString channelList, ViInt64 recordNumber, ViInt64 numberOfSamples, ViReal64 timeout, NIComplexNumber_struct data[], niRFSA_wfmInfo_struct* wfmInfo), (override));
  MOCK_METHOD(ViStatus, FetchIQSingleRecordComplexI16, (ViSession vi, ViConstString channelList, ViInt64 recordNumber, ViInt64 numberOfSamples, ViReal64 timeout, NIComplexI16_struct data[], niRFSA_wfmInfo_struct* wfmInfo), (override));
  MOCK_METHOD(ViStatus, GetAttributeViBoolean, (ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean* value), (override));
  MOCK_METHOD(ViStatus, GetAttributeViInt32, (ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32* value), (override));
  MOCK_METHOD(ViStatus, GetAttributeViInt64, (ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt64* value), (override));
  MOCK_METHOD(ViStatus, GetAttributeViReal64, (ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64* value), (override));
  MOCK_METHOD(ViStatus, GetAttributeViSession, (ViSession vi, ViConstString channelName, ViAttr attributeId, ViSession* value), (override));
  MOCK_METHOD(ViStatus, GetAttributeViString, (ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 bufSize, ViChar value[]), (override));
  MOCK_METHOD(ViStatus, GetCalUserDefinedInfo, (ViSession vi, ViChar info[2048]), (override));
  MOCK_METHOD(ViStatus, GetCalUserDefinedInfoMaxSize, (ViSession vi, ViInt32* infoSize), (override));
  MOCK_METHOD(ViStatus, GetDeembeddingSparameters, (ViSession vi, NIComplexNumber_struct sparameters[], ViInt32 sparametersArraySize, ViInt32* numberOfSparameters, ViInt32* numberOfPorts), (override));
  MOCK_METHOD(ViStatus, GetDeviceResponse, (ViSession vi, ViConstString channelList, ViInt32 responseType, ViInt32 bufferSize, ViReal64 frequencies[], ViReal64 magnitudeResponse[], ViReal64 phaseResponse[], ViInt32* numberOfFrequencies), (override));
  MOCK_METHOD(ViStatus, GetError, (ViSession vi, ViStatus* errorCode, ViInt32 errorDescriptionBufferSize, ViChar errorDescription[]), (override));
  MOCK_METHOD(ViStatus, GetExtCalLastDateAndTime, (ViSession vi, ViInt32* year, ViInt32* month, ViInt32* day, ViInt32* hour, ViInt32* minute), (override));
  MOCK_METHOD(ViStatus, GetExtCalLastTemp, (ViSession vi, ViReal64* temperature), (override));
  MOCK_METHOD(ViStatus, GetExtCalRecommendedInterval, (ViSession vi, ViInt32* months), (override));
  MOCK_METHOD(ViStatus, GetFetchBacklog, (ViSession vi, ViConstString channelList, ViInt64 recordNumber, ViInt64* backlog), (override));
  MOCK_METHOD(ViStatus, GetFrequencyResponse, (ViSession vi, ViConstString channelList, ViInt32 bufferSize, ViReal64 frequencies[], ViReal64 magnitudeResponse[], ViReal64 phaseResponse[], ViInt32* numberOfFrequencies), (override));
  MOCK_METHOD(ViStatus, GetNormalizationCoefficients, (ViSession vi, ViConstString channelList, ViInt32 arraySize, niRFSA_coefficientInfo_struct coefficientInfo[], ViInt32* numberOfCoefficientSets), (override));
  MOCK_METHOD(ViStatus, GetNumberOfSpectralLines, (ViSession vi, ViConstString channelList, ViInt32* numberOfSpectralLines), (override));
  MOCK_METHOD(ViStatus, GetRelayName, (ViSession vi, ViConstString channelList, ViInt32 index, ViChar name[], ViInt32* bufferSize), (override));
  MOCK_METHOD(ViStatus, GetRelayOperationsCount, (ViSession vi, ViConstString channelList, ViInt32 operationsCount[], ViInt32* bufferSize), (override));
  MOCK_METHOD(ViStatus, GetScalingCoefficients, (ViSession vi, ViConstString channelList, ViInt32 arraySize, niRFSA_coefficientInfo_struct coefficientInfo[], ViInt32* numberOfCoefficientSets), (override));
  MOCK_METHOD(ViStatus, GetSelfCalLastDateAndTime, (ViSession vi, ViInt64 selfCalibrationStep, ViInt32* year, ViInt32* month, ViInt32* day, ViInt32* hour, ViInt32* minute), (override));
  MOCK_METHOD(ViStatus, GetSelfCalLastTemp, (ViSession vi, ViInt64 selfCalibrationStep, ViReal64* temp), (override));
  MOCK_METHOD(ViStatus, GetSpectralInfoForSMT, (ViSession vi, SmtSpectrumInfo_struct* spectrumInfo), (override));
  MOCK_METHOD(ViStatus, GetStreamEndpointHandle, (ViSession vi, ViConstString streamEndpoint, ViUInt32* writerHandle), (override));
  MOCK_METHOD(ViStatus, GetTerminalName, (ViSession vi, ViInt32 signal, ViConstString signalIdentifier, ViInt32 bufferSize, ViChar terminalName[]), (override));
  MOCK_METHOD(ViStatus, GetUserData, (ViSession vi, ViConstString identifier, ViInt32 bufferSize, ViInt8 data[], ViInt32* actualDataSize), (override));
  MOCK_METHOD(ViStatus, Init, (ViRsrc resourceName, ViBoolean idQuery, ViBoolean reset, ViSession* vi), (override));
  MOCK_METHOD(ViStatus, InitWithOptions, (ViRsrc resourceName, ViBoolean idQuery, ViBoolean reset, ViConstString optionString, ViSession* vi), (override));
  MOCK_METHOD(ViStatus, Initiate, (ViSession vi), (override));
  MOCK_METHOD(ViStatus, InvalidateAllAttributes, (ViSession vi), (override));
  MOCK_METHOD(ViStatus, IsSelfCalValid, (ViSession vi, ViBoolean* selfCalValid, ViInt64* validSteps), (override));
  MOCK_METHOD(ViStatus, LockSession, (ViSession vi, ViBoolean* callerHasLock), (override));
  MOCK_METHOD(ViStatus, PerformThermalCorrection, (ViSession vi), (override));
  MOCK_METHOD(ViStatus, ReadIQSingleRecordComplexF64, (ViSession vi, ViConstString channelList, ViReal64 timeout, NIComplexNumber_struct data[], ViInt64 dataArraySize, niRFSA_wfmInfo_struct* wfmInfo), (override));
  MOCK_METHOD(ViStatus, ReadPowerSpectrumF32, (ViSession vi, ViConstString channelList, ViReal64 timeout, ViReal32 powerSpectrumData[], ViInt32 dataArraySize, niRFSA_spectrumInfo_struct* spectrumInfo), (override));
  MOCK_METHOD(ViStatus, ReadPowerSpectrumF64, (ViSession vi, ViConstString channelList, ViReal64 timeout, ViReal64 powerSpectrumData[], ViInt32 dataArraySize, niRFSA_spectrumInfo_struct* spectrumInfo), (override));
  MOCK_METHOD(ViStatus, Reset, (ViSession vi), (override));
  MOCK_METHOD(ViStatus, ResetAttribute, (ViSession vi, ViConstString channelName, ViAttr attributeId), (override));
  MOCK_METHOD(ViStatus, ResetDevice, (ViSession vi), (override));
  MOCK_METHOD(ViStatus, ResetWithDefaults, (ViSession vi), (override));
  MOCK_METHOD(ViStatus, ResetWithOptions, (ViSession vi, ViUInt64 stepsToOmit), (override));
  MOCK_METHOD(ViStatus, RevisionQuery, (ViSession vi, ViChar driverRev[256], ViChar instrRev[256]), (override));
  MOCK_METHOD(ViStatus, SelfCal, (ViSession vi), (override));
  MOCK_METHOD(ViStatus, SelfCalibrate, (ViSession vi, ViInt64 stepsToOmit), (override));
  MOCK_METHOD(ViStatus, SelfCalibrateRange, (ViSession vi, ViInt64 stepsToOmit, ViReal64 minFrequency, ViReal64 maxFrequency, ViReal64 minReferenceLevel, ViReal64 maxReferenceLevel), (override));
  MOCK_METHOD(ViStatus, SelfTest, (ViSession vi, ViInt16* testResult, ViChar testMessage[2048]), (override));
  MOCK_METHOD(ViStatus, SendSoftwareEdgeTrigger, (ViSession vi, ViInt32 trigger, ViConstString triggerIdentifier), (override));
  MOCK_METHOD(ViStatus, SetAttributeViBoolean, (ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean value), (override));
  MOCK_METHOD(ViStatus, SetAttributeViInt32, (ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 value), (override));
  MOCK_METHOD(ViStatus, SetAttributeViInt64, (ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt64 value), (override));
  MOCK_METHOD(ViStatus, SetAttributeViReal64, (ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64 value), (override));
  MOCK_METHOD(ViStatus, SetAttributeViSession, (ViSession vi, ViConstString channelName, ViAttr attributeId, ViSession value), (override));
  MOCK_METHOD(ViStatus, SetAttributeViString, (ViSession vi, ViConstString channelName, ViAttr attributeId, ViConstString value), (override));
  MOCK_METHOD(ViStatus, SetCalUserDefinedInfo, (ViSession vi, ViConstString info), (override));
  MOCK_METHOD(ViStatus, SetUserData, (ViSession vi, ViConstString identifier, ViInt32 bufferSize, ViInt8 data[]), (override));
  MOCK_METHOD(ViStatus, UnlockSession, (ViSession vi, ViBoolean* callerHasLock), (override));
};

}  // namespace unit
}  // namespace tests
}  // namespace ni
#endif  // NIRFSA_GRPC_MOCK_LIBRARY_H
