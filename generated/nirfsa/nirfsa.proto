
//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Proto file for the NI-RFSA Metadata
//---------------------------------------------------------------------
syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.ni.grpc.rfsa";
option java_outer_classname = "NiRFSA";
option csharp_namespace = "NationalInstruments.Grpc.NiRFSA";

package nirfsa_grpc;

import "nidevice.proto";
import "session.proto";

service NiRFSA {
  rpc Abort(AbortRequest) returns (AbortResponse);
  rpc CheckAcquisitionStatus(CheckAcquisitionStatusRequest) returns (CheckAcquisitionStatusResponse);
  rpc ClearError(ClearErrorRequest) returns (ClearErrorResponse);
  rpc ClearSelfCalibrateRange(ClearSelfCalibrateRangeRequest) returns (ClearSelfCalibrateRangeResponse);
  rpc Close(CloseRequest) returns (CloseResponse);
  rpc Commit(CommitRequest) returns (CommitResponse);
  rpc ConfigureAcquisitionType(ConfigureAcquisitionTypeRequest) returns (ConfigureAcquisitionTypeResponse);
  rpc ConfigureDeembeddingTableInterpolationLinear(ConfigureDeembeddingTableInterpolationLinearRequest) returns (ConfigureDeembeddingTableInterpolationLinearResponse);
  rpc ConfigureDeembeddingTableInterpolationNearest(ConfigureDeembeddingTableInterpolationNearestRequest) returns (ConfigureDeembeddingTableInterpolationNearestResponse);
  rpc ConfigureDeembeddingTableInterpolationSpline(ConfigureDeembeddingTableInterpolationSplineRequest) returns (ConfigureDeembeddingTableInterpolationSplineResponse);
  rpc ConfigureDigitalEdgeAdvanceTrigger(ConfigureDigitalEdgeAdvanceTriggerRequest) returns (ConfigureDigitalEdgeAdvanceTriggerResponse);
  rpc ConfigureDigitalEdgeRefTrigger(ConfigureDigitalEdgeRefTriggerRequest) returns (ConfigureDigitalEdgeRefTriggerResponse);
  rpc ConfigureDigitalEdgeStartTrigger(ConfigureDigitalEdgeStartTriggerRequest) returns (ConfigureDigitalEdgeStartTriggerResponse);
  rpc ConfigureIQCarrierFrequency(ConfigureIQCarrierFrequencyRequest) returns (ConfigureIQCarrierFrequencyResponse);
  rpc ConfigureIQPowerEdgeRefTrigger(ConfigureIQPowerEdgeRefTriggerRequest) returns (ConfigureIQPowerEdgeRefTriggerResponse);
  rpc ConfigureIQRate(ConfigureIQRateRequest) returns (ConfigureIQRateResponse);
  rpc ConfigureNumberOfRecords(ConfigureNumberOfRecordsRequest) returns (ConfigureNumberOfRecordsResponse);
  rpc ConfigureNumberOfSamples(ConfigureNumberOfSamplesRequest) returns (ConfigureNumberOfSamplesResponse);
  rpc ConfigurePXIChassisClk10(ConfigurePXIChassisClk10Request) returns (ConfigurePXIChassisClk10Response);
  rpc ConfigureRefClock(ConfigureRefClockRequest) returns (ConfigureRefClockResponse);
  rpc ConfigureReferenceLevel(ConfigureReferenceLevelRequest) returns (ConfigureReferenceLevelResponse);
  rpc ConfigureResolutionBandwidth(ConfigureResolutionBandwidthRequest) returns (ConfigureResolutionBandwidthResponse);
  rpc ConfigureSoftwareEdgeAdvanceTrigger(ConfigureSoftwareEdgeAdvanceTriggerRequest) returns (ConfigureSoftwareEdgeAdvanceTriggerResponse);
  rpc ConfigureSoftwareEdgeRefTrigger(ConfigureSoftwareEdgeRefTriggerRequest) returns (ConfigureSoftwareEdgeRefTriggerResponse);
  rpc ConfigureSoftwareEdgeStartTrigger(ConfigureSoftwareEdgeStartTriggerRequest) returns (ConfigureSoftwareEdgeStartTriggerResponse);
  rpc ConfigureSpectrumFrequencyCenterSpan(ConfigureSpectrumFrequencyCenterSpanRequest) returns (ConfigureSpectrumFrequencyCenterSpanResponse);
  rpc ConfigureSpectrumFrequencyStartStop(ConfigureSpectrumFrequencyStartStopRequest) returns (ConfigureSpectrumFrequencyStartStopResponse);
  rpc CreateConfigurationList(CreateConfigurationListRequest) returns (CreateConfigurationListResponse);
  rpc CreateConfigurationListStep(CreateConfigurationListStepRequest) returns (CreateConfigurationListStepResponse);
  rpc CreateDeembeddingSparameterTableArray(CreateDeembeddingSparameterTableArrayRequest) returns (CreateDeembeddingSparameterTableArrayResponse);
  rpc CreateDeembeddingSparameterTableS2PFile(CreateDeembeddingSparameterTableS2PFileRequest) returns (CreateDeembeddingSparameterTableS2PFileResponse);
  rpc DeleteAllDeembeddingTables(DeleteAllDeembeddingTablesRequest) returns (DeleteAllDeembeddingTablesResponse);
  rpc DeleteConfigurationList(DeleteConfigurationListRequest) returns (DeleteConfigurationListResponse);
  rpc DeleteDeembeddingTable(DeleteDeembeddingTableRequest) returns (DeleteDeembeddingTableResponse);
  rpc Disable(DisableRequest) returns (DisableResponse);
  rpc DisableAdvanceTrigger(DisableAdvanceTriggerRequest) returns (DisableAdvanceTriggerResponse);
  rpc DisableRefTrigger(DisableRefTriggerRequest) returns (DisableRefTriggerResponse);
  rpc DisableStartTrigger(DisableStartTriggerRequest) returns (DisableStartTriggerResponse);
  rpc EnableSessionAccess(EnableSessionAccessRequest) returns (EnableSessionAccessResponse);
  rpc ErrorMessage(ErrorMessageRequest) returns (ErrorMessageResponse);
  rpc ErrorQuery(ErrorQueryRequest) returns (ErrorQueryResponse);
  rpc ExportSignal(ExportSignalRequest) returns (ExportSignalResponse);
  rpc FetchIQMultiRecordComplexF32(FetchIQMultiRecordComplexF32Request) returns (FetchIQMultiRecordComplexF32Response);
  rpc FetchIQMultiRecordComplexF64(FetchIQMultiRecordComplexF64Request) returns (FetchIQMultiRecordComplexF64Response);
  rpc FetchIQMultiRecordComplexI16(FetchIQMultiRecordComplexI16Request) returns (FetchIQMultiRecordComplexI16Response);
  rpc FetchIQSingleRecordComplexF32(FetchIQSingleRecordComplexF32Request) returns (FetchIQSingleRecordComplexF32Response);
  rpc FetchIQSingleRecordComplexF64(FetchIQSingleRecordComplexF64Request) returns (FetchIQSingleRecordComplexF64Response);
  rpc FetchIQSingleRecordComplexI16(FetchIQSingleRecordComplexI16Request) returns (FetchIQSingleRecordComplexI16Response);
  rpc GetAttributeViBoolean(GetAttributeViBooleanRequest) returns (GetAttributeViBooleanResponse);
  rpc GetAttributeViInt32(GetAttributeViInt32Request) returns (GetAttributeViInt32Response);
  rpc GetAttributeViInt64(GetAttributeViInt64Request) returns (GetAttributeViInt64Response);
  rpc GetAttributeViReal64(GetAttributeViReal64Request) returns (GetAttributeViReal64Response);
  rpc GetAttributeViSession(GetAttributeViSessionRequest) returns (GetAttributeViSessionResponse);
  rpc GetAttributeViString(GetAttributeViStringRequest) returns (GetAttributeViStringResponse);
  rpc GetCalUserDefinedInfo(GetCalUserDefinedInfoRequest) returns (GetCalUserDefinedInfoResponse);
  rpc GetCalUserDefinedInfoMaxSize(GetCalUserDefinedInfoMaxSizeRequest) returns (GetCalUserDefinedInfoMaxSizeResponse);
  rpc GetDeembeddingSparameters(GetDeembeddingSparametersRequest) returns (GetDeembeddingSparametersResponse);
  rpc GetDeviceResponse(GetDeviceResponseRequest) returns (GetDeviceResponseResponse);
  rpc GetError(GetErrorRequest) returns (GetErrorResponse);
  rpc GetExtCalLastDateAndTime(GetExtCalLastDateAndTimeRequest) returns (GetExtCalLastDateAndTimeResponse);
  rpc GetExtCalLastTemp(GetExtCalLastTempRequest) returns (GetExtCalLastTempResponse);
  rpc GetExtCalRecommendedInterval(GetExtCalRecommendedIntervalRequest) returns (GetExtCalRecommendedIntervalResponse);
  rpc GetFetchBacklog(GetFetchBacklogRequest) returns (GetFetchBacklogResponse);
  rpc GetFrequencyResponse(GetFrequencyResponseRequest) returns (GetFrequencyResponseResponse);
  rpc GetNormalizationCoefficients(GetNormalizationCoefficientsRequest) returns (GetNormalizationCoefficientsResponse);
  rpc GetNumberOfSpectralLines(GetNumberOfSpectralLinesRequest) returns (GetNumberOfSpectralLinesResponse);
  rpc GetRelayName(GetRelayNameRequest) returns (GetRelayNameResponse);
  rpc GetRelayOperationsCount(GetRelayOperationsCountRequest) returns (GetRelayOperationsCountResponse);
  rpc GetScalingCoefficients(GetScalingCoefficientsRequest) returns (GetScalingCoefficientsResponse);
  rpc GetSelfCalLastDateAndTime(GetSelfCalLastDateAndTimeRequest) returns (GetSelfCalLastDateAndTimeResponse);
  rpc GetSelfCalLastTemp(GetSelfCalLastTempRequest) returns (GetSelfCalLastTempResponse);
  rpc GetSpectralInfoForSMT(GetSpectralInfoForSMTRequest) returns (GetSpectralInfoForSMTResponse);
  rpc GetStreamEndpointHandle(GetStreamEndpointHandleRequest) returns (GetStreamEndpointHandleResponse);
  rpc GetTerminalName(GetTerminalNameRequest) returns (GetTerminalNameResponse);
  rpc GetUserData(GetUserDataRequest) returns (GetUserDataResponse);
  rpc Init(InitRequest) returns (InitResponse);
  rpc InitWithOptions(InitWithOptionsRequest) returns (InitWithOptionsResponse);
  rpc Initiate(InitiateRequest) returns (InitiateResponse);
  rpc InvalidateAllAttributes(InvalidateAllAttributesRequest) returns (InvalidateAllAttributesResponse);
  rpc IsSelfCalValid(IsSelfCalValidRequest) returns (IsSelfCalValidResponse);
  rpc PerformThermalCorrection(PerformThermalCorrectionRequest) returns (PerformThermalCorrectionResponse);
  rpc ReadIQSingleRecordComplexF64(ReadIQSingleRecordComplexF64Request) returns (ReadIQSingleRecordComplexF64Response);
  rpc ReadPowerSpectrumF32(ReadPowerSpectrumF32Request) returns (ReadPowerSpectrumF32Response);
  rpc ReadPowerSpectrumF64(ReadPowerSpectrumF64Request) returns (ReadPowerSpectrumF64Response);
  rpc Reset(ResetRequest) returns (ResetResponse);
  rpc ResetAttribute(ResetAttributeRequest) returns (ResetAttributeResponse);
  rpc ResetDevice(ResetDeviceRequest) returns (ResetDeviceResponse);
  rpc ResetWithDefaults(ResetWithDefaultsRequest) returns (ResetWithDefaultsResponse);
  rpc ResetWithOptions(ResetWithOptionsRequest) returns (ResetWithOptionsResponse);
  rpc RevisionQuery(RevisionQueryRequest) returns (RevisionQueryResponse);
  rpc SelfCal(SelfCalRequest) returns (SelfCalResponse);
  rpc SelfCalibrate(SelfCalibrateRequest) returns (SelfCalibrateResponse);
  rpc SelfCalibrateRange(SelfCalibrateRangeRequest) returns (SelfCalibrateRangeResponse);
  rpc SelfTest(SelfTestRequest) returns (SelfTestResponse);
  rpc SendSoftwareEdgeTrigger(SendSoftwareEdgeTriggerRequest) returns (SendSoftwareEdgeTriggerResponse);
  rpc SetAttributeViBoolean(SetAttributeViBooleanRequest) returns (SetAttributeViBooleanResponse);
  rpc SetAttributeViInt32(SetAttributeViInt32Request) returns (SetAttributeViInt32Response);
  rpc SetAttributeViInt64(SetAttributeViInt64Request) returns (SetAttributeViInt64Response);
  rpc SetAttributeViReal64(SetAttributeViReal64Request) returns (SetAttributeViReal64Response);
  rpc SetAttributeViSession(SetAttributeViSessionRequest) returns (SetAttributeViSessionResponse);
  rpc SetAttributeViString(SetAttributeViStringRequest) returns (SetAttributeViStringResponse);
  rpc SetCalUserDefinedInfo(SetCalUserDefinedInfoRequest) returns (SetCalUserDefinedInfoResponse);
  rpc SetUserData(SetUserDataRequest) returns (SetUserDataResponse);
}

enum NiRFSAAttribute {
  NIRFSA_ATTRIBUTE_UNSPECIFIED = 0;
  NIRFSA_ATTRIBUTE_RANGE_CHECK = 1050002;
  NIRFSA_ATTRIBUTE_QUERY_INSTRUMENT_STATUS = 1050003;
  NIRFSA_ATTRIBUTE_CACHE = 1050004;
  NIRFSA_ATTRIBUTE_SIMULATE = 1050005;
  NIRFSA_ATTRIBUTE_RECORD_COERCIONS = 1050006;
  NIRFSA_ATTRIBUTE_DRIVER_SETUP = 1050007;
  NIRFSA_ATTRIBUTE_INTERCHANGE_CHECK = 1050021;
  NIRFSA_ATTRIBUTE_CHANNEL_COUNT = 1050203;
  NIRFSA_ATTRIBUTE_SPECIFIC_DRIVER_PREFIX = 1050302;
  NIRFSA_ATTRIBUTE_IO_RESOURCE_DESCRIPTOR = 1050304;
  NIRFSA_ATTRIBUTE_LOGICAL_NAME = 1050305;
  NIRFSA_ATTRIBUTE_SUPPORTED_INSTRUMENT_MODELS = 1050327;
  NIRFSA_ATTRIBUTE_GROUP_CAPABILITIES = 1050401;
  NIRFSA_ATTRIBUTE_INSTRUMENT_FIRMWARE_REVISION = 1050510;
  NIRFSA_ATTRIBUTE_INSTRUMENT_MANUFACTURER = 1050511;
  NIRFSA_ATTRIBUTE_INSTRUMENT_MODEL = 1050512;
  NIRFSA_ATTRIBUTE_SPECIFIC_DRIVER_VENDOR = 1050513;
  NIRFSA_ATTRIBUTE_SPECIFIC_DRIVER_DESCRIPTION = 1050514;
  NIRFSA_ATTRIBUTE_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION = 1050515;
  NIRFSA_ATTRIBUTE_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION = 1050516;
  NIRFSA_ATTRIBUTE_SPECIFIC_DRIVER_REVISION = 1050551;
  NIRFSA_ATTRIBUTE_ACQUISITION_TYPE = 1150001;
  NIRFSA_ATTRIBUTE_CENTER_FREQUENCY = 1150002;
  NIRFSA_ATTRIBUTE_SPECTRUM_SPAN = 1150003;
  NIRFSA_ATTRIBUTE_REFERENCE_LEVEL = 1150004;
  NIRFSA_ATTRIBUTE_ATTENUATION = 1150005;
  NIRFSA_ATTRIBUTE_MIXER_LEVEL = 1150006;
  NIRFSA_ATTRIBUTE_IQ_RATE = 1150007;
  NIRFSA_ATTRIBUTE_NUMBER_OF_SAMPLES_IS_FINITE = 1150008;
  NIRFSA_ATTRIBUTE_NUMBER_OF_SAMPLES = 1150009;
  NIRFSA_ATTRIBUTE_NUMBER_OF_RECORDS_IS_FINITE = 1150010;
  NIRFSA_ATTRIBUTE_NUMBER_OF_RECORDS = 1150011;
  NIRFSA_ATTRIBUTE_POWER_SPECTRUM_UNITS = 1150012;
  NIRFSA_ATTRIBUTE_RESOLUTION_BANDWIDTH = 1150013;
  NIRFSA_ATTRIBUTE_RESOLUTION_BANDWIDTH_TYPE = 1150014;
  NIRFSA_ATTRIBUTE_SPECTRUM_NUMBER_OF_AVERAGES = 1150015;
  NIRFSA_ATTRIBUTE_SPECTRUM_AVERAGING_MODE = 1150016;
  NIRFSA_ATTRIBUTE_FFT_WINDOW_TYPE = 1150017;
  NIRFSA_ATTRIBUTE_NUMBER_OF_SPECTRAL_LINES = 1150018;
  NIRFSA_ATTRIBUTE_REF_CLOCK_SOURCE = 1150019;
  NIRFSA_ATTRIBUTE_REF_CLOCK_RATE = 1150020;
  NIRFSA_ATTRIBUTE_DIGITIZER_SAMPLE_CLOCK_TIMEBASE_SOURCE = 1150021;
  NIRFSA_ATTRIBUTE_DIGITIZER_SAMPLE_CLOCK_TIMEBASE_RATE = 1150022;
  NIRFSA_ATTRIBUTE_PXI_CHASSIS_CLK10_SOURCE = 1150023;
  NIRFSA_ATTRIBUTE_START_TRIGGER_TYPE = 1150024;
  NIRFSA_ATTRIBUTE_DIGITAL_EDGE_START_TRIGGER_SOURCE = 1150025;
  NIRFSA_ATTRIBUTE_DIGITAL_EDGE_START_TRIGGER_EDGE = 1150026;
  NIRFSA_ATTRIBUTE_EXPORTED_START_TRIGGER_OUTPUT_TERMINAL = 1150027;
  NIRFSA_ATTRIBUTE_REF_TRIGGER_TYPE = 1150028;
  NIRFSA_ATTRIBUTE_DIGITAL_EDGE_REF_TRIGGER_SOURCE = 1150029;
  NIRFSA_ATTRIBUTE_DIGITAL_EDGE_REF_TRIGGER_EDGE = 1150030;
  NIRFSA_ATTRIBUTE_EXPORTED_REF_TRIGGER_OUTPUT_TERMINAL = 1150032;
  NIRFSA_ATTRIBUTE_START_TO_REF_TRIGGER_HOLDOFF = 1150033;
  NIRFSA_ATTRIBUTE_REF_TO_REF_TRIGGER_HOLDOFF = 1150034;
  NIRFSA_ATTRIBUTE_REF_TRIGGER_PRETRIGGER_SAMPLES = 1150035;
  NIRFSA_ATTRIBUTE_ADVANCE_TRIGGER_TYPE = 1150036;
  NIRFSA_ATTRIBUTE_DIGITAL_EDGE_ADVANCE_TRIGGER_SOURCE = 1150037;
  NIRFSA_ATTRIBUTE_EXPORTED_ADVANCE_TRIGGER_OUTPUT_TERMINAL = 1150038;
  NIRFSA_ATTRIBUTE_ARM_REF_TRIGGER_TYPE = 1150039;
  NIRFSA_ATTRIBUTE_DIGITAL_EDGE_ARM_REF_TRIGGER_SOURCE = 1150040;
  NIRFSA_ATTRIBUTE_EXPORTED_READY_FOR_START_EVENT_OUTPUT_TERMINAL = 1150041;
  NIRFSA_ATTRIBUTE_EXPORTED_READY_FOR_ADVANCE_EVENT_OUTPUT_TERMINAL = 1150042;
  NIRFSA_ATTRIBUTE_EXPORTED_READY_FOR_REF_EVENT_OUTPUT_TERMINAL = 1150043;
  NIRFSA_ATTRIBUTE_EXPORTED_END_OF_RECORD_EVENT_OUTPUT_TERMINAL = 1150044;
  NIRFSA_ATTRIBUTE_FETCH_RELATIVE_TO = 1150045;
  NIRFSA_ATTRIBUTE_FETCH_OFFSET = 1150046;
  NIRFSA_ATTRIBUTE_RECORDS_DONE = 1150047;
  NIRFSA_ATTRIBUTE_DIGITAL_IF_EQUALIZATION_ENABLED = 1150048;
  NIRFSA_ATTRIBUTE_FFT_WINDOW_SIZE = 1150049;
  NIRFSA_ATTRIBUTE_FFT_SIZE = 1150050;
  NIRFSA_ATTRIBUTE_DEVICE_TEMPERATURE = 1150051;
  NIRFSA_ATTRIBUTE_SERIAL_NUMBER = 1150053;
  NIRFSA_ATTRIBUTE_EXPORTED_DONE_EVENT_OUTPUT_TERMINAL = 1150054;
  NIRFSA_ATTRIBUTE_IQ_POWER_EDGE_REF_TRIGGER_SOURCE = 1150055;
  NIRFSA_ATTRIBUTE_IQ_POWER_EDGE_REF_TRIGGER_LEVEL = 1150056;
  NIRFSA_ATTRIBUTE_IQ_POWER_EDGE_REF_TRIGGER_SLOPE = 1150057;
  NIRFSA_ATTRIBUTE_REF_TRIGGER_MINIMUM_QUIET_TIME = 1150058;
  NIRFSA_ATTRIBUTE_IQ_CARRIER_FREQUENCY = 1150059;
  NIRFSA_ATTRIBUTE_REF_TRIGGER_DELAY = 1150060;
  NIRFSA_ATTRIBUTE_TEMPERATURE_READ_INTERVAL = 1150061;
  NIRFSA_ATTRIBUTE_DOWNCONVERTER_GAIN = 1150065;
  NIRFSA_ATTRIBUTE_DOWNCONVERTER_LOOP_BANDWIDTH = 1150067;
  NIRFSA_ATTRIBUTE_LO_FREQUENCY = 1150068;
  NIRFSA_ATTRIBUTE_LO_INJECTION_SIDE = 1150069;
  NIRFSA_ATTRIBUTE_DIGITIZER_VERTICAL_RANGE = 1150070;
  NIRFSA_ATTRIBUTE_ENABLE_FRACTIONAL_RESAMPLING = 1150071;
  NIRFSA_ATTRIBUTE_EXPORTED_REF_CLOCK_OUTPUT_TERMINAL = 1150072;
  NIRFSA_ATTRIBUTE_IF_ATTENUATION = 1150074;
  NIRFSA_ATTRIBUTE_IF_FILTER = 1150075;
  NIRFSA_ATTRIBUTE_RF_ATTENUATION_INDEX = 1150076;
  NIRFSA_ATTRIBUTE_RF_ATTENUATION_TABLE = 1150077;
  NIRFSA_ATTRIBUTE_IF1_ATTEN_VALUE = 1150078;
  NIRFSA_ATTRIBUTE_IF2_ATTEN_VALUE = 1150079;
  NIRFSA_ATTRIBUTE_DIGITIZER_DITHER_ENABLED = 1150080;
  NIRFSA_ATTRIBUTE_MECHANICAL_ATTENUATOR_ENABLED = 1150081;
  NIRFSA_ATTRIBUTE_DOWNCONVERTER_CENTER_FREQUENCY = 1150082;
  NIRFSA_ATTRIBUTE_CAL_RF_PATH_SELECTION = 1150083;
  NIRFSA_ATTRIBUTE_MEMORY_SIZE = 1150085;
  NIRFSA_ATTRIBUTE_IF_OUTPUT_FREQUENCY = 1150086;
  NIRFSA_ATTRIBUTE_FREQUENCY_SETTLING_UNITS = 1150087;
  NIRFSA_ATTRIBUTE_FREQUENCY_SETTLING = 1150088;
  NIRFSA_ATTRIBUTE_LO_TEMPERATURE = 1150089;
  NIRFSA_ATTRIBUTE_DIGITIZER_TEMPERATURE = 1150090;
  NIRFSA_ATTRIBUTE_MODULE_REVISION = 1150091;
  NIRFSA_ATTRIBUTE_ACTIVE_CONFIGURATION_LIST = 1150092;
  NIRFSA_ATTRIBUTE_ACTIVE_CONFIGURATION_LIST_STEP = 1150093;
  NIRFSA_ATTRIBUTE_EXTERNAL_GAIN = 1150094;
  NIRFSA_ATTRIBUTE_CONFIGURATION_LIST_STEP_TRIGGER_SOURCE = 1150095;
  NIRFSA_ATTRIBUTE_TIMER_EVENT_INTERVAL = 1150096;
  NIRFSA_ATTRIBUTE_P2P_ENABLED = 1150097;
  NIRFSA_ATTRIBUTE_P2P_FIFO_ENDPOINT_COUNT = 1150098;
  NIRFSA_ATTRIBUTE_P2P_SAMPLES_TRANSFERRED = 1150099;
  NIRFSA_ATTRIBUTE_P2P_SAMPLES_AVAILABLE_IN_ENDPOINT = 1150100;
  NIRFSA_ATTRIBUTE_P2P_MOST_SAMPLES_AVAILABLE_IN_ENDPOINT = 1150101;
  NIRFSA_ATTRIBUTE_P2P_ENDPOINT_SIZE = 1150102;
  NIRFSA_ATTRIBUTE_P2P_ENDPOINT_OVERFLOW = 1150103;
  NIRFSA_ATTRIBUTE_DATA_TRANSFER_MAXIMUM_BANDWIDTH = 1150104;
  NIRFSA_ATTRIBUTE_DATA_TRANSFER_BLOCK_SIZE = 1150105;
  NIRFSA_ATTRIBUTE_PHASE_OFFSET = 1150106;
  NIRFSA_ATTRIBUTE_P2P_ONBOARD_MEMORY_ENABLED = 1150107;
  NIRFSA_ATTRIBUTE_CAL_IF_ATTENUATION_INDEX = 1150109;
  NIRFSA_ATTRIBUTE_CAL_RF_ELECTRONIC_ATTENUATION_INDEX = 1150110;
  NIRFSA_ATTRIBUTE_CAL_RF_MECHANICAL_ATTENUATION_INDEX = 1150111;
  NIRFSA_ATTRIBUTE_CAL_IF_FILTER_SELECTION = 1150112;
  NIRFSA_ATTRIBUTE_CAL_LO_PATH_SELECTION = 1150113;
  NIRFSA_ATTRIBUTE_CAL_LO1_ATTENUATION = 1150114;
  NIRFSA_ATTRIBUTE_CAL_LO2_ATTENUATION = 1150115;
  NIRFSA_ATTRIBUTE_CAL_LO3_ATTENUATION = 1150116;
  NIRFSA_ATTRIBUTE_READY_FOR_START_EVENT_TERMINAL_NAME = 1150117;
  NIRFSA_ATTRIBUTE_READY_FOR_ADVANCE_EVENT_TERMINAL_NAME = 1150118;
  NIRFSA_ATTRIBUTE_READY_FOR_REF_EVENT_TERMINAL_NAME = 1150119;
  NIRFSA_ATTRIBUTE_END_OF_RECORD_EVENT_TERMINAL_NAME = 1150120;
  NIRFSA_ATTRIBUTE_DONE_EVENT_TERMINAL_NAME = 1150121;
  NIRFSA_ATTRIBUTE_START_TRIGGER_TERMINAL_NAME = 1150122;
  NIRFSA_ATTRIBUTE_REF_TRIGGER_TERMINAL_NAME = 1150123;
  NIRFSA_ATTRIBUTE_ADVANCE_TRIGGER_TERMINAL_NAME = 1150124;
  NIRFSA_ATTRIBUTE_DEVICE_INSTANTANEOUS_BANDWIDTH = 1150125;
  NIRFSA_ATTRIBUTE_CONFIGURATION_LIST_STEP_IN_PROGRESS = 1150126;
  NIRFSA_ATTRIBUTE_MIXER_LEVEL_OFFSET = 1150127;
  NIRFSA_ATTRIBUTE_MECHANICAL_ATTENUATION = 1150128;
  NIRFSA_ATTRIBUTE_RF_PREAMP_ENABLED = 1150129;
  NIRFSA_ATTRIBUTE_IF_OUTPUT_POWER_LEVEL = 1150130;
  NIRFSA_ATTRIBUTE_IF_OUTPUT_POWER_LEVEL_OFFSET = 1150131;
  NIRFSA_ATTRIBUTE_DOWNCONVERTER_PRESELECTOR_ENABLED = 1150132;
  NIRFSA_ATTRIBUTE_LO_EXPORT_ENABLED = 1150134;
  NIRFSA_ATTRIBUTE_LO_YIG_MAIN_COIL_DRIVE = 1150135;
  NIRFSA_ATTRIBUTE_PRESELECTOR_PRESENT = 1150136;
  NIRFSA_ATTRIBUTE_RF_PREAMP_PRESENT = 1150137;
  NIRFSA_ATTRIBUTE_DOWNCONVERTER_CAL_TONE_MODE = 1150139;
  NIRFSA_ATTRIBUTE_DOWNCONVERTER_CAL_TONE_FREQUENCY = 1150140;
  NIRFSA_ATTRIBUTE_CAL_IF_ATTENUATION_TABLE_SELECTION = 1150141;
  NIRFSA_ATTRIBUTE_MINIMUM_ACPR = 1150142;
  NIRFSA_ATTRIBUTE_SPECTRUM_OSP_SAMPLING_RATIO = 1150144;
  NIRFSA_ATTRIBUTE_CALIBRATION_CORRECTION_THROUGH_FILTER = 1150146;
  NIRFSA_ATTRIBUTE_CALIBRATION_CORRECTION_300_KHZ_FILTER = 1150147;
  NIRFSA_ATTRIBUTE_CALIBRATION_CORRECTION_5_MHZ_FILTER = 1150148;
  NIRFSA_ATTRIBUTE_CHANNEL_COUPLING = 1150149;
  NIRFSA_ATTRIBUTE_OSP_DATA_SCALING_FACTOR = 1150151;
  NIRFSA_ATTRIBUTE_ALLOW_MORE_RECORDS_THAN_MEMORY = 1150154;
  NIRFSA_ATTRIBUTE_RF_ATTENUATION_STEP_SIZE = 1150155;
  NIRFSA_ATTRIBUTE_STEP_GAIN_ENABLED = 1150157;
  NIRFSA_ATTRIBUTE_5665_PRESELECTOR_TUNING_DAC_VALUE = 1150158;
  NIRFSA_ATTRIBUTE_DEVICE_CONFIGURATION_TEMPERATURE = 1150159;
  NIRFSA_ATTRIBUTE_SIGNAL_CONDITIONING_ENABLED = 1150160;
  NIRFSA_ATTRIBUTE_IF_CONDITIONING_DOWN_CONVERSION_ENABLED = 1150161;
  NIRFSA_ATTRIBUTE_LO_SOURCE = 1150162;
  NIRFSA_ATTRIBUTE_AMPLITUDE_SETTLING = 1150163;
  NIRFSA_ATTRIBUTE_DDC_REF_TRIGGER_OVERRIDE = 1150164;
  NIRFSA_ATTRIBUTE_MINIMUM_RECONFIG_TIME = 1150165;
  NIRFSA_ATTRIBUTE_RF_PRESELECTOR_FILTER = 1150166;
  NIRFSA_ATTRIBUTE_NOTCH_FILTER_ENABLED = 1150167;
  NIRFSA_ATTRIBUTE_CAL_TONE_STEP_ATTENUATION = 1150168;
  NIRFSA_ATTRIBUTE_FFT_WIDTH = 1150169;
  NIRFSA_ATTRIBUTE_INPUT_ISOLATION_ENABLED = 1150170;
  NIRFSA_ATTRIBUTE_CONTIGUOUS_MULTIRECORD = 1150172;
  NIRFSA_ATTRIBUTE_TIMER_START_SOURCE = 1150173;
  NIRFSA_ATTRIBUTE_CAL_TONE_POWER_REFERRED_TO_RF_IN = 1150174;
  NIRFSA_ATTRIBUTE_START_TRIGGER_DELAY = 1150175;
  NIRFSA_ATTRIBUTE_SYNC_START_TRIGGER_MASTER = 1150176;
  NIRFSA_ATTRIBUTE_SYNC_START_TRIGGER_DIST_LINE = 1150177;
  NIRFSA_ATTRIBUTE_SYNC_REF_TRIGGER_MASTER = 1150178;
  NIRFSA_ATTRIBUTE_SYNC_REF_TRIGGER_DIST_LINE = 1150179;
  NIRFSA_ATTRIBUTE_INPUT_PORT = 1150180;
  NIRFSA_ATTRIBUTE_IQ_IN_PORT_CARRIER_FREQUENCY = 1150181;
  NIRFSA_ATTRIBUTE_IQ_IN_PORT_TERMINAL_CONFIGURATION = 1150182;
  NIRFSA_ATTRIBUTE_IQ_IN_PORT_VERTICAL_RANGE = 1150183;
  NIRFSA_ATTRIBUTE_SYNC_ADVANCE_TRIGGER_MASTER = 1150184;
  NIRFSA_ATTRIBUTE_SYNC_ADVANCE_TRIGGER_DIST_LINE = 1150185;
  NIRFSA_ATTRIBUTE_LO_IN_POWER = 1150186;
  NIRFSA_ATTRIBUTE_LO_PLL_FRACTIONAL_MODE_ENABLED = 1150187;
  NIRFSA_ATTRIBUTE_LO_FREQUENCY_STEP_SIZE = 1150188;
  NIRFSA_ATTRIBUTE_SYNC_REF_TRIGGER_DELAY_ENABLED = 1150189;
  NIRFSA_ATTRIBUTE_DECIMATION_DELAY = 1150191;
  NIRFSA_ATTRIBUTE_IQ_ANALOG_EDGE_REF_TRIGGER_SOURCE = 1150192;
  NIRFSA_ATTRIBUTE_IQ_ANALOG_EDGE_REF_TRIGGER_SLOPE = 1150193;
  NIRFSA_ATTRIBUTE_IQ_ANALOG_EDGE_REF_TRIGGER_LEVEL = 1150194;
  NIRFSA_ATTRIBUTE_IQ_ANALOG_EDGE_REF_TRIGGER_HYSTERESIS = 1150195;
  NIRFSA_ATTRIBUTE_REF_TRIGGER_OSP_DELAY_ENABLED = 1150196;
  NIRFSA_ATTRIBUTE_DOWNCONVERTER_FREQUENCY_OFFSET = 1150203;
  NIRFSA_ATTRIBUTE_IQ_IN_PORT_TEMPERATURE = 1150204;
  NIRFSA_ATTRIBUTE_IF_FILTER_BANDWIDTH = 1150205;
  NIRFSA_ATTRIBUTE_FFT_WINDOW_SHAPE_FACTOR = 1150206;
  NIRFSA_ATTRIBUTE_LOW_FREQUENCY_BYPASS_ENABLED = 1150207;
  NIRFSA_ATTRIBUTE_RF_CONDITIONING_CAL_TONE_MODE = 1150208;
  NIRFSA_ATTRIBUTE_RF_CONDITIONING_CAL_TONE_FREQUENCY = 1150209;
  NIRFSA_ATTRIBUTE_IF_CONDITIONING_TEMPERATURE = 1150210;
  NIRFSA_ATTRIBUTE_RF_CONDITIONING_TEMPERATURE = 1150211;
  NIRFSA_ATTRIBUTE_CAL_RF_LOWBAND_SIGNAL_CONDITIONING_PATH_SELECTION = 1150215;
  NIRFSA_ATTRIBUTE_CAL_IF_ATTENUATION_TABLE_SIZE = 1150216;
  NIRFSA_ATTRIBUTE_SYNC_SAMPLE_CLOCK_MASTER = 1150217;
  NIRFSA_ATTRIBUTE_SYNC_SAMPLE_CLOCK_DIST_LINE = 1150218;
  NIRFSA_ATTRIBUTE_SMOOTH_SPECTRUM_ENABLED = 1150219;
  NIRFSA_ATTRIBUTE_RF_HIGH_PASS_FILTERING = 1150220;
  NIRFSA_ATTRIBUTE_FPGA_BITFILE_PATH = 1150221;
  NIRFSA_ATTRIBUTE_NOISE_SOURCE_POWER_ENABLED = 1150222;
  NIRFSA_ATTRIBUTE_CALIBRATION_CORRECTION_100_MHZ_FILTER = 1150223;
  NIRFSA_ATTRIBUTE_CALIBRATION_CORRECTION_320_MHZ_FILTER = 1150224;
  NIRFSA_ATTRIBUTE_CALIBRATION_CORRECTION_765_MHZ_FILTER = 1150225;
  NIRFSA_ATTRIBUTE_CAL_DIGITIZER_ID = 1150226;
  NIRFSA_ATTRIBUTE_DIGITIZER_SAMPLE_CLOCK_RATE = 1150228;
  NIRFSA_ATTRIBUTE_EXPORTED_DIGITIZER_SAMPLE_CLOCK_OUTPUT_TERMINAL = 1150229;
  NIRFSA_ATTRIBUTE_FPGA_TARGET_NAME = 1150233;
  NIRFSA_ATTRIBUTE_SUBSPAN_OVERLAP = 1150234;
  NIRFSA_ATTRIBUTE_LO2_EXPORT_ENABLED = 1150235;
  NIRFSA_ATTRIBUTE_MAX_DEVICE_INSTANTANEOUS_BANDWIDTH = 1150236;
  NIRFSA_ATTRIBUTE_MAX_IQ_RATE = 1150237;
  NIRFSA_ATTRIBUTE_LO_OUT_POWER = 1150246;
  NIRFSA_ATTRIBUTE_FPGA_TEMPERATURE = 1150254;
  NIRFSA_ATTRIBUTE_MODULE_POWER_CONSUMPTION = 1150255;
  NIRFSA_ATTRIBUTE_ALLOW_OUT_OF_SPECIFICATION_USER_SETTINGS = 1150256;
  NIRFSA_ATTRIBUTE_ABSOLUTE_DELAY = 1150266;
  NIRFSA_ATTRIBUTE_SIGNAL_BANDWIDTH = 1150267;
  NIRFSA_ATTRIBUTE_COMMON_MODE = 1150269;
  NIRFSA_ATTRIBUTE_OVERFLOW_ERROR_REPORTING = 1150271;
  NIRFSA_ATTRIBUTE_HOST_DMA_BUFFER_SIZE = 1150285;
  NIRFSA_ATTRIBUTE_SELECTED_PORTS = 1150297;
  NIRFSA_ATTRIBUTE_RF_OUT_LO_EXPORT_ENABLED = 1150298;
  NIRFSA_ATTRIBUTE_LO_OUT_EXPORT_CONFIGURE_FROM_RFSG = 1150299;
  NIRFSA_ATTRIBUTE_THERMAL_CORRECTION_TEMPERATURE_RESOLUTION = 1150300;
  NIRFSA_ATTRIBUTE_DIGITAL_GAIN = 1150301;
  NIRFSA_ATTRIBUTE_DOWNCONVERTER_FREQUENCY_OFFSET_MODE = 1150305;
  NIRFSA_ATTRIBUTE_AVAILABLE_PORTS = 1150306;
  NIRFSA_ATTRIBUTE_DEEMBEDDING_TYPE = 1150307;
  NIRFSA_ATTRIBUTE_DEEMBEDDING_SELECTED_TABLE = 1150308;
  NIRFSA_ATTRIBUTE_REFERENCE_LEVEL_HEADROOM = 1150309;
  NIRFSA_ATTRIBUTE_LO_VCO_FREQUENCY_STEP_SIZE = 1150312;
  NIRFSA_ATTRIBUTE_THERMAL_CORRECTION_HEADROOM_RANGE = 1150316;
  NIRFSA_ATTRIBUTE_USER_SOURCE_PULSE_WIDTH_UNITS = 1150321;
  NIRFSA_ATTRIBUTE_USER_SOURCE_PULSE_WIDTH = 1150322;
  NIRFSA_ATTRIBUTE_FIXED_GROUP_DELAY_ACROSS_PORTS = 1150324;
  NIRFSA_ATTRIBUTE_DEEMBEDDING_COMPENSATION_GAIN = 1150325;
}

enum AcquisitionType {
  ACQUISITION_TYPE_UNSPECIFIED = 0;
  ACQUISITION_TYPE_IQ = 100;
  ACQUISITION_TYPE_SPECTRUM = 101;
}

enum AnalogSlope {
  ANALOG_SLOPE_UNSPECIFIED = 0;
  ANALOG_SLOPE_RISING_SLOPE = 1000;
  ANALOG_SLOPE_FALLING_SLOPE = 1001;
}

enum DeviceResponse {
  DEVICE_RESPONSE_UNSPECIFIED = 0;
  DEVICE_RESPONSE_DOWNCONVERTER_IF_RESPONSE = 2800;
  DEVICE_RESPONSE_DOWNCONVERTER_RF_RESPONSE = 2801;
  DEVICE_RESPONSE_DOWNCONVERTER_COMBINED_RESPONSE = 2802;
  DEVICE_RESPONSE_VSA_IF_RESPONSE = 2803;
  DEVICE_RESPONSE_VSA_COMBINED_RESPONSE = 2804;
}

enum DigitalEdge {
  DIGITAL_EDGE_UNSPECIFIED = 0;
  DIGITAL_EDGE_RISING_EDGE = 900;
  DIGITAL_EDGE_FALLING_EDGE = 901;
}

enum DigitalEdgeTriggerSource {
  DIGITAL_EDGE_TRIGGER_SOURCE_UNSPECIFIED = 0;
  DIGITAL_EDGE_TRIGGER_SOURCE_PFI0 = 1;
  DIGITAL_EDGE_TRIGGER_SOURCE_PFI1 = 2;
  DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG0 = 3;
  DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG1 = 4;
  DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG2 = 5;
  DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG3 = 6;
  DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG4 = 7;
  DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG5 = 8;
  DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG6 = 9;
  DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG7 = 10;
  DIGITAL_EDGE_TRIGGER_SOURCE_PXI_STAR = 11;
  DIGITAL_EDGE_TRIGGER_SOURCE_RTSI0 = 12;
  DIGITAL_EDGE_TRIGGER_SOURCE_RTSI1 = 13;
  DIGITAL_EDGE_TRIGGER_SOURCE_RTSI2 = 14;
  DIGITAL_EDGE_TRIGGER_SOURCE_RTSI3 = 15;
  DIGITAL_EDGE_TRIGGER_SOURCE_RTSI4 = 16;
  DIGITAL_EDGE_TRIGGER_SOURCE_RTSI5 = 17;
  DIGITAL_EDGE_TRIGGER_SOURCE_RTSI6 = 18;
  DIGITAL_EDGE_TRIGGER_SOURCE_RTSI7 = 19;
  DIGITAL_EDGE_TRIGGER_SOURCE_TIMER_EVENT = 20;
}

enum ExportTerminal {
  EXPORT_TERMINAL_UNSPECIFIED = 0;
  EXPORT_TERMINAL_DO_NOT_EXPORT = 1;
  EXPORT_TERMINAL_PFI0 = 2;
  EXPORT_TERMINAL_PFI1 = 3;
  EXPORT_TERMINAL_PXI_TRIG0 = 4;
  EXPORT_TERMINAL_PXI_TRIG1 = 5;
  EXPORT_TERMINAL_PXI_TRIG2 = 6;
  EXPORT_TERMINAL_PXI_TRIG3 = 7;
  EXPORT_TERMINAL_PXI_TRIG4 = 8;
  EXPORT_TERMINAL_PXI_TRIG5 = 9;
  EXPORT_TERMINAL_PXI_TRIG6 = 10;
  EXPORT_TERMINAL_PXI_TRIG7 = 11;
  EXPORT_TERMINAL_PXI_STAR = 12;
  EXPORT_TERMINAL_PXIE_DSTARC = 13;
  EXPORT_TERMINAL_REF_OUT = 14;
  EXPORT_TERMINAL_REF_OUT2 = 15;
  EXPORT_TERMINAL_CLK_OUT = 16;
}

enum LinearInterpolationFormat {
  LINEAR_INTERPOLATION_FORMAT_UNSPECIFIED = 0;
  LINEAR_INTERPOLATION_FORMAT_REAL_AND_IMAGINARY = 4000;
  LINEAR_INTERPOLATION_FORMAT_MAGNITUDE_AND_PHASE = 4001;
  LINEAR_INTERPOLATION_FORMAT_MAGNITUDE_DB_AND_PHASE = 4002;
}

enum PxiChassisClk10Source {
  PXI_CHASSIS_CLK10_SOURCE_UNSPECIFIED = 0;
  PXI_CHASSIS_CLK10_SOURCE_NONE = 1;
  PXI_CHASSIS_CLK10_SOURCE_ONBOARD_CLOCK = 2;
  PXI_CHASSIS_CLK10_SOURCE_REF_IN = 3;
}

enum RefClockSource {
  REF_CLOCK_SOURCE_UNSPECIFIED = 0;
  REF_CLOCK_SOURCE_NONE = 1;
  REF_CLOCK_SOURCE_ONBOARD_CLOCK = 2;
  REF_CLOCK_SOURCE_REF_IN = 3;
  REF_CLOCK_SOURCE_PXI_CLK = 4;
  REF_CLOCK_SOURCE_CLK_IN = 5;
  REF_CLOCK_SOURCE_REF_IN_2 = 6;
  REF_CLOCK_SOURCE_PXI_CLK_MASTER = 7;
}

enum ResetWithOptionsStepsToOmit {
  RESET_WITH_OPTIONS_STEPS_TO_OMIT_NONE = 0;
  RESET_WITH_OPTIONS_STEPS_TO_OMIT_ROUTES = 1;
  RESET_WITH_OPTIONS_STEPS_TO_OMIT_DEEMBEDDING_TABLES = 2;
}

enum SelfCalibrateSteps {
  SELF_CALIBRATE_STEPS_NONE = 0;
  SELF_CALIBRATE_STEPS_ALIGNMENT = 1;
  SELF_CALIBRATE_STEPS_GAIN_REFERENCE = 2;
  SELF_CALIBRATE_STEPS_IF_FLATNESS = 4;
  SELF_CALIBRATE_STEPS_DIGITIZER_SELF_CAL = 8;
  SELF_CALIBRATE_STEPS_LO_SELF_CAL = 16;
  SELF_CALIBRATE_STEPS_AMPLITUDE_ACCURACY = 32;
  SELF_CALIBRATE_STEPS_RESIDUAL_LO_POWER = 64;
  SELF_CALIBRATE_STEPS_IMAGE_SUPPRESSION = 128;
  SELF_CALIBRATE_STEPS_SYNTHESIZER_ALIGNMENT = 256;
  SELF_CALIBRATE_STEPS_DC_OFFSET = 512;
}

enum Signal {
  SIGNAL_UNSPECIFIED = 0;
  SIGNAL_START_TRIGGER = 1100;
  SIGNAL_REF_TRIGGER = 702;
  SIGNAL_ADVANCE_TRIGGER = 1102;
  SIGNAL_ARM_REF_TRIGGER = 1103;
  SIGNAL_READY_FOR_START_EVENT = 1200;
  SIGNAL_READY_FOR_REF_EVENT = 1201;
  SIGNAL_READY_FOR_ADVANCE_EVENT = 1202;
  SIGNAL_END_OF_RECORD_EVENT = 1203;
  SIGNAL_DONE_EVENT = 1204;
  SIGNAL_REF_CLOCK = 1205;
  SIGNAL_USER = 1206;
}

enum SparameterOrientation {
  SPARAMETER_ORIENTATION_UNSPECIFIED = 0;
  SPARAMETER_ORIENTATION_PORT1_TOWARDS_DUT = 3800;
  SPARAMETER_ORIENTATION_PORT2_TOWARDS_DUT = 3801;
}

enum NiRFSAInt32AttributeValues {
  option allow_alias = true;
  NIRFSA_INT32_UNSPECIFIED = 0;
  NIRFSA_INT32_ACQUISITION_TYPE_IQ = 100;
  NIRFSA_INT32_ACQUISITION_TYPE_SPECTRUM = 101;
  NIRFSA_INT32_ANALOG_SLOPE_RISING_SLOPE = 1000;
  NIRFSA_INT32_ANALOG_SLOPE_FALLING_SLOPE = 1001;
  NIRFSA_INT32_AVERAGING_MODE_NO_AVERAGING = 400;
  NIRFSA_INT32_AVERAGING_MODE_RMS_AVERAGING = 401;
  NIRFSA_INT32_AVERAGING_MODE_VECTOR_AVERAGING = 402;
  NIRFSA_INT32_AVERAGING_MODE_PEAK_HOLD_AVERAGING = 403;
  NIRFSA_INT32_AVERAGING_MODE_MIN_HOLD_AVERAGING = 404;
  NIRFSA_INT32_AVERAGING_MODE_SCALAR_AVERAGING = 405;
  NIRFSA_INT32_AVERAGING_MODE_LOG_AVERAGING = 406;
  NIRFSA_INT32_BANDWIDTH_TYPE_RBW_3_DB = 300;
  NIRFSA_INT32_BANDWIDTH_TYPE_RBW_6_DB = 301;
  NIRFSA_INT32_BANDWIDTH_TYPE_RBW_BIN_WIDTH = 302;
  NIRFSA_INT32_BANDWIDTH_TYPE_RBW_ENBW = 303;
  NIRFSA_INT32_CAL_IF_ATTEN_TABLE_SELECTION_EXT_CAL_IF_ATTENUATION_TABLE_STANDARD = 2900;
  NIRFSA_INT32_CAL_IF_ATTEN_TABLE_SELECTION_EXT_CAL_IF_ATTENUATION_TABLE_ACPR = 2901;
  NIRFSA_INT32_CAL_IF_FILTER_SELECTION_EXT_CAL_IF_FILTER_PATH_1 = 2100;
  NIRFSA_INT32_CAL_IF_FILTER_SELECTION_EXT_CAL_IF_FILTER_PATH_2 = 2101;
  NIRFSA_INT32_CAL_IF_FILTER_SELECTION_EXT_CAL_IF_FILTER_PATH_3 = 2102;
  NIRFSA_INT32_CAL_IF_FILTER_SELECTION_EXT_CAL_IF_FILTER_PATH_4 = 2103;
  NIRFSA_INT32_CAL_IF_FILTER_SELECTION_EXT_CAL_IF_FILTER_PATH_5 = 2104;
  NIRFSA_INT32_CAL_IF_FILTER_SELECTION_EXT_CAL_IF_FILTER_PATH_6 = 2105;
  NIRFSA_INT32_CAL_IF_FILTER_SELECTION_EXT_CAL_IF_FILTER_PATH_7 = 2106;
  NIRFSA_INT32_CAL_IF_FILTER_SELECTION_EXT_CAL_IF_FILTER_PATH_8 = 2107;
  NIRFSA_INT32_CAL_IF_FILTER_SELECTION_EXT_CAL_IF_FILTER_PATH_9 = 2108;
  NIRFSA_INT32_CAL_IF_FILTER_SELECTION_EXT_CAL_IF_FILTER_PATH_10 = 2109;
  NIRFSA_INT32_CAL_IF_FILTER_SELECTION_EXT_CAL_IF_FILTER_PATH_11 = 2110;
  NIRFSA_INT32_CAL_TONE_MODE_DISABLED = 2700;
  NIRFSA_INT32_CAL_TONE_MODE_LOWBAND_RF = 2701;
  NIRFSA_INT32_CAL_TONE_MODE_HIGHBAND_RF = 2702;
  NIRFSA_INT32_CAL_TONE_MODE_HIGHBAND_IF = 2703;
  NIRFSA_INT32_CAL_TONE_MODE_LOWBAND_RF_WITHOUT_ALC = 2704;
  NIRFSA_INT32_CAL_TONE_MODE_COMB_GENERATOR = 2705;
  NIRFSA_INT32_CHANNEL_COUPLING_AC = 3001;
  NIRFSA_INT32_CHANNEL_COUPLING_DC = 3002;
  NIRFSA_INT32_CONDITIONING_CAL_TONE_MODE_DISABLED = 2700;
  NIRFSA_INT32_CONDITIONING_CAL_TONE_MODE_LOWBAND_RF = 2701;
  NIRFSA_INT32_CONDITIONING_CAL_TONE_MODE_HIGHBAND_RF = 2702;
  NIRFSA_INT32_DEEMBEDDING_TYPE_NONE = 3900;
  NIRFSA_INT32_DEEMBEDDING_TYPE_SCALAR = 3901;
  NIRFSA_INT32_DEEMBEDDING_TYPE_VECTOR = 3902;
  NIRFSA_INT32_DIGITAL_EDGE_RISING_EDGE = 900;
  NIRFSA_INT32_DIGITAL_EDGE_FALLING_EDGE = 901;
  NIRFSA_INT32_DOWNCONVERTER_FREQUENCY_OFFSET_MODE_AUTOMATIC = 1903;
  NIRFSA_INT32_DOWNCONVERTER_FREQUENCY_OFFSET_MODE_ENABLED = 1901;
  NIRFSA_INT32_DOWNCONVERTER_FREQUENCY_OFFSET_MODE_USER_DEFINED = 1904;
  NIRFSA_INT32_DOWNCONVERTER_PRESELECTOR_ENABLED_ATTR_DISABLED = 2600;
  NIRFSA_INT32_DOWNCONVERTER_PRESELECTOR_ENABLED_ATTR_ENABLED_WHEN_IN_SIGNAL_PATH = 2601;
  NIRFSA_INT32_DOWNCONVERTER_PRESELECTOR_ENABLED_ATTR_ENABLED = 2602;
  NIRFSA_INT32_ENABLED_ATTR_DISABLED = 1900;
  NIRFSA_INT32_ENABLED_ATTR_ENABLED = 1901;
  NIRFSA_INT32_FETCH_RELATIVE_TO_MOST_RECENT_SAMPLE = 700;
  NIRFSA_INT32_FETCH_RELATIVE_TO_FIRST_SAMPLE = 701;
  NIRFSA_INT32_FETCH_RELATIVE_TO_REF_TRIGGER = 702;
  NIRFSA_INT32_FETCH_RELATIVE_TO_FIRST_PRETRIGGER_SAMPLE = 703;
  NIRFSA_INT32_FETCH_RELATIVE_TO_CURRENT_READ_POSITION = 704;
  NIRFSA_INT32_FFT_WINDOW_TYPE_UNIFORM = 500;
  NIRFSA_INT32_FFT_WINDOW_TYPE_HANNING = 501;
  NIRFSA_INT32_FFT_WINDOW_TYPE_HAMMING = 502;
  NIRFSA_INT32_FFT_WINDOW_TYPE_BLACKMAN_HARRIS = 503;
  NIRFSA_INT32_FFT_WINDOW_TYPE_EXACT_BLACKMAN = 504;
  NIRFSA_INT32_FFT_WINDOW_TYPE_BLACKMAN = 505;
  NIRFSA_INT32_FFT_WINDOW_TYPE_FLAT_TOP = 506;
  NIRFSA_INT32_FFT_WINDOW_TYPE_4_TERM_BLACKMAN_HARRIS = 507;
  NIRFSA_INT32_FFT_WINDOW_TYPE_7_TERM_BLACKMAN_HARRIS = 508;
  NIRFSA_INT32_FFT_WINDOW_TYPE_LOW_SIDE_LOBE = 509;
  NIRFSA_INT32_FFT_WINDOW_TYPE_GAUSSIAN = 510;
  NIRFSA_INT32_FFT_WINDOW_TYPE_KAISER_BESSEL = 511;
  NIRFSA_INT32_FREQUENCY_SETTLING_UNITS_PPM = 2000;
  NIRFSA_INT32_FREQUENCY_SETTLING_UNITS_SECONDS_AFTER_LOCK = 2001;
  NIRFSA_INT32_FREQUENCY_SETTLING_UNITS_SECONDS_AFTER_IO = 2002;
  NIRFSA_INT32_GENERAL_TRIGGER_TYPE_NONE = 600;
  NIRFSA_INT32_GENERAL_TRIGGER_TYPE_DIGITAL_EDGE = 601;
  NIRFSA_INT32_GENERAL_TRIGGER_TYPE_SOFTWARE_EDGE = 604;
  NIRFSA_INT32_IF_FILTER_187_5_MHZ_WIDE = 1400;
  NIRFSA_INT32_IF_FILTER_187_5_MHZ_NARROW = 1401;
  NIRFSA_INT32_IF_FILTER_53_MHZ = 1402;
  NIRFSA_INT32_IF_FILTER_BYPASS = 1403;
  NIRFSA_INT32_INPUT_PORT_RF_IN = 2000;
  NIRFSA_INT32_INPUT_PORT_IQ_IN = 2001;
  NIRFSA_INT32_INPUT_PORT_CAL_IN = 2002;
  NIRFSA_INT32_INPUT_PORT_I_ONLY = 2003;
  NIRFSA_INT32_IQ_IN_PORT_TERM_CONFIG_DIFFERENTIAL = 2100;
  NIRFSA_INT32_IQ_IN_PORT_TERM_CONFIG_SINGLE_ENDED = 2101;
  NIRFSA_INT32_LO_INJECTION_SIDE_VALUES_HIGH_SIDE = 1300;
  NIRFSA_INT32_LO_INJECTION_SIDE_VALUES_LOW_SIDE = 1301;
  NIRFSA_INT32_LO_PATH_SELECTION_EXT_CAL_LO_PATH_1 = 2300;
  NIRFSA_INT32_LO_PATH_SELECTION_EXT_CAL_LO_PATH_2 = 2301;
  NIRFSA_INT32_LO_PATH_SELECTION_EXT_CAL_LO_PATH_3 = 2302;
  NIRFSA_INT32_LO_PATH_SELECTION_EXT_CAL_LO_PATH_4 = 2303;
  NIRFSA_INT32_LO_PATH_SELECTION_EXT_CAL_LO_PATH_5 = 2304;
  NIRFSA_INT32_LO_YIG_MAIN_COIL_DRIVE_NORMAL = 2400;
  NIRFSA_INT32_LO_YIG_MAIN_COIL_DRIVE_FAST = 2401;
  NIRFSA_INT32_LOOP_BANDWIDTH_NARROW = 800;
  NIRFSA_INT32_LOOP_BANDWIDTH_MEDIUM = 801;
  NIRFSA_INT32_LOOP_BANDWIDTH_WIDE = 802;
  NIRFSA_INT32_NOTCH_FILTER_ENABLED_DISABLED = 3400;
  NIRFSA_INT32_NOTCH_FILTER_ENABLED_ENABLED_WHEN_IN_SIGNAL_PATH = 3401;
  NIRFSA_INT32_NOTCH_FILTER_ENABLED_ENABLED = 3402;
  NIRFSA_INT32_OVERFLOW_ERROR_REPORTING_WARNING = 1301;
  NIRFSA_INT32_OVERFLOW_ERROR_REPORTING_DISABLED = 1302;
  NIRFSA_INT32_POWER_SPECTRUM_UNITS_DBM = 200;
  NIRFSA_INT32_POWER_SPECTRUM_UNITS_VOLTS_SQUARED = 201;
  NIRFSA_INT32_POWER_SPECTRUM_UNITS_DBMV = 202;
  NIRFSA_INT32_POWER_SPECTRUM_UNITS_DBUV = 203;
  NIRFSA_INT32_POWER_SPECTRUM_UNITS_VOLTS = 204;
  NIRFSA_INT32_POWER_SPECTRUM_UNITS_WATTS = 205;
  NIRFSA_INT32_PULSE_WIDTH_UNIT_TYPE_SECONDS = 6200;
  NIRFSA_INT32_PULSE_WIDTH_UNIT_TYPE_CLOCK_PERIODS = 6201;
  NIRFSA_INT32_REF_TRIGGER_TYPE_NONE = 600;
  NIRFSA_INT32_REF_TRIGGER_TYPE_DIGITAL_EDGE = 601;
  NIRFSA_INT32_REF_TRIGGER_TYPE_IQ_POWER_EDGE = 603;
  NIRFSA_INT32_REF_TRIGGER_TYPE_SOFTWARE_EDGE = 604;
  NIRFSA_INT32_REF_TRIGGER_TYPE_IQ_ANALOG_EDGE = 605;
  NIRFSA_INT32_RF_LB_SIG_COND_PATH_SEL_EXT_CAL_RF_LOWBAND_SIGNAL_CONDITIONING_PATH_1 = 3700;
  NIRFSA_INT32_RF_LB_SIG_COND_PATH_SEL_EXT_CAL_RF_LOWBAND_SIGNAL_CONDITIONING_PATH_2 = 3701;
  NIRFSA_INT32_RF_LB_SIG_COND_PATH_SEL_EXT_CAL_RF_LOWBAND_SIGNAL_CONDITIONING_PATH_3 = 3702;
  NIRFSA_INT32_RF_LB_SIG_COND_PATH_SEL_EXT_CAL_RF_LOWBAND_SIGNAL_CONDITIONING_PATH_4 = 3703;
  NIRFSA_INT32_RF_LB_SIG_COND_PATH_SEL_EXT_CAL_RF_LOWBAND_SIGNAL_CONDITIONING_PATH_5 = 3704;
  NIRFSA_INT32_RF_PATH_SELECTION_EXT_CAL_RF_BAND_1 = 1700;
  NIRFSA_INT32_RF_PATH_SELECTION_EXT_CAL_RF_BAND_2 = 1701;
  NIRFSA_INT32_RF_PATH_SELECTION_EXT_CAL_RF_BAND_3 = 1702;
  NIRFSA_INT32_RF_PATH_SELECTION_EXT_CAL_RF_BAND_4 = 1703;
  NIRFSA_INT32_RF_PREAMP_ENABLED_DISABLED = 2500;
  NIRFSA_INT32_RF_PREAMP_ENABLED_ENABLED_WHEN_IN_SIGNAL_PATH = 2501;
  NIRFSA_INT32_RF_PREAMP_ENABLED_ENABLED = 2502;
  NIRFSA_INT32_RF_PREAMP_ENABLED_AUTOMATIC = 2503;
  NIRFSA_INT32_RF_PRESELECTOR_FILTER_FILTER_PATH_NONE = 3300;
  NIRFSA_INT32_RF_PRESELECTOR_FILTER_FILTER_PATH_1 = 3301;
  NIRFSA_INT32_RF_PRESELECTOR_FILTER_FILTER_PATH_2 = 3302;
  NIRFSA_INT32_RF_PRESELECTOR_FILTER_FILTER_PATH_3 = 3303;
  NIRFSA_INT32_RF_PRESELECTOR_FILTER_FILTER_PATH_4 = 3304;
  NIRFSA_INT32_RF_PRESELECTOR_FILTER_FILTER_PATH_5 = 3305;
  NIRFSA_INT32_RF_PRESELECTOR_FILTER_FILTER_PATH_6 = 3306;
  NIRFSA_INT32_RF_PRESELECTOR_FILTER_FILTER_PATH_7 = 3307;
  NIRFSA_INT32_RF_PRESELECTOR_FILTER_FILTER_PATH_8 = 3308;
  NIRFSA_INT32_RF_PRESELECTOR_FILTER_FILTER_PATH_9 = 3309;
  NIRFSA_INT32_RF_PRESELECTOR_FILTER_FILTER_PATH_10 = 3310;
  NIRFSA_INT32_RF_PRESELECTOR_FILTER_FILTER_PATH_11 = 3311;
  NIRFSA_INT32_RF_PRESELECTOR_FILTER_FILTER_PATH_12 = 3312;
  NIRFSA_INT32_RF_PRESELECTOR_FILTER_FILTER_PATH_13 = 3313;
  NIRFSA_INT32_RF_PRESELECTOR_FILTER_FILTER_PATH_14 = 3314;
  NIRFSA_INT32_RF_PRESELECTOR_FILTER_FILTER_PATH_15 = 3315;
  NIRFSA_INT32_RF_PRESELECTOR_FILTER_FILTER_PATH_16 = 3316;
  NIRFSA_INT32_RF_PRESELECTOR_FILTER_FILTER_PATH_EXTERNAL_FILTER = 3317;
  NIRFSA_INT32_SIGNAL_CONDITIONING_ENABLED_ENABLED = 3600;
  NIRFSA_INT32_SIGNAL_CONDITIONING_ENABLED_BYPASSED = 3601;
  NIRFSA_INT32_STEP_GAIN_ENABLED_DISABLED = 3200;
  NIRFSA_INT32_STEP_GAIN_ENABLED_ENABLED = 3201;
  NIRFSA_INT32_UNSPECIFIED_ATTR_DISABLED = 1900;
  NIRFSA_INT32_UNSPECIFIED_ATTR_ENABLED = 1901;
  NIRFSA_INT32_UNSPECIFIED_ATTR_UNSPECIFIED = 1902;
}

enum NiRFSAStringAttributeValuesMapped {
  NIRFSA_STRING_MAPPED_UNSPECIFIED = 0;
  NIRFSA_STRING_DIGITIZER_SAMPLE_CLOCK_OUT_TERMINAL_NONE = 1;
  NIRFSA_STRING_DIGITIZER_SAMPLE_CLOCK_OUT_TERMINAL_CLK_OUT = 2;
  NIRFSA_STRING_DIGITIZER_SAMPLE_CLOCK_TIMEBASE_SOURCE_ONBOARD_CLOCK = 3;
  NIRFSA_STRING_DIGITIZER_SAMPLE_CLOCK_TIMEBASE_SOURCE_CLK_IN = 4;
  NIRFSA_STRING_DIGITIZER_SAMPLE_CLOCK_TIMEBASE_SOURCE_LO_REF_CLK = 5;
  NIRFSA_STRING_DIGITIZER_SAMPLE_CLOCK_TIMEBASE_SOURCE_PXI_STAR = 6;
  NIRFSA_STRING_EXPORT_TERMINAL_DO_NOT_EXPORT = 7;
  NIRFSA_STRING_EXPORT_TERMINAL_PFI0 = 8;
  NIRFSA_STRING_EXPORT_TERMINAL_PFI1 = 9;
  NIRFSA_STRING_EXPORT_TERMINAL_PXI_TRIG0 = 10;
  NIRFSA_STRING_EXPORT_TERMINAL_PXI_TRIG1 = 11;
  NIRFSA_STRING_EXPORT_TERMINAL_PXI_TRIG2 = 12;
  NIRFSA_STRING_EXPORT_TERMINAL_PXI_TRIG3 = 13;
  NIRFSA_STRING_EXPORT_TERMINAL_PXI_TRIG4 = 14;
  NIRFSA_STRING_EXPORT_TERMINAL_PXI_TRIG5 = 15;
  NIRFSA_STRING_EXPORT_TERMINAL_PXI_TRIG6 = 16;
  NIRFSA_STRING_EXPORT_TERMINAL_PXI_TRIG7 = 17;
  NIRFSA_STRING_EXPORT_TERMINAL_PXI_STAR = 18;
  NIRFSA_STRING_EXPORT_TERMINAL_PXIE_DSTARC = 19;
  NIRFSA_STRING_EXPORT_TERMINAL_REF_OUT = 20;
  NIRFSA_STRING_EXPORT_TERMINAL_REF_OUT2 = 21;
  NIRFSA_STRING_EXPORT_TERMINAL_CLK_OUT = 22;
  NIRFSA_STRING_LO_SOURCE_SELECTION_ONBOARD = 23;
  NIRFSA_STRING_LO_SOURCE_SELECTION_LO_IN = 24;
  NIRFSA_STRING_LO_SOURCE_SELECTION_LO_SOURCE_SECONDARY = 25;
  NIRFSA_STRING_LO_SOURCE_SELECTION_LO_SOURCE_SG_SA_SHARED = 26;
  NIRFSA_STRING_PXI_CHASSIS_CLK10_SOURCE_NONE = 27;
  NIRFSA_STRING_PXI_CHASSIS_CLK10_SOURCE_ONBOARD_CLOCK = 28;
  NIRFSA_STRING_PXI_CHASSIS_CLK10_SOURCE_REF_IN = 29;
  NIRFSA_STRING_REF_CLOCK_OUT_TERMINAL_NONE = 30;
  NIRFSA_STRING_REF_CLOCK_OUT_TERMINAL_REF_OUT = 31;
  NIRFSA_STRING_REF_CLOCK_OUT_TERMINAL_REF_OUT2 = 32;
  NIRFSA_STRING_REF_CLOCK_OUT_TERMINAL_CLK_OUT = 33;
  NIRFSA_STRING_REF_CLOCK_OUT_TERMINAL_IF_COND_REF_OUT = 34;
  NIRFSA_STRING_REF_CLOCK_SOURCE_NONE = 35;
  NIRFSA_STRING_REF_CLOCK_SOURCE_ONBOARD_CLOCK = 36;
  NIRFSA_STRING_REF_CLOCK_SOURCE_REF_IN = 37;
  NIRFSA_STRING_REF_CLOCK_SOURCE_PXI_CLK = 38;
  NIRFSA_STRING_REF_CLOCK_SOURCE_CLK_IN = 39;
  NIRFSA_STRING_REF_CLOCK_SOURCE_REF_IN_2 = 40;
  NIRFSA_STRING_REF_CLOCK_SOURCE_PXI_CLK_MASTER = 41;
  NIRFSA_STRING_TRIGGER_SOURCE_PFI0 = 42;
  NIRFSA_STRING_TRIGGER_SOURCE_PFI1 = 43;
  NIRFSA_STRING_TRIGGER_SOURCE_PXI_TRIG0 = 44;
  NIRFSA_STRING_TRIGGER_SOURCE_PXI_TRIG1 = 45;
  NIRFSA_STRING_TRIGGER_SOURCE_PXI_TRIG2 = 46;
  NIRFSA_STRING_TRIGGER_SOURCE_PXI_TRIG3 = 47;
  NIRFSA_STRING_TRIGGER_SOURCE_PXI_TRIG4 = 48;
  NIRFSA_STRING_TRIGGER_SOURCE_PXI_TRIG5 = 49;
  NIRFSA_STRING_TRIGGER_SOURCE_PXI_TRIG6 = 50;
  NIRFSA_STRING_TRIGGER_SOURCE_PXI_TRIG7 = 51;
  NIRFSA_STRING_TRIGGER_SOURCE_PXI_STAR = 52;
  NIRFSA_STRING_TRIGGER_SOURCE_PXIE_DSTARB = 53;
  NIRFSA_STRING_TRIGGER_SOURCE_TIMER_EVENT = 54;
  NIRFSA_STRING_TRIGGER_SOURCE_END_OF_RECORD_EVENT = 55;
  NIRFSA_STRING_TRIGGER_SOURCE_START_TRIGGER = 56;
  NIRFSA_STRING_TRIGGER_SOURCE_REFERENCE_TRIGGER = 57;
  NIRFSA_STRING_TRIGGER_SOURCE_SYNC_START_TRIGGER = 58;
  NIRFSA_STRING_TRIGGER_SOURCE_SYNC_REF_TRIGGER = 59;
  NIRFSA_STRING_TRIGGER_SOURCE_SYNC_ADVANCE_TRIGGER = 60;
}

message WaveformInfo {
  double absolute_initial_x = 1;
  double relative_initial_x = 2;
  double x_increment = 3;
  int64 actual_samples = 4;
  double offset = 5;
  double gain = 6;
}

message CoefficientInfo {
  double offset = 1;
  double gain = 2;
}

message SpectrumInfo {
  double initial_frequency = 1;
  double frequency_increment = 2;
  sint32 number_of_spectral_lines = 3;
}

message AbortRequest {
  nidevice_grpc.Session vi = 1;
}

message AbortResponse {
  int32 status = 1;
}

message CheckAcquisitionStatusRequest {
  nidevice_grpc.Session vi = 1;
}

message CheckAcquisitionStatusResponse {
  int32 status = 1;
  bool is_done = 2;
}

message ClearErrorRequest {
  nidevice_grpc.Session vi = 1;
}

message ClearErrorResponse {
  int32 status = 1;
}

message ClearSelfCalibrateRangeRequest {
  nidevice_grpc.Session vi = 1;
}

message ClearSelfCalibrateRangeResponse {
  int32 status = 1;
}

message CloseRequest {
  nidevice_grpc.Session vi = 1;
}

message CloseResponse {
  int32 status = 1;
}

message CommitRequest {
  nidevice_grpc.Session vi = 1;
}

message CommitResponse {
  int32 status = 1;
}

message ConfigureAcquisitionTypeRequest {
  nidevice_grpc.Session vi = 1;
  oneof acquisition_type_enum {
    AcquisitionType acquisition_type = 2;
    sint32 acquisition_type_raw = 3;
  }
}

message ConfigureAcquisitionTypeResponse {
  int32 status = 1;
}

message ConfigureDeembeddingTableInterpolationLinearRequest {
  nidevice_grpc.Session vi = 1;
  string port = 2;
  string table_name = 3;
  oneof format_enum {
    LinearInterpolationFormat format = 4;
    sint32 format_raw = 5;
  }
}

message ConfigureDeembeddingTableInterpolationLinearResponse {
  int32 status = 1;
}

message ConfigureDeembeddingTableInterpolationNearestRequest {
  nidevice_grpc.Session vi = 1;
  string port = 2;
  string table_name = 3;
}

message ConfigureDeembeddingTableInterpolationNearestResponse {
  int32 status = 1;
}

message ConfigureDeembeddingTableInterpolationSplineRequest {
  nidevice_grpc.Session vi = 1;
  string port = 2;
  string table_name = 3;
}

message ConfigureDeembeddingTableInterpolationSplineResponse {
  int32 status = 1;
}

message ConfigureDigitalEdgeAdvanceTriggerRequest {
  nidevice_grpc.Session vi = 1;
  oneof source_enum {
    DigitalEdgeTriggerSource source_mapped = 2;
    string source_raw = 3;
  }
  oneof edge_enum {
    DigitalEdge edge = 4;
    sint32 edge_raw = 5;
  }
}

message ConfigureDigitalEdgeAdvanceTriggerResponse {
  int32 status = 1;
}

message ConfigureDigitalEdgeRefTriggerRequest {
  nidevice_grpc.Session vi = 1;
  oneof source_enum {
    DigitalEdgeTriggerSource source_mapped = 2;
    string source_raw = 3;
  }
  oneof edge_enum {
    DigitalEdge edge = 4;
    sint32 edge_raw = 5;
  }
  int64 pretrigger_samples = 6;
}

message ConfigureDigitalEdgeRefTriggerResponse {
  int32 status = 1;
}

message ConfigureDigitalEdgeStartTriggerRequest {
  nidevice_grpc.Session vi = 1;
  oneof source_enum {
    DigitalEdgeTriggerSource source_mapped = 2;
    string source_raw = 3;
  }
  oneof edge_enum {
    DigitalEdge edge = 4;
    sint32 edge_raw = 5;
  }
}

message ConfigureDigitalEdgeStartTriggerResponse {
  int32 status = 1;
}

message ConfigureIQCarrierFrequencyRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  double carrier_frequency = 3;
}

message ConfigureIQCarrierFrequencyResponse {
  int32 status = 1;
}

message ConfigureIQPowerEdgeRefTriggerRequest {
  nidevice_grpc.Session vi = 1;
  double level = 2;
  oneof slope_enum {
    AnalogSlope slope = 3;
    sint32 slope_raw = 4;
  }
  int64 pretrigger_samples = 5;
}

message ConfigureIQPowerEdgeRefTriggerResponse {
  int32 status = 1;
}

message ConfigureIQRateRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  double iq_rate = 3;
}

message ConfigureIQRateResponse {
  int32 status = 1;
}

message ConfigureNumberOfRecordsRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  bool number_of_records_is_finite = 3;
  int64 number_of_records = 4;
}

message ConfigureNumberOfRecordsResponse {
  int32 status = 1;
}

message ConfigureNumberOfSamplesRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  bool number_of_samples_is_finite = 3;
  int64 samples_per_record = 4;
}

message ConfigureNumberOfSamplesResponse {
  int32 status = 1;
}

message ConfigurePXIChassisClk10Request {
  nidevice_grpc.Session vi = 1;
  oneof pxi_clk10_source_enum {
    PxiChassisClk10Source pxi_clk10_source_mapped = 2;
    string pxi_clk10_source_raw = 3;
  }
}

message ConfigurePXIChassisClk10Response {
  int32 status = 1;
}

message ConfigureRefClockRequest {
  nidevice_grpc.Session vi = 1;
  oneof clock_source_enum {
    RefClockSource clock_source_mapped = 2;
    string clock_source_raw = 3;
  }
  double ref_clock_rate = 4;
}

message ConfigureRefClockResponse {
  int32 status = 1;
}

message ConfigureReferenceLevelRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  double reference_level = 3;
}

message ConfigureReferenceLevelResponse {
  int32 status = 1;
}

message ConfigureResolutionBandwidthRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  double resolution_bandwidth = 3;
}

message ConfigureResolutionBandwidthResponse {
  int32 status = 1;
}

message ConfigureSoftwareEdgeAdvanceTriggerRequest {
  nidevice_grpc.Session vi = 1;
}

message ConfigureSoftwareEdgeAdvanceTriggerResponse {
  int32 status = 1;
}

message ConfigureSoftwareEdgeRefTriggerRequest {
  nidevice_grpc.Session vi = 1;
  int64 pretrigger_samples = 2;
}

message ConfigureSoftwareEdgeRefTriggerResponse {
  int32 status = 1;
}

message ConfigureSoftwareEdgeStartTriggerRequest {
  nidevice_grpc.Session vi = 1;
}

message ConfigureSoftwareEdgeStartTriggerResponse {
  int32 status = 1;
}

message ConfigureSpectrumFrequencyCenterSpanRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  double center_frequency = 3;
  double span = 4;
}

message ConfigureSpectrumFrequencyCenterSpanResponse {
  int32 status = 1;
}

message ConfigureSpectrumFrequencyStartStopRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  double start_frequency = 3;
  double stop_frequency = 4;
}

message ConfigureSpectrumFrequencyStartStopResponse {
  int32 status = 1;
}

message CreateConfigurationListRequest {
  nidevice_grpc.Session vi = 1;
  string list_name = 2;
  repeated NiRFSAAttribute list_attribute_ids = 3;
  bool set_as_active_list = 4;
}

message CreateConfigurationListResponse {
  int32 status = 1;
}

message CreateConfigurationListStepRequest {
  nidevice_grpc.Session vi = 1;
  bool set_as_active_step = 2;
}

message CreateConfigurationListStepResponse {
  int32 status = 1;
}

message CreateDeembeddingSparameterTableArrayRequest {
  nidevice_grpc.Session vi = 1;
  string port = 2;
  string table_name = 3;
  repeated double frequencies = 4;
  repeated nidevice_grpc.NIComplexNumber sparameter_table = 5;
  sint32 number_of_ports = 6;
  oneof sparameter_orientation_enum {
    SparameterOrientation sparameter_orientation = 7;
    sint32 sparameter_orientation_raw = 8;
  }
}

message CreateDeembeddingSparameterTableArrayResponse {
  int32 status = 1;
}

message CreateDeembeddingSparameterTableS2PFileRequest {
  nidevice_grpc.Session vi = 1;
  string port = 2;
  string table_name = 3;
  string s2p_file_path = 4;
  oneof sparameter_orientation_enum {
    SparameterOrientation sparameter_orientation = 5;
    sint32 sparameter_orientation_raw = 6;
  }
}

message CreateDeembeddingSparameterTableS2PFileResponse {
  int32 status = 1;
}

message DeleteAllDeembeddingTablesRequest {
  nidevice_grpc.Session vi = 1;
}

message DeleteAllDeembeddingTablesResponse {
  int32 status = 1;
}

message DeleteConfigurationListRequest {
  nidevice_grpc.Session vi = 1;
  string list_name = 2;
}

message DeleteConfigurationListResponse {
  int32 status = 1;
}

message DeleteDeembeddingTableRequest {
  nidevice_grpc.Session vi = 1;
  string port = 2;
  string table_name = 3;
}

message DeleteDeembeddingTableResponse {
  int32 status = 1;
}

message DisableRequest {
  nidevice_grpc.Session vi = 1;
}

message DisableResponse {
  int32 status = 1;
}

message DisableAdvanceTriggerRequest {
  nidevice_grpc.Session vi = 1;
}

message DisableAdvanceTriggerResponse {
  int32 status = 1;
}

message DisableRefTriggerRequest {
  nidevice_grpc.Session vi = 1;
}

message DisableRefTriggerResponse {
  int32 status = 1;
}

message DisableStartTriggerRequest {
  nidevice_grpc.Session vi = 1;
}

message DisableStartTriggerResponse {
  int32 status = 1;
}

message EnableSessionAccessRequest {
  nidevice_grpc.Session vi = 1;
  bool enable = 2;
}

message EnableSessionAccessResponse {
  int32 status = 1;
}

message ErrorMessageRequest {
  nidevice_grpc.Session vi = 1;
  sint32 status_code = 2;
}

message ErrorMessageResponse {
  int32 status = 1;
  string error_message = 2;
}

message ErrorQueryRequest {
  nidevice_grpc.Session vi = 1;
}

message ErrorQueryResponse {
  int32 status = 1;
  sint32 error_code = 2;
  string error_message = 3;
}

message ExportSignalRequest {
  nidevice_grpc.Session vi = 1;
  oneof signal_enum {
    Signal signal = 2;
    sint32 signal_raw = 3;
  }
  string signal_identifier = 4;
  oneof output_terminal_enum {
    ExportTerminal output_terminal_mapped = 5;
    string output_terminal_raw = 6;
  }
}

message ExportSignalResponse {
  int32 status = 1;
}

message FetchIQMultiRecordComplexF32Request {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  int64 starting_record = 3;
  int64 number_of_records = 4;
  int64 number_of_samples = 5;
  double timeout = 6;
}

message FetchIQMultiRecordComplexF32Response {
  int32 status = 1;
  repeated nidevice_grpc.NIComplexNumberF32 data = 2;
  repeated WaveformInfo wfm_info = 3;
}

message FetchIQMultiRecordComplexF64Request {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  int64 starting_record = 3;
  int64 number_of_records = 4;
  int64 number_of_samples = 5;
  double timeout = 6;
}

message FetchIQMultiRecordComplexF64Response {
  int32 status = 1;
  repeated nidevice_grpc.NIComplexNumber data = 2;
  repeated WaveformInfo wfm_info = 3;
}

message FetchIQMultiRecordComplexI16Request {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  int64 starting_record = 3;
  int64 number_of_records = 4;
  int64 number_of_samples = 5;
  double timeout = 6;
}

message FetchIQMultiRecordComplexI16Response {
  int32 status = 1;
  repeated nidevice_grpc.NIComplexI16 data = 2;
  repeated WaveformInfo wfm_info = 3;
}

message FetchIQSingleRecordComplexF32Request {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  int64 record_number = 3;
  int64 number_of_samples = 4;
  double timeout = 5;
}

message FetchIQSingleRecordComplexF32Response {
  int32 status = 1;
  repeated nidevice_grpc.NIComplexNumberF32 data = 2;
  WaveformInfo wfm_info = 3;
}

message FetchIQSingleRecordComplexF64Request {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  int64 record_number = 3;
  int64 number_of_samples = 4;
  double timeout = 5;
}

message FetchIQSingleRecordComplexF64Response {
  int32 status = 1;
  repeated nidevice_grpc.NIComplexNumber data = 2;
  WaveformInfo wfm_info = 3;
}

message FetchIQSingleRecordComplexI16Request {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  int64 record_number = 3;
  int64 number_of_samples = 4;
  double timeout = 5;
}

message FetchIQSingleRecordComplexI16Response {
  int32 status = 1;
  repeated nidevice_grpc.NIComplexI16 data = 2;
  WaveformInfo wfm_info = 3;
}

message GetAttributeViBooleanRequest {
  nidevice_grpc.Session vi = 1;
  string channel_name = 2;
  NiRFSAAttribute attribute_id = 3;
}

message GetAttributeViBooleanResponse {
  int32 status = 1;
  bool value = 2;
}

message GetAttributeViInt32Request {
  nidevice_grpc.Session vi = 1;
  string channel_name = 2;
  NiRFSAAttribute attribute_id = 3;
}

message GetAttributeViInt32Response {
  int32 status = 1;
  sint32 value = 2;
}

message GetAttributeViInt64Request {
  nidevice_grpc.Session vi = 1;
  string channel_name = 2;
  NiRFSAAttribute attribute_id = 3;
}

message GetAttributeViInt64Response {
  int32 status = 1;
  int64 value = 2;
}

message GetAttributeViReal64Request {
  nidevice_grpc.Session vi = 1;
  string channel_name = 2;
  NiRFSAAttribute attribute_id = 3;
}

message GetAttributeViReal64Response {
  int32 status = 1;
  double value = 2;
}

message GetAttributeViSessionRequest {
  nidevice_grpc.Session vi = 1;
  string channel_name = 2;
  NiRFSAAttribute attribute_id = 3;
}

message GetAttributeViSessionResponse {
  int32 status = 1;
  nidevice_grpc.Session value = 2;
}

message GetAttributeViStringRequest {
  nidevice_grpc.Session vi = 1;
  string channel_name = 2;
  NiRFSAAttribute attribute_id = 3;
}

message GetAttributeViStringResponse {
  int32 status = 1;
  string value = 2;
}

message GetCalUserDefinedInfoRequest {
  nidevice_grpc.Session vi = 1;
}

message GetCalUserDefinedInfoResponse {
  int32 status = 1;
  string info = 2;
}

message GetCalUserDefinedInfoMaxSizeRequest {
  nidevice_grpc.Session vi = 1;
}

message GetCalUserDefinedInfoMaxSizeResponse {
  int32 status = 1;
  sint32 info_size = 2;
}

message GetDeembeddingSparametersRequest {
  nidevice_grpc.Session vi = 1;
}

message GetDeembeddingSparametersResponse {
  int32 status = 1;
  repeated nidevice_grpc.NIComplexNumber sparameters = 2;
  sint32 number_of_sparameters = 3;
  sint32 number_of_ports = 4;
}

message GetDeviceResponseRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  oneof response_type_enum {
    DeviceResponse response_type = 3;
    sint32 response_type_raw = 4;
  }
}

message GetDeviceResponseResponse {
  int32 status = 1;
  repeated double frequencies = 2;
  repeated double magnitude_response = 3;
  repeated double phase_response = 4;
  sint32 number_of_frequencies = 5;
}

message GetErrorRequest {
  nidevice_grpc.Session vi = 1;
}

message GetErrorResponse {
  int32 status = 1;
  sint32 error_code = 2;
  string error_description = 3;
}

message GetExtCalLastDateAndTimeRequest {
  nidevice_grpc.Session vi = 1;
}

message GetExtCalLastDateAndTimeResponse {
  int32 status = 1;
  sint32 year = 2;
  sint32 month = 3;
  sint32 day = 4;
  sint32 hour = 5;
  sint32 minute = 6;
}

message GetExtCalLastTempRequest {
  nidevice_grpc.Session vi = 1;
}

message GetExtCalLastTempResponse {
  int32 status = 1;
  double temperature = 2;
}

message GetExtCalRecommendedIntervalRequest {
  nidevice_grpc.Session vi = 1;
}

message GetExtCalRecommendedIntervalResponse {
  int32 status = 1;
  sint32 months = 2;
}

message GetFetchBacklogRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  int64 record_number = 3;
}

message GetFetchBacklogResponse {
  int32 status = 1;
  int64 backlog = 2;
}

message GetFrequencyResponseRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
}

message GetFrequencyResponseResponse {
  int32 status = 1;
  repeated double frequencies = 2;
  repeated double magnitude_response = 3;
  repeated double phase_response = 4;
  sint32 number_of_frequencies = 5;
}

message GetNormalizationCoefficientsRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
}

message GetNormalizationCoefficientsResponse {
  int32 status = 1;
  repeated CoefficientInfo coefficient_info = 2;
  sint32 number_of_coefficient_sets = 3;
}

message GetNumberOfSpectralLinesRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
}

message GetNumberOfSpectralLinesResponse {
  int32 status = 1;
  sint32 number_of_spectral_lines = 2;
}

message GetRelayNameRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  sint32 index = 3;
}

message GetRelayNameResponse {
  int32 status = 1;
  string name = 2;
  sint32 buffer_size = 3;
}

message GetRelayOperationsCountRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
}

message GetRelayOperationsCountResponse {
  int32 status = 1;
  repeated sint32 operations_count = 2;
  sint32 buffer_size = 3;
}

message GetScalingCoefficientsRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
}

message GetScalingCoefficientsResponse {
  int32 status = 1;
  repeated CoefficientInfo coefficient_info = 2;
  sint32 number_of_coefficient_sets = 3;
}

message GetSelfCalLastDateAndTimeRequest {
  nidevice_grpc.Session vi = 1;
  int64 self_calibration_step = 2;
}

message GetSelfCalLastDateAndTimeResponse {
  int32 status = 1;
  sint32 year = 2;
  sint32 month = 3;
  sint32 day = 4;
  sint32 hour = 5;
  sint32 minute = 6;
}

message GetSelfCalLastTempRequest {
  nidevice_grpc.Session vi = 1;
  int64 self_calibration_step = 2;
}

message GetSelfCalLastTempResponse {
  int32 status = 1;
  double temp = 2;
}

message GetSpectralInfoForSMTRequest {
  nidevice_grpc.Session vi = 1;
}

message GetSpectralInfoForSMTResponse {
  int32 status = 1;
  nidevice_grpc.SmtSpectrumInfo spectrum_info = 2;
}

message GetStreamEndpointHandleRequest {
  nidevice_grpc.Session vi = 1;
  string stream_endpoint = 2;
}

message GetStreamEndpointHandleResponse {
  int32 status = 1;
  uint32 writer_handle = 2;
}

message GetTerminalNameRequest {
  nidevice_grpc.Session vi = 1;
  oneof signal_enum {
    Signal signal = 2;
    sint32 signal_raw = 3;
  }
  string signal_identifier = 4;
  sint32 buffer_size = 5;
}

message GetTerminalNameResponse {
  int32 status = 1;
  string terminal_name = 2;
}

message GetUserDataRequest {
  nidevice_grpc.Session vi = 1;
  string identifier = 2;
}

message GetUserDataResponse {
  int32 status = 1;
  bytes data = 2;
  sint32 actual_data_size = 3;
}

message InitRequest {
  string session_name = 1;
  string resource_name = 2;
  bool id_query = 3;
  bool reset = 4;
}

message InitResponse {
  int32 status = 1;
  nidevice_grpc.Session vi = 2;
}

message InitWithOptionsRequest {
  string session_name = 1;
  string resource_name = 2;
  bool id_query = 3;
  bool reset = 4;
  string option_string = 5;
}

message InitWithOptionsResponse {
  int32 status = 1;
  nidevice_grpc.Session vi = 2;
}

message InitiateRequest {
  nidevice_grpc.Session vi = 1;
}

message InitiateResponse {
  int32 status = 1;
}

message InvalidateAllAttributesRequest {
  nidevice_grpc.Session vi = 1;
}

message InvalidateAllAttributesResponse {
  int32 status = 1;
}

message IsSelfCalValidRequest {
  nidevice_grpc.Session vi = 1;
}

message IsSelfCalValidResponse {
  int32 status = 1;
  bool self_cal_valid = 2;
  repeated SelfCalibrateSteps valid_steps_array = 3;
  int64 valid_steps_raw = 4;
}

message PerformThermalCorrectionRequest {
  nidevice_grpc.Session vi = 1;
}

message PerformThermalCorrectionResponse {
  int32 status = 1;
}

message ReadIQSingleRecordComplexF64Request {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  double timeout = 3;
  int64 data_array_size = 4;
}

message ReadIQSingleRecordComplexF64Response {
  int32 status = 1;
  repeated nidevice_grpc.NIComplexNumber data = 2;
  WaveformInfo wfm_info = 3;
}

message ReadPowerSpectrumF32Request {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  double timeout = 3;
  sint32 data_array_size = 4;
}

message ReadPowerSpectrumF32Response {
  int32 status = 1;
  repeated float power_spectrum_data = 2;
  SpectrumInfo spectrum_info = 3;
}

message ReadPowerSpectrumF64Request {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  double timeout = 3;
  sint32 data_array_size = 4;
}

message ReadPowerSpectrumF64Response {
  int32 status = 1;
  repeated double power_spectrum_data = 2;
  SpectrumInfo spectrum_info = 3;
}

message ResetRequest {
  nidevice_grpc.Session vi = 1;
}

message ResetResponse {
  int32 status = 1;
}

message ResetAttributeRequest {
  nidevice_grpc.Session vi = 1;
  string channel_name = 2;
  NiRFSAAttribute attribute_id = 3;
}

message ResetAttributeResponse {
  int32 status = 1;
}

message ResetDeviceRequest {
  nidevice_grpc.Session vi = 1;
}

message ResetDeviceResponse {
  int32 status = 1;
}

message ResetWithDefaultsRequest {
  nidevice_grpc.Session vi = 1;
}

message ResetWithDefaultsResponse {
  int32 status = 1;
}

message ResetWithOptionsRequest {
  nidevice_grpc.Session vi = 1;
  oneof steps_to_omit_enum {
    ResetWithOptionsStepsToOmit steps_to_omit = 2;
    uint64 steps_to_omit_raw = 3;
  }
}

message ResetWithOptionsResponse {
  int32 status = 1;
}

message RevisionQueryRequest {
  nidevice_grpc.Session vi = 1;
}

message RevisionQueryResponse {
  int32 status = 1;
  string driver_rev = 2;
  string instr_rev = 3;
}

message SelfCalRequest {
  nidevice_grpc.Session vi = 1;
}

message SelfCalResponse {
  int32 status = 1;
}

message SelfCalibrateRequest {
  nidevice_grpc.Session vi = 1;
  oneof steps_to_omit_enum {
    SelfCalibrateSteps steps_to_omit = 2;
    int64 steps_to_omit_raw = 3;
  }
}

message SelfCalibrateResponse {
  int32 status = 1;
}

message SelfCalibrateRangeRequest {
  nidevice_grpc.Session vi = 1;
  oneof steps_to_omit_enum {
    SelfCalibrateSteps steps_to_omit = 2;
    int64 steps_to_omit_raw = 3;
  }
  double min_frequency = 4;
  double max_frequency = 5;
  double min_reference_level = 6;
  double max_reference_level = 7;
}

message SelfCalibrateRangeResponse {
  int32 status = 1;
}

message SelfTestRequest {
  nidevice_grpc.Session vi = 1;
}

message SelfTestResponse {
  int32 status = 1;
  sint32 test_result = 2;
  string test_message = 3;
}

message SendSoftwareEdgeTriggerRequest {
  nidevice_grpc.Session vi = 1;
  oneof trigger_enum {
    Signal trigger = 2;
    sint32 trigger_raw = 3;
  }
  string trigger_identifier = 4;
}

message SendSoftwareEdgeTriggerResponse {
  int32 status = 1;
}

message SetAttributeViBooleanRequest {
  nidevice_grpc.Session vi = 1;
  string channel_name = 2;
  NiRFSAAttribute attribute_id = 3;
  bool value = 4;
}

message SetAttributeViBooleanResponse {
  int32 status = 1;
}

message SetAttributeViInt32Request {
  nidevice_grpc.Session vi = 1;
  string channel_name = 2;
  NiRFSAAttribute attribute_id = 3;
  oneof value_enum {
    NiRFSAInt32AttributeValues value = 4;
    sint32 value_raw = 5;
  }
}

message SetAttributeViInt32Response {
  int32 status = 1;
}

message SetAttributeViInt64Request {
  nidevice_grpc.Session vi = 1;
  string channel_name = 2;
  NiRFSAAttribute attribute_id = 3;
  int64 value_raw = 4;
}

message SetAttributeViInt64Response {
  int32 status = 1;
}

message SetAttributeViReal64Request {
  nidevice_grpc.Session vi = 1;
  string channel_name = 2;
  NiRFSAAttribute attribute_id = 3;
  double value_raw = 4;
}

message SetAttributeViReal64Response {
  int32 status = 1;
}

message SetAttributeViSessionRequest {
  nidevice_grpc.Session vi = 1;
  string channel_name = 2;
  NiRFSAAttribute attribute_id = 3;
  nidevice_grpc.Session value = 4;
}

message SetAttributeViSessionResponse {
  int32 status = 1;
}

message SetAttributeViStringRequest {
  nidevice_grpc.Session vi = 1;
  string channel_name = 2;
  NiRFSAAttribute attribute_id = 3;
  oneof value_enum {
    NiRFSAStringAttributeValuesMapped value_mapped = 4;
    string value_raw = 5;
  }
}

message SetAttributeViStringResponse {
  int32 status = 1;
}

message SetCalUserDefinedInfoRequest {
  nidevice_grpc.Session vi = 1;
  string info = 2;
}

message SetCalUserDefinedInfoResponse {
  int32 status = 1;
}

message SetUserDataRequest {
  nidevice_grpc.Session vi = 1;
  string identifier = 2;
  sint32 buffer_size = 3;
}

message SetUserDataResponse {
  int32 status = 1;
  bytes data = 2;
}

