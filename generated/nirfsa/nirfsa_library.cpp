//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Service implementation for the NI-RFSA Metadata
//---------------------------------------------------------------------
#include "nirfsa_library.h"

#if defined(_MSC_VER)
static const char* kLibraryName = "niRFSA_64.dll";
#else
static const char* kLibraryName = "libnirfsa.so";
#endif

namespace nirfsa_grpc {

NiRFSALibrary::NiRFSALibrary() : shared_library_(kLibraryName)
{
  shared_library_.load();
  bool loaded = shared_library_.is_loaded();
  memset(&function_pointers_, 0, sizeof(function_pointers_));
  if (!loaded) {
    return;
  }
  function_pointers_.Close = reinterpret_cast<ClosePtr>(shared_library_.get_function_pointer("niRFSA_close"));
  function_pointers_.InitWithOptions = reinterpret_cast<InitWithOptionsPtr>(shared_library_.get_function_pointer("niRFSA_InitWithOptions"));
}

NiRFSALibrary::~NiRFSALibrary()
{
}

::grpc::Status NiRFSALibrary::check_function_exists(std::string functionName)
{
  return shared_library_.function_exists(functionName.c_str())
    ? ::grpc::Status::OK
    : ::grpc::Status(::grpc::NOT_FOUND, "Could not find the function " + functionName);
}

ViStatus NiRFSALibrary::Close(ViSession vi)
{
  if (!function_pointers_.Close) {
    throw nidevice_grpc::LibraryLoadException("Could not find niRFSA_close.");
  }
#if defined(_MSC_VER)
  return niRFSA_close(vi);
#else
  return function_pointers_.Close(vi);
#endif
}

ViStatus NiRFSALibrary::InitWithOptions(ViRsrc resourceName, ViBoolean idQuery, ViBoolean reset, ViConstString optionString, ViSession* vi)
{
  if (!function_pointers_.InitWithOptions) {
    throw nidevice_grpc::LibraryLoadException("Could not find niRFSA_InitWithOptions.");
  }
#if defined(_MSC_VER)
  return niRFSA_InitWithOptions(resourceName, idQuery, reset, optionString, vi);
#else
  return function_pointers_.InitWithOptions(resourceName, idQuery, reset, optionString, vi);
#endif
}

}  // namespace nirfsa_grpc
