
//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Service header for the NI-XNET Metadata
//---------------------------------------------------------------------
#ifndef NIXNET_GRPC_SERVICE_H
#define NIXNET_GRPC_SERVICE_H

#include <nixnet.grpc.pb.h>
#include <condition_variable>
#include <grpcpp/grpcpp.h>
#include <grpcpp/health_check_service_interface.h>
#include <grpcpp/ext/proto_server_reflection_plugin.h>
#include <map>
#include <server/converters.h>
#include <server/feature_toggles.h>
#include <server/session_resource_repository.h>
#include <server/shared_library.h>
#include <server/exceptions.h>

#include "nixnet_library_interface.h"

namespace nixnet_grpc {

struct NiXnetFeatureToggles
{
  using CodeReadiness = nidevice_grpc::FeatureToggles::CodeReadiness;
  NiXnetFeatureToggles(const nidevice_grpc::FeatureToggles& feature_toggles = {});

  bool is_enabled;
};

enum TypeIdentifier { boolean_, db_ref_, db_ref_array_, dev_ref_, dev_ref_array_, f64_, i32_, intf_ref_array_, parent_ref_, string_, string_array_, structure_, u32_, u32_array_, u64_, u8_array_ };

class NiXnetService final : public NiXnet::Service {
public:
  using ResourceRepositorySharedPtr = std::shared_ptr<nidevice_grpc::SessionResourceRepository<nxSessionRef_t>>;
  using nxDatabaseRef_tResourceRepositorySharedPtr = std::shared_ptr<nidevice_grpc::SessionResourceRepository<nxDatabaseRef_t>>;

  NiXnetService(
    NiXnetLibraryInterface* library,
    ResourceRepositorySharedPtr resource_repository,
    nxDatabaseRef_tResourceRepositorySharedPtr nx_database_ref_t_resource_repository,
    const NiXnetFeatureToggles& feature_toggles = {});
  virtual ~NiXnetService();
  
  ::grpc::Status Blink(::grpc::ServerContext* context, const BlinkRequest* request, BlinkResponse* response) override;
  ::grpc::Status Clear(::grpc::ServerContext* context, const ClearRequest* request, ClearResponse* response) override;
  ::grpc::Status ConnectTerminals(::grpc::ServerContext* context, const ConnectTerminalsRequest* request, ConnectTerminalsResponse* response) override;
  ::grpc::Status ConvertFramesToSignalsSinglePoint(::grpc::ServerContext* context, const ConvertFramesToSignalsSinglePointRequest* request, ConvertFramesToSignalsSinglePointResponse* response) override;
  ::grpc::Status ConvertSignalsToFramesSinglePoint(::grpc::ServerContext* context, const ConvertSignalsToFramesSinglePointRequest* request, ConvertSignalsToFramesSinglePointResponse* response) override;
  ::grpc::Status ConvertTimestamp100nsTo1ns(::grpc::ServerContext* context, const ConvertTimestamp100nsTo1nsRequest* request, ConvertTimestamp100nsTo1nsResponse* response) override;
  ::grpc::Status ConvertTimestamp1nsTo100ns(::grpc::ServerContext* context, const ConvertTimestamp1nsTo100nsRequest* request, ConvertTimestamp1nsTo100nsResponse* response) override;
  ::grpc::Status CreateSession(::grpc::ServerContext* context, const CreateSessionRequest* request, CreateSessionResponse* response) override;
  ::grpc::Status CreateSessionByRef(::grpc::ServerContext* context, const CreateSessionByRefRequest* request, CreateSessionByRefResponse* response) override;
  ::grpc::Status DbAddAlias(::grpc::ServerContext* context, const DbAddAliasRequest* request, DbAddAliasResponse* response) override;
  ::grpc::Status DbAddAlias64(::grpc::ServerContext* context, const DbAddAlias64Request* request, DbAddAlias64Response* response) override;
  ::grpc::Status DbCloseDatabase(::grpc::ServerContext* context, const DbCloseDatabaseRequest* request, DbCloseDatabaseResponse* response) override;
  ::grpc::Status DbCreateObject(::grpc::ServerContext* context, const DbCreateObjectRequest* request, DbCreateObjectResponse* response) override;
  ::grpc::Status DbDeleteObject(::grpc::ServerContext* context, const DbDeleteObjectRequest* request, DbDeleteObjectResponse* response) override;
  ::grpc::Status DbDeploy(::grpc::ServerContext* context, const DbDeployRequest* request, DbDeployResponse* response) override;
  ::grpc::Status DbFindObject(::grpc::ServerContext* context, const DbFindObjectRequest* request, DbFindObjectResponse* response) override;
  ::grpc::Status DbGetDatabaseList(::grpc::ServerContext* context, const DbGetDatabaseListRequest* request, DbGetDatabaseListResponse* response) override;
  ::grpc::Status DbGetDatabaseListSizes(::grpc::ServerContext* context, const DbGetDatabaseListSizesRequest* request, DbGetDatabaseListSizesResponse* response) override;
  ::grpc::Status DbGetProperty(::grpc::ServerContext* context, const DbGetPropertyRequest* request, DbGetPropertyResponse* response) override;
  ::grpc::Status DbGetPropertySize(::grpc::ServerContext* context, const DbGetPropertySizeRequest* request, DbGetPropertySizeResponse* response) override;
  ::grpc::Status DbMerge(::grpc::ServerContext* context, const DbMergeRequest* request, DbMergeResponse* response) override;
  ::grpc::Status DbOpenDatabase(::grpc::ServerContext* context, const DbOpenDatabaseRequest* request, DbOpenDatabaseResponse* response) override;
  ::grpc::Status DbRemoveAlias(::grpc::ServerContext* context, const DbRemoveAliasRequest* request, DbRemoveAliasResponse* response) override;
  ::grpc::Status DbSaveDatabase(::grpc::ServerContext* context, const DbSaveDatabaseRequest* request, DbSaveDatabaseResponse* response) override;
  ::grpc::Status DbSetProperty(::grpc::ServerContext* context, const DbSetPropertyRequest* request, DbSetPropertyResponse* response) override;
  ::grpc::Status DbUndeploy(::grpc::ServerContext* context, const DbUndeployRequest* request, DbUndeployResponse* response) override;
  ::grpc::Status DisconnectTerminals(::grpc::ServerContext* context, const DisconnectTerminalsRequest* request, DisconnectTerminalsResponse* response) override;
  ::grpc::Status Flush(::grpc::ServerContext* context, const FlushRequest* request, FlushResponse* response) override;
  ::grpc::Status FutureTimeTrigger(::grpc::ServerContext* context, const FutureTimeTriggerRequest* request, FutureTimeTriggerResponse* response) override;
  ::grpc::Status GetProperty(::grpc::ServerContext* context, const GetPropertyRequest* request, GetPropertyResponse* response) override;
  ::grpc::Status GetPropertySize(::grpc::ServerContext* context, const GetPropertySizeRequest* request, GetPropertySizeResponse* response) override;
  ::grpc::Status GetSubProperty(::grpc::ServerContext* context, const GetSubPropertyRequest* request, GetSubPropertyResponse* response) override;
  ::grpc::Status GetSubPropertySize(::grpc::ServerContext* context, const GetSubPropertySizeRequest* request, GetSubPropertySizeResponse* response) override;
  ::grpc::Status ReadSignalSinglePoint(::grpc::ServerContext* context, const ReadSignalSinglePointRequest* request, ReadSignalSinglePointResponse* response) override;
  ::grpc::Status ReadSignalWaveform(::grpc::ServerContext* context, const ReadSignalWaveformRequest* request, ReadSignalWaveformResponse* response) override;
  ::grpc::Status ReadState(::grpc::ServerContext* context, const ReadStateRequest* request, ReadStateResponse* response) override;
  ::grpc::Status ReadStateTimeTrigger(::grpc::ServerContext* context, const ReadStateTimeTriggerRequest* request, ReadStateTimeTriggerResponse* response) override;
  ::grpc::Status SetProperty(::grpc::ServerContext* context, const SetPropertyRequest* request, SetPropertyResponse* response) override;
  ::grpc::Status SetSubProperty(::grpc::ServerContext* context, const SetSubPropertyRequest* request, SetSubPropertyResponse* response) override;
  ::grpc::Status Start(::grpc::ServerContext* context, const StartRequest* request, StartResponse* response) override;
  ::grpc::Status Stop(::grpc::ServerContext* context, const StopRequest* request, StopResponse* response) override;
  ::grpc::Status SystemClose(::grpc::ServerContext* context, const SystemCloseRequest* request, SystemCloseResponse* response) override;
  ::grpc::Status SystemOpen(::grpc::ServerContext* context, const SystemOpenRequest* request, SystemOpenResponse* response) override;
  ::grpc::Status Wait(::grpc::ServerContext* context, const WaitRequest* request, WaitResponse* response) override;
  ::grpc::Status WriteSignalSinglePoint(::grpc::ServerContext* context, const WriteSignalSinglePointRequest* request, WriteSignalSinglePointResponse* response) override;
  ::grpc::Status WriteSignalWaveform(::grpc::ServerContext* context, const WriteSignalWaveformRequest* request, WriteSignalWaveformResponse* response) override;
  ::grpc::Status WriteSignalXY(::grpc::ServerContext* context, const WriteSignalXYRequest* request, WriteSignalXYResponse* response) override;
  ::grpc::Status WriteState(::grpc::ServerContext* context, const WriteStateRequest* request, WriteStateResponse* response) override;
private:
  NiXnetLibraryInterface* library_;
  ResourceRepositorySharedPtr session_repository_;
  nxDatabaseRef_tResourceRepositorySharedPtr nx_database_ref_t_resource_repository_;
  std::map<std::int32_t, std::int32_t> dbpropertyvalue_input_map_ { {0, 0},{1, 0},{2, 1},{3, 2},{4, 4294967294},{5, 0},{6, 1},{7, 2},{8, 3},{9, 0},{10, 1},{11, 1},{12, 2},{13, 3},{14, 4},{15, 0},{16, 1},{17, 2},{18, 0},{19, 1},{20, 0},{21, 1},{22, 2},{23, 3},{24, 2},{25, 3},{26, 4},{27, 5},{28, 6},{29, 0},{30, 1},{31, 2},{32, 0},{33, 1},{34, 2},{35, 3}, };
  std::map<std::int32_t, std::int32_t> dbpropertyvalue_output_map_ { {0, 0},{0, 1},{1, 2},{2, 3},{4294967294, 4},{0, 5},{1, 6},{2, 7},{3, 8},{0, 9},{1, 10},{1, 11},{2, 12},{3, 13},{4, 14},{0, 15},{1, 16},{2, 17},{0, 18},{1, 19},{0, 20},{1, 21},{2, 22},{3, 23},{2, 24},{3, 25},{4, 26},{5, 27},{6, 28},{0, 29},{1, 30},{2, 31},{0, 32},{1, 33},{2, 34},{3, 35}, };
  std::map<std::int32_t, std::int32_t> propertyvalue_input_map_ { {0, 0},{1, 0},{2, 1},{3, 2},{4, 0},{5, 1},{6, 2},{7, 1},{8, 2},{9, 4},{10, 0},{11, 1},{12, 2},{13, 3},{14, 0},{15, 1},{16, 2},{17, 3},{18, 4},{19, 5},{20, 0},{21, 1},{22, 0},{23, 1},{24, 3},{25, 4},{26, 4294967295},{27, 4294967294},{28, 0},{29, 1},{30, 2},{31, 3},{32, 0},{33, 1},{34, 1},{35, 2},{36, 3},{37, 4},{38, 5},{39, 13},{40, 14},{41, 1},{42, 2},{43, 3},{44, 4},{45, 6},{46, 13},{47, 14},{48, 0},{49, 1},{50, 0},{51, 1},{52, 2},{53, 3},{54, 0},{55, 1},{56, 2},{57, 3},{58, 4},{59, 0},{60, 1},{61, 2},{62, 0},{63, 1},{64, 0},{65, 1},{66, 2},{67, 3},{68, 0},{69, 1},{70, 0},{71, 1},{72, 2},{73, 0},{74, 1},{75, 0},{76, 1},{77, 2},{78, 4},{79, 32},{80, 256},{81, 2048},{82, 16384},{83, 1},{84, 8},{85, 64},{86, 512},{87, 4096},{88, 2},{89, 16},{90, 128},{91, 1024},{92, 8192},{93, 2147483648},{94, 0},{95, 1},{96, 0},{97, 1},{98, 2},{99, 0},{100, 1},{101, 2},{102, 0},{103, 1},{104, 0},{105, 1},{106, 0},{107, 1},{108, 0},{109, 1},{110, 0},{111, 32},{112, 33},{113, 34},{114, 35},{115, 36},{116, 37},{117, 38},{118, 39},{119, 40},{120, 41},{121, 42},{122, 43},{123, 44},{124, 45},{125, 46},{126, 47},{127, 48},{128, 49},{129, 254},{130, 0},{131, 1},{132, 2},{133, 3},{134, 4},{135, 5},{136, 6},{137, 7},{138, 8},{139, 9},{140, 10},{141, 11},{142, 12},{143, 3},{144, 6},{145, 7},{146, 9},{147, -3},{148, -2},{149, -1},{150, 0},{151, 1},{152, -3},{153, -2},{154, -1},{155, 0},{156, 1},{157, -3},{158, -2},{159, -1},{160, 0},{161, 1},{162, 0},{163, 1},{164, 0},{165, 1}, };
  std::map<std::int32_t, std::int32_t> propertyvalue_output_map_ { {0, 0},{0, 1},{1, 2},{2, 3},{0, 4},{1, 5},{2, 6},{1, 7},{2, 8},{4, 9},{0, 10},{1, 11},{2, 12},{3, 13},{0, 14},{1, 15},{2, 16},{3, 17},{4, 18},{5, 19},{0, 20},{1, 21},{0, 22},{1, 23},{3, 24},{4, 25},{4294967295, 26},{4294967294, 27},{0, 28},{1, 29},{2, 30},{3, 31},{0, 32},{1, 33},{1, 34},{2, 35},{3, 36},{4, 37},{5, 38},{13, 39},{14, 40},{1, 41},{2, 42},{3, 43},{4, 44},{6, 45},{13, 46},{14, 47},{0, 48},{1, 49},{0, 50},{1, 51},{2, 52},{3, 53},{0, 54},{1, 55},{2, 56},{3, 57},{4, 58},{0, 59},{1, 60},{2, 61},{0, 62},{1, 63},{0, 64},{1, 65},{2, 66},{3, 67},{0, 68},{1, 69},{0, 70},{1, 71},{2, 72},{0, 73},{1, 74},{0, 75},{1, 76},{2, 77},{4, 78},{32, 79},{256, 80},{2048, 81},{16384, 82},{1, 83},{8, 84},{64, 85},{512, 86},{4096, 87},{2, 88},{16, 89},{128, 90},{1024, 91},{8192, 92},{2147483648, 93},{0, 94},{1, 95},{0, 96},{1, 97},{2, 98},{0, 99},{1, 100},{2, 101},{0, 102},{1, 103},{0, 104},{1, 105},{0, 106},{1, 107},{0, 108},{1, 109},{0, 110},{32, 111},{33, 112},{34, 113},{35, 114},{36, 115},{37, 116},{38, 117},{39, 118},{40, 119},{41, 120},{42, 121},{43, 122},{44, 123},{45, 124},{46, 125},{47, 126},{48, 127},{49, 128},{254, 129},{0, 130},{1, 131},{2, 132},{3, 133},{4, 134},{5, 135},{6, 136},{7, 137},{8, 138},{9, 139},{10, 140},{11, 141},{12, 142},{3, 143},{6, 144},{7, 145},{9, 146},{-3, 147},{-2, 148},{-1, 149},{0, 150},{1, 151},{-3, 152},{-2, 153},{-1, 154},{0, 155},{1, 156},{-3, 157},{-2, 158},{-1, 159},{0, 160},{1, 161},{0, 162},{1, 163},{0, 164},{1, 165}, };
  std::map<std::int32_t, std::string> terminalname_input_map_ { {1, "PXI_Trig0"},{2, "PXI_Trig1"},{3, "PXI_Trig2"},{4, "PXI_Trig3"},{5, "PXI_Trig4"},{6, "PXI_Trig5"},{7, "PXI_Trig6"},{8, "PXI_Trig7"},{9, "FrontPanel0"},{10, "FrontPanel1"},{11, "PXI_Star"},{12, "PXI_Clk10"},{13, "10MHzTimebase"},{14, "1MHzTimebase"},{15, "MasterTimebase"},{16, "CommTrigger"},{17, "StartTrigger"},{18, "FlexRayStartCycle"},{19, "FlexRayMacrotick"},{20, "LogTrigger"},{21, "TimeTrigger"},{22, "NetworkTimePPS"},{23, "NetworkTime1MHz"}, };
  std::map<std::string, std::int32_t> terminalname_output_map_ { {"PXI_Trig0", 1},{"PXI_Trig1", 2},{"PXI_Trig2", 3},{"PXI_Trig3", 4},{"PXI_Trig4", 5},{"PXI_Trig5", 6},{"PXI_Trig6", 7},{"PXI_Trig7", 8},{"FrontPanel0", 9},{"FrontPanel1", 10},{"PXI_Star", 11},{"PXI_Clk10", 12},{"10MHzTimebase", 13},{"1MHzTimebase", 14},{"MasterTimebase", 15},{"CommTrigger", 16},{"StartTrigger", 17},{"FlexRayStartCycle", 18},{"FlexRayMacrotick", 19},{"LogTrigger", 20},{"TimeTrigger", 21},{"NetworkTimePPS", 22},{"NetworkTime1MHz", 23}, };
  std::map<std::uint32_t, TypeIdentifier> dbproperty_type_map_ { {100663298, db_ref_array_},{50331649, string_},{33554435, boolean_},{151060481, u64_},{65651, u32_},{65537, u32_},{151060497, u64_},{65553, u32_},{65652, u32_},{65552, u32_},{50397192, string_},{65545, u32_},{83951618, db_ref_},{100728835, db_ref_array_},{65568, u32_},{65650, u32_},{65569, u32_},{65570, u32_},{65571, u32_},{65572, u32_},{65573, u32_},{65574, u32_},{65575, u32_},{65579, u32_},{65578, u32_},{65576, u32_},{65577, u32_},{16842800, f64_},{65585, u32_},{65586, u32_},{65588, u32_},{65587, u32_},{65590, u32_},{65591, u32_},{65589, u32_},{65592, u32_},{65593, u32_},{65600, u32_},{65601, u32_},{65602, u32_},{65603, u32_},{65605, u32_},{65606, u32_},{65607, u32_},{65608, u32_},{65609, u32_},{33620053, boolean_},{65616, u32_},{65617, u32_},{65618, u32_},{65619, u32_},{65620, u32_},{100728836, db_ref_array_},{100728944, db_ref_array_},{16842865, f64_},{50397189, string_},{100728840, db_ref_array_},{33619978, boolean_},{65542, u32_},{100728839, db_ref_array_},{131172, u32_},{33685520, boolean_},{131174, u32_},{131089, u32_},{16908306, f64_},{84017153, db_ref_},{50462722, string_},{131081, u32_},{167903237, u8_array_},{131104, u32_},{131105, u32_},{131106, u32_},{134348850, u32_array_},{33685552, boolean_},{134348849, u32_array_},{33685539, boolean_},{33685540, boolean_},{33685541, boolean_},{131110, u32_},{131075, u32_},{131152, u32_},{84017217, db_ref_},{33685568, boolean_},{100794434, db_ref_array_},{100794435, db_ref_array_},{50462724, string_},{134348897, u32_array_},{134348899, u32_array_},{100794464, db_ref_array_},{131079, u32_},{100794376, db_ref_array_},{33685605, boolean_},{196609, u32_},{50528258, string_},{196617, u32_},{196611, u32_},{16973828, f64_},{84082693, parent_ref_},{16973830, f64_},{16973831, f64_},{33751088, boolean_},{33751089, boolean_},{196658, u32_},{84082739, db_ref_},{50528264, string_},{50528272, string_},{196626, u32_},{84082705, db_ref_},{16973843, f64_},{16973844, f64_},{196629, u32_},{50528278, string_},{262153, u32_},{100925441, db_ref_array_},{84148226, db_ref_},{262147, u32_},{50593796, string_},{50593799, string_},{84148229, db_ref_},{84213761, db_ref_},{50659333, string_},{327689, u32_},{33882128, boolean_},{327700, u32_},{84213777, db_ref_},{327699, u32_},{327698, u32_},{100990979, db_ref_array_},{100990980, db_ref_array_},{327715, u32_},{327717, u32_},{327714, u32_},{33882144, boolean_},{17104934, f64_},{327713, u32_},{17104935, f64_},{327716, u32_},{50659330, string_},{151322665, u64_},{327720, u32_}, };
  std::map<std::uint32_t, TypeIdentifier> property_type_map_ { {1048721, u32_},{34603009, boolean_},{51380234, string_},{51380226, string_},{51380468, string_},{34603197, boolean_},{51380410, string_},{1048761, u32_},{34603257, boolean_},{152043770, u64_},{1048763, u32_},{152043759, u64_},{34603177, boolean_},{152043542, u64_},{152043691, u64_},{1048598, u32_},{34603029, boolean_},{152043559, u64_},{34603172, boolean_},{34603170, boolean_},{1048611, u32_},{1048615, u32_},{1048638, u32_},{1048614, u32_},{34603042, boolean_},{1048608, u32_},{34603044, boolean_},{1048613, u32_},{1048616, u32_},{1048617, u32_},{1048633, u32_},{34603171, boolean_},{34603024, boolean_},{202375356, structure_},{152043711, u64_},{51380459, string_},{1048819, u32_},{1048818, u32_},{1048817, u32_},{51380392, string_},{51380461, string_},{51380460, string_},{1048746, u32_},{1048823, u32_},{1048825, u32_},{1048743, u32_},{1048742, u32_},{235929846, i32_},{1048824, u32_},{68157612, string_array_},{68157613, string_array_},{152043702, u64_},{152043694, u64_},{152043695, u64_},{152043703, u64_},{152043704, u64_},{68157693, string_array_},{68157694, string_array_},{152043777, u64_},{152043779, u64_},{152043778, u64_},{152043775, u64_},{152043776, u64_},{152043729, u64_},{34603202, boolean_},{1048774, u32_},{1048773, u32_},{51380420, string_},{1048775, u32_},{1048781, u32_},{1048780, u32_},{51380427, string_},{1048782, u32_},{1048783, u32_},{1048784, u32_},{152043715, u64_},{34603233, boolean_},{1048800, u32_},{34603231, boolean_},{1048798, u32_},{1048797, u32_},{1048793, u32_},{1048792, u32_},{1048795, u32_},{1048794, u32_},{34603223, boolean_},{1048787, u32_},{1048786, u32_},{17826004, f64_},{17826005, f64_},{17826006, f64_},{68157667, string_array_},{68157668, string_array_},{152043750, u64_},{152043751, u64_},{152043749, u64_},{152043753, u64_},{152043754, u64_},{152043752, u64_},{1048796, u32_},{1048816, u32_},{34603234, boolean_},{1048776, u32_},{1048777, u32_},{1048768, u32_},{34603201, boolean_},{1048778, u32_},{34603268, boolean_},{1048624, u32_},{34603057, boolean_},{1048626, u32_},{34603066, boolean_},{1048627, u32_},{34603060, boolean_},{1048636, u32_},{1048629, u32_},{1048630, u32_},{1048631, u32_},{1048632, u32_},{1048641, u32_},{1048642, u32_},{1048643, u32_},{1048644, u32_},{1048647, u32_},{1048645, u32_},{1048646, u32_},{1048648, u32_},{34603081, boolean_},{1048664, u32_},{1048656, u32_},{1048665, u32_},{1048658, u32_},{1048659, u32_},{34603092, boolean_},{1048635, u32_},{34603098, boolean_},{34603069, boolean_},{1048671, u32_},{135266395, u32_array_},{135266396, u32_array_},{135266397, u32_array_},{135266398, u32_array_},{1048663, u32_},{1048661, u32_},{1048662, u32_},{51380243, string_},{1048821, u32_},{1048688, u32_},{34603137, boolean_},{17825911, f64_},{17825910, f64_},{34603122, boolean_},{34603136, boolean_},{135266425, u32_array_},{68157557, string_array_},{1048691, u32_},{34603128, boolean_},{1048692, u32_},{101711889, db_ref_array_},{135266337, u32_array_},{1048594, u32_},{51380368, string_},{34603028, boolean_},{68157443, string_array_},{1048580, u32_},{1048581, u32_},{1048589, u32_},{1048582, u32_},{1048587, u32_},{1048585, u32_},{1048584, u32_},{1048588, u32_},{17825799, f64_},{84934803, db_ref_},{34603169, boolean_},{1048735, u32_},{34603173, boolean_},{1048734, u32_},{1048722, u32_},{152043668, u64_},{1048732, u32_},{1048733, u32_},{17825947, f64_},{17825946, f64_},{17825945, f64_},{17825941, f64_},{17825942, f64_},{17825943, f64_},{17825944, f64_},{1048736, u32_},{17891340, f64_},{101777410, dev_ref_array_},{101777411, intf_ref_array_},{101777421, intf_ref_array_},{101777412, intf_ref_array_},{101777409, intf_ref_array_},{101777413, intf_ref_array_},{101777415, intf_ref_array_},{1114118, u32_},{1114120, u32_},{1114121, u32_},{1114122, u32_},{1114123, u32_},{1179649, u32_},{101842946, intf_ref_array_},{101842952, intf_ref_array_},{1179652, u32_},{1179655, u32_},{51511299, string_},{1179656, u32_},{1179653, u32_},{1179654, u32_},{1245192, u32_},{1245191, u32_},{85131265, dev_ref_},{1245199, u32_},{1245198, u32_},{1245197, u32_},{1245194, u32_},{1245196, u32_},{1245193, u32_},{51576834, string_},{1245187, u32_},{1245188, u32_},{1245189, u32_}, };
  std::map<std::uint32_t, TypeIdentifier> subproperty_type_map_ { {17825921, f64_},{17825922, f64_},{1048709, u32_},{1048708, u32_},{51380358, string_},{1048707, u32_}, };

  NiXnetFeatureToggles feature_toggles_;
};

} // namespace nixnet_grpc

namespace nidevice_grpc {
namespace converters {
template <>
void convert_to_grpc(const _nxTimeLocalNetwork_t& input, nixnet_grpc::TimeLocalNetwork* output);
} // namespace converters
} // namespace nidevice_grpc

#endif  // NIXNET_GRPC_SERVICE_H
