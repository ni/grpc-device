
//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// EXPERIMENTAL Client convenience wrapper for NI-RFMXWLAN-RESTRICTED.
//---------------------------------------------------------------------
#ifndef NIRFMXWLAN_RESTRICTED_GRPC_CLIENT_H
#define NIRFMXWLAN_RESTRICTED_GRPC_CLIENT_H

#include <grpcpp/grpcpp.h>

#include <nirfmxwlan_restricted.grpc.pb.h>
#include <tests/utilities/client_helpers.h>

#include <memory>
#include <vector>

namespace nirfmxwlan_restricted_grpc::experimental::client {

namespace pb = ::google::protobuf;
using StubPtr = std::unique_ptr<NiRFmxWLANRestricted::Stub>;
using namespace nidevice_grpc::experimental::client;


GetChannelListResponse get_channel_list(const StubPtr& stub, const nidevice_grpc::Session& instrument, const std::string& selector_string, const pb::int32& wlan_band);
OFDMModAccFetchCommonPilotErrorTraceIndBResponse ofdm_mod_acc_fetch_common_pilot_error_trace_ind_b(const StubPtr& stub, const nidevice_grpc::Session& instrument, const std::string& selector_string, const double& timeout);
OFDMModAccNoiseCalibrateResponse ofdm_mod_acc_noise_calibrate(const StubPtr& stub, const nidevice_grpc::Session& instrument, const std::string& selector_string, const pb::int32& shared_lo_connection);

} // namespace nirfmxwlan_restricted_grpc::experimental::client

#endif /* NIRFMXWLAN_RESTRICTED_GRPC_CLIENT_H */
