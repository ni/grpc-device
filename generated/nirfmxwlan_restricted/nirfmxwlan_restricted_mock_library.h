//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Mock of LibraryInterface for NI-RFMXWLAN-RESTRICTED
//---------------------------------------------------------------------
#ifndef NIRFMXWLAN_RESTRICTED_GRPC_MOCK_LIBRARY_H
#define NIRFMXWLAN_RESTRICTED_GRPC_MOCK_LIBRARY_H

#include <gmock/gmock.h>
#include <gtest/gtest.h>

#include "nirfmxwlan_restricted_library_interface.h"

namespace ni {
namespace tests {
namespace unit {

class NiRFmxWLANRestrictedMockLibrary : public nirfmxwlan_restricted_grpc::NiRFmxWLANRestrictedLibraryInterface {
 public:
  MOCK_METHOD(int32, GetChannelList, (niRFmxInstrHandle instrumentHandle, char selectorString[], int32 WLANBand, float64 centerFrequencies[], float64 channelBandwidths[], int32 arraySize, int32* actualArraySize), (override));
  MOCK_METHOD(int32, GetError, (niRFmxInstrHandle instrumentHandle, int32* errorCode, int32 errorDescriptionBufferSize, char errorDescription[]), (override));
  MOCK_METHOD(int32, GetErrorString, (niRFmxInstrHandle instrumentHandle, int32 errorCode, int32 errorDescriptionBufferSize, char errorDescription[]), (override));
  MOCK_METHOD(int32, OFDMModAccFetchCommonPilotErrorTraceIndB, (niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 commonPilotErrorMagnitude[], float32 commonPilotErrorPhase[], int32 arraySize, int32* actualArraySize), (override));
  MOCK_METHOD(int32, OFDMModAccNoiseCalibrate, (niRFmxInstrHandle instrumentHandle, char selectorString[], int32 sharedLOConnection), (override));
};

}  // namespace unit
}  // namespace tests
}  // namespace ni
#endif  // NIRFMXWLAN_RESTRICTED_GRPC_MOCK_LIBRARY_H
