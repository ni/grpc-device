
//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Service header for the NI-VISA Library Metadata
//---------------------------------------------------------------------
#ifndef NIVISA_GRPC_SERVICE_H
#define NIVISA_GRPC_SERVICE_H

#include <nivisa.grpc.pb.h>
#include <condition_variable>
#include <grpcpp/grpcpp.h>
#include <grpcpp/health_check_service_interface.h>
#include <grpcpp/ext/proto_server_reflection_plugin.h>
#include <map>
#include <server/converters.h>
#include <server/feature_toggles.h>
#include <server/session_resource_repository.h>
#include <server/shared_library.h>
#include <server/exceptions.h>

#include "nivisa_library_interface.h"

namespace nivisa_grpc {

struct NiVISAFeatureToggles
{
  using CodeReadiness = nidevice_grpc::FeatureToggles::CodeReadiness;
  NiVISAFeatureToggles(const nidevice_grpc::FeatureToggles& feature_toggles = {});

  bool is_enabled;
};

class NiVISAService final : public NiVISA::Service {
public:
  using LibrarySharedPtr = std::shared_ptr<NiVISALibraryInterface>;
  using ResourceRepositorySharedPtr = std::shared_ptr<nidevice_grpc::SessionResourceRepository<ViSession>>;

  NiVISAService(
    LibrarySharedPtr library,
    ResourceRepositorySharedPtr resource_repository,
    const NiVISAFeatureToggles& feature_toggles = {});
  virtual ~NiVISAService();

  ::grpc::Status AssertIntrSignal(::grpc::ServerContext* context, const AssertIntrSignalRequest* request, AssertIntrSignalResponse* response) override;
  ::grpc::Status AssertTrigger(::grpc::ServerContext* context, const AssertTriggerRequest* request, AssertTriggerResponse* response) override;
  ::grpc::Status AssertUtilSignal(::grpc::ServerContext* context, const AssertUtilSignalRequest* request, AssertUtilSignalResponse* response) override;
  ::grpc::Status Clear(::grpc::ServerContext* context, const ClearRequest* request, ClearResponse* response) override;
  ::grpc::Status Close(::grpc::ServerContext* context, const CloseRequest* request, CloseResponse* response) override;
  ::grpc::Status DisableEvent(::grpc::ServerContext* context, const DisableEventRequest* request, DisableEventResponse* response) override;
  ::grpc::Status DiscardEvents(::grpc::ServerContext* context, const DiscardEventsRequest* request, DiscardEventsResponse* response) override;
  ::grpc::Status EnableEvent(::grpc::ServerContext* context, const EnableEventRequest* request, EnableEventResponse* response) override;
  ::grpc::Status FindRsrc(::grpc::ServerContext* context, const FindRsrcRequest* request, FindRsrcResponse* response) override;
  ::grpc::Status Flush(::grpc::ServerContext* context, const FlushRequest* request, FlushResponse* response) override;
  ::grpc::Status GetAttribute(::grpc::ServerContext* context, const GetAttributeRequest* request, GetAttributeResponse* response) override;
  ::grpc::Status GpibCommand(::grpc::ServerContext* context, const GpibCommandRequest* request, GpibCommandResponse* response) override;
  ::grpc::Status GpibControlATN(::grpc::ServerContext* context, const GpibControlATNRequest* request, GpibControlATNResponse* response) override;
  ::grpc::Status GpibControlREN(::grpc::ServerContext* context, const GpibControlRENRequest* request, GpibControlRENResponse* response) override;
  ::grpc::Status GpibPassControl(::grpc::ServerContext* context, const GpibPassControlRequest* request, GpibPassControlResponse* response) override;
  ::grpc::Status GpibSendIFC(::grpc::ServerContext* context, const GpibSendIFCRequest* request, GpibSendIFCResponse* response) override;
  ::grpc::Status In16Ex(::grpc::ServerContext* context, const In16ExRequest* request, In16ExResponse* response) override;
  ::grpc::Status In32Ex(::grpc::ServerContext* context, const In32ExRequest* request, In32ExResponse* response) override;
  ::grpc::Status In64Ex(::grpc::ServerContext* context, const In64ExRequest* request, In64ExResponse* response) override;
  ::grpc::Status In8Ex(::grpc::ServerContext* context, const In8ExRequest* request, In8ExResponse* response) override;
  ::grpc::Status Lock(::grpc::ServerContext* context, const LockRequest* request, LockResponse* response) override;
  ::grpc::Status MapAddressEx(::grpc::ServerContext* context, const MapAddressExRequest* request, MapAddressExResponse* response) override;
  ::grpc::Status MapTrigger(::grpc::ServerContext* context, const MapTriggerRequest* request, MapTriggerResponse* response) override;
  ::grpc::Status MemAlloc(::grpc::ServerContext* context, const MemAllocRequest* request, MemAllocResponse* response) override;
  ::grpc::Status MemAllocEx(::grpc::ServerContext* context, const MemAllocExRequest* request, MemAllocExResponse* response) override;
  ::grpc::Status MemFreeEx(::grpc::ServerContext* context, const MemFreeExRequest* request, MemFreeExResponse* response) override;
  ::grpc::Status MoveIn16Ex(::grpc::ServerContext* context, const MoveIn16ExRequest* request, MoveIn16ExResponse* response) override;
  ::grpc::Status MoveIn32Ex(::grpc::ServerContext* context, const MoveIn32ExRequest* request, MoveIn32ExResponse* response) override;
  ::grpc::Status MoveIn64Ex(::grpc::ServerContext* context, const MoveIn64ExRequest* request, MoveIn64ExResponse* response) override;
  ::grpc::Status MoveIn8Ex(::grpc::ServerContext* context, const MoveIn8ExRequest* request, MoveIn8ExResponse* response) override;
  ::grpc::Status MoveOut16Ex(::grpc::ServerContext* context, const MoveOut16ExRequest* request, MoveOut16ExResponse* response) override;
  ::grpc::Status MoveOut32Ex(::grpc::ServerContext* context, const MoveOut32ExRequest* request, MoveOut32ExResponse* response) override;
  ::grpc::Status MoveOut64Ex(::grpc::ServerContext* context, const MoveOut64ExRequest* request, MoveOut64ExResponse* response) override;
  ::grpc::Status MoveOut8Ex(::grpc::ServerContext* context, const MoveOut8ExRequest* request, MoveOut8ExResponse* response) override;
  ::grpc::Status Open(::grpc::ServerContext* context, const OpenRequest* request, OpenResponse* response) override;
  ::grpc::Status Out16Ex(::grpc::ServerContext* context, const Out16ExRequest* request, Out16ExResponse* response) override;
  ::grpc::Status Out32Ex(::grpc::ServerContext* context, const Out32ExRequest* request, Out32ExResponse* response) override;
  ::grpc::Status Out64Ex(::grpc::ServerContext* context, const Out64ExRequest* request, Out64ExResponse* response) override;
  ::grpc::Status Out8Ex(::grpc::ServerContext* context, const Out8ExRequest* request, Out8ExResponse* response) override;
  ::grpc::Status ParseRsrcEx(::grpc::ServerContext* context, const ParseRsrcExRequest* request, ParseRsrcExResponse* response) override;
  ::grpc::Status Peek16(::grpc::ServerContext* context, const Peek16Request* request, Peek16Response* response) override;
  ::grpc::Status Peek32(::grpc::ServerContext* context, const Peek32Request* request, Peek32Response* response) override;
  ::grpc::Status Peek64(::grpc::ServerContext* context, const Peek64Request* request, Peek64Response* response) override;
  ::grpc::Status Peek8(::grpc::ServerContext* context, const Peek8Request* request, Peek8Response* response) override;
  ::grpc::Status Poke16(::grpc::ServerContext* context, const Poke16Request* request, Poke16Response* response) override;
  ::grpc::Status Poke32(::grpc::ServerContext* context, const Poke32Request* request, Poke32Response* response) override;
  ::grpc::Status Poke64(::grpc::ServerContext* context, const Poke64Request* request, Poke64Response* response) override;
  ::grpc::Status Poke8(::grpc::ServerContext* context, const Poke8Request* request, Poke8Response* response) override;
  ::grpc::Status PxiReserveTriggers(::grpc::ServerContext* context, const PxiReserveTriggersRequest* request, PxiReserveTriggersResponse* response) override;
  ::grpc::Status Read(::grpc::ServerContext* context, const ReadRequest* request, ReadResponse* response) override;
  ::grpc::Status ReadAsync(::grpc::ServerContext* context, const ReadAsyncRequest* request, ReadAsyncResponse* response) override;
  ::grpc::Status ReadSTB(::grpc::ServerContext* context, const ReadSTBRequest* request, ReadSTBResponse* response) override;
  ::grpc::Status SetAttribute(::grpc::ServerContext* context, const SetAttributeRequest* request, SetAttributeResponse* response) override;
  ::grpc::Status SetBuf(::grpc::ServerContext* context, const SetBufRequest* request, SetBufResponse* response) override;
  ::grpc::Status StatusDesc(::grpc::ServerContext* context, const StatusDescRequest* request, StatusDescResponse* response) override;
  ::grpc::Status Terminate(::grpc::ServerContext* context, const TerminateRequest* request, TerminateResponse* response) override;
  ::grpc::Status Unlock(::grpc::ServerContext* context, const UnlockRequest* request, UnlockResponse* response) override;
  ::grpc::Status UnmapAddress(::grpc::ServerContext* context, const UnmapAddressRequest* request, UnmapAddressResponse* response) override;
  ::grpc::Status UnmapTrigger(::grpc::ServerContext* context, const UnmapTriggerRequest* request, UnmapTriggerResponse* response) override;
  ::grpc::Status UsbControlIn(::grpc::ServerContext* context, const UsbControlInRequest* request, UsbControlInResponse* response) override;
  ::grpc::Status UsbControlOut(::grpc::ServerContext* context, const UsbControlOutRequest* request, UsbControlOutResponse* response) override;
  ::grpc::Status WaitOnEvent(::grpc::ServerContext* context, const WaitOnEventRequest* request, WaitOnEventResponse* response) override;
  ::grpc::Status Write(::grpc::ServerContext* context, const WriteRequest* request, WriteResponse* response) override;
  ::grpc::Status WriteAsync(::grpc::ServerContext* context, const WriteAsyncRequest* request, WriteAsyncResponse* response) override;
private:
  LibrarySharedPtr library_;
  ResourceRepositorySharedPtr session_repository_;
  ::grpc::Status ConvertApiErrorStatusForViSession(::grpc::ServerContextBase* context, int32_t status, ViSession vi);

  NiVISAFeatureToggles feature_toggles_;
};

} // namespace nivisa_grpc

#endif  // NIVISA_GRPC_SERVICE_H
