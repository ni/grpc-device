//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Real implementation of LibraryInterface for NI-FAKE-EXTENSION
//---------------------------------------------------------------------
#ifndef NIFAKE_EXTENSION_GRPC_LIBRARY_H
#define NIFAKE_EXTENSION_GRPC_LIBRARY_H

#include "nifake_extension_library_interface.h"

#include <server/shared_library_interface.h>

#include <memory>

namespace nifake_extension_grpc {

class NiFakeExtensionLibrary : public nifake_extension_grpc::NiFakeExtensionLibraryInterface {
 public:
  NiFakeExtensionLibrary();
  explicit NiFakeExtensionLibrary(std::shared_ptr<nidevice_grpc::SharedLibraryInterface> shared_library);
  virtual ~NiFakeExtensionLibrary();

  ::grpc::Status check_function_exists(std::string functionName);
  ViStatus AddCoolFunctionality(ViSession vi, ViInt32 param) override;
  ViStatus TestAddressParameters(ViSession vi, ViInt16 space, ViUInt64 offset, ViAddr suggested, ViAddr* actual) override;

 private:
  using AddCoolFunctionalityPtr = decltype(&niFakeExtension_AddCoolFunctionality);
  using TestAddressParametersPtr = decltype(&niFakeExtension_TestAddressParameters);

  typedef struct FunctionPointers {
    AddCoolFunctionalityPtr AddCoolFunctionality;
    TestAddressParametersPtr TestAddressParameters;
  } FunctionLoadStatus;

  std::shared_ptr<nidevice_grpc::SharedLibraryInterface> shared_library_;
  FunctionPointers function_pointers_;
};

}  // namespace nifake_extension_grpc

#endif  // NIFAKE_EXTENSION_GRPC_LIBRARY_H
