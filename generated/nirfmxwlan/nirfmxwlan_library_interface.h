//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Library wrapper for implementing interactions with NI-RFMXWLAN
//---------------------------------------------------------------------
#ifndef NIRFMXWLAN_GRPC_LIBRARY_WRAPPER_H
#define NIRFMXWLAN_GRPC_LIBRARY_WRAPPER_H

#include <grpcpp/grpcpp.h>
#include <niRFmxWLAN.h>

namespace nirfmxwlan_grpc {

class NiRFmxWLANLibraryInterface {
 public:
  virtual ~NiRFmxWLANLibraryInterface() {}

  virtual int32 AbortMeasurements(niRFmxInstrHandle instrumentHandle, char selectorString[]) = 0;
  virtual int32 AnalyzeIQ1Waveform(niRFmxInstrHandle instrumentHandle, char selectorString[], char resultName[], float64 x0, float64 dx, NIComplexSingle iq[], int32 arraySize, int32 reset, int64 reserved) = 0;
  virtual int32 AnalyzeNWaveformsIQ(niRFmxInstrHandle instrumentHandle, char selectorString[], char resultName[], float64 x0[], float64 dx[], NIComplexSingle iq[], int32 iqSize[], int32 arraySize, int32 reset) = 0;
  virtual int32 AnalyzeNWaveformsSpectrum(niRFmxInstrHandle instrumentHandle, char selectorString[], char resultName[], float64 x0[], float64 dx[], float32 spectrum[], int32 spectrumSize[], int32 arraySize, int32 reset) = 0;
  virtual int32 AnalyzeSpectrum1Waveform(niRFmxInstrHandle instrumentHandle, char selectorString[], char resultName[], float64 x0, float64 dx, float32 spectrum[], int32 arraySize, int32 reset, int64 reserved) = 0;
  virtual int32 AutoDetectSignal(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout) = 0;
  virtual int32 AutoDetectSignalAnalysisOnly(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 x0, float64 dx, NIComplexSingle iq[], int32 arraySize) = 0;
  virtual int32 AutoLevel(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 measurementInterval) = 0;
  virtual int32 BuildChainString(char selectorString[], int32 chainNumber, int32 selectorStringOutLength, char selectorStringOut[]) = 0;
  virtual int32 BuildGateString(char selectorString[], int32 gateNumber, int32 selectorStringOutLength, char selectorStringOut[]) = 0;
  virtual int32 BuildOffsetString(char selectorString[], int32 offsetNumber, int32 selectorStringOutLength, char selectorStringOut[]) = 0;
  virtual int32 BuildSegmentString(char selectorString[], int32 segmentNumber, int32 selectorStringOutLength, char selectorStringOut[]) = 0;
  virtual int32 BuildSignalString(char signalName[], char resultName[], int32 selectorStringLength, char selectorString[]) = 0;
  virtual int32 BuildStreamString(char selectorString[], int32 streamNumber, int32 selectorStringOutLength, char selectorStringOut[]) = 0;
  virtual int32 BuildUserString(char selectorString[], int32 userNumber, int32 selectorStringOutLength, char selectorStringOut[]) = 0;
  virtual int32 CfgChannelBandwidth(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 channelBandwidth) = 0;
  virtual int32 CfgDigitalEdgeTrigger(niRFmxInstrHandle instrumentHandle, char selectorString[], char digitalEdgeSource[], int32 digitalEdge, float64 triggerDelay, int32 enableTrigger) = 0;
  virtual int32 CfgExternalAttenuation(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 externalAttenuation) = 0;
  virtual int32 CfgFrequency(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 centerFrequency) = 0;
  virtual int32 CfgFrequencyArray(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 centerFrequency[], int32 numberOfElements) = 0;
  virtual int32 CfgFrequencyReference(niRFmxInstrHandle instrumentHandle, char channelName[], char frequencyReferenceSource[], float64 frequencyReferenceFrequency) = 0;
  virtual int32 CfgIQPowerEdgeTrigger(niRFmxInstrHandle instrumentHandle, char selectorString[], char iqPowerEdgeSource[], int32 iqPowerEdgeSlope, float64 iqPowerEdgeLevel, float64 triggerDelay, int32 triggerMinQuietTimeMode, float64 triggerMinQuietTimeDuration, int32 iqPowerEdgeLevelType, int32 enableTrigger) = 0;
  virtual int32 CfgMechanicalAttenuation(niRFmxInstrHandle instrumentHandle, char channelName[], int32 mechanicalAttenuationAuto, float64 mechanicalAttenuationValue) = 0;
  virtual int32 CfgNumberOfFrequencySegmentsAndReceiveChains(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 numberOfFrequencySegments, int32 numberOfReceiveChains) = 0;
  virtual int32 CfgRFAttenuation(niRFmxInstrHandle instrumentHandle, char channelName[], int32 rfAttenuationAuto, float64 rfAttenuationValue) = 0;
  virtual int32 CfgReferenceLevel(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 referenceLevel) = 0;
  virtual int32 CfgSelectedPortsMultiple(niRFmxInstrHandle instrumentHandle, char selectorString[], char selectedPorts[]) = 0;
  virtual int32 CfgSoftwareEdgeTrigger(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 triggerDelay, int32 enableTrigger) = 0;
  virtual int32 CfgStandard(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 standard) = 0;
  virtual int32 CheckMeasurementStatus(niRFmxInstrHandle instrumentHandle, char selectorString[], int32* isDone) = 0;
  virtual int32 ClearAllNamedResults(niRFmxInstrHandle instrumentHandle, char selectorString[]) = 0;
  virtual int32 ClearNamedResult(niRFmxInstrHandle instrumentHandle, char selectorString[]) = 0;
  virtual int32 CloneSignalConfiguration(niRFmxInstrHandle instrumentHandle, char oldSignalName[], char newSignalName[]) = 0;
  virtual int32 Close(niRFmxInstrHandle instrumentHandle, int32 forceDestroy) = 0;
  virtual int32 Commit(niRFmxInstrHandle instrumentHandle, char selectorString[]) = 0;
  virtual int32 CreateSignalConfiguration(niRFmxInstrHandle instrumentHandle, char signalName[]) = 0;
  virtual int32 DSSSModAccCfgAcquisitionLength(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 acquisitionLengthMode, float64 acquisitionLength) = 0;
  virtual int32 DSSSModAccCfgAveraging(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 averagingEnabled, int32 averagingCount) = 0;
  virtual int32 DSSSModAccCfgEVMUnit(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 evmUnit) = 0;
  virtual int32 DSSSModAccCfgMeasurementLength(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 measurementOffset, int32 maximumMeasurementLength) = 0;
  virtual int32 DSSSModAccCfgPowerMeasurementCustomGateArray(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 startTime[], float64 stopTime[], int32 numberOfElements) = 0;
  virtual int32 DSSSModAccCfgPowerMeasurementEnabled(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 powerMeasurementEnabled) = 0;
  virtual int32 DSSSModAccCfgPowerMeasurementNumberOfCustomGates(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 numberOfCustomGates) = 0;
  virtual int32 DSSSModAccFetchAveragePowers(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* preambleAveragePowerMean, float64* headerAveragePowerMean, float64* dataAveragePowerMean, float64* ppduAveragePowerMean) = 0;
  virtual int32 DSSSModAccFetchConstellationTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, NIComplexSingle constellation[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 DSSSModAccFetchCustomGatePowersArray(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64 averagePowerMean[], float64 peakPowerMaximum[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 DSSSModAccFetchDecodedHeaderBitsTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 decodedHeaderBits[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 DSSSModAccFetchDecodedPSDUBitsTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 decodedPSDUBits[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 DSSSModAccFetchEVM(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* rmsevmMean, float64* peakEVM80211_2016Maximum, float64* peakEVM80211_2007Maximum, float64* peakEVM80211_1999Maximum, float64* frequencyErrorMean, float64* chipClockErrorMean, int32* numberOfChipsUsed) = 0;
  virtual int32 DSSSModAccFetchEVMPerChipMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 evmPerChipMean[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 DSSSModAccFetchIQImpairments(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* iqOriginOffsetMean, float64* iqGainImbalanceMean, float64* iqQuadratureErrorMean) = 0;
  virtual int32 DSSSModAccFetchPPDUInformation(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* dataModulationFormat, int32* payloadLength, int32* preambleType, int32* lockedClocksBit, int32* headerCRCStatus, int32* psducrcStatus) = 0;
  virtual int32 DSSSModAccFetchPeakPowers(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* preamblePeakPowerMaximum, float64* headerPeakPowerMaximum, float64* dataPeakPowerMaximum, float64* ppduPeakPowerMaximum) = 0;
  virtual int32 DeleteSignalConfiguration(niRFmxInstrHandle instrumentHandle, char signalName[]) = 0;
  virtual int32 DisableTrigger(niRFmxInstrHandle instrumentHandle, char selectorString[]) = 0;
  virtual int32 GetAllNamedResultNames(niRFmxInstrHandle instrumentHandle, char selectorString[], char resultNames[], int32 resultNamesBufferSize, int32* actualResultNamesSize, int32* defaultResultExists) = 0;
  virtual int32 GetAttributeF32(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float32* attrVal) = 0;
  virtual int32 GetAttributeF32Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float32 attrVal[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 GetAttributeF64(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float64* attrVal) = 0;
  virtual int32 GetAttributeF64Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float64 attrVal[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 GetAttributeI16(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int16* attrVal) = 0;
  virtual int32 GetAttributeI32(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int32* attrVal) = 0;
  virtual int32 GetAttributeI32Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int32 attrVal[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 GetAttributeI64(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int64* attrVal) = 0;
  virtual int32 GetAttributeI64Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int64 attrVal[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 GetAttributeI8(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int8* attrVal) = 0;
  virtual int32 GetAttributeI8Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int8 attrVal[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 GetAttributeNIComplexDoubleArray(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, NIComplexDouble attrVal[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 GetAttributeNIComplexSingleArray(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, NIComplexSingle attrVal[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 GetAttributeString(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int32 arraySize, char attrVal[]) = 0;
  virtual int32 GetAttributeU16(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt16* attrVal) = 0;
  virtual int32 GetAttributeU32(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt32* attrVal) = 0;
  virtual int32 GetAttributeU32Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt32 attrVal[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 GetAttributeU64Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt64 attrVal[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 GetAttributeU8(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt8* attrVal) = 0;
  virtual int32 GetAttributeU8Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt8 attrVal[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 GetError(niRFmxInstrHandle instrumentHandle, int32* errorCode, int32 errorDescriptionBufferSize, char errorDescription[]) = 0;
  virtual int32 GetErrorString(niRFmxInstrHandle instrumentHandle, int32 errorCode, int32 errorDescriptionBufferSize, char errorDescription[]) = 0;
  virtual int32 Initialize(char resourceName[], char optionString[], niRFmxInstrHandle* handleOut, int32* isNewSession) = 0;
  virtual int32 InitializeFromNIRFSASession(uInt32 nirfsaSession, niRFmxInstrHandle* handleOut) = 0;
  virtual int32 Initiate(niRFmxInstrHandle instrumentHandle, char selectorString[], char resultName[]) = 0;
  virtual int32 OFDMModAccAutoLevel(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout) = 0;
  virtual int32 OFDMModAccCfg1ReferenceWaveform(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 x0, float64 dx, NIComplexSingle referenceWaveform[], int32 arraySize) = 0;
  virtual int32 OFDMModAccCfgAcquisitionLength(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 acquisitionLengthMode, float64 acquisitionLength) = 0;
  virtual int32 OFDMModAccCfgAmplitudeTrackingEnabled(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 amplitudeTrackingEnabled) = 0;
  virtual int32 OFDMModAccCfgAveraging(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 averagingEnabled, int32 averagingCount) = 0;
  virtual int32 OFDMModAccCfgChannelEstimationType(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 channelEstimationType) = 0;
  virtual int32 OFDMModAccCfgCommonClockSourceEnabled(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 commonClockSourceEnabled) = 0;
  virtual int32 OFDMModAccCfgEVMUnit(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 evmUnit) = 0;
  virtual int32 OFDMModAccCfgFrequencyErrorEstimationMethod(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 frequencyErrorEstimationMethod) = 0;
  virtual int32 OFDMModAccCfgMeasurementLength(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 measurementOffset, int32 maximumMeasurementLength) = 0;
  virtual int32 OFDMModAccCfgMeasurementMode(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 measurementMode) = 0;
  virtual int32 OFDMModAccCfgNReferenceWaveforms(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 x0[], float64 dx[], NIComplexSingle referenceWaveform[], int32 referenceWaveformSize[], int32 arraySize) = 0;
  virtual int32 OFDMModAccCfgNoiseCompensationEnabled(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 noiseCompensationEnabled) = 0;
  virtual int32 OFDMModAccCfgOptimizeDynamicRangeForEVM(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 optimizeDynamicRangeForEVMEnabled, double optimizeDynamicRangeForEVMMargin) = 0;
  virtual int32 OFDMModAccCfgPhaseTrackingEnabled(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 phaseTrackingEnabled) = 0;
  virtual int32 OFDMModAccCfgSymbolClockErrorCorrectionEnabled(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 symbolClockErrorCorrectionEnabled) = 0;
  virtual int32 OFDMModAccClearNoiseCalibrationDatabase(niRFmxInstrHandle instrumentHandle) = 0;
  virtual int32 OFDMModAccFetchChainDataRMSEVMPerSymbolMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 chainDataRMSEVMPerSymbolMean[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchChainPilotRMSEVMPerSymbolMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 chainPilotRMSEVMPerSymbolMean[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchChainRMSEVM(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* chainRMSEVMMean, float64* chainDataRMSEVMMean, float64* chainPilotRMSEVMMean) = 0;
  virtual int32 OFDMModAccFetchChainRMSEVMPerSubcarrierMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 chainRMSEVMPerSubcarrierMean[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchChainRMSEVMPerSymbolMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 chainRMSEVMPerSymbolMean[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchChannelFrequencyResponseMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 channelFrequencyResponseMeanMagnitude[], float32 channelFrequencyResponseMeanPhase[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchCommonPilotErrorTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 commonPilotErrorMagnitude[], float32 commonPilotErrorPhase[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchCompositeRMSEVM(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* compositeRMSEVMMean, float64* compositeDataRMSEVMMean, float64* compositePilotRMSEVMMean) = 0;
  virtual int32 OFDMModAccFetchCrossPower(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* crossPowerMean) = 0;
  virtual int32 OFDMModAccFetchCustomGatePowersArray(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64 averagePowerMean[], float64 peakPowerMaximum[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchDataAveragePower(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* dataAveragePowerMean) = 0;
  virtual int32 OFDMModAccFetchDataConstellationTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, NIComplexSingle dataConstellation[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchDataPeakPower(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* dataPeakPowerMaximum) = 0;
  virtual int32 OFDMModAccFetchDecodedEHTSIGBitsTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 decodedEHTSIGBits[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchDecodedLSIGBitsTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 decodedLSIGBits[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchDecodedPSDUBitsTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 decodedPSDUBits[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchDecodedSIGBBitsTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 decodedSIGBBits[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchDecodedSIGBitsTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 decodedSIGBits[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchDecodedServiceBitsTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 decodedServiceBits[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchDecodedUSIGBitsTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 decodedUSIGBits[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchEVMSubcarrierIndices(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 subcarrierIndices[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchFrequencyErrorCCDF10Percent(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* frequencyErrorCCDF10Percent) = 0;
  virtual int32 OFDMModAccFetchFrequencyErrorMean(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* frequencyErrorMean) = 0;
  virtual int32 OFDMModAccFetchGroupDelayMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 groupDelayMean[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchGuardIntervalType(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* guardIntervalType) = 0;
  virtual int32 OFDMModAccFetchIQGainImbalancePerSubcarrierMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 iqGainImbalancePerSubcarrierMean[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchIQImpairments(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* relativeIQOriginOffsetMean, float64* iqGainImbalanceMean, float64* iqQuadratureErrorMean, float64* absoluteIQOriginOffsetMean, float64* iqTimingSkewMean) = 0;
  virtual int32 OFDMModAccFetchIQQuadratureErrorPerSubcarrierMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 iqQuadratureErrorPerSubcarrierMean[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchLSIGParityCheckStatus(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* lsigParityCheckStatus) = 0;
  virtual int32 OFDMModAccFetchLTFSize(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* ltfSize) = 0;
  virtual int32 OFDMModAccFetchMCSIndex(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* mcsIndex) = 0;
  virtual int32 OFDMModAccFetchNumberOfHESIGBSymbols(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* numberOfHESIGBSymbols) = 0;
  virtual int32 OFDMModAccFetchNumberOfSpaceTimeStreams(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* numberOfSpaceTimeStreams) = 0;
  virtual int32 OFDMModAccFetchNumberOfUsers(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* numberOfUsers) = 0;
  virtual int32 OFDMModAccFetchNumberofSymbolsUsed(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* numberOfSymbolsUsed) = 0;
  virtual int32 OFDMModAccFetchPEAveragePower(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* peAveragePowerMean) = 0;
  virtual int32 OFDMModAccFetchPEDuration(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* peDuration) = 0;
  virtual int32 OFDMModAccFetchPEPeakPower(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* pePeakPowerMaximum) = 0;
  virtual int32 OFDMModAccFetchPPDUAveragePower(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* ppduAveragePowerMean) = 0;
  virtual int32 OFDMModAccFetchPPDUPeakPower(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* ppduPeakPowerMaximum) = 0;
  virtual int32 OFDMModAccFetchPPDUType(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* ppduType) = 0;
  virtual int32 OFDMModAccFetchPSDUCRCStatus(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* psducrcStatus) = 0;
  virtual int32 OFDMModAccFetchPhaseNoisePSDMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 phaseNoisePSDMean[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchPilotConstellationTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, NIComplexSingle pilotConstellation[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchPreambleAveragePowers80211ac(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* vhtsigaAveragePowerMean, float64* vhtstfAveragePowerMean, float64* vhtltfAveragePowerMean, float64* vhtsigbAveragePowerMean) = 0;
  virtual int32 OFDMModAccFetchPreambleAveragePowers80211ax(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* rlsigAveragePowerMean, float64* hesigaAveragePowerMean, float64* hesigbAveragePowerMean, float64* hestfAveragePowerMean, float64* heltfAveragePowerMean) = 0;
  virtual int32 OFDMModAccFetchPreambleAveragePowers80211be(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* rlsigAveragePowerMean, float64* usigAveragePowerMean, float64* ehtsigAveragePowerMean, float64* ehtstfAveragePowerMean, float64* ehtltfAveragePowerMean) = 0;
  virtual int32 OFDMModAccFetchPreambleAveragePowers80211n(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* htsigAveragePowerMean, float64* htstfAveragePowerMean, float64* htdltfAveragePowerMean, float64* hteltfAveragePowerMean) = 0;
  virtual int32 OFDMModAccFetchPreambleAveragePowersCommon(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* lstfAveragePowerMean, float64* lltfAveragePowerMean, float64* lsigAveragePowerMean) = 0;
  virtual int32 OFDMModAccFetchPreambleFrequencyErrorTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 preambleFrequencyError[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchPreamblePeakPowers80211ac(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* vhtsigaPeakPowerMaximum, float64* vhtstfPeakPowerMaximum, float64* vhtltfPeakPowerMaximum, float64* vhtsigbPeakPowerMaximum) = 0;
  virtual int32 OFDMModAccFetchPreamblePeakPowers80211ax(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* rlsigPeakPowerMaximum, float64* hesigaPeakPowerMaximum, float64* hesigbPeakPowerMaximum, float64* hestfPeakPowerMaximum, float64* heltfPeakPowerMaximum) = 0;
  virtual int32 OFDMModAccFetchPreamblePeakPowers80211be(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* rlsigPeakPowerMaximum, float64* usigPeakPowerMaximum, float64* ehtsigPeakPowerMaximum, float64* ehtstfPeakPowerMaximum, float64* ehtltfPeakPowerMaximum) = 0;
  virtual int32 OFDMModAccFetchPreamblePeakPowers80211n(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* htsigPeakPowerMaximum, float64* htstfPeakPowerMaximum, float64* htdltfPeakPowerMaximum, float64* hteltfPeakPowerMaximum) = 0;
  virtual int32 OFDMModAccFetchPreamblePeakPowersCommon(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* lstfPeakPowerMaximum, float64* lltfPeakPowerMaximum, float64* lsigPeakPowerMaximum) = 0;
  virtual int32 OFDMModAccFetchRUOffsetAndSize(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* ruOffset, int32* ruSize) = 0;
  virtual int32 OFDMModAccFetchSIGBCRCStatus(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* sigbcrcStatus) = 0;
  virtual int32 OFDMModAccFetchSIGCRCStatus(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* sigcrcStatus) = 0;
  virtual int32 OFDMModAccFetchSpectralFlatness(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* spectralFlatnessMargin, int32* spectralFlatnessMarginSubcarrierIndex) = 0;
  virtual int32 OFDMModAccFetchSpectralFlatnessMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 spectralFlatnessMean[], float32 spectralFlatnessLowerMask[], float32 spectralFlatnessUpperMask[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchStreamDataRMSEVMPerSymbolMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 streamDataRMSEVMPerSymbolMean[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchStreamPilotRMSEVMPerSymbolMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 streamPilotRMSEVMPerSymbolMean[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchStreamRMSEVM(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* streamRMSEVMMean, float64* streamDataRMSEVMMean, float64* streamPilotRMSEVMMean) = 0;
  virtual int32 OFDMModAccFetchStreamRMSEVMPerSubcarrierMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 streamRMSEVMPerSubcarrierMean[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchStreamRMSEVMPerSymbolMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 streamRMSEVMPerSymbolMean[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchSubcarrierChainEVMPerSymbolTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 subcarrierIndex, float64* x0, float64* dx, float32 subcarrierChainEVMPerSymbol[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchSubcarrierStreamEVMPerSymbolTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 subcarrierIndex, float64* x0, float64* dx, float32 subcarrierStreamEVMPerSymbol[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchSymbolChainEVMPerSubcarrierTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 symbolIndex, float64* x0, float64* dx, float32 symbolChainEVMPerSubcarrier[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchSymbolClockErrorMean(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* symbolClockErrorMean) = 0;
  virtual int32 OFDMModAccFetchSymbolStreamEVMPerSubcarrierTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 symbolIndex, float64* x0, float64* dx, float32 symbolStreamEVMPerSubcarrier[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchUnusedToneError(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* unusedToneErrorMargin, int32* unusedToneErrorMarginRUIndex) = 0;
  virtual int32 OFDMModAccFetchUnusedToneErrorMarginPerRU(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64 unusedToneErrorMarginPerRU[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchUnusedToneErrorMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 unusedToneError[], float32 unusedToneErrorMask[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchUserDataConstellationTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, NIComplexSingle userDataConstellation[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchUserPilotConstellationTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, NIComplexSingle userPilotConstellation[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchUserPower(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* userPowerMean) = 0;
  virtual int32 OFDMModAccFetchUserStreamDataRMSEVMPerSymbolMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 userStreamDataRMSEVMPerSymbolMean[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchUserStreamPilotRMSEVMPerSymbolMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 userStreamPilotRMSEVMPerSymbolMean[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchUserStreamRMSEVM(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* userStreamRMSEVMMean, float64* userStreamDataRMSEVMMean, float64* userStreamPilotRMSEVMMean) = 0;
  virtual int32 OFDMModAccFetchUserStreamRMSEVMPerSubcarrierMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 userStreamRMSEVMPerSubcarrierMean[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccFetchUserStreamRMSEVMPerSymbolMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 userStreamRMSEVMPerSymbolMean[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 OFDMModAccValidateCalibrationData(niRFmxInstrHandle instrumentHandle, char selectorString[], int32* calibrationDataValid) = 0;
  virtual int32 PowerRampCfgAcquisitionLength(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 acquisitionLength) = 0;
  virtual int32 PowerRampCfgAveraging(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 averagingEnabled, int32 averagingCount) = 0;
  virtual int32 PowerRampFetchFallTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 rawWaveform[], float32 processedWaveform[], float32 threshold[], float32 powerReference[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 PowerRampFetchMeasurement(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* riseTimeMean, float64* fallTimeMean) = 0;
  virtual int32 PowerRampFetchRiseTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 rawWaveform[], float32 processedWaveform[], float32 threshold[], float32 powerReference[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 ResetAttribute(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID) = 0;
  virtual int32 ResetToDefault(niRFmxInstrHandle instrumentHandle, char selectorString[]) = 0;
  virtual int32 SEMCfgAveraging(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 averagingEnabled, int32 averagingCount, int32 averagingType) = 0;
  virtual int32 SEMCfgMaskType(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 maskType) = 0;
  virtual int32 SEMCfgNumberOfOffsets(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 numberOfOffsets) = 0;
  virtual int32 SEMCfgOffsetFrequencyArray(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 offsetStartFrequency[], float64 offsetStopFrequency[], int32 offsetSideband[], int32 numberOfElements) = 0;
  virtual int32 SEMCfgOffsetRelativeLimitArray(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 relativeLimitStart[], float64 relativeLimitStop[], int32 numberOfElements) = 0;
  virtual int32 SEMCfgSpan(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 spanAuto, float64 span) = 0;
  virtual int32 SEMCfgSweepTime(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 sweepTimeAuto, float64 sweepTimeInterval) = 0;
  virtual int32 SEMFetchCarrierMeasurement(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* absolutePower, float64* relativePower) = 0;
  virtual int32 SEMFetchLowerOffsetMargin(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* measurementStatus, float64* margin, float64* marginFrequency, float64* marginAbsolutePower, float64* marginRelativePower) = 0;
  virtual int32 SEMFetchLowerOffsetMarginArray(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 measurementStatus[], float64 margin[], float64 marginFrequency[], float64 marginAbsolutePower[], float64 marginRelativePower[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 SEMFetchLowerOffsetPower(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* totalAbsolutePower, float64* totalRelativePower, float64* peakAbsolutePower, float64* peakFrequency, float64* peakRelativePower) = 0;
  virtual int32 SEMFetchLowerOffsetPowerArray(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64 totalAbsolutePower[], float64 totalRelativePower[], float64 peakAbsolutePower[], float64 peakFrequency[], float64 peakRelativePower[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 SEMFetchMeasurementStatus(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* measurementStatus) = 0;
  virtual int32 SEMFetchSpectrum(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 spectrum[], float32 compositeMask[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 SEMFetchUpperOffsetMargin(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* measurementStatus, float64* margin, float64* marginFrequency, float64* marginAbsolutePower, float64* marginRelativePower) = 0;
  virtual int32 SEMFetchUpperOffsetMarginArray(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 measurementStatus[], float64 margin[], float64 marginFrequency[], float64 marginAbsolutePower[], float64 marginRelativePower[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 SEMFetchUpperOffsetPower(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* totalAbsolutePower, float64* totalRelativePower, float64* peakAbsolutePower, float64* peakFrequency, float64* peakRelativePower) = 0;
  virtual int32 SEMFetchUpperOffsetPowerArray(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64 totalAbsolutePower[], float64 totalRelativePower[], float64 peakAbsolutePower[], float64 peakFrequency[], float64 peakRelativePower[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 SelectMeasurements(niRFmxInstrHandle instrumentHandle, char selectorString[], uInt32 measurements, int32 enableAllTraces) = 0;
  virtual int32 SendSoftwareEdgeTrigger(niRFmxInstrHandle instrumentHandle) = 0;
  virtual int32 SetAttributeF32(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float32 attrVal) = 0;
  virtual int32 SetAttributeF32Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float32 attrVal[], int32 arraySize) = 0;
  virtual int32 SetAttributeF64(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float64 attrVal) = 0;
  virtual int32 SetAttributeF64Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float64 attrVal[], int32 arraySize) = 0;
  virtual int32 SetAttributeI16(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int16 attrVal) = 0;
  virtual int32 SetAttributeI32(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int32 attrVal) = 0;
  virtual int32 SetAttributeI32Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int32 attrVal[], int32 arraySize) = 0;
  virtual int32 SetAttributeI64(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int64 attrVal) = 0;
  virtual int32 SetAttributeI64Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int64 attrVal[], int32 arraySize) = 0;
  virtual int32 SetAttributeI8(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int8 attrVal) = 0;
  virtual int32 SetAttributeI8Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int8 attrVal[], int32 arraySize) = 0;
  virtual int32 SetAttributeNIComplexDoubleArray(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, NIComplexDouble attrVal[], int32 arraySize) = 0;
  virtual int32 SetAttributeNIComplexSingleArray(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, NIComplexSingle attrVal[], int32 arraySize) = 0;
  virtual int32 SetAttributeString(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, char attrVal[]) = 0;
  virtual int32 SetAttributeU16(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt16 attrVal) = 0;
  virtual int32 SetAttributeU32(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt32 attrVal) = 0;
  virtual int32 SetAttributeU32Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt32 attrVal[], int32 arraySize) = 0;
  virtual int32 SetAttributeU64Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt64 attrVal[], int32 arraySize) = 0;
  virtual int32 SetAttributeU8(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt8 attrVal) = 0;
  virtual int32 SetAttributeU8Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt8 attrVal[], int32 arraySize) = 0;
  virtual int32 TXPCfgAveraging(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 averagingEnabled, int32 averagingCount) = 0;
  virtual int32 TXPCfgBurstDetectionEnabled(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 burstDetectionEnabled) = 0;
  virtual int32 TXPCfgMaximumMeasurementInterval(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 maximumMeasurementInterval) = 0;
  virtual int32 TXPFetchMeasurement(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* averagePowerMean, float64* peakPowerMaximum) = 0;
  virtual int32 TXPFetchPowerTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 power[], int32 arraySize, int32* actualArraySize) = 0;
  virtual int32 WaitForAcquisitionComplete(niRFmxInstrHandle instrumentHandle, float64 timeout) = 0;
  virtual int32 WaitForMeasurementComplete(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout) = 0;
};

}  // namespace nirfmxwlan_grpc
#endif  // NIRFMXWLAN_GRPC_LIBRARY_WRAPPER_H
