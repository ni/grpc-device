//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Real implementation of LibraryInterface for NI-RFMXWLAN
//---------------------------------------------------------------------
#ifndef NIRFMXWLAN_GRPC_LIBRARY_H
#define NIRFMXWLAN_GRPC_LIBRARY_H

#include "nirfmxwlan_library_interface.h"

#include <server/shared_library_interface.h>

#include <memory>

namespace nirfmxwlan_grpc {

class NiRFmxWLANLibrary : public nirfmxwlan_grpc::NiRFmxWLANLibraryInterface {
 public:
  NiRFmxWLANLibrary();
  explicit NiRFmxWLANLibrary(std::shared_ptr<nidevice_grpc::SharedLibraryInterface> shared_library);
  virtual ~NiRFmxWLANLibrary();

  ::grpc::Status check_function_exists(std::string functionName);
  int32 AbortMeasurements(niRFmxInstrHandle instrumentHandle, char selectorString[]);
  int32 AnalyzeIQ1Waveform(niRFmxInstrHandle instrumentHandle, char selectorString[], char resultName[], float64 x0, float64 dx, NIComplexSingle iq[], int32 arraySize, int32 reset, int64 reserved);
  int32 AnalyzeNWaveformsIQ(niRFmxInstrHandle instrumentHandle, char selectorString[], char resultName[], float64 x0[], float64 dx[], NIComplexSingle iq[], int32 iqSize[], int32 arraySize, int32 reset);
  int32 AnalyzeNWaveformsSpectrum(niRFmxInstrHandle instrumentHandle, char selectorString[], char resultName[], float64 x0[], float64 dx[], float32 spectrum[], int32 spectrumSize[], int32 arraySize, int32 reset);
  int32 AnalyzeSpectrum1Waveform(niRFmxInstrHandle instrumentHandle, char selectorString[], char resultName[], float64 x0, float64 dx, float32 spectrum[], int32 arraySize, int32 reset, int64 reserved);
  int32 AutoDetectSignal(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout);
  int32 AutoDetectSignalAnalysisOnly(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 x0, float64 dx, NIComplexSingle iq[], int32 arraySize);
  int32 AutoLevel(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 measurementInterval);
  int32 BuildChainString(char selectorString[], int32 chainNumber, int32 selectorStringOutLength, char selectorStringOut[]);
  int32 BuildGateString(char selectorString[], int32 gateNumber, int32 selectorStringOutLength, char selectorStringOut[]);
  int32 BuildOffsetString(char selectorString[], int32 offsetNumber, int32 selectorStringOutLength, char selectorStringOut[]);
  int32 BuildSegmentString(char selectorString[], int32 segmentNumber, int32 selectorStringOutLength, char selectorStringOut[]);
  int32 BuildSignalString(char signalName[], char resultName[], int32 selectorStringLength, char selectorString[]);
  int32 BuildStreamString(char selectorString[], int32 streamNumber, int32 selectorStringOutLength, char selectorStringOut[]);
  int32 BuildUserString(char selectorString[], int32 userNumber, int32 selectorStringOutLength, char selectorStringOut[]);
  int32 CfgChannelBandwidth(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 channelBandwidth);
  int32 CfgDigitalEdgeTrigger(niRFmxInstrHandle instrumentHandle, char selectorString[], char digitalEdgeSource[], int32 digitalEdge, float64 triggerDelay, int32 enableTrigger);
  int32 CfgExternalAttenuation(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 externalAttenuation);
  int32 CfgFrequency(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 centerFrequency);
  int32 CfgFrequencyArray(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 centerFrequency[], int32 numberOfElements);
  int32 CfgFrequencyReference(niRFmxInstrHandle instrumentHandle, char channelName[], char frequencyReferenceSource[], float64 frequencyReferenceFrequency);
  int32 CfgIQPowerEdgeTrigger(niRFmxInstrHandle instrumentHandle, char selectorString[], char iqPowerEdgeSource[], int32 iqPowerEdgeSlope, float64 iqPowerEdgeLevel, float64 triggerDelay, int32 triggerMinQuietTimeMode, float64 triggerMinQuietTimeDuration, int32 iqPowerEdgeLevelType, int32 enableTrigger);
  int32 CfgMechanicalAttenuation(niRFmxInstrHandle instrumentHandle, char channelName[], int32 mechanicalAttenuationAuto, float64 mechanicalAttenuationValue);
  int32 CfgNumberOfFrequencySegmentsAndReceiveChains(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 numberOfFrequencySegments, int32 numberOfReceiveChains);
  int32 CfgRFAttenuation(niRFmxInstrHandle instrumentHandle, char channelName[], int32 rfAttenuationAuto, float64 rfAttenuationValue);
  int32 CfgReferenceLevel(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 referenceLevel);
  int32 CfgSelectedPortsMultiple(niRFmxInstrHandle instrumentHandle, char selectorString[], char selectedPorts[]);
  int32 CfgSoftwareEdgeTrigger(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 triggerDelay, int32 enableTrigger);
  int32 CfgStandard(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 standard);
  int32 CheckMeasurementStatus(niRFmxInstrHandle instrumentHandle, char selectorString[], int32* isDone);
  int32 ClearAllNamedResults(niRFmxInstrHandle instrumentHandle, char selectorString[]);
  int32 ClearNamedResult(niRFmxInstrHandle instrumentHandle, char selectorString[]);
  int32 CloneSignalConfiguration(niRFmxInstrHandle instrumentHandle, char oldSignalName[], char newSignalName[]);
  int32 Close(niRFmxInstrHandle instrumentHandle, int32 forceDestroy);
  int32 Commit(niRFmxInstrHandle instrumentHandle, char selectorString[]);
  int32 CreateSignalConfiguration(niRFmxInstrHandle instrumentHandle, char signalName[]);
  int32 DSSSModAccCfgAcquisitionLength(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 acquisitionLengthMode, float64 acquisitionLength);
  int32 DSSSModAccCfgAveraging(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 averagingEnabled, int32 averagingCount);
  int32 DSSSModAccCfgEVMUnit(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 evmUnit);
  int32 DSSSModAccCfgMeasurementLength(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 measurementOffset, int32 maximumMeasurementLength);
  int32 DSSSModAccCfgPowerMeasurementCustomGateArray(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 startTime[], float64 stopTime[], int32 numberOfElements);
  int32 DSSSModAccCfgPowerMeasurementEnabled(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 powerMeasurementEnabled);
  int32 DSSSModAccCfgPowerMeasurementNumberOfCustomGates(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 numberOfCustomGates);
  int32 DSSSModAccFetchAveragePowers(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* preambleAveragePowerMean, float64* headerAveragePowerMean, float64* dataAveragePowerMean, float64* ppduAveragePowerMean);
  int32 DSSSModAccFetchConstellationTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, NIComplexSingle constellation[], int32 arraySize, int32* actualArraySize);
  int32 DSSSModAccFetchCustomGatePowersArray(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64 averagePowerMean[], float64 peakPowerMaximum[], int32 arraySize, int32* actualArraySize);
  int32 DSSSModAccFetchDecodedHeaderBitsTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 decodedHeaderBits[], int32 arraySize, int32* actualArraySize);
  int32 DSSSModAccFetchDecodedPSDUBitsTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 decodedPSDUBits[], int32 arraySize, int32* actualArraySize);
  int32 DSSSModAccFetchEVM(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* rmsevmMean, float64* peakEVM80211_2016Maximum, float64* peakEVM80211_2007Maximum, float64* peakEVM80211_1999Maximum, float64* frequencyErrorMean, float64* chipClockErrorMean, int32* numberOfChipsUsed);
  int32 DSSSModAccFetchEVMPerChipMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 evmPerChipMean[], int32 arraySize, int32* actualArraySize);
  int32 DSSSModAccFetchIQImpairments(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* iqOriginOffsetMean, float64* iqGainImbalanceMean, float64* iqQuadratureErrorMean);
  int32 DSSSModAccFetchPPDUInformation(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* dataModulationFormat, int32* payloadLength, int32* preambleType, int32* lockedClocksBit, int32* headerCRCStatus, int32* psducrcStatus);
  int32 DSSSModAccFetchPeakPowers(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* preamblePeakPowerMaximum, float64* headerPeakPowerMaximum, float64* dataPeakPowerMaximum, float64* ppduPeakPowerMaximum);
  int32 DeleteSignalConfiguration(niRFmxInstrHandle instrumentHandle, char signalName[]);
  int32 DisableTrigger(niRFmxInstrHandle instrumentHandle, char selectorString[]);
  int32 GetAllNamedResultNames(niRFmxInstrHandle instrumentHandle, char selectorString[], char resultNames[], int32 resultNamesBufferSize, int32* actualResultNamesSize, int32* defaultResultExists);
  int32 GetAttributeF32(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float32* attrVal);
  int32 GetAttributeF32Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float32 attrVal[], int32 arraySize, int32* actualArraySize);
  int32 GetAttributeF64(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float64* attrVal);
  int32 GetAttributeF64Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float64 attrVal[], int32 arraySize, int32* actualArraySize);
  int32 GetAttributeI16(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int16* attrVal);
  int32 GetAttributeI32(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int32* attrVal);
  int32 GetAttributeI32Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int32 attrVal[], int32 arraySize, int32* actualArraySize);
  int32 GetAttributeI64(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int64* attrVal);
  int32 GetAttributeI64Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int64 attrVal[], int32 arraySize, int32* actualArraySize);
  int32 GetAttributeI8(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int8* attrVal);
  int32 GetAttributeI8Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int8 attrVal[], int32 arraySize, int32* actualArraySize);
  int32 GetAttributeNIComplexDoubleArray(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, NIComplexDouble attrVal[], int32 arraySize, int32* actualArraySize);
  int32 GetAttributeNIComplexSingleArray(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, NIComplexSingle attrVal[], int32 arraySize, int32* actualArraySize);
  int32 GetAttributeString(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int32 arraySize, char attrVal[]);
  int32 GetAttributeU16(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt16* attrVal);
  int32 GetAttributeU32(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt32* attrVal);
  int32 GetAttributeU32Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt32 attrVal[], int32 arraySize, int32* actualArraySize);
  int32 GetAttributeU64Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt64 attrVal[], int32 arraySize, int32* actualArraySize);
  int32 GetAttributeU8(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt8* attrVal);
  int32 GetAttributeU8Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt8 attrVal[], int32 arraySize, int32* actualArraySize);
  int32 GetError(niRFmxInstrHandle instrumentHandle, int32* errorCode, int32 errorDescriptionBufferSize, char errorDescription[]);
  int32 GetErrorString(niRFmxInstrHandle instrumentHandle, int32 errorCode, int32 errorDescriptionBufferSize, char errorDescription[]);
  int32 Initialize(char resourceName[], char optionString[], niRFmxInstrHandle* handleOut, int32* isNewSession);
  int32 InitializeFromNIRFSASession(uInt32 nirfsaSession, niRFmxInstrHandle* handleOut);
  int32 Initiate(niRFmxInstrHandle instrumentHandle, char selectorString[], char resultName[]);
  int32 OFDMModAccAutoLevel(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout);
  int32 OFDMModAccCfg1ReferenceWaveform(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 x0, float64 dx, NIComplexSingle referenceWaveform[], int32 arraySize);
  int32 OFDMModAccCfgAcquisitionLength(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 acquisitionLengthMode, float64 acquisitionLength);
  int32 OFDMModAccCfgAmplitudeTrackingEnabled(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 amplitudeTrackingEnabled);
  int32 OFDMModAccCfgAveraging(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 averagingEnabled, int32 averagingCount);
  int32 OFDMModAccCfgChannelEstimationType(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 channelEstimationType);
  int32 OFDMModAccCfgCommonClockSourceEnabled(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 commonClockSourceEnabled);
  int32 OFDMModAccCfgEVMUnit(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 evmUnit);
  int32 OFDMModAccCfgFrequencyErrorEstimationMethod(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 frequencyErrorEstimationMethod);
  int32 OFDMModAccCfgMeasurementLength(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 measurementOffset, int32 maximumMeasurementLength);
  int32 OFDMModAccCfgMeasurementMode(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 measurementMode);
  int32 OFDMModAccCfgNReferenceWaveforms(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 x0[], float64 dx[], NIComplexSingle referenceWaveform[], int32 referenceWaveformSize[], int32 arraySize);
  int32 OFDMModAccCfgNoiseCompensationEnabled(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 noiseCompensationEnabled);
  int32 OFDMModAccCfgOptimizeDynamicRangeForEVM(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 optimizeDynamicRangeForEVMEnabled, double optimizeDynamicRangeForEVMMargin);
  int32 OFDMModAccCfgPhaseTrackingEnabled(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 phaseTrackingEnabled);
  int32 OFDMModAccCfgSymbolClockErrorCorrectionEnabled(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 symbolClockErrorCorrectionEnabled);
  int32 OFDMModAccClearNoiseCalibrationDatabase(niRFmxInstrHandle instrumentHandle);
  int32 OFDMModAccFetchChainDataRMSEVMPerSymbolMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 chainDataRMSEVMPerSymbolMean[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchChainPilotRMSEVMPerSymbolMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 chainPilotRMSEVMPerSymbolMean[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchChainRMSEVM(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* chainRMSEVMMean, float64* chainDataRMSEVMMean, float64* chainPilotRMSEVMMean);
  int32 OFDMModAccFetchChainRMSEVMPerSubcarrierMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 chainRMSEVMPerSubcarrierMean[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchChainRMSEVMPerSymbolMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 chainRMSEVMPerSymbolMean[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchChannelFrequencyResponseMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 channelFrequencyResponseMeanMagnitude[], float32 channelFrequencyResponseMeanPhase[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchCommonPilotErrorTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 commonPilotErrorMagnitude[], float32 commonPilotErrorPhase[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchCompositeRMSEVM(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* compositeRMSEVMMean, float64* compositeDataRMSEVMMean, float64* compositePilotRMSEVMMean);
  int32 OFDMModAccFetchCrossPower(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* crossPowerMean);
  int32 OFDMModAccFetchCustomGatePowersArray(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64 averagePowerMean[], float64 peakPowerMaximum[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchDataAveragePower(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* dataAveragePowerMean);
  int32 OFDMModAccFetchDataConstellationTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, NIComplexSingle dataConstellation[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchDataPeakPower(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* dataPeakPowerMaximum);
  int32 OFDMModAccFetchDecodedEHTSIGBitsTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 decodedEHTSIGBits[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchDecodedLSIGBitsTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 decodedLSIGBits[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchDecodedPSDUBitsTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 decodedPSDUBits[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchDecodedSIGBBitsTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 decodedSIGBBits[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchDecodedSIGBitsTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 decodedSIGBits[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchDecodedServiceBitsTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 decodedServiceBits[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchDecodedUSIGBitsTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 decodedUSIGBits[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchEVMSubcarrierIndices(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 subcarrierIndices[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchFrequencyErrorCCDF10Percent(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* frequencyErrorCCDF10Percent);
  int32 OFDMModAccFetchFrequencyErrorMean(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* frequencyErrorMean);
  int32 OFDMModAccFetchGroupDelayMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 groupDelayMean[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchGuardIntervalType(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* guardIntervalType);
  int32 OFDMModAccFetchIQGainImbalancePerSubcarrierMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 iqGainImbalancePerSubcarrierMean[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchIQImpairments(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* relativeIQOriginOffsetMean, float64* iqGainImbalanceMean, float64* iqQuadratureErrorMean, float64* absoluteIQOriginOffsetMean, float64* iqTimingSkewMean);
  int32 OFDMModAccFetchIQQuadratureErrorPerSubcarrierMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 iqQuadratureErrorPerSubcarrierMean[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchLSIGParityCheckStatus(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* lsigParityCheckStatus);
  int32 OFDMModAccFetchLTFSize(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* ltfSize);
  int32 OFDMModAccFetchMCSIndex(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* mcsIndex);
  int32 OFDMModAccFetchNumberOfHESIGBSymbols(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* numberOfHESIGBSymbols);
  int32 OFDMModAccFetchNumberOfSpaceTimeStreams(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* numberOfSpaceTimeStreams);
  int32 OFDMModAccFetchNumberOfUsers(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* numberOfUsers);
  int32 OFDMModAccFetchNumberofSymbolsUsed(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* numberOfSymbolsUsed);
  int32 OFDMModAccFetchPEAveragePower(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* peAveragePowerMean);
  int32 OFDMModAccFetchPEDuration(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* peDuration);
  int32 OFDMModAccFetchPEPeakPower(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* pePeakPowerMaximum);
  int32 OFDMModAccFetchPPDUAveragePower(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* ppduAveragePowerMean);
  int32 OFDMModAccFetchPPDUPeakPower(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* ppduPeakPowerMaximum);
  int32 OFDMModAccFetchPPDUType(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* ppduType);
  int32 OFDMModAccFetchPSDUCRCStatus(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* psducrcStatus);
  int32 OFDMModAccFetchPhaseNoisePSDMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 phaseNoisePSDMean[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchPilotConstellationTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, NIComplexSingle pilotConstellation[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchPreambleAveragePowers80211ac(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* vhtsigaAveragePowerMean, float64* vhtstfAveragePowerMean, float64* vhtltfAveragePowerMean, float64* vhtsigbAveragePowerMean);
  int32 OFDMModAccFetchPreambleAveragePowers80211ax(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* rlsigAveragePowerMean, float64* hesigaAveragePowerMean, float64* hesigbAveragePowerMean, float64* hestfAveragePowerMean, float64* heltfAveragePowerMean);
  int32 OFDMModAccFetchPreambleAveragePowers80211be(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* rlsigAveragePowerMean, float64* usigAveragePowerMean, float64* ehtsigAveragePowerMean, float64* ehtstfAveragePowerMean, float64* ehtltfAveragePowerMean);
  int32 OFDMModAccFetchPreambleAveragePowers80211n(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* htsigAveragePowerMean, float64* htstfAveragePowerMean, float64* htdltfAveragePowerMean, float64* hteltfAveragePowerMean);
  int32 OFDMModAccFetchPreambleAveragePowersCommon(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* lstfAveragePowerMean, float64* lltfAveragePowerMean, float64* lsigAveragePowerMean);
  int32 OFDMModAccFetchPreambleFrequencyErrorTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 preambleFrequencyError[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchPreamblePeakPowers80211ac(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* vhtsigaPeakPowerMaximum, float64* vhtstfPeakPowerMaximum, float64* vhtltfPeakPowerMaximum, float64* vhtsigbPeakPowerMaximum);
  int32 OFDMModAccFetchPreamblePeakPowers80211ax(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* rlsigPeakPowerMaximum, float64* hesigaPeakPowerMaximum, float64* hesigbPeakPowerMaximum, float64* hestfPeakPowerMaximum, float64* heltfPeakPowerMaximum);
  int32 OFDMModAccFetchPreamblePeakPowers80211be(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* rlsigPeakPowerMaximum, float64* usigPeakPowerMaximum, float64* ehtsigPeakPowerMaximum, float64* ehtstfPeakPowerMaximum, float64* ehtltfPeakPowerMaximum);
  int32 OFDMModAccFetchPreamblePeakPowers80211n(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* htsigPeakPowerMaximum, float64* htstfPeakPowerMaximum, float64* htdltfPeakPowerMaximum, float64* hteltfPeakPowerMaximum);
  int32 OFDMModAccFetchPreamblePeakPowersCommon(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* lstfPeakPowerMaximum, float64* lltfPeakPowerMaximum, float64* lsigPeakPowerMaximum);
  int32 OFDMModAccFetchRUOffsetAndSize(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* ruOffset, int32* ruSize);
  int32 OFDMModAccFetchSIGBCRCStatus(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* sigbcrcStatus);
  int32 OFDMModAccFetchSIGCRCStatus(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* sigcrcStatus);
  int32 OFDMModAccFetchSpectralFlatness(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* spectralFlatnessMargin, int32* spectralFlatnessMarginSubcarrierIndex);
  int32 OFDMModAccFetchSpectralFlatnessMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 spectralFlatnessMean[], float32 spectralFlatnessLowerMask[], float32 spectralFlatnessUpperMask[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchStreamDataRMSEVMPerSymbolMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 streamDataRMSEVMPerSymbolMean[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchStreamPilotRMSEVMPerSymbolMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 streamPilotRMSEVMPerSymbolMean[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchStreamRMSEVM(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* streamRMSEVMMean, float64* streamDataRMSEVMMean, float64* streamPilotRMSEVMMean);
  int32 OFDMModAccFetchStreamRMSEVMPerSubcarrierMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 streamRMSEVMPerSubcarrierMean[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchStreamRMSEVMPerSymbolMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 streamRMSEVMPerSymbolMean[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchSubcarrierChainEVMPerSymbolTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 subcarrierIndex, float64* x0, float64* dx, float32 subcarrierChainEVMPerSymbol[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchSubcarrierStreamEVMPerSymbolTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 subcarrierIndex, float64* x0, float64* dx, float32 subcarrierStreamEVMPerSymbol[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchSymbolChainEVMPerSubcarrierTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 symbolIndex, float64* x0, float64* dx, float32 symbolChainEVMPerSubcarrier[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchSymbolClockErrorMean(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* symbolClockErrorMean);
  int32 OFDMModAccFetchSymbolStreamEVMPerSubcarrierTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 symbolIndex, float64* x0, float64* dx, float32 symbolStreamEVMPerSubcarrier[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchUnusedToneError(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* unusedToneErrorMargin, int32* unusedToneErrorMarginRUIndex);
  int32 OFDMModAccFetchUnusedToneErrorMarginPerRU(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64 unusedToneErrorMarginPerRU[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchUnusedToneErrorMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 unusedToneError[], float32 unusedToneErrorMask[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchUserDataConstellationTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, NIComplexSingle userDataConstellation[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchUserPilotConstellationTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, NIComplexSingle userPilotConstellation[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchUserPower(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* userPowerMean);
  int32 OFDMModAccFetchUserStreamDataRMSEVMPerSymbolMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 userStreamDataRMSEVMPerSymbolMean[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchUserStreamPilotRMSEVMPerSymbolMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 userStreamPilotRMSEVMPerSymbolMean[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchUserStreamRMSEVM(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* userStreamRMSEVMMean, float64* userStreamDataRMSEVMMean, float64* userStreamPilotRMSEVMMean);
  int32 OFDMModAccFetchUserStreamRMSEVMPerSubcarrierMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 userStreamRMSEVMPerSubcarrierMean[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccFetchUserStreamRMSEVMPerSymbolMeanTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 userStreamRMSEVMPerSymbolMean[], int32 arraySize, int32* actualArraySize);
  int32 OFDMModAccValidateCalibrationData(niRFmxInstrHandle instrumentHandle, char selectorString[], int32* calibrationDataValid);
  int32 PowerRampCfgAcquisitionLength(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 acquisitionLength);
  int32 PowerRampCfgAveraging(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 averagingEnabled, int32 averagingCount);
  int32 PowerRampFetchFallTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 rawWaveform[], float32 processedWaveform[], float32 threshold[], float32 powerReference[], int32 arraySize, int32* actualArraySize);
  int32 PowerRampFetchMeasurement(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* riseTimeMean, float64* fallTimeMean);
  int32 PowerRampFetchRiseTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 rawWaveform[], float32 processedWaveform[], float32 threshold[], float32 powerReference[], int32 arraySize, int32* actualArraySize);
  int32 ResetAttribute(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID);
  int32 ResetToDefault(niRFmxInstrHandle instrumentHandle, char selectorString[]);
  int32 SEMCfgAveraging(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 averagingEnabled, int32 averagingCount, int32 averagingType);
  int32 SEMCfgMaskType(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 maskType);
  int32 SEMCfgNumberOfOffsets(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 numberOfOffsets);
  int32 SEMCfgOffsetFrequencyArray(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 offsetStartFrequency[], float64 offsetStopFrequency[], int32 offsetSideband[], int32 numberOfElements);
  int32 SEMCfgOffsetRelativeLimitArray(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 relativeLimitStart[], float64 relativeLimitStop[], int32 numberOfElements);
  int32 SEMCfgSpan(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 spanAuto, float64 span);
  int32 SEMCfgSweepTime(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 sweepTimeAuto, float64 sweepTimeInterval);
  int32 SEMFetchCarrierMeasurement(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* absolutePower, float64* relativePower);
  int32 SEMFetchLowerOffsetMargin(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* measurementStatus, float64* margin, float64* marginFrequency, float64* marginAbsolutePower, float64* marginRelativePower);
  int32 SEMFetchLowerOffsetMarginArray(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 measurementStatus[], float64 margin[], float64 marginFrequency[], float64 marginAbsolutePower[], float64 marginRelativePower[], int32 arraySize, int32* actualArraySize);
  int32 SEMFetchLowerOffsetPower(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* totalAbsolutePower, float64* totalRelativePower, float64* peakAbsolutePower, float64* peakFrequency, float64* peakRelativePower);
  int32 SEMFetchLowerOffsetPowerArray(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64 totalAbsolutePower[], float64 totalRelativePower[], float64 peakAbsolutePower[], float64 peakFrequency[], float64 peakRelativePower[], int32 arraySize, int32* actualArraySize);
  int32 SEMFetchMeasurementStatus(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* measurementStatus);
  int32 SEMFetchSpectrum(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 spectrum[], float32 compositeMask[], int32 arraySize, int32* actualArraySize);
  int32 SEMFetchUpperOffsetMargin(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* measurementStatus, float64* margin, float64* marginFrequency, float64* marginAbsolutePower, float64* marginRelativePower);
  int32 SEMFetchUpperOffsetMarginArray(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32 measurementStatus[], float64 margin[], float64 marginFrequency[], float64 marginAbsolutePower[], float64 marginRelativePower[], int32 arraySize, int32* actualArraySize);
  int32 SEMFetchUpperOffsetPower(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* totalAbsolutePower, float64* totalRelativePower, float64* peakAbsolutePower, float64* peakFrequency, float64* peakRelativePower);
  int32 SEMFetchUpperOffsetPowerArray(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64 totalAbsolutePower[], float64 totalRelativePower[], float64 peakAbsolutePower[], float64 peakFrequency[], float64 peakRelativePower[], int32 arraySize, int32* actualArraySize);
  int32 SelectMeasurements(niRFmxInstrHandle instrumentHandle, char selectorString[], uInt32 measurements, int32 enableAllTraces);
  int32 SendSoftwareEdgeTrigger(niRFmxInstrHandle instrumentHandle);
  int32 SetAttributeF32(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float32 attrVal);
  int32 SetAttributeF32Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float32 attrVal[], int32 arraySize);
  int32 SetAttributeF64(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float64 attrVal);
  int32 SetAttributeF64Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float64 attrVal[], int32 arraySize);
  int32 SetAttributeI16(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int16 attrVal);
  int32 SetAttributeI32(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int32 attrVal);
  int32 SetAttributeI32Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int32 attrVal[], int32 arraySize);
  int32 SetAttributeI64(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int64 attrVal);
  int32 SetAttributeI64Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int64 attrVal[], int32 arraySize);
  int32 SetAttributeI8(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int8 attrVal);
  int32 SetAttributeI8Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int8 attrVal[], int32 arraySize);
  int32 SetAttributeNIComplexDoubleArray(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, NIComplexDouble attrVal[], int32 arraySize);
  int32 SetAttributeNIComplexSingleArray(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, NIComplexSingle attrVal[], int32 arraySize);
  int32 SetAttributeString(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, char attrVal[]);
  int32 SetAttributeU16(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt16 attrVal);
  int32 SetAttributeU32(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt32 attrVal);
  int32 SetAttributeU32Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt32 attrVal[], int32 arraySize);
  int32 SetAttributeU64Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt64 attrVal[], int32 arraySize);
  int32 SetAttributeU8(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt8 attrVal);
  int32 SetAttributeU8Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt8 attrVal[], int32 arraySize);
  int32 TXPCfgAveraging(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 averagingEnabled, int32 averagingCount);
  int32 TXPCfgBurstDetectionEnabled(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 burstDetectionEnabled);
  int32 TXPCfgMaximumMeasurementInterval(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 maximumMeasurementInterval);
  int32 TXPFetchMeasurement(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* averagePowerMean, float64* peakPowerMaximum);
  int32 TXPFetchPowerTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 power[], int32 arraySize, int32* actualArraySize);
  int32 WaitForAcquisitionComplete(niRFmxInstrHandle instrumentHandle, float64 timeout);
  int32 WaitForMeasurementComplete(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout);

 private:
  using AbortMeasurementsPtr = decltype(&RFmxWLAN_AbortMeasurements);
  using AnalyzeIQ1WaveformPtr = decltype(&RFmxWLAN_AnalyzeIQ1Waveform);
  using AnalyzeNWaveformsIQPtr = decltype(&RFmxWLAN_AnalyzeNWaveformsIQ);
  using AnalyzeNWaveformsSpectrumPtr = decltype(&RFmxWLAN_AnalyzeNWaveformsSpectrum);
  using AnalyzeSpectrum1WaveformPtr = decltype(&RFmxWLAN_AnalyzeSpectrum1Waveform);
  using AutoDetectSignalPtr = decltype(&RFmxWLAN_AutoDetectSignal);
  using AutoDetectSignalAnalysisOnlyPtr = decltype(&RFmxWLAN_AutoDetectSignalAnalysisOnly);
  using AutoLevelPtr = decltype(&RFmxWLAN_AutoLevel);
  using BuildChainStringPtr = decltype(&RFmxWLAN_BuildChainString);
  using BuildGateStringPtr = decltype(&RFmxWLAN_BuildGateString);
  using BuildOffsetStringPtr = decltype(&RFmxWLAN_BuildOffsetString);
  using BuildSegmentStringPtr = decltype(&RFmxWLAN_BuildSegmentString);
  using BuildSignalStringPtr = decltype(&RFmxWLAN_BuildSignalString);
  using BuildStreamStringPtr = decltype(&RFmxWLAN_BuildStreamString);
  using BuildUserStringPtr = decltype(&RFmxWLAN_BuildUserString);
  using CfgChannelBandwidthPtr = decltype(&RFmxWLAN_CfgChannelBandwidth);
  using CfgDigitalEdgeTriggerPtr = decltype(&RFmxWLAN_CfgDigitalEdgeTrigger);
  using CfgExternalAttenuationPtr = decltype(&RFmxWLAN_CfgExternalAttenuation);
  using CfgFrequencyPtr = decltype(&RFmxWLAN_CfgFrequency);
  using CfgFrequencyArrayPtr = decltype(&RFmxWLAN_CfgFrequencyArray);
  using CfgFrequencyReferencePtr = decltype(&RFmxWLAN_CfgFrequencyReference);
  using CfgIQPowerEdgeTriggerPtr = decltype(&RFmxWLAN_CfgIQPowerEdgeTrigger);
  using CfgMechanicalAttenuationPtr = decltype(&RFmxWLAN_CfgMechanicalAttenuation);
  using CfgNumberOfFrequencySegmentsAndReceiveChainsPtr = decltype(&RFmxWLAN_CfgNumberOfFrequencySegmentsAndReceiveChains);
  using CfgRFAttenuationPtr = decltype(&RFmxWLAN_CfgRFAttenuation);
  using CfgReferenceLevelPtr = decltype(&RFmxWLAN_CfgReferenceLevel);
  using CfgSelectedPortsMultiplePtr = decltype(&RFmxWLAN_CfgSelectedPortsMultiple);
  using CfgSoftwareEdgeTriggerPtr = decltype(&RFmxWLAN_CfgSoftwareEdgeTrigger);
  using CfgStandardPtr = decltype(&RFmxWLAN_CfgStandard);
  using CheckMeasurementStatusPtr = decltype(&RFmxWLAN_CheckMeasurementStatus);
  using ClearAllNamedResultsPtr = decltype(&RFmxWLAN_ClearAllNamedResults);
  using ClearNamedResultPtr = decltype(&RFmxWLAN_ClearNamedResult);
  using CloneSignalConfigurationPtr = decltype(&RFmxWLAN_CloneSignalConfiguration);
  using ClosePtr = decltype(&RFmxWLAN_Close);
  using CommitPtr = decltype(&RFmxWLAN_Commit);
  using CreateSignalConfigurationPtr = decltype(&RFmxWLAN_CreateSignalConfiguration);
  using DSSSModAccCfgAcquisitionLengthPtr = decltype(&RFmxWLAN_DSSSModAccCfgAcquisitionLength);
  using DSSSModAccCfgAveragingPtr = decltype(&RFmxWLAN_DSSSModAccCfgAveraging);
  using DSSSModAccCfgEVMUnitPtr = decltype(&RFmxWLAN_DSSSModAccCfgEVMUnit);
  using DSSSModAccCfgMeasurementLengthPtr = decltype(&RFmxWLAN_DSSSModAccCfgMeasurementLength);
  using DSSSModAccCfgPowerMeasurementCustomGateArrayPtr = decltype(&RFmxWLAN_DSSSModAccCfgPowerMeasurementCustomGateArray);
  using DSSSModAccCfgPowerMeasurementEnabledPtr = decltype(&RFmxWLAN_DSSSModAccCfgPowerMeasurementEnabled);
  using DSSSModAccCfgPowerMeasurementNumberOfCustomGatesPtr = decltype(&RFmxWLAN_DSSSModAccCfgPowerMeasurementNumberOfCustomGates);
  using DSSSModAccFetchAveragePowersPtr = decltype(&RFmxWLAN_DSSSModAccFetchAveragePowers);
  using DSSSModAccFetchConstellationTracePtr = decltype(&RFmxWLAN_DSSSModAccFetchConstellationTrace);
  using DSSSModAccFetchCustomGatePowersArrayPtr = decltype(&RFmxWLAN_DSSSModAccFetchCustomGatePowersArray);
  using DSSSModAccFetchDecodedHeaderBitsTracePtr = decltype(&RFmxWLAN_DSSSModAccFetchDecodedHeaderBitsTrace);
  using DSSSModAccFetchDecodedPSDUBitsTracePtr = decltype(&RFmxWLAN_DSSSModAccFetchDecodedPSDUBitsTrace);
  using DSSSModAccFetchEVMPtr = decltype(&RFmxWLAN_DSSSModAccFetchEVM);
  using DSSSModAccFetchEVMPerChipMeanTracePtr = decltype(&RFmxWLAN_DSSSModAccFetchEVMPerChipMeanTrace);
  using DSSSModAccFetchIQImpairmentsPtr = decltype(&RFmxWLAN_DSSSModAccFetchIQImpairments);
  using DSSSModAccFetchPPDUInformationPtr = decltype(&RFmxWLAN_DSSSModAccFetchPPDUInformation);
  using DSSSModAccFetchPeakPowersPtr = decltype(&RFmxWLAN_DSSSModAccFetchPeakPowers);
  using DeleteSignalConfigurationPtr = decltype(&RFmxWLAN_DeleteSignalConfiguration);
  using DisableTriggerPtr = decltype(&RFmxWLAN_DisableTrigger);
  using GetAllNamedResultNamesPtr = decltype(&RFmxWLAN_GetAllNamedResultNames);
  using GetAttributeF32Ptr = decltype(&RFmxWLAN_GetAttributeF32);
  using GetAttributeF32ArrayPtr = decltype(&RFmxWLAN_GetAttributeF32Array);
  using GetAttributeF64Ptr = decltype(&RFmxWLAN_GetAttributeF64);
  using GetAttributeF64ArrayPtr = decltype(&RFmxWLAN_GetAttributeF64Array);
  using GetAttributeI16Ptr = decltype(&RFmxWLAN_GetAttributeI16);
  using GetAttributeI32Ptr = decltype(&RFmxWLAN_GetAttributeI32);
  using GetAttributeI32ArrayPtr = decltype(&RFmxWLAN_GetAttributeI32Array);
  using GetAttributeI64Ptr = decltype(&RFmxWLAN_GetAttributeI64);
  using GetAttributeI64ArrayPtr = decltype(&RFmxWLAN_GetAttributeI64Array);
  using GetAttributeI8Ptr = decltype(&RFmxWLAN_GetAttributeI8);
  using GetAttributeI8ArrayPtr = decltype(&RFmxWLAN_GetAttributeI8Array);
  using GetAttributeNIComplexDoubleArrayPtr = decltype(&RFmxWLAN_GetAttributeNIComplexDoubleArray);
  using GetAttributeNIComplexSingleArrayPtr = decltype(&RFmxWLAN_GetAttributeNIComplexSingleArray);
  using GetAttributeStringPtr = decltype(&RFmxWLAN_GetAttributeString);
  using GetAttributeU16Ptr = decltype(&RFmxWLAN_GetAttributeU16);
  using GetAttributeU32Ptr = decltype(&RFmxWLAN_GetAttributeU32);
  using GetAttributeU32ArrayPtr = decltype(&RFmxWLAN_GetAttributeU32Array);
  using GetAttributeU64ArrayPtr = decltype(&RFmxWLAN_GetAttributeU64Array);
  using GetAttributeU8Ptr = decltype(&RFmxWLAN_GetAttributeU8);
  using GetAttributeU8ArrayPtr = decltype(&RFmxWLAN_GetAttributeU8Array);
  using GetErrorPtr = decltype(&RFmxWLAN_GetError);
  using GetErrorStringPtr = decltype(&RFmxWLAN_GetErrorString);
  using InitializePtr = decltype(&RFmxWLAN_Initialize);
  using InitializeFromNIRFSASessionPtr = decltype(&RFmxWLAN_InitializeFromNIRFSASession);
  using InitiatePtr = decltype(&RFmxWLAN_Initiate);
  using OFDMModAccAutoLevelPtr = decltype(&RFmxWLAN_OFDMModAccAutoLevel);
  using OFDMModAccCfg1ReferenceWaveformPtr = decltype(&RFmxWLAN_OFDMModAccCfg1ReferenceWaveform);
  using OFDMModAccCfgAcquisitionLengthPtr = decltype(&RFmxWLAN_OFDMModAccCfgAcquisitionLength);
  using OFDMModAccCfgAmplitudeTrackingEnabledPtr = decltype(&RFmxWLAN_OFDMModAccCfgAmplitudeTrackingEnabled);
  using OFDMModAccCfgAveragingPtr = decltype(&RFmxWLAN_OFDMModAccCfgAveraging);
  using OFDMModAccCfgChannelEstimationTypePtr = decltype(&RFmxWLAN_OFDMModAccCfgChannelEstimationType);
  using OFDMModAccCfgCommonClockSourceEnabledPtr = decltype(&RFmxWLAN_OFDMModAccCfgCommonClockSourceEnabled);
  using OFDMModAccCfgEVMUnitPtr = decltype(&RFmxWLAN_OFDMModAccCfgEVMUnit);
  using OFDMModAccCfgFrequencyErrorEstimationMethodPtr = decltype(&RFmxWLAN_OFDMModAccCfgFrequencyErrorEstimationMethod);
  using OFDMModAccCfgMeasurementLengthPtr = decltype(&RFmxWLAN_OFDMModAccCfgMeasurementLength);
  using OFDMModAccCfgMeasurementModePtr = decltype(&RFmxWLAN_OFDMModAccCfgMeasurementMode);
  using OFDMModAccCfgNReferenceWaveformsPtr = decltype(&RFmxWLAN_OFDMModAccCfgNReferenceWaveforms);
  using OFDMModAccCfgNoiseCompensationEnabledPtr = decltype(&RFmxWLAN_OFDMModAccCfgNoiseCompensationEnabled);
  using OFDMModAccCfgOptimizeDynamicRangeForEVMPtr = decltype(&RFmxWLAN_OFDMModAccCfgOptimizeDynamicRangeForEVM);
  using OFDMModAccCfgPhaseTrackingEnabledPtr = decltype(&RFmxWLAN_OFDMModAccCfgPhaseTrackingEnabled);
  using OFDMModAccCfgSymbolClockErrorCorrectionEnabledPtr = decltype(&RFmxWLAN_OFDMModAccCfgSymbolClockErrorCorrectionEnabled);
  using OFDMModAccClearNoiseCalibrationDatabasePtr = decltype(&RFmxWLAN_OFDMModAccClearNoiseCalibrationDatabase);
  using OFDMModAccFetchChainDataRMSEVMPerSymbolMeanTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchChainDataRMSEVMPerSymbolMeanTrace);
  using OFDMModAccFetchChainPilotRMSEVMPerSymbolMeanTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchChainPilotRMSEVMPerSymbolMeanTrace);
  using OFDMModAccFetchChainRMSEVMPtr = decltype(&RFmxWLAN_OFDMModAccFetchChainRMSEVM);
  using OFDMModAccFetchChainRMSEVMPerSubcarrierMeanTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchChainRMSEVMPerSubcarrierMeanTrace);
  using OFDMModAccFetchChainRMSEVMPerSymbolMeanTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchChainRMSEVMPerSymbolMeanTrace);
  using OFDMModAccFetchChannelFrequencyResponseMeanTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchChannelFrequencyResponseMeanTrace);
  using OFDMModAccFetchCommonPilotErrorTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchCommonPilotErrorTrace);
  using OFDMModAccFetchCompositeRMSEVMPtr = decltype(&RFmxWLAN_OFDMModAccFetchCompositeRMSEVM);
  using OFDMModAccFetchCrossPowerPtr = decltype(&RFmxWLAN_OFDMModAccFetchCrossPower);
  using OFDMModAccFetchCustomGatePowersArrayPtr = decltype(&RFmxWLAN_OFDMModAccFetchCustomGatePowersArray);
  using OFDMModAccFetchDataAveragePowerPtr = decltype(&RFmxWLAN_OFDMModAccFetchDataAveragePower);
  using OFDMModAccFetchDataConstellationTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchDataConstellationTrace);
  using OFDMModAccFetchDataPeakPowerPtr = decltype(&RFmxWLAN_OFDMModAccFetchDataPeakPower);
  using OFDMModAccFetchDecodedEHTSIGBitsTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchDecodedEHTSIGBitsTrace);
  using OFDMModAccFetchDecodedLSIGBitsTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchDecodedLSIGBitsTrace);
  using OFDMModAccFetchDecodedPSDUBitsTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchDecodedPSDUBitsTrace);
  using OFDMModAccFetchDecodedSIGBBitsTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchDecodedSIGBBitsTrace);
  using OFDMModAccFetchDecodedSIGBitsTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchDecodedSIGBitsTrace);
  using OFDMModAccFetchDecodedServiceBitsTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchDecodedServiceBitsTrace);
  using OFDMModAccFetchDecodedUSIGBitsTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchDecodedUSIGBitsTrace);
  using OFDMModAccFetchEVMSubcarrierIndicesPtr = decltype(&RFmxWLAN_OFDMModAccFetchEVMSubcarrierIndices);
  using OFDMModAccFetchFrequencyErrorCCDF10PercentPtr = decltype(&RFmxWLAN_OFDMModAccFetchFrequencyErrorCCDF10Percent);
  using OFDMModAccFetchFrequencyErrorMeanPtr = decltype(&RFmxWLAN_OFDMModAccFetchFrequencyErrorMean);
  using OFDMModAccFetchGroupDelayMeanTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchGroupDelayMeanTrace);
  using OFDMModAccFetchGuardIntervalTypePtr = decltype(&RFmxWLAN_OFDMModAccFetchGuardIntervalType);
  using OFDMModAccFetchIQGainImbalancePerSubcarrierMeanTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchIQGainImbalancePerSubcarrierMeanTrace);
  using OFDMModAccFetchIQImpairmentsPtr = decltype(&RFmxWLAN_OFDMModAccFetchIQImpairments);
  using OFDMModAccFetchIQQuadratureErrorPerSubcarrierMeanTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchIQQuadratureErrorPerSubcarrierMeanTrace);
  using OFDMModAccFetchLSIGParityCheckStatusPtr = decltype(&RFmxWLAN_OFDMModAccFetchLSIGParityCheckStatus);
  using OFDMModAccFetchLTFSizePtr = decltype(&RFmxWLAN_OFDMModAccFetchLTFSize);
  using OFDMModAccFetchMCSIndexPtr = decltype(&RFmxWLAN_OFDMModAccFetchMCSIndex);
  using OFDMModAccFetchNumberOfHESIGBSymbolsPtr = decltype(&RFmxWLAN_OFDMModAccFetchNumberOfHESIGBSymbols);
  using OFDMModAccFetchNumberOfSpaceTimeStreamsPtr = decltype(&RFmxWLAN_OFDMModAccFetchNumberOfSpaceTimeStreams);
  using OFDMModAccFetchNumberOfUsersPtr = decltype(&RFmxWLAN_OFDMModAccFetchNumberOfUsers);
  using OFDMModAccFetchNumberofSymbolsUsedPtr = decltype(&RFmxWLAN_OFDMModAccFetchNumberofSymbolsUsed);
  using OFDMModAccFetchPEAveragePowerPtr = decltype(&RFmxWLAN_OFDMModAccFetchPEAveragePower);
  using OFDMModAccFetchPEDurationPtr = decltype(&RFmxWLAN_OFDMModAccFetchPEDuration);
  using OFDMModAccFetchPEPeakPowerPtr = decltype(&RFmxWLAN_OFDMModAccFetchPEPeakPower);
  using OFDMModAccFetchPPDUAveragePowerPtr = decltype(&RFmxWLAN_OFDMModAccFetchPPDUAveragePower);
  using OFDMModAccFetchPPDUPeakPowerPtr = decltype(&RFmxWLAN_OFDMModAccFetchPPDUPeakPower);
  using OFDMModAccFetchPPDUTypePtr = decltype(&RFmxWLAN_OFDMModAccFetchPPDUType);
  using OFDMModAccFetchPSDUCRCStatusPtr = decltype(&RFmxWLAN_OFDMModAccFetchPSDUCRCStatus);
  using OFDMModAccFetchPhaseNoisePSDMeanTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchPhaseNoisePSDMeanTrace);
  using OFDMModAccFetchPilotConstellationTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchPilotConstellationTrace);
  using OFDMModAccFetchPreambleAveragePowers80211acPtr = decltype(&RFmxWLAN_OFDMModAccFetchPreambleAveragePowers802_11ac);
  using OFDMModAccFetchPreambleAveragePowers80211axPtr = decltype(&RFmxWLAN_OFDMModAccFetchPreambleAveragePowers802_11ax);
  using OFDMModAccFetchPreambleAveragePowers80211bePtr = decltype(&RFmxWLAN_OFDMModAccFetchPreambleAveragePowers802_11be);
  using OFDMModAccFetchPreambleAveragePowers80211nPtr = decltype(&RFmxWLAN_OFDMModAccFetchPreambleAveragePowers802_11n);
  using OFDMModAccFetchPreambleAveragePowersCommonPtr = decltype(&RFmxWLAN_OFDMModAccFetchPreambleAveragePowersCommon);
  using OFDMModAccFetchPreambleFrequencyErrorTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchPreambleFrequencyErrorTrace);
  using OFDMModAccFetchPreamblePeakPowers80211acPtr = decltype(&RFmxWLAN_OFDMModAccFetchPreamblePeakPowers802_11ac);
  using OFDMModAccFetchPreamblePeakPowers80211axPtr = decltype(&RFmxWLAN_OFDMModAccFetchPreamblePeakPowers802_11ax);
  using OFDMModAccFetchPreamblePeakPowers80211bePtr = decltype(&RFmxWLAN_OFDMModAccFetchPreamblePeakPowers802_11be);
  using OFDMModAccFetchPreamblePeakPowers80211nPtr = decltype(&RFmxWLAN_OFDMModAccFetchPreamblePeakPowers802_11n);
  using OFDMModAccFetchPreamblePeakPowersCommonPtr = decltype(&RFmxWLAN_OFDMModAccFetchPreamblePeakPowersCommon);
  using OFDMModAccFetchRUOffsetAndSizePtr = decltype(&RFmxWLAN_OFDMModAccFetchRUOffsetAndSize);
  using OFDMModAccFetchSIGBCRCStatusPtr = decltype(&RFmxWLAN_OFDMModAccFetchSIGBCRCStatus);
  using OFDMModAccFetchSIGCRCStatusPtr = decltype(&RFmxWLAN_OFDMModAccFetchSIGCRCStatus);
  using OFDMModAccFetchSpectralFlatnessPtr = decltype(&RFmxWLAN_OFDMModAccFetchSpectralFlatness);
  using OFDMModAccFetchSpectralFlatnessMeanTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchSpectralFlatnessMeanTrace);
  using OFDMModAccFetchStreamDataRMSEVMPerSymbolMeanTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchStreamDataRMSEVMPerSymbolMeanTrace);
  using OFDMModAccFetchStreamPilotRMSEVMPerSymbolMeanTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchStreamPilotRMSEVMPerSymbolMeanTrace);
  using OFDMModAccFetchStreamRMSEVMPtr = decltype(&RFmxWLAN_OFDMModAccFetchStreamRMSEVM);
  using OFDMModAccFetchStreamRMSEVMPerSubcarrierMeanTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchStreamRMSEVMPerSubcarrierMeanTrace);
  using OFDMModAccFetchStreamRMSEVMPerSymbolMeanTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchStreamRMSEVMPerSymbolMeanTrace);
  using OFDMModAccFetchSubcarrierChainEVMPerSymbolTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchSubcarrierChainEVMPerSymbolTrace);
  using OFDMModAccFetchSubcarrierStreamEVMPerSymbolTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchSubcarrierStreamEVMPerSymbolTrace);
  using OFDMModAccFetchSymbolChainEVMPerSubcarrierTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchSymbolChainEVMPerSubcarrierTrace);
  using OFDMModAccFetchSymbolClockErrorMeanPtr = decltype(&RFmxWLAN_OFDMModAccFetchSymbolClockErrorMean);
  using OFDMModAccFetchSymbolStreamEVMPerSubcarrierTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchSymbolStreamEVMPerSubcarrierTrace);
  using OFDMModAccFetchUnusedToneErrorPtr = decltype(&RFmxWLAN_OFDMModAccFetchUnusedToneError);
  using OFDMModAccFetchUnusedToneErrorMarginPerRUPtr = decltype(&RFmxWLAN_OFDMModAccFetchUnusedToneErrorMarginPerRU);
  using OFDMModAccFetchUnusedToneErrorMeanTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchUnusedToneErrorMeanTrace);
  using OFDMModAccFetchUserDataConstellationTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchUserDataConstellationTrace);
  using OFDMModAccFetchUserPilotConstellationTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchUserPilotConstellationTrace);
  using OFDMModAccFetchUserPowerPtr = decltype(&RFmxWLAN_OFDMModAccFetchUserPower);
  using OFDMModAccFetchUserStreamDataRMSEVMPerSymbolMeanTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchUserStreamDataRMSEVMPerSymbolMeanTrace);
  using OFDMModAccFetchUserStreamPilotRMSEVMPerSymbolMeanTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchUserStreamPilotRMSEVMPerSymbolMeanTrace);
  using OFDMModAccFetchUserStreamRMSEVMPtr = decltype(&RFmxWLAN_OFDMModAccFetchUserStreamRMSEVM);
  using OFDMModAccFetchUserStreamRMSEVMPerSubcarrierMeanTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchUserStreamRMSEVMPerSubcarrierMeanTrace);
  using OFDMModAccFetchUserStreamRMSEVMPerSymbolMeanTracePtr = decltype(&RFmxWLAN_OFDMModAccFetchUserStreamRMSEVMPerSymbolMeanTrace);
  using OFDMModAccValidateCalibrationDataPtr = decltype(&RFmxWLAN_OFDMModAccValidateCalibrationData);
  using PowerRampCfgAcquisitionLengthPtr = decltype(&RFmxWLAN_PowerRampCfgAcquisitionLength);
  using PowerRampCfgAveragingPtr = decltype(&RFmxWLAN_PowerRampCfgAveraging);
  using PowerRampFetchFallTracePtr = decltype(&RFmxWLAN_PowerRampFetchFallTrace);
  using PowerRampFetchMeasurementPtr = decltype(&RFmxWLAN_PowerRampFetchMeasurement);
  using PowerRampFetchRiseTracePtr = decltype(&RFmxWLAN_PowerRampFetchRiseTrace);
  using ResetAttributePtr = decltype(&RFmxWLAN_ResetAttribute);
  using ResetToDefaultPtr = decltype(&RFmxWLAN_ResetToDefault);
  using SEMCfgAveragingPtr = decltype(&RFmxWLAN_SEMCfgAveraging);
  using SEMCfgMaskTypePtr = decltype(&RFmxWLAN_SEMCfgMaskType);
  using SEMCfgNumberOfOffsetsPtr = decltype(&RFmxWLAN_SEMCfgNumberOfOffsets);
  using SEMCfgOffsetFrequencyArrayPtr = decltype(&RFmxWLAN_SEMCfgOffsetFrequencyArray);
  using SEMCfgOffsetRelativeLimitArrayPtr = decltype(&RFmxWLAN_SEMCfgOffsetRelativeLimitArray);
  using SEMCfgSpanPtr = decltype(&RFmxWLAN_SEMCfgSpan);
  using SEMCfgSweepTimePtr = decltype(&RFmxWLAN_SEMCfgSweepTime);
  using SEMFetchCarrierMeasurementPtr = decltype(&RFmxWLAN_SEMFetchCarrierMeasurement);
  using SEMFetchLowerOffsetMarginPtr = decltype(&RFmxWLAN_SEMFetchLowerOffsetMargin);
  using SEMFetchLowerOffsetMarginArrayPtr = decltype(&RFmxWLAN_SEMFetchLowerOffsetMarginArray);
  using SEMFetchLowerOffsetPowerPtr = decltype(&RFmxWLAN_SEMFetchLowerOffsetPower);
  using SEMFetchLowerOffsetPowerArrayPtr = decltype(&RFmxWLAN_SEMFetchLowerOffsetPowerArray);
  using SEMFetchMeasurementStatusPtr = decltype(&RFmxWLAN_SEMFetchMeasurementStatus);
  using SEMFetchSpectrumPtr = decltype(&RFmxWLAN_SEMFetchSpectrum);
  using SEMFetchUpperOffsetMarginPtr = decltype(&RFmxWLAN_SEMFetchUpperOffsetMargin);
  using SEMFetchUpperOffsetMarginArrayPtr = decltype(&RFmxWLAN_SEMFetchUpperOffsetMarginArray);
  using SEMFetchUpperOffsetPowerPtr = decltype(&RFmxWLAN_SEMFetchUpperOffsetPower);
  using SEMFetchUpperOffsetPowerArrayPtr = decltype(&RFmxWLAN_SEMFetchUpperOffsetPowerArray);
  using SelectMeasurementsPtr = decltype(&RFmxWLAN_SelectMeasurements);
  using SendSoftwareEdgeTriggerPtr = decltype(&RFmxWLAN_SendSoftwareEdgeTrigger);
  using SetAttributeF32Ptr = decltype(&RFmxWLAN_SetAttributeF32);
  using SetAttributeF32ArrayPtr = decltype(&RFmxWLAN_SetAttributeF32Array);
  using SetAttributeF64Ptr = decltype(&RFmxWLAN_SetAttributeF64);
  using SetAttributeF64ArrayPtr = decltype(&RFmxWLAN_SetAttributeF64Array);
  using SetAttributeI16Ptr = decltype(&RFmxWLAN_SetAttributeI16);
  using SetAttributeI32Ptr = decltype(&RFmxWLAN_SetAttributeI32);
  using SetAttributeI32ArrayPtr = decltype(&RFmxWLAN_SetAttributeI32Array);
  using SetAttributeI64Ptr = decltype(&RFmxWLAN_SetAttributeI64);
  using SetAttributeI64ArrayPtr = decltype(&RFmxWLAN_SetAttributeI64Array);
  using SetAttributeI8Ptr = decltype(&RFmxWLAN_SetAttributeI8);
  using SetAttributeI8ArrayPtr = decltype(&RFmxWLAN_SetAttributeI8Array);
  using SetAttributeNIComplexDoubleArrayPtr = decltype(&RFmxWLAN_SetAttributeNIComplexDoubleArray);
  using SetAttributeNIComplexSingleArrayPtr = decltype(&RFmxWLAN_SetAttributeNIComplexSingleArray);
  using SetAttributeStringPtr = decltype(&RFmxWLAN_SetAttributeString);
  using SetAttributeU16Ptr = decltype(&RFmxWLAN_SetAttributeU16);
  using SetAttributeU32Ptr = decltype(&RFmxWLAN_SetAttributeU32);
  using SetAttributeU32ArrayPtr = decltype(&RFmxWLAN_SetAttributeU32Array);
  using SetAttributeU64ArrayPtr = decltype(&RFmxWLAN_SetAttributeU64Array);
  using SetAttributeU8Ptr = decltype(&RFmxWLAN_SetAttributeU8);
  using SetAttributeU8ArrayPtr = decltype(&RFmxWLAN_SetAttributeU8Array);
  using TXPCfgAveragingPtr = decltype(&RFmxWLAN_TXPCfgAveraging);
  using TXPCfgBurstDetectionEnabledPtr = decltype(&RFmxWLAN_TXPCfgBurstDetectionEnabled);
  using TXPCfgMaximumMeasurementIntervalPtr = decltype(&RFmxWLAN_TXPCfgMaximumMeasurementInterval);
  using TXPFetchMeasurementPtr = decltype(&RFmxWLAN_TXPFetchMeasurement);
  using TXPFetchPowerTracePtr = decltype(&RFmxWLAN_TXPFetchPowerTrace);
  using WaitForAcquisitionCompletePtr = decltype(&RFmxWLAN_WaitForAcquisitionComplete);
  using WaitForMeasurementCompletePtr = decltype(&RFmxWLAN_WaitForMeasurementComplete);

  typedef struct FunctionPointers {
    AbortMeasurementsPtr AbortMeasurements;
    AnalyzeIQ1WaveformPtr AnalyzeIQ1Waveform;
    AnalyzeNWaveformsIQPtr AnalyzeNWaveformsIQ;
    AnalyzeNWaveformsSpectrumPtr AnalyzeNWaveformsSpectrum;
    AnalyzeSpectrum1WaveformPtr AnalyzeSpectrum1Waveform;
    AutoDetectSignalPtr AutoDetectSignal;
    AutoDetectSignalAnalysisOnlyPtr AutoDetectSignalAnalysisOnly;
    AutoLevelPtr AutoLevel;
    BuildChainStringPtr BuildChainString;
    BuildGateStringPtr BuildGateString;
    BuildOffsetStringPtr BuildOffsetString;
    BuildSegmentStringPtr BuildSegmentString;
    BuildSignalStringPtr BuildSignalString;
    BuildStreamStringPtr BuildStreamString;
    BuildUserStringPtr BuildUserString;
    CfgChannelBandwidthPtr CfgChannelBandwidth;
    CfgDigitalEdgeTriggerPtr CfgDigitalEdgeTrigger;
    CfgExternalAttenuationPtr CfgExternalAttenuation;
    CfgFrequencyPtr CfgFrequency;
    CfgFrequencyArrayPtr CfgFrequencyArray;
    CfgFrequencyReferencePtr CfgFrequencyReference;
    CfgIQPowerEdgeTriggerPtr CfgIQPowerEdgeTrigger;
    CfgMechanicalAttenuationPtr CfgMechanicalAttenuation;
    CfgNumberOfFrequencySegmentsAndReceiveChainsPtr CfgNumberOfFrequencySegmentsAndReceiveChains;
    CfgRFAttenuationPtr CfgRFAttenuation;
    CfgReferenceLevelPtr CfgReferenceLevel;
    CfgSelectedPortsMultiplePtr CfgSelectedPortsMultiple;
    CfgSoftwareEdgeTriggerPtr CfgSoftwareEdgeTrigger;
    CfgStandardPtr CfgStandard;
    CheckMeasurementStatusPtr CheckMeasurementStatus;
    ClearAllNamedResultsPtr ClearAllNamedResults;
    ClearNamedResultPtr ClearNamedResult;
    CloneSignalConfigurationPtr CloneSignalConfiguration;
    ClosePtr Close;
    CommitPtr Commit;
    CreateSignalConfigurationPtr CreateSignalConfiguration;
    DSSSModAccCfgAcquisitionLengthPtr DSSSModAccCfgAcquisitionLength;
    DSSSModAccCfgAveragingPtr DSSSModAccCfgAveraging;
    DSSSModAccCfgEVMUnitPtr DSSSModAccCfgEVMUnit;
    DSSSModAccCfgMeasurementLengthPtr DSSSModAccCfgMeasurementLength;
    DSSSModAccCfgPowerMeasurementCustomGateArrayPtr DSSSModAccCfgPowerMeasurementCustomGateArray;
    DSSSModAccCfgPowerMeasurementEnabledPtr DSSSModAccCfgPowerMeasurementEnabled;
    DSSSModAccCfgPowerMeasurementNumberOfCustomGatesPtr DSSSModAccCfgPowerMeasurementNumberOfCustomGates;
    DSSSModAccFetchAveragePowersPtr DSSSModAccFetchAveragePowers;
    DSSSModAccFetchConstellationTracePtr DSSSModAccFetchConstellationTrace;
    DSSSModAccFetchCustomGatePowersArrayPtr DSSSModAccFetchCustomGatePowersArray;
    DSSSModAccFetchDecodedHeaderBitsTracePtr DSSSModAccFetchDecodedHeaderBitsTrace;
    DSSSModAccFetchDecodedPSDUBitsTracePtr DSSSModAccFetchDecodedPSDUBitsTrace;
    DSSSModAccFetchEVMPtr DSSSModAccFetchEVM;
    DSSSModAccFetchEVMPerChipMeanTracePtr DSSSModAccFetchEVMPerChipMeanTrace;
    DSSSModAccFetchIQImpairmentsPtr DSSSModAccFetchIQImpairments;
    DSSSModAccFetchPPDUInformationPtr DSSSModAccFetchPPDUInformation;
    DSSSModAccFetchPeakPowersPtr DSSSModAccFetchPeakPowers;
    DeleteSignalConfigurationPtr DeleteSignalConfiguration;
    DisableTriggerPtr DisableTrigger;
    GetAllNamedResultNamesPtr GetAllNamedResultNames;
    GetAttributeF32Ptr GetAttributeF32;
    GetAttributeF32ArrayPtr GetAttributeF32Array;
    GetAttributeF64Ptr GetAttributeF64;
    GetAttributeF64ArrayPtr GetAttributeF64Array;
    GetAttributeI16Ptr GetAttributeI16;
    GetAttributeI32Ptr GetAttributeI32;
    GetAttributeI32ArrayPtr GetAttributeI32Array;
    GetAttributeI64Ptr GetAttributeI64;
    GetAttributeI64ArrayPtr GetAttributeI64Array;
    GetAttributeI8Ptr GetAttributeI8;
    GetAttributeI8ArrayPtr GetAttributeI8Array;
    GetAttributeNIComplexDoubleArrayPtr GetAttributeNIComplexDoubleArray;
    GetAttributeNIComplexSingleArrayPtr GetAttributeNIComplexSingleArray;
    GetAttributeStringPtr GetAttributeString;
    GetAttributeU16Ptr GetAttributeU16;
    GetAttributeU32Ptr GetAttributeU32;
    GetAttributeU32ArrayPtr GetAttributeU32Array;
    GetAttributeU64ArrayPtr GetAttributeU64Array;
    GetAttributeU8Ptr GetAttributeU8;
    GetAttributeU8ArrayPtr GetAttributeU8Array;
    GetErrorPtr GetError;
    GetErrorStringPtr GetErrorString;
    InitializePtr Initialize;
    InitializeFromNIRFSASessionPtr InitializeFromNIRFSASession;
    InitiatePtr Initiate;
    OFDMModAccAutoLevelPtr OFDMModAccAutoLevel;
    OFDMModAccCfg1ReferenceWaveformPtr OFDMModAccCfg1ReferenceWaveform;
    OFDMModAccCfgAcquisitionLengthPtr OFDMModAccCfgAcquisitionLength;
    OFDMModAccCfgAmplitudeTrackingEnabledPtr OFDMModAccCfgAmplitudeTrackingEnabled;
    OFDMModAccCfgAveragingPtr OFDMModAccCfgAveraging;
    OFDMModAccCfgChannelEstimationTypePtr OFDMModAccCfgChannelEstimationType;
    OFDMModAccCfgCommonClockSourceEnabledPtr OFDMModAccCfgCommonClockSourceEnabled;
    OFDMModAccCfgEVMUnitPtr OFDMModAccCfgEVMUnit;
    OFDMModAccCfgFrequencyErrorEstimationMethodPtr OFDMModAccCfgFrequencyErrorEstimationMethod;
    OFDMModAccCfgMeasurementLengthPtr OFDMModAccCfgMeasurementLength;
    OFDMModAccCfgMeasurementModePtr OFDMModAccCfgMeasurementMode;
    OFDMModAccCfgNReferenceWaveformsPtr OFDMModAccCfgNReferenceWaveforms;
    OFDMModAccCfgNoiseCompensationEnabledPtr OFDMModAccCfgNoiseCompensationEnabled;
    OFDMModAccCfgOptimizeDynamicRangeForEVMPtr OFDMModAccCfgOptimizeDynamicRangeForEVM;
    OFDMModAccCfgPhaseTrackingEnabledPtr OFDMModAccCfgPhaseTrackingEnabled;
    OFDMModAccCfgSymbolClockErrorCorrectionEnabledPtr OFDMModAccCfgSymbolClockErrorCorrectionEnabled;
    OFDMModAccClearNoiseCalibrationDatabasePtr OFDMModAccClearNoiseCalibrationDatabase;
    OFDMModAccFetchChainDataRMSEVMPerSymbolMeanTracePtr OFDMModAccFetchChainDataRMSEVMPerSymbolMeanTrace;
    OFDMModAccFetchChainPilotRMSEVMPerSymbolMeanTracePtr OFDMModAccFetchChainPilotRMSEVMPerSymbolMeanTrace;
    OFDMModAccFetchChainRMSEVMPtr OFDMModAccFetchChainRMSEVM;
    OFDMModAccFetchChainRMSEVMPerSubcarrierMeanTracePtr OFDMModAccFetchChainRMSEVMPerSubcarrierMeanTrace;
    OFDMModAccFetchChainRMSEVMPerSymbolMeanTracePtr OFDMModAccFetchChainRMSEVMPerSymbolMeanTrace;
    OFDMModAccFetchChannelFrequencyResponseMeanTracePtr OFDMModAccFetchChannelFrequencyResponseMeanTrace;
    OFDMModAccFetchCommonPilotErrorTracePtr OFDMModAccFetchCommonPilotErrorTrace;
    OFDMModAccFetchCompositeRMSEVMPtr OFDMModAccFetchCompositeRMSEVM;
    OFDMModAccFetchCrossPowerPtr OFDMModAccFetchCrossPower;
    OFDMModAccFetchCustomGatePowersArrayPtr OFDMModAccFetchCustomGatePowersArray;
    OFDMModAccFetchDataAveragePowerPtr OFDMModAccFetchDataAveragePower;
    OFDMModAccFetchDataConstellationTracePtr OFDMModAccFetchDataConstellationTrace;
    OFDMModAccFetchDataPeakPowerPtr OFDMModAccFetchDataPeakPower;
    OFDMModAccFetchDecodedEHTSIGBitsTracePtr OFDMModAccFetchDecodedEHTSIGBitsTrace;
    OFDMModAccFetchDecodedLSIGBitsTracePtr OFDMModAccFetchDecodedLSIGBitsTrace;
    OFDMModAccFetchDecodedPSDUBitsTracePtr OFDMModAccFetchDecodedPSDUBitsTrace;
    OFDMModAccFetchDecodedSIGBBitsTracePtr OFDMModAccFetchDecodedSIGBBitsTrace;
    OFDMModAccFetchDecodedSIGBitsTracePtr OFDMModAccFetchDecodedSIGBitsTrace;
    OFDMModAccFetchDecodedServiceBitsTracePtr OFDMModAccFetchDecodedServiceBitsTrace;
    OFDMModAccFetchDecodedUSIGBitsTracePtr OFDMModAccFetchDecodedUSIGBitsTrace;
    OFDMModAccFetchEVMSubcarrierIndicesPtr OFDMModAccFetchEVMSubcarrierIndices;
    OFDMModAccFetchFrequencyErrorCCDF10PercentPtr OFDMModAccFetchFrequencyErrorCCDF10Percent;
    OFDMModAccFetchFrequencyErrorMeanPtr OFDMModAccFetchFrequencyErrorMean;
    OFDMModAccFetchGroupDelayMeanTracePtr OFDMModAccFetchGroupDelayMeanTrace;
    OFDMModAccFetchGuardIntervalTypePtr OFDMModAccFetchGuardIntervalType;
    OFDMModAccFetchIQGainImbalancePerSubcarrierMeanTracePtr OFDMModAccFetchIQGainImbalancePerSubcarrierMeanTrace;
    OFDMModAccFetchIQImpairmentsPtr OFDMModAccFetchIQImpairments;
    OFDMModAccFetchIQQuadratureErrorPerSubcarrierMeanTracePtr OFDMModAccFetchIQQuadratureErrorPerSubcarrierMeanTrace;
    OFDMModAccFetchLSIGParityCheckStatusPtr OFDMModAccFetchLSIGParityCheckStatus;
    OFDMModAccFetchLTFSizePtr OFDMModAccFetchLTFSize;
    OFDMModAccFetchMCSIndexPtr OFDMModAccFetchMCSIndex;
    OFDMModAccFetchNumberOfHESIGBSymbolsPtr OFDMModAccFetchNumberOfHESIGBSymbols;
    OFDMModAccFetchNumberOfSpaceTimeStreamsPtr OFDMModAccFetchNumberOfSpaceTimeStreams;
    OFDMModAccFetchNumberOfUsersPtr OFDMModAccFetchNumberOfUsers;
    OFDMModAccFetchNumberofSymbolsUsedPtr OFDMModAccFetchNumberofSymbolsUsed;
    OFDMModAccFetchPEAveragePowerPtr OFDMModAccFetchPEAveragePower;
    OFDMModAccFetchPEDurationPtr OFDMModAccFetchPEDuration;
    OFDMModAccFetchPEPeakPowerPtr OFDMModAccFetchPEPeakPower;
    OFDMModAccFetchPPDUAveragePowerPtr OFDMModAccFetchPPDUAveragePower;
    OFDMModAccFetchPPDUPeakPowerPtr OFDMModAccFetchPPDUPeakPower;
    OFDMModAccFetchPPDUTypePtr OFDMModAccFetchPPDUType;
    OFDMModAccFetchPSDUCRCStatusPtr OFDMModAccFetchPSDUCRCStatus;
    OFDMModAccFetchPhaseNoisePSDMeanTracePtr OFDMModAccFetchPhaseNoisePSDMeanTrace;
    OFDMModAccFetchPilotConstellationTracePtr OFDMModAccFetchPilotConstellationTrace;
    OFDMModAccFetchPreambleAveragePowers80211acPtr OFDMModAccFetchPreambleAveragePowers80211ac;
    OFDMModAccFetchPreambleAveragePowers80211axPtr OFDMModAccFetchPreambleAveragePowers80211ax;
    OFDMModAccFetchPreambleAveragePowers80211bePtr OFDMModAccFetchPreambleAveragePowers80211be;
    OFDMModAccFetchPreambleAveragePowers80211nPtr OFDMModAccFetchPreambleAveragePowers80211n;
    OFDMModAccFetchPreambleAveragePowersCommonPtr OFDMModAccFetchPreambleAveragePowersCommon;
    OFDMModAccFetchPreambleFrequencyErrorTracePtr OFDMModAccFetchPreambleFrequencyErrorTrace;
    OFDMModAccFetchPreamblePeakPowers80211acPtr OFDMModAccFetchPreamblePeakPowers80211ac;
    OFDMModAccFetchPreamblePeakPowers80211axPtr OFDMModAccFetchPreamblePeakPowers80211ax;
    OFDMModAccFetchPreamblePeakPowers80211bePtr OFDMModAccFetchPreamblePeakPowers80211be;
    OFDMModAccFetchPreamblePeakPowers80211nPtr OFDMModAccFetchPreamblePeakPowers80211n;
    OFDMModAccFetchPreamblePeakPowersCommonPtr OFDMModAccFetchPreamblePeakPowersCommon;
    OFDMModAccFetchRUOffsetAndSizePtr OFDMModAccFetchRUOffsetAndSize;
    OFDMModAccFetchSIGBCRCStatusPtr OFDMModAccFetchSIGBCRCStatus;
    OFDMModAccFetchSIGCRCStatusPtr OFDMModAccFetchSIGCRCStatus;
    OFDMModAccFetchSpectralFlatnessPtr OFDMModAccFetchSpectralFlatness;
    OFDMModAccFetchSpectralFlatnessMeanTracePtr OFDMModAccFetchSpectralFlatnessMeanTrace;
    OFDMModAccFetchStreamDataRMSEVMPerSymbolMeanTracePtr OFDMModAccFetchStreamDataRMSEVMPerSymbolMeanTrace;
    OFDMModAccFetchStreamPilotRMSEVMPerSymbolMeanTracePtr OFDMModAccFetchStreamPilotRMSEVMPerSymbolMeanTrace;
    OFDMModAccFetchStreamRMSEVMPtr OFDMModAccFetchStreamRMSEVM;
    OFDMModAccFetchStreamRMSEVMPerSubcarrierMeanTracePtr OFDMModAccFetchStreamRMSEVMPerSubcarrierMeanTrace;
    OFDMModAccFetchStreamRMSEVMPerSymbolMeanTracePtr OFDMModAccFetchStreamRMSEVMPerSymbolMeanTrace;
    OFDMModAccFetchSubcarrierChainEVMPerSymbolTracePtr OFDMModAccFetchSubcarrierChainEVMPerSymbolTrace;
    OFDMModAccFetchSubcarrierStreamEVMPerSymbolTracePtr OFDMModAccFetchSubcarrierStreamEVMPerSymbolTrace;
    OFDMModAccFetchSymbolChainEVMPerSubcarrierTracePtr OFDMModAccFetchSymbolChainEVMPerSubcarrierTrace;
    OFDMModAccFetchSymbolClockErrorMeanPtr OFDMModAccFetchSymbolClockErrorMean;
    OFDMModAccFetchSymbolStreamEVMPerSubcarrierTracePtr OFDMModAccFetchSymbolStreamEVMPerSubcarrierTrace;
    OFDMModAccFetchUnusedToneErrorPtr OFDMModAccFetchUnusedToneError;
    OFDMModAccFetchUnusedToneErrorMarginPerRUPtr OFDMModAccFetchUnusedToneErrorMarginPerRU;
    OFDMModAccFetchUnusedToneErrorMeanTracePtr OFDMModAccFetchUnusedToneErrorMeanTrace;
    OFDMModAccFetchUserDataConstellationTracePtr OFDMModAccFetchUserDataConstellationTrace;
    OFDMModAccFetchUserPilotConstellationTracePtr OFDMModAccFetchUserPilotConstellationTrace;
    OFDMModAccFetchUserPowerPtr OFDMModAccFetchUserPower;
    OFDMModAccFetchUserStreamDataRMSEVMPerSymbolMeanTracePtr OFDMModAccFetchUserStreamDataRMSEVMPerSymbolMeanTrace;
    OFDMModAccFetchUserStreamPilotRMSEVMPerSymbolMeanTracePtr OFDMModAccFetchUserStreamPilotRMSEVMPerSymbolMeanTrace;
    OFDMModAccFetchUserStreamRMSEVMPtr OFDMModAccFetchUserStreamRMSEVM;
    OFDMModAccFetchUserStreamRMSEVMPerSubcarrierMeanTracePtr OFDMModAccFetchUserStreamRMSEVMPerSubcarrierMeanTrace;
    OFDMModAccFetchUserStreamRMSEVMPerSymbolMeanTracePtr OFDMModAccFetchUserStreamRMSEVMPerSymbolMeanTrace;
    OFDMModAccValidateCalibrationDataPtr OFDMModAccValidateCalibrationData;
    PowerRampCfgAcquisitionLengthPtr PowerRampCfgAcquisitionLength;
    PowerRampCfgAveragingPtr PowerRampCfgAveraging;
    PowerRampFetchFallTracePtr PowerRampFetchFallTrace;
    PowerRampFetchMeasurementPtr PowerRampFetchMeasurement;
    PowerRampFetchRiseTracePtr PowerRampFetchRiseTrace;
    ResetAttributePtr ResetAttribute;
    ResetToDefaultPtr ResetToDefault;
    SEMCfgAveragingPtr SEMCfgAveraging;
    SEMCfgMaskTypePtr SEMCfgMaskType;
    SEMCfgNumberOfOffsetsPtr SEMCfgNumberOfOffsets;
    SEMCfgOffsetFrequencyArrayPtr SEMCfgOffsetFrequencyArray;
    SEMCfgOffsetRelativeLimitArrayPtr SEMCfgOffsetRelativeLimitArray;
    SEMCfgSpanPtr SEMCfgSpan;
    SEMCfgSweepTimePtr SEMCfgSweepTime;
    SEMFetchCarrierMeasurementPtr SEMFetchCarrierMeasurement;
    SEMFetchLowerOffsetMarginPtr SEMFetchLowerOffsetMargin;
    SEMFetchLowerOffsetMarginArrayPtr SEMFetchLowerOffsetMarginArray;
    SEMFetchLowerOffsetPowerPtr SEMFetchLowerOffsetPower;
    SEMFetchLowerOffsetPowerArrayPtr SEMFetchLowerOffsetPowerArray;
    SEMFetchMeasurementStatusPtr SEMFetchMeasurementStatus;
    SEMFetchSpectrumPtr SEMFetchSpectrum;
    SEMFetchUpperOffsetMarginPtr SEMFetchUpperOffsetMargin;
    SEMFetchUpperOffsetMarginArrayPtr SEMFetchUpperOffsetMarginArray;
    SEMFetchUpperOffsetPowerPtr SEMFetchUpperOffsetPower;
    SEMFetchUpperOffsetPowerArrayPtr SEMFetchUpperOffsetPowerArray;
    SelectMeasurementsPtr SelectMeasurements;
    SendSoftwareEdgeTriggerPtr SendSoftwareEdgeTrigger;
    SetAttributeF32Ptr SetAttributeF32;
    SetAttributeF32ArrayPtr SetAttributeF32Array;
    SetAttributeF64Ptr SetAttributeF64;
    SetAttributeF64ArrayPtr SetAttributeF64Array;
    SetAttributeI16Ptr SetAttributeI16;
    SetAttributeI32Ptr SetAttributeI32;
    SetAttributeI32ArrayPtr SetAttributeI32Array;
    SetAttributeI64Ptr SetAttributeI64;
    SetAttributeI64ArrayPtr SetAttributeI64Array;
    SetAttributeI8Ptr SetAttributeI8;
    SetAttributeI8ArrayPtr SetAttributeI8Array;
    SetAttributeNIComplexDoubleArrayPtr SetAttributeNIComplexDoubleArray;
    SetAttributeNIComplexSingleArrayPtr SetAttributeNIComplexSingleArray;
    SetAttributeStringPtr SetAttributeString;
    SetAttributeU16Ptr SetAttributeU16;
    SetAttributeU32Ptr SetAttributeU32;
    SetAttributeU32ArrayPtr SetAttributeU32Array;
    SetAttributeU64ArrayPtr SetAttributeU64Array;
    SetAttributeU8Ptr SetAttributeU8;
    SetAttributeU8ArrayPtr SetAttributeU8Array;
    TXPCfgAveragingPtr TXPCfgAveraging;
    TXPCfgBurstDetectionEnabledPtr TXPCfgBurstDetectionEnabled;
    TXPCfgMaximumMeasurementIntervalPtr TXPCfgMaximumMeasurementInterval;
    TXPFetchMeasurementPtr TXPFetchMeasurement;
    TXPFetchPowerTracePtr TXPFetchPowerTrace;
    WaitForAcquisitionCompletePtr WaitForAcquisitionComplete;
    WaitForMeasurementCompletePtr WaitForMeasurementComplete;
  } FunctionLoadStatus;

  std::shared_ptr<nidevice_grpc::SharedLibraryInterface> shared_library_;
  FunctionPointers function_pointers_;
};

}  // namespace nirfmxwlan_grpc

#endif  // NIRFMXWLAN_GRPC_LIBRARY_H
