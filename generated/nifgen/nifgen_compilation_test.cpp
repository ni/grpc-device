//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Compilation test for the NI-FGEN Metadata
//---------------------------------------------------------------------
#include "nifgen_library.h"

namespace nifgen_grpc {

ViStatus AbortGeneration(ViSession vi)
{
  return niFgen_AbortGeneration(vi);
}

ViStatus AdjustSampleClockRelativeDelay(ViSession vi, ViReal64 adjustmentTime)
{
  return niFgen_AdjustSampleClockRelativeDelay(vi, adjustmentTime);
}

ViStatus AllocateNamedWaveform(ViSession vi, ViConstString channelName, ViConstString waveformName, ViInt32 waveformSize)
{
  return niFgen_AllocateNamedWaveform(vi, channelName, waveformName, waveformSize);
}

ViStatus AllocateWaveform(ViSession vi, ViConstString channelName, ViInt32 waveformSize, ViInt32* waveformHandle)
{
  return niFgen_AllocateWaveform(vi, channelName, waveformSize, waveformHandle);
}

ViStatus CheckAttributeViBoolean(ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean attributeValue)
{
  return niFgen_CheckAttributeViBoolean(vi, channelName, attributeId, attributeValue);
}

ViStatus CheckAttributeViInt32(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 attributeValue)
{
  return niFgen_CheckAttributeViInt32(vi, channelName, attributeId, attributeValue);
}

ViStatus CheckAttributeViInt64(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt64 attributeValue)
{
  return niFgen_CheckAttributeViInt64(vi, channelName, attributeId, attributeValue);
}

ViStatus CheckAttributeViReal64(ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64 attributeValue)
{
  return niFgen_CheckAttributeViReal64(vi, channelName, attributeId, attributeValue);
}

ViStatus CheckAttributeViSession(ViSession vi, ViConstString channelName, ViAttr attributeId, ViSession attributeValue)
{
  return niFgen_CheckAttributeViSession(vi, channelName, attributeId, attributeValue);
}

ViStatus CheckAttributeViString(ViSession vi, ViConstString channelName, ViAttr attributeId, ViConstString attributeValue)
{
  return niFgen_CheckAttributeViString(vi, channelName, attributeId, attributeValue);
}

ViStatus ClearArbMemory(ViSession vi)
{
  return niFgen_ClearArbMemory(vi);
}

ViStatus ClearArbSequence(ViSession vi, ViInt32 sequenceHandle)
{
  return niFgen_ClearArbSequence(vi, sequenceHandle);
}

ViStatus ClearArbWaveform(ViSession vi, ViInt32 waveformHandle)
{
  return niFgen_ClearArbWaveform(vi, waveformHandle);
}

ViStatus ClearError(ViSession vi)
{
  return niFgen_ClearError(vi);
}

ViStatus ClearFreqList(ViSession vi, ViInt32 frequencyListHandle)
{
  return niFgen_ClearFreqList(vi, frequencyListHandle);
}

ViStatus ClearInterchangeWarnings(ViSession vi)
{
  return niFgen_ClearInterchangeWarnings(vi);
}

ViStatus ClearUserStandardWaveform(ViSession vi, ViConstString channelName)
{
  return niFgen_ClearUserStandardWaveform(vi, channelName);
}

ViStatus Close(ViSession vi)
{
  return niFgen_close(vi);
}

ViStatus Commit(ViSession vi)
{
  return niFgen_Commit(vi);
}

ViStatus ConfigureAmplitude(ViSession vi, ViConstString channelName, ViReal64 amplitude)
{
  return niFgen_ConfigureAmplitude(vi, channelName, amplitude);
}

ViStatus ConfigureArbSequence(ViSession vi, ViConstString channelName, ViInt32 sequenceHandle, ViReal64 gain, ViReal64 offset)
{
  return niFgen_ConfigureArbSequence(vi, channelName, sequenceHandle, gain, offset);
}

ViStatus ConfigureArbWaveform(ViSession vi, ViConstString channelName, ViInt32 waveformHandle, ViReal64 gain, ViReal64 offset)
{
  return niFgen_ConfigureArbWaveform(vi, channelName, waveformHandle, gain, offset);
}

ViStatus ConfigureChannels(ViSession vi, ViConstString channels)
{
  return niFgen_ConfigureChannels(vi, channels);
}

ViStatus ConfigureClockMode(ViSession vi, ViInt32 clockMode)
{
  return niFgen_ConfigureClockMode(vi, clockMode);
}

ViStatus ConfigureCustomFIRFilterCoefficients(ViSession vi, ViConstString channelName, ViInt32 numberOfCoefficients, ViReal64 coefficientsArray[])
{
  return niFgen_ConfigureCustomFIRFilterCoefficients(vi, channelName, numberOfCoefficients, coefficientsArray);
}

ViStatus ConfigureDigitalEdgeScriptTrigger(ViSession vi, ViConstString triggerId, ViConstString source, ViInt32 edge)
{
  return niFgen_ConfigureDigitalEdgeScriptTrigger(vi, triggerId, source, edge);
}

ViStatus ConfigureDigitalEdgeStartTrigger(ViSession vi, ViConstString source, ViInt32 edge)
{
  return niFgen_ConfigureDigitalEdgeStartTrigger(vi, source, edge);
}

ViStatus ConfigureDigitalLevelScriptTrigger(ViSession vi, ViConstString triggerId, ViConstString source, ViInt32 triggerWhen)
{
  return niFgen_ConfigureDigitalLevelScriptTrigger(vi, triggerId, source, triggerWhen);
}

ViStatus ConfigureFreqList(ViSession vi, ViConstString channelName, ViInt32 frequencyListHandle, ViReal64 amplitude, ViReal64 dcOffset, ViReal64 startPhase)
{
  return niFgen_ConfigureFreqList(vi, channelName, frequencyListHandle, amplitude, dcOffset, startPhase);
}

ViStatus ConfigureFrequency(ViSession vi, ViConstString channelName, ViReal64 frequency)
{
  return niFgen_ConfigureFrequency(vi, channelName, frequency);
}

ViStatus ConfigureOperationMode(ViSession vi, ViConstString channelName, ViInt32 operationMode)
{
  return niFgen_ConfigureOperationMode(vi, channelName, operationMode);
}

ViStatus ConfigureOutputEnabled(ViSession vi, ViConstString channelName, ViBoolean enabled)
{
  return niFgen_ConfigureOutputEnabled(vi, channelName, enabled);
}

ViStatus ConfigureOutputImpedance(ViSession vi, ViConstString channelName, ViReal64 impedance)
{
  return niFgen_ConfigureOutputImpedance(vi, channelName, impedance);
}

ViStatus ConfigureOutputMode(ViSession vi, ViInt32 outputMode)
{
  return niFgen_ConfigureOutputMode(vi, outputMode);
}

ViStatus ConfigureP2PEndpointFullnessStartTrigger(ViSession vi, ViInt32 p2pEndpointFullnessLevel)
{
  return niFgen_ConfigureP2PEndpointFullnessStartTrigger(vi, p2pEndpointFullnessLevel);
}

ViStatus ConfigureReferenceClock(ViSession vi, ViConstString referenceClockSource, ViReal64 referenceClockFrequency)
{
  return niFgen_ConfigureReferenceClock(vi, referenceClockSource, referenceClockFrequency);
}

ViStatus ConfigureSampleClockSource(ViSession vi, ViConstString sampleClockSource)
{
  return niFgen_ConfigureSampleClockSource(vi, sampleClockSource);
}

ViStatus ConfigureSampleRate(ViSession vi, ViReal64 sampleRate)
{
  return niFgen_ConfigureSampleRate(vi, sampleRate);
}

ViStatus ConfigureSoftwareEdgeScriptTrigger(ViSession vi, ViConstString triggerId)
{
  return niFgen_ConfigureSoftwareEdgeScriptTrigger(vi, triggerId);
}

ViStatus ConfigureSoftwareEdgeStartTrigger(ViSession vi)
{
  return niFgen_ConfigureSoftwareEdgeStartTrigger(vi);
}

ViStatus ConfigureStandardWaveform(ViSession vi, ViConstString channelName, ViInt32 waveform, ViReal64 amplitude, ViReal64 dcOffset, ViReal64 frequency, ViReal64 startPhase)
{
  return niFgen_ConfigureStandardWaveform(vi, channelName, waveform, amplitude, dcOffset, frequency, startPhase);
}

ViStatus ConfigureSynchronization(ViSession vi, ViConstString channelName, ViInt32 synchronizationSource)
{
  return niFgen_ConfigureSynchronization(vi, channelName, synchronizationSource);
}

ViStatus ConfigureTriggerMode(ViSession vi, ViConstString channelName, ViInt32 triggerMode)
{
  return niFgen_ConfigureTriggerMode(vi, channelName, triggerMode);
}

ViStatus CreateAdvancedArbSequence(ViSession vi, ViInt32 sequenceLength, ViInt32 waveformHandlesArray[], ViInt32 loopCountsArray[], ViInt32 sampleCountsArray[], ViInt32 markerLocationArray[], ViInt32 coercedMarkersArray[], ViInt32* sequenceHandle)
{
  return niFgen_CreateAdvancedArbSequence(vi, sequenceLength, waveformHandlesArray, loopCountsArray, sampleCountsArray, markerLocationArray, coercedMarkersArray, sequenceHandle);
}

ViStatus CreateArbSequence(ViSession vi, ViInt32 sequenceLength, ViInt32 waveformHandlesArray[], ViInt32 loopCountsArray[], ViInt32* sequenceHandle)
{
  return niFgen_CreateArbSequence(vi, sequenceLength, waveformHandlesArray, loopCountsArray, sequenceHandle);
}

ViStatus CreateFreqList(ViSession vi, ViInt32 waveform, ViInt32 frequencyListLength, ViReal64 frequencyArray[], ViReal64 durationArray[], ViInt32* frequencyListHandle)
{
  return niFgen_CreateFreqList(vi, waveform, frequencyListLength, frequencyArray, durationArray, frequencyListHandle);
}

ViStatus CreateWaveformComplexF64(ViSession vi, ViConstString channelName, ViInt32 numberOfSamples, NIComplexNumber_struct waveformDataArray[], ViInt32* waveformHandle)
{
  return niFgen_CreateWaveformComplexF64(vi, channelName, numberOfSamples, waveformDataArray, waveformHandle);
}

ViStatus CreateWaveformF64(ViSession vi, ViConstString channelName, ViInt32 waveformSize, ViReal64 waveformDataArray[], ViInt32* waveformHandle)
{
  return niFgen_CreateWaveformF64(vi, channelName, waveformSize, waveformDataArray, waveformHandle);
}

ViStatus CreateWaveformFromFileF64(ViSession vi, ViConstString channelName, ViConstString fileName, ViInt32 byteOrder, ViInt32* waveformHandle)
{
  return niFgen_CreateWaveformFromFileF64(vi, channelName, fileName, byteOrder, waveformHandle);
}

ViStatus CreateWaveformFromFileHWS(ViSession vi, ViConstString channelName, ViConstString fileName, ViBoolean useRateFromWaveform, ViBoolean useGainAndOffsetFromWaveform, ViInt32* waveformHandle)
{
  return niFgen_CreateWaveformFromFileHWS(vi, channelName, fileName, useRateFromWaveform, useGainAndOffsetFromWaveform, waveformHandle);
}

ViStatus CreateWaveformFromFileI16(ViSession vi, ViConstString channelName, ViConstString fileName, ViInt32 byteOrder, ViInt32* waveformHandle)
{
  return niFgen_CreateWaveformFromFileI16(vi, channelName, fileName, byteOrder, waveformHandle);
}

ViStatus CreateWaveformI16(ViSession vi, ViConstString channelName, ViInt32 waveformSize, ViInt16 waveformDataArray[], ViInt32* waveformHandle)
{
  return niFgen_CreateWaveformI16(vi, channelName, waveformSize, waveformDataArray, waveformHandle);
}

ViStatus DefineUserStandardWaveform(ViSession vi, ViConstString channelName, ViInt32 waveformSize, ViReal64 waveformDataArray[])
{
  return niFgen_DefineUserStandardWaveform(vi, channelName, waveformSize, waveformDataArray);
}

ViStatus DeleteNamedWaveform(ViSession vi, ViConstString channelName, ViConstString waveformName)
{
  return niFgen_DeleteNamedWaveform(vi, channelName, waveformName);
}

ViStatus DeleteScript(ViSession vi, ViConstString channelName, ViConstString scriptName)
{
  return niFgen_DeleteScript(vi, channelName, scriptName);
}

ViStatus Disable(ViSession vi)
{
  return niFgen_Disable(vi);
}

ViStatus DisableAnalogFilter(ViSession vi, ViConstString channelName)
{
  return niFgen_DisableAnalogFilter(vi, channelName);
}

ViStatus DisableDigitalFilter(ViSession vi, ViConstString channelName)
{
  return niFgen_DisableDigitalFilter(vi, channelName);
}

ViStatus DisableDigitalPatterning(ViSession vi, ViConstString channelName)
{
  return niFgen_DisableDigitalPatterning(vi, channelName);
}

ViStatus DisableScriptTrigger(ViSession vi, ViConstString triggerId)
{
  return niFgen_DisableScriptTrigger(vi, triggerId);
}

ViStatus DisableStartTrigger(ViSession vi)
{
  return niFgen_DisableStartTrigger(vi);
}

ViStatus EnableAnalogFilter(ViSession vi, ViConstString channelName, ViReal64 filterCorrectionFrequency)
{
  return niFgen_EnableAnalogFilter(vi, channelName, filterCorrectionFrequency);
}

ViStatus EnableDigitalFilter(ViSession vi, ViConstString channelName)
{
  return niFgen_EnableDigitalFilter(vi, channelName);
}

ViStatus EnableDigitalPatterning(ViSession vi, ViConstString channelName)
{
  return niFgen_EnableDigitalPatterning(vi, channelName);
}

ViStatus ErrorHandler(ViSession vi, ViStatus errorCode, ViChar errorMessage[256])
{
  return niFgen_ErrorHandler(vi, errorCode, errorMessage);
}

ViStatus ErrorMessage(ViSession vi, ViStatus errorCode, ViChar errorMessage[256])
{
  return niFgen_error_message(vi, errorCode, errorMessage);
}

ViStatus ErrorQuery(ViSession vi, ViInt32* errorCode, ViChar errorMessage[256])
{
  return niFgen_error_query(vi, errorCode, errorMessage);
}

ViStatus ExportAttributeConfigurationBuffer(ViSession vi, ViInt32 sizeInBytes, ViInt8 configuration[])
{
  return niFgen_ExportAttributeConfigurationBuffer(vi, sizeInBytes, configuration);
}

ViStatus ExportAttributeConfigurationFile(ViSession vi, ViConstString filePath)
{
  return niFgen_ExportAttributeConfigurationFile(vi, filePath);
}

ViStatus ExportSignal(ViSession vi, ViInt32 signal, ViConstString signalIdentifier, ViConstString outputTerminal)
{
  return niFgen_ExportSignal(vi, signal, signalIdentifier, outputTerminal);
}

ViStatus GetAttributeViBoolean(ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean* attributeValue)
{
  return niFgen_GetAttributeViBoolean(vi, channelName, attributeId, attributeValue);
}

ViStatus GetAttributeViInt32(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32* attributeValue)
{
  return niFgen_GetAttributeViInt32(vi, channelName, attributeId, attributeValue);
}

ViStatus GetAttributeViInt64(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt64* attributeValue)
{
  return niFgen_GetAttributeViInt64(vi, channelName, attributeId, attributeValue);
}

ViStatus GetAttributeViReal64(ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64* attributeValue)
{
  return niFgen_GetAttributeViReal64(vi, channelName, attributeId, attributeValue);
}

ViStatus GetAttributeViSession(ViSession vi, ViConstString channelName, ViAttr attributeId, ViSession* attributeValue)
{
  return niFgen_GetAttributeViSession(vi, channelName, attributeId, attributeValue);
}

ViStatus GetAttributeViString(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 arraySize, ViChar attributeValue[])
{
  return niFgen_GetAttributeViString(vi, channelName, attributeId, arraySize, attributeValue);
}

ViStatus GetChannelName(ViSession vi, ViInt32 index, ViInt32 bufferSize, ViChar channelString[])
{
  return niFgen_GetChannelName(vi, index, bufferSize, channelString);
}

ViStatus GetError(ViSession vi, ViStatus* errorCode, ViInt32 errorDescriptionBufferSize, ViChar errorDescription[])
{
  return niFgen_GetError(vi, errorCode, errorDescriptionBufferSize, errorDescription);
}

ViStatus GetExtCalLastDateAndTime(ViSession vi, ViInt32* year, ViInt32* month, ViInt32* day, ViInt32* hour, ViInt32* minute)
{
  return niFgen_GetExtCalLastDateAndTime(vi, year, month, day, hour, minute);
}

ViStatus GetExtCalLastTemp(ViSession vi, ViReal64* temperature)
{
  return niFgen_GetExtCalLastTemp(vi, temperature);
}

ViStatus GetExtCalRecommendedInterval(ViSession vi, ViInt32* months)
{
  return niFgen_GetExtCalRecommendedInterval(vi, months);
}

ViStatus GetFIRFilterCoefficients(ViSession vi, ViConstString channelName, ViInt32 arraySize, ViReal64 coefficientsArray[], ViInt32* numberOfCoefficientsRead)
{
  return niFgen_GetFIRFilterCoefficients(vi, channelName, arraySize, coefficientsArray, numberOfCoefficientsRead);
}

ViStatus GetHardwareState(ViSession vi, ViInt32* state)
{
  return niFgen_GetHardwareState(vi, state);
}

ViStatus GetNextCoercionRecord(ViSession vi, ViInt32 bufferSize, ViChar coercionRecord[])
{
  return niFgen_GetNextCoercionRecord(vi, bufferSize, coercionRecord);
}

ViStatus GetNextInterchangeWarning(ViSession vi, ViInt32 bufferSize, ViChar interchangeWarning[])
{
  return niFgen_GetNextInterchangeWarning(vi, bufferSize, interchangeWarning);
}

ViStatus GetSelfCalLastDateAndTime(ViSession vi, ViInt32* year, ViInt32* month, ViInt32* day, ViInt32* hour, ViInt32* minute)
{
  return niFgen_GetSelfCalLastDateAndTime(vi, year, month, day, hour, minute);
}

ViStatus GetSelfCalLastTemp(ViSession vi, ViReal64* temperature)
{
  return niFgen_GetSelfCalLastTemp(vi, temperature);
}

ViStatus GetSelfCalSupported(ViSession vi, ViBoolean* selfCalSupported)
{
  return niFgen_GetSelfCalSupported(vi, selfCalSupported);
}

ViStatus GetStreamEndpointHandle(ViSession vi, ViConstString streamEndpoint, ViUInt32* readerHandle)
{
  return niFgen_GetStreamEndpointHandle(vi, streamEndpoint, readerHandle);
}

ViStatus ImportAttributeConfigurationBuffer(ViSession vi, ViInt32 sizeInBytes, ViInt8 configuration[])
{
  return niFgen_ImportAttributeConfigurationBuffer(vi, sizeInBytes, configuration);
}

ViStatus ImportAttributeConfigurationFile(ViSession vi, ViConstString filePath)
{
  return niFgen_ImportAttributeConfigurationFile(vi, filePath);
}

ViStatus Init(ViRsrc resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViSession* vi)
{
  return niFgen_init(resourceName, idQuery, resetDevice, vi);
}

ViStatus InitWithOptions(ViRsrc resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViString optionString, ViSession* vi)
{
  return niFgen_InitWithOptions(resourceName, idQuery, resetDevice, optionString, vi);
}

ViStatus InitializeWithChannels(ViRsrc resourceName, ViString channelName, ViBoolean resetDevice, ViString optionString, ViSession* vi)
{
  return niFgen_InitializeWithChannels(resourceName, channelName, resetDevice, optionString, vi);
}

ViStatus InitiateGeneration(ViSession vi)
{
  return niFgen_InitiateGeneration(vi);
}

ViStatus InvalidateAllAttributes(ViSession vi)
{
  return niFgen_InvalidateAllAttributes(vi);
}

ViStatus IsDone(ViSession vi, ViBoolean* done)
{
  return niFgen_IsDone(vi, done);
}

ViStatus ManualEnableP2PStream(ViSession vi, ViConstString endpointName)
{
  return niFgen_ManualEnableP2PStream(vi, endpointName);
}

ViStatus QueryArbSeqCapabilities(ViSession vi, ViInt32* maximumNumberOfSequences, ViInt32* minimumSequenceLength, ViInt32* maximumSequenceLength, ViInt32* maximumLoopCount)
{
  return niFgen_QueryArbSeqCapabilities(vi, maximumNumberOfSequences, minimumSequenceLength, maximumSequenceLength, maximumLoopCount);
}

ViStatus QueryArbWfmCapabilities(ViSession vi, ViInt32* maximumNumberOfWaveforms, ViInt32* waveformQuantum, ViInt32* minimumWaveformSize, ViInt32* maximumWaveformSize)
{
  return niFgen_QueryArbWfmCapabilities(vi, maximumNumberOfWaveforms, waveformQuantum, minimumWaveformSize, maximumWaveformSize);
}

ViStatus QueryFreqListCapabilities(ViSession vi, ViInt32* maximumNumberOfFreqLists, ViInt32* minimumFrequencyListLength, ViInt32* maximumFrequencyListLength, ViReal64* minimumFrequencyListDuration, ViReal64* maximumFrequencyListDuration, ViReal64* frequencyListDurationQuantum)
{
  return niFgen_QueryFreqListCapabilities(vi, maximumNumberOfFreqLists, minimumFrequencyListLength, maximumFrequencyListLength, minimumFrequencyListDuration, maximumFrequencyListDuration, frequencyListDurationQuantum);
}

ViStatus ReadCurrentTemperature(ViSession vi, ViReal64* temperature)
{
  return niFgen_ReadCurrentTemperature(vi, temperature);
}

ViStatus Reset(ViSession vi)
{
  return niFgen_reset(vi);
}

ViStatus ResetAttribute(ViSession vi, ViConstString channelName, ViAttr attributeId)
{
  return niFgen_ResetAttribute(vi, channelName, attributeId);
}

ViStatus ResetDevice(ViSession vi)
{
  return niFgen_ResetDevice(vi);
}

ViStatus ResetInterchangeCheck(ViSession vi)
{
  return niFgen_ResetInterchangeCheck(vi);
}

ViStatus ResetWithDefaults(ViSession vi)
{
  return niFgen_ResetWithDefaults(vi);
}

ViStatus RevisionQuery(ViSession vi, ViChar instrumentDriverRevision[256], ViChar firmwareRevision[256])
{
  return niFgen_revision_query(vi, instrumentDriverRevision, firmwareRevision);
}

ViStatus RouteSignalOut(ViSession vi, ViConstString channelName, ViInt32 routeSignalFrom, ViInt32 routeSignalTo)
{
  return niFgen_RouteSignalOut(vi, channelName, routeSignalFrom, routeSignalTo);
}

ViStatus SelfCal(ViSession vi)
{
  return niFgen_SelfCal(vi);
}

ViStatus SelfTest(ViSession vi, ViInt16* selfTestResult, ViChar selfTestMessage[256])
{
  return niFgen_self_test(vi, selfTestResult, selfTestMessage);
}

ViStatus SendSoftwareEdgeTrigger(ViSession vi, ViInt32 trigger, ViString triggerId)
{
  return niFgen_SendSoftwareEdgeTrigger(vi, trigger, triggerId);
}

ViStatus SetAttributeViBoolean(ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean attributeValue)
{
  return niFgen_SetAttributeViBoolean(vi, channelName, attributeId, attributeValue);
}

ViStatus SetAttributeViInt32(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 attributeValue)
{
  return niFgen_SetAttributeViInt32(vi, channelName, attributeId, attributeValue);
}

ViStatus SetAttributeViInt64(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt64 attributeValue)
{
  return niFgen_SetAttributeViInt64(vi, channelName, attributeId, attributeValue);
}

ViStatus SetAttributeViReal64(ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64 attributeValue)
{
  return niFgen_SetAttributeViReal64(vi, channelName, attributeId, attributeValue);
}

ViStatus SetAttributeViSession(ViSession vi, ViConstString channelName, ViAttr attributeId, ViSession attributeValue)
{
  return niFgen_SetAttributeViSession(vi, channelName, attributeId, attributeValue);
}

ViStatus SetAttributeViString(ViSession vi, ViConstString channelName, ViAttr attributeId, ViConstString attributeValue)
{
  return niFgen_SetAttributeViString(vi, channelName, attributeId, attributeValue);
}

ViStatus SetNamedWaveformNextWritePosition(ViSession vi, ViConstString channelName, ViConstString waveformName, ViInt32 relativeTo, ViInt32 offset)
{
  return niFgen_SetNamedWaveformNextWritePosition(vi, channelName, waveformName, relativeTo, offset);
}

ViStatus SetWaveformNextWritePosition(ViSession vi, ViConstString channelName, ViInt32 waveformHandle, ViInt32 relativeTo, ViInt32 offset)
{
  return niFgen_SetWaveformNextWritePosition(vi, channelName, waveformHandle, relativeTo, offset);
}

ViStatus WaitUntilDone(ViSession vi, ViInt32 maxTime)
{
  return niFgen_WaitUntilDone(vi, maxTime);
}

ViStatus WriteBinary16Waveform(ViSession vi, ViConstString channelName, ViInt32 waveformHandle, ViInt32 size, ViInt16 data[])
{
  return niFgen_WriteBinary16Waveform(vi, channelName, waveformHandle, size, data);
}

ViStatus WriteComplexBinary16Waveform(ViSession vi, ViConstString channelName, ViInt32 waveformHandle, ViInt32 size, NIComplexI16_struct data[])
{
  return niFgen_WriteComplexBinary16Waveform(vi, channelName, waveformHandle, size, data);
}

ViStatus WriteNamedWaveformComplexF64(ViSession vi, ViConstString channelName, ViConstString waveformName, ViInt32 size, NIComplexNumber_struct data[])
{
  return niFgen_WriteNamedWaveformComplexF64(vi, channelName, waveformName, size, data);
}

ViStatus WriteNamedWaveformComplexI16(ViSession vi, ViConstString channelName, ViConstString waveformName, ViInt32 size, NIComplexI16_struct data[])
{
  return niFgen_WriteNamedWaveformComplexI16(vi, channelName, waveformName, size, data);
}

ViStatus WriteNamedWaveformF64(ViSession vi, ViConstString channelName, ViConstString waveformName, ViInt32 size, ViReal64 data[])
{
  return niFgen_WriteNamedWaveformF64(vi, channelName, waveformName, size, data);
}

ViStatus WriteNamedWaveformI16(ViSession vi, ViConstString channelName, ViConstString waveformName, ViInt32 size, ViInt16 data[])
{
  return niFgen_WriteNamedWaveformI16(vi, channelName, waveformName, size, data);
}

ViStatus WriteP2PEndpointI16(ViSession vi, ViConstString endpointName, ViInt32 numberOfSamples, ViInt16 endpointData[])
{
  return niFgen_WriteP2PEndpointI16(vi, endpointName, numberOfSamples, endpointData);
}

ViStatus WriteScript(ViSession vi, ViConstString channelName, ViConstString script)
{
  return niFgen_WriteScript(vi, channelName, script);
}

ViStatus WriteWaveform(ViSession vi, ViConstString channelName, ViInt32 waveformHandle, ViInt32 size, ViReal64 data[])
{
  return niFgen_WriteWaveform(vi, channelName, waveformHandle, size, data);
}

ViStatus WriteWaveformComplexF64(ViSession vi, ViConstString channelName, ViInt32 numberOfSamples, NIComplexNumber_struct data[], ViInt32 waveformHandle)
{
  return niFgen_WriteWaveformComplexF64(vi, channelName, numberOfSamples, data, waveformHandle);
}

}  // namespace nifgen_grpc
