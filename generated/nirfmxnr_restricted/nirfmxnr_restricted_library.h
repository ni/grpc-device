//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Real implementation of LibraryInterface for NI-RFMXNR-RESTRICTED
//---------------------------------------------------------------------
#ifndef NIRFMXNR_RESTRICTED_GRPC_LIBRARY_H
#define NIRFMXNR_RESTRICTED_GRPC_LIBRARY_H

#include "nirfmxnr_restricted_library_interface.h"

#include <server/shared_library.h>

namespace nirfmxnr_restricted_grpc {

class NiRFmxNRRestrictedLibrary : public nirfmxnr_restricted_grpc::NiRFmxNRRestrictedLibraryInterface {
 public:
  NiRFmxNRRestrictedLibrary();
  virtual ~NiRFmxNRRestrictedLibrary();

  ::grpc::Status check_function_exists(std::string functionName);
  int32 GetError(niRFmxInstrHandle instrumentHandle, int32* errorCode, int32 errorDescriptionBufferSize, char errorDescription[]);
  int32 GetErrorString(niRFmxInstrHandle instrumentHandle, int32 errorCode, int32 errorDescriptionBufferSize, char errorDescription[]);
  int32 ModAccFetchTransientPeriodLocationsTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 transientPeriodLocations[], int32 arraySize, int32* actualArraySize);

 private:
  using GetErrorPtr = int32 (*)(niRFmxInstrHandle instrumentHandle, int32* errorCode, int32 errorDescriptionBufferSize, char errorDescription[]);
  using GetErrorStringPtr = int32 (*)(niRFmxInstrHandle instrumentHandle, int32 errorCode, int32 errorDescriptionBufferSize, char errorDescription[]);
  using ModAccFetchTransientPeriodLocationsTracePtr = int32 (*)(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 transientPeriodLocations[], int32 arraySize, int32* actualArraySize);

  typedef struct FunctionPointers {
    GetErrorPtr GetError;
    GetErrorStringPtr GetErrorString;
    ModAccFetchTransientPeriodLocationsTracePtr ModAccFetchTransientPeriodLocationsTrace;
  } FunctionLoadStatus;

  nidevice_grpc::SharedLibrary shared_library_;
  FunctionPointers function_pointers_;
};

}  // namespace nirfmxnr_restricted_grpc

#endif  // NIRFMXNR_RESTRICTED_GRPC_LIBRARY_H
