
//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Proto file for the NI-RFMXSPECAN Metadata
//---------------------------------------------------------------------
syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.ni.grpc.nirfmxspecan";
option java_outer_classname = "NiRFmxSpecAn";
option csharp_namespace = "NationalInstruments.Grpc.NiRFmxSpecAn";

package nirfmxspecan_grpc;

import "nidevice.proto";
import "session.proto";

service NiRFmxSpecAn {
  rpc ACPCfgAveraging(ACPCfgAveragingRequest) returns (ACPCfgAveragingResponse);
  rpc ACPCfgCarrierAndOffsets(ACPCfgCarrierAndOffsetsRequest) returns (ACPCfgCarrierAndOffsetsResponse);
  rpc ACPCfgCarrierFrequency(ACPCfgCarrierFrequencyRequest) returns (ACPCfgCarrierFrequencyResponse);
  rpc ACPCfgCarrierIntegrationBandwidth(ACPCfgCarrierIntegrationBandwidthRequest) returns (ACPCfgCarrierIntegrationBandwidthResponse);
  rpc ACPCfgCarrierMode(ACPCfgCarrierModeRequest) returns (ACPCfgCarrierModeResponse);
  rpc ACPCfgCarrierRRCFilter(ACPCfgCarrierRRCFilterRequest) returns (ACPCfgCarrierRRCFilterResponse);
  rpc ACPCfgFFT(ACPCfgFFTRequest) returns (ACPCfgFFTResponse);
  rpc ACPCfgMeasurementMethod(ACPCfgMeasurementMethodRequest) returns (ACPCfgMeasurementMethodResponse);
  rpc ACPCfgNoiseCompensationEnabled(ACPCfgNoiseCompensationEnabledRequest) returns (ACPCfgNoiseCompensationEnabledResponse);
  rpc ACPCfgNumberOfCarriers(ACPCfgNumberOfCarriersRequest) returns (ACPCfgNumberOfCarriersResponse);
  rpc ACPCfgNumberOfOffsets(ACPCfgNumberOfOffsetsRequest) returns (ACPCfgNumberOfOffsetsResponse);
  rpc ACPCfgOffset(ACPCfgOffsetRequest) returns (ACPCfgOffsetResponse);
  rpc ACPCfgOffsetArray(ACPCfgOffsetArrayRequest) returns (ACPCfgOffsetArrayResponse);
  rpc ACPCfgOffsetFrequencyDefinition(ACPCfgOffsetFrequencyDefinitionRequest) returns (ACPCfgOffsetFrequencyDefinitionResponse);
  rpc ACPCfgOffsetIntegrationBandwidth(ACPCfgOffsetIntegrationBandwidthRequest) returns (ACPCfgOffsetIntegrationBandwidthResponse);
  rpc ACPCfgOffsetIntegrationBandwidthArray(ACPCfgOffsetIntegrationBandwidthArrayRequest) returns (ACPCfgOffsetIntegrationBandwidthArrayResponse);
  rpc ACPCfgOffsetPowerReference(ACPCfgOffsetPowerReferenceRequest) returns (ACPCfgOffsetPowerReferenceResponse);
  rpc ACPCfgOffsetPowerReferenceArray(ACPCfgOffsetPowerReferenceArrayRequest) returns (ACPCfgOffsetPowerReferenceArrayResponse);
  rpc ACPCfgOffsetRRCFilter(ACPCfgOffsetRRCFilterRequest) returns (ACPCfgOffsetRRCFilterResponse);
  rpc ACPCfgOffsetRRCFilterArray(ACPCfgOffsetRRCFilterArrayRequest) returns (ACPCfgOffsetRRCFilterArrayResponse);
  rpc ACPCfgOffsetRelativeAttenuation(ACPCfgOffsetRelativeAttenuationRequest) returns (ACPCfgOffsetRelativeAttenuationResponse);
  rpc ACPCfgOffsetRelativeAttenuationArray(ACPCfgOffsetRelativeAttenuationArrayRequest) returns (ACPCfgOffsetRelativeAttenuationArrayResponse);
  rpc ACPCfgPowerUnits(ACPCfgPowerUnitsRequest) returns (ACPCfgPowerUnitsResponse);
  rpc ACPCfgRBWFilter(ACPCfgRBWFilterRequest) returns (ACPCfgRBWFilterResponse);
  rpc ACPCfgSweepTime(ACPCfgSweepTimeRequest) returns (ACPCfgSweepTimeResponse);
  rpc ACPFetchAbsolutePowersTrace(ACPFetchAbsolutePowersTraceRequest) returns (ACPFetchAbsolutePowersTraceResponse);
  rpc ACPFetchCarrierMeasurement(ACPFetchCarrierMeasurementRequest) returns (ACPFetchCarrierMeasurementResponse);
  rpc ACPFetchFrequencyResolution(ACPFetchFrequencyResolutionRequest) returns (ACPFetchFrequencyResolutionResponse);
  rpc ACPFetchOffsetMeasurement(ACPFetchOffsetMeasurementRequest) returns (ACPFetchOffsetMeasurementResponse);
  rpc ACPFetchOffsetMeasurementArray(ACPFetchOffsetMeasurementArrayRequest) returns (ACPFetchOffsetMeasurementArrayResponse);
  rpc ACPFetchRelativePowersTrace(ACPFetchRelativePowersTraceRequest) returns (ACPFetchRelativePowersTraceResponse);
  rpc ACPFetchSpectrum(ACPFetchSpectrumRequest) returns (ACPFetchSpectrumResponse);
  rpc ACPFetchTotalCarrierPower(ACPFetchTotalCarrierPowerRequest) returns (ACPFetchTotalCarrierPowerResponse);
  rpc ACPRead(ACPReadRequest) returns (ACPReadResponse);
  rpc ACPValidateNoiseCalibrationData(ACPValidateNoiseCalibrationDataRequest) returns (ACPValidateNoiseCalibrationDataResponse);
  rpc AMPMCfgAMToAMCurveFit(AMPMCfgAMToAMCurveFitRequest) returns (AMPMCfgAMToAMCurveFitResponse);
  rpc AMPMCfgAMToPMCurveFit(AMPMCfgAMToPMCurveFitRequest) returns (AMPMCfgAMToPMCurveFitResponse);
  rpc AMPMCfgAveraging(AMPMCfgAveragingRequest) returns (AMPMCfgAveragingResponse);
  rpc AMPMCfgCompressionPoints(AMPMCfgCompressionPointsRequest) returns (AMPMCfgCompressionPointsResponse);
  rpc AMPMCfgDUTAverageInputPower(AMPMCfgDUTAverageInputPowerRequest) returns (AMPMCfgDUTAverageInputPowerResponse);
  rpc AMPMCfgMeasurementInterval(AMPMCfgMeasurementIntervalRequest) returns (AMPMCfgMeasurementIntervalResponse);
  rpc AMPMCfgMeasurementSampleRate(AMPMCfgMeasurementSampleRateRequest) returns (AMPMCfgMeasurementSampleRateResponse);
  rpc AMPMCfgReferencePowerType(AMPMCfgReferencePowerTypeRequest) returns (AMPMCfgReferencePowerTypeResponse);
  rpc AMPMCfgReferenceWaveform(AMPMCfgReferenceWaveformRequest) returns (AMPMCfgReferenceWaveformResponse);
  rpc AMPMCfgSynchronizationMethod(AMPMCfgSynchronizationMethodRequest) returns (AMPMCfgSynchronizationMethodResponse);
  rpc AMPMCfgThreshold(AMPMCfgThresholdRequest) returns (AMPMCfgThresholdResponse);
  rpc AMPMFetchAMToAMTrace(AMPMFetchAMToAMTraceRequest) returns (AMPMFetchAMToAMTraceResponse);
  rpc AMPMFetchAMToPMTrace(AMPMFetchAMToPMTraceRequest) returns (AMPMFetchAMToPMTraceResponse);
  rpc AMPMFetchCompressionPoints(AMPMFetchCompressionPointsRequest) returns (AMPMFetchCompressionPointsResponse);
  rpc AMPMFetchCurveFitCoefficients(AMPMFetchCurveFitCoefficientsRequest) returns (AMPMFetchCurveFitCoefficientsResponse);
  rpc AMPMFetchCurveFitResidual(AMPMFetchCurveFitResidualRequest) returns (AMPMFetchCurveFitResidualResponse);
  rpc AMPMFetchDUTCharacteristics(AMPMFetchDUTCharacteristicsRequest) returns (AMPMFetchDUTCharacteristicsResponse);
  rpc AMPMFetchError(AMPMFetchErrorRequest) returns (AMPMFetchErrorResponse);
  rpc AMPMFetchProcessedMeanAcquiredWaveform(AMPMFetchProcessedMeanAcquiredWaveformRequest) returns (AMPMFetchProcessedMeanAcquiredWaveformResponse);
  rpc AMPMFetchProcessedReferenceWaveform(AMPMFetchProcessedReferenceWaveformRequest) returns (AMPMFetchProcessedReferenceWaveformResponse);
  rpc AMPMFetchRelativePhaseTrace(AMPMFetchRelativePhaseTraceRequest) returns (AMPMFetchRelativePhaseTraceResponse);
  rpc AMPMFetchRelativePowerTrace(AMPMFetchRelativePowerTraceRequest) returns (AMPMFetchRelativePowerTraceResponse);
  rpc AbortMeasurements(AbortMeasurementsRequest) returns (AbortMeasurementsResponse);
  rpc AnalyzeIQ1Waveform(AnalyzeIQ1WaveformRequest) returns (AnalyzeIQ1WaveformResponse);
  rpc AnalyzeSpectrum1Waveform(AnalyzeSpectrum1WaveformRequest) returns (AnalyzeSpectrum1WaveformResponse);
  rpc AutoLevel(AutoLevelRequest) returns (AutoLevelResponse);
  rpc BuildCarrierString(BuildCarrierStringRequest) returns (BuildCarrierStringResponse);
  rpc BuildHarmonicString(BuildHarmonicStringRequest) returns (BuildHarmonicStringResponse);
  rpc BuildIntermodString(BuildIntermodStringRequest) returns (BuildIntermodStringResponse);
  rpc BuildListStepString(BuildListStepStringRequest) returns (BuildListStepStringResponse);
  rpc BuildListString(BuildListStringRequest) returns (BuildListStringResponse);
  rpc BuildMarkerString(BuildMarkerStringRequest) returns (BuildMarkerStringResponse);
  rpc BuildOffsetString(BuildOffsetStringRequest) returns (BuildOffsetStringResponse);
  rpc BuildRangeSpurString(BuildRangeSpurStringRequest) returns (BuildRangeSpurStringResponse);
  rpc BuildRangeString(BuildRangeStringRequest) returns (BuildRangeStringResponse);
  rpc BuildSegmentString(BuildSegmentStringRequest) returns (BuildSegmentStringResponse);
  rpc BuildSignalString(BuildSignalStringRequest) returns (BuildSignalStringResponse);
  rpc BuildSpurString(BuildSpurStringRequest) returns (BuildSpurStringResponse);
  rpc CCDFCfgMeasurementInterval(CCDFCfgMeasurementIntervalRequest) returns (CCDFCfgMeasurementIntervalResponse);
  rpc CCDFCfgNumberOfRecords(CCDFCfgNumberOfRecordsRequest) returns (CCDFCfgNumberOfRecordsResponse);
  rpc CCDFCfgRBWFilter(CCDFCfgRBWFilterRequest) returns (CCDFCfgRBWFilterResponse);
  rpc CCDFCfgThreshold(CCDFCfgThresholdRequest) returns (CCDFCfgThresholdResponse);
  rpc CCDFFetchBasicPowerProbabilities(CCDFFetchBasicPowerProbabilitiesRequest) returns (CCDFFetchBasicPowerProbabilitiesResponse);
  rpc CCDFFetchGaussianProbabilitiesTrace(CCDFFetchGaussianProbabilitiesTraceRequest) returns (CCDFFetchGaussianProbabilitiesTraceResponse);
  rpc CCDFFetchPower(CCDFFetchPowerRequest) returns (CCDFFetchPowerResponse);
  rpc CCDFFetchProbabilitiesTrace(CCDFFetchProbabilitiesTraceRequest) returns (CCDFFetchProbabilitiesTraceResponse);
  rpc CCDFRead(CCDFReadRequest) returns (CCDFReadResponse);
  rpc CHPCfgAveraging(CHPCfgAveragingRequest) returns (CHPCfgAveragingResponse);
  rpc CHPCfgCarrierOffset(CHPCfgCarrierOffsetRequest) returns (CHPCfgCarrierOffsetResponse);
  rpc CHPCfgFFT(CHPCfgFFTRequest) returns (CHPCfgFFTResponse);
  rpc CHPCfgIntegrationBandwidth(CHPCfgIntegrationBandwidthRequest) returns (CHPCfgIntegrationBandwidthResponse);
  rpc CHPCfgNumberOfCarriers(CHPCfgNumberOfCarriersRequest) returns (CHPCfgNumberOfCarriersResponse);
  rpc CHPCfgRBWFilter(CHPCfgRBWFilterRequest) returns (CHPCfgRBWFilterResponse);
  rpc CHPCfgRRCFilter(CHPCfgRRCFilterRequest) returns (CHPCfgRRCFilterResponse);
  rpc CHPCfgSpan(CHPCfgSpanRequest) returns (CHPCfgSpanResponse);
  rpc CHPCfgSweepTime(CHPCfgSweepTimeRequest) returns (CHPCfgSweepTimeResponse);
  rpc CHPFetchCarrierMeasurement(CHPFetchCarrierMeasurementRequest) returns (CHPFetchCarrierMeasurementResponse);
  rpc CHPFetchSpectrum(CHPFetchSpectrumRequest) returns (CHPFetchSpectrumResponse);
  rpc CHPFetchTotalCarrierPower(CHPFetchTotalCarrierPowerRequest) returns (CHPFetchTotalCarrierPowerResponse);
  rpc CHPRead(CHPReadRequest) returns (CHPReadResponse);
  rpc CHPValidateNoiseCalibrationData(CHPValidateNoiseCalibrationDataRequest) returns (CHPValidateNoiseCalibrationDataResponse);
  rpc CfgDigitalEdgeTrigger(CfgDigitalEdgeTriggerRequest) returns (CfgDigitalEdgeTriggerResponse);
  rpc CfgExternalAttenuation(CfgExternalAttenuationRequest) returns (CfgExternalAttenuationResponse);
  rpc CfgFrequency(CfgFrequencyRequest) returns (CfgFrequencyResponse);
  rpc CfgFrequencyReference(CfgFrequencyReferenceRequest) returns (CfgFrequencyReferenceResponse);
  rpc CfgIQPowerEdgeTrigger(CfgIQPowerEdgeTriggerRequest) returns (CfgIQPowerEdgeTriggerResponse);
  rpc CfgMechanicalAttenuation(CfgMechanicalAttenuationRequest) returns (CfgMechanicalAttenuationResponse);
  rpc CfgRF(CfgRFRequest) returns (CfgRFResponse);
  rpc CfgRFAttenuation(CfgRFAttenuationRequest) returns (CfgRFAttenuationResponse);
  rpc CfgReferenceLevel(CfgReferenceLevelRequest) returns (CfgReferenceLevelResponse);
  rpc CfgSoftwareEdgeTrigger(CfgSoftwareEdgeTriggerRequest) returns (CfgSoftwareEdgeTriggerResponse);
  rpc CheckMeasurementStatus(CheckMeasurementStatusRequest) returns (CheckMeasurementStatusResponse);
  rpc ClearAllNamedResults(ClearAllNamedResultsRequest) returns (ClearAllNamedResultsResponse);
  rpc ClearNamedResult(ClearNamedResultRequest) returns (ClearNamedResultResponse);
  rpc ClearNoiseCalibrationDatabase(ClearNoiseCalibrationDatabaseRequest) returns (ClearNoiseCalibrationDatabaseResponse);
  rpc CloneSignalConfiguration(CloneSignalConfigurationRequest) returns (CloneSignalConfigurationResponse);
  rpc Close(CloseRequest) returns (CloseResponse);
  rpc Commit(CommitRequest) returns (CommitResponse);
  rpc CreateList(CreateListRequest) returns (CreateListResponse);
  rpc CreateListStep(CreateListStepRequest) returns (CreateListStepResponse);
  rpc CreateSignalConfiguration(CreateSignalConfigurationRequest) returns (CreateSignalConfigurationResponse);
  rpc DPDApplyDigitalPredistortion(DPDApplyDigitalPredistortionRequest) returns (DPDApplyDigitalPredistortionResponse);
  rpc DPDApplyPreDPDSignalConditioning(DPDApplyPreDPDSignalConditioningRequest) returns (DPDApplyPreDPDSignalConditioningResponse);
  rpc DPDCfgApplyDPDConfigurationInput(DPDCfgApplyDPDConfigurationInputRequest) returns (DPDCfgApplyDPDConfigurationInputResponse);
  rpc DPDCfgApplyDPDLookupTableCorrectionType(DPDCfgApplyDPDLookupTableCorrectionTypeRequest) returns (DPDCfgApplyDPDLookupTableCorrectionTypeResponse);
  rpc DPDCfgApplyDPDMemoryModelCorrectionType(DPDCfgApplyDPDMemoryModelCorrectionTypeRequest) returns (DPDCfgApplyDPDMemoryModelCorrectionTypeResponse);
  rpc DPDCfgApplyDPDUserDPDPolynomial(DPDCfgApplyDPDUserDPDPolynomialRequest) returns (DPDCfgApplyDPDUserDPDPolynomialResponse);
  rpc DPDCfgApplyDPDUserLookupTable(DPDCfgApplyDPDUserLookupTableRequest) returns (DPDCfgApplyDPDUserLookupTableResponse);
  rpc DPDCfgAveraging(DPDCfgAveragingRequest) returns (DPDCfgAveragingResponse);
  rpc DPDCfgDPDModel(DPDCfgDPDModelRequest) returns (DPDCfgDPDModelResponse);
  rpc DPDCfgDUTAverageInputPower(DPDCfgDUTAverageInputPowerRequest) returns (DPDCfgDUTAverageInputPowerResponse);
  rpc DPDCfgGeneralizedMemoryPolynomialCrossTerms(DPDCfgGeneralizedMemoryPolynomialCrossTermsRequest) returns (DPDCfgGeneralizedMemoryPolynomialCrossTermsResponse);
  rpc DPDCfgIterativeDPDEnabled(DPDCfgIterativeDPDEnabledRequest) returns (DPDCfgIterativeDPDEnabledResponse);
  rpc DPDCfgLookupTableAMToAMCurveFit(DPDCfgLookupTableAMToAMCurveFitRequest) returns (DPDCfgLookupTableAMToAMCurveFitResponse);
  rpc DPDCfgLookupTableAMToPMCurveFit(DPDCfgLookupTableAMToPMCurveFitRequest) returns (DPDCfgLookupTableAMToPMCurveFitResponse);
  rpc DPDCfgLookupTableStepSize(DPDCfgLookupTableStepSizeRequest) returns (DPDCfgLookupTableStepSizeResponse);
  rpc DPDCfgLookupTableThreshold(DPDCfgLookupTableThresholdRequest) returns (DPDCfgLookupTableThresholdResponse);
  rpc DPDCfgLookupTableType(DPDCfgLookupTableTypeRequest) returns (DPDCfgLookupTableTypeResponse);
  rpc DPDCfgMeasurementInterval(DPDCfgMeasurementIntervalRequest) returns (DPDCfgMeasurementIntervalResponse);
  rpc DPDCfgMeasurementSampleRate(DPDCfgMeasurementSampleRateRequest) returns (DPDCfgMeasurementSampleRateResponse);
  rpc DPDCfgMemoryPolynomial(DPDCfgMemoryPolynomialRequest) returns (DPDCfgMemoryPolynomialResponse);
  rpc DPDCfgPreviousDPDPolynomial(DPDCfgPreviousDPDPolynomialRequest) returns (DPDCfgPreviousDPDPolynomialResponse);
  rpc DPDCfgReferenceWaveform(DPDCfgReferenceWaveformRequest) returns (DPDCfgReferenceWaveformResponse);
  rpc DPDCfgSynchronizationMethod(DPDCfgSynchronizationMethodRequest) returns (DPDCfgSynchronizationMethodResponse);
  rpc DPDFetchApplyDPDPreCFRPAPR(DPDFetchApplyDPDPreCFRPAPRRequest) returns (DPDFetchApplyDPDPreCFRPAPRResponse);
  rpc DPDFetchAverageGain(DPDFetchAverageGainRequest) returns (DPDFetchAverageGainResponse);
  rpc DPDFetchDPDPolynomial(DPDFetchDPDPolynomialRequest) returns (DPDFetchDPDPolynomialResponse);
  rpc DPDFetchLookupTable(DPDFetchLookupTableRequest) returns (DPDFetchLookupTableResponse);
  rpc DPDFetchNMSE(DPDFetchNMSERequest) returns (DPDFetchNMSEResponse);
  rpc DPDFetchProcessedMeanAcquiredWaveform(DPDFetchProcessedMeanAcquiredWaveformRequest) returns (DPDFetchProcessedMeanAcquiredWaveformResponse);
  rpc DPDFetchProcessedReferenceWaveform(DPDFetchProcessedReferenceWaveformRequest) returns (DPDFetchProcessedReferenceWaveformResponse);
  rpc DeleteList(DeleteListRequest) returns (DeleteListResponse);
  rpc DeleteSignalConfiguration(DeleteSignalConfigurationRequest) returns (DeleteSignalConfigurationResponse);
  rpc DisableTrigger(DisableTriggerRequest) returns (DisableTriggerResponse);
  rpc FCntCfgAveraging(FCntCfgAveragingRequest) returns (FCntCfgAveragingResponse);
  rpc FCntCfgMeasurementInterval(FCntCfgMeasurementIntervalRequest) returns (FCntCfgMeasurementIntervalResponse);
  rpc FCntCfgRBWFilter(FCntCfgRBWFilterRequest) returns (FCntCfgRBWFilterResponse);
  rpc FCntCfgThreshold(FCntCfgThresholdRequest) returns (FCntCfgThresholdResponse);
  rpc FCntFetchAllanDeviation(FCntFetchAllanDeviationRequest) returns (FCntFetchAllanDeviationResponse);
  rpc FCntFetchFrequencyTrace(FCntFetchFrequencyTraceRequest) returns (FCntFetchFrequencyTraceResponse);
  rpc FCntFetchMeasurement(FCntFetchMeasurementRequest) returns (FCntFetchMeasurementResponse);
  rpc FCntFetchPhaseTrace(FCntFetchPhaseTraceRequest) returns (FCntFetchPhaseTraceResponse);
  rpc FCntFetchPowerTrace(FCntFetchPowerTraceRequest) returns (FCntFetchPowerTraceResponse);
  rpc FCntRead(FCntReadRequest) returns (FCntReadResponse);
  rpc GetAllNamedResultNames(GetAllNamedResultNamesRequest) returns (GetAllNamedResultNamesResponse);
  rpc GetAttributeF32(GetAttributeF32Request) returns (GetAttributeF32Response);
  rpc GetAttributeF32Array(GetAttributeF32ArrayRequest) returns (GetAttributeF32ArrayResponse);
  rpc GetAttributeF64(GetAttributeF64Request) returns (GetAttributeF64Response);
  rpc GetAttributeF64Array(GetAttributeF64ArrayRequest) returns (GetAttributeF64ArrayResponse);
  rpc GetAttributeI16(GetAttributeI16Request) returns (GetAttributeI16Response);
  rpc GetAttributeI32(GetAttributeI32Request) returns (GetAttributeI32Response);
  rpc GetAttributeI32Array(GetAttributeI32ArrayRequest) returns (GetAttributeI32ArrayResponse);
  rpc GetAttributeI64(GetAttributeI64Request) returns (GetAttributeI64Response);
  rpc GetAttributeI64Array(GetAttributeI64ArrayRequest) returns (GetAttributeI64ArrayResponse);
  rpc GetAttributeI8(GetAttributeI8Request) returns (GetAttributeI8Response);
  rpc GetAttributeI8Array(GetAttributeI8ArrayRequest) returns (GetAttributeI8ArrayResponse);
  rpc GetAttributeNIComplexDoubleArray(GetAttributeNIComplexDoubleArrayRequest) returns (GetAttributeNIComplexDoubleArrayResponse);
  rpc GetAttributeNIComplexSingleArray(GetAttributeNIComplexSingleArrayRequest) returns (GetAttributeNIComplexSingleArrayResponse);
  rpc GetAttributeString(GetAttributeStringRequest) returns (GetAttributeStringResponse);
  rpc GetAttributeU16(GetAttributeU16Request) returns (GetAttributeU16Response);
  rpc GetAttributeU32(GetAttributeU32Request) returns (GetAttributeU32Response);
  rpc GetAttributeU32Array(GetAttributeU32ArrayRequest) returns (GetAttributeU32ArrayResponse);
  rpc GetAttributeU64Array(GetAttributeU64ArrayRequest) returns (GetAttributeU64ArrayResponse);
  rpc GetAttributeU8(GetAttributeU8Request) returns (GetAttributeU8Response);
  rpc GetAttributeU8Array(GetAttributeU8ArrayRequest) returns (GetAttributeU8ArrayResponse);
  rpc GetError(GetErrorRequest) returns (GetErrorResponse);
  rpc GetErrorString(GetErrorStringRequest) returns (GetErrorStringResponse);
  rpc HarmCfgAutoHarmonics(HarmCfgAutoHarmonicsRequest) returns (HarmCfgAutoHarmonicsResponse);
  rpc HarmCfgAveraging(HarmCfgAveragingRequest) returns (HarmCfgAveragingResponse);
  rpc HarmCfgFundamentalMeasurementInterval(HarmCfgFundamentalMeasurementIntervalRequest) returns (HarmCfgFundamentalMeasurementIntervalResponse);
  rpc HarmCfgFundamentalRBW(HarmCfgFundamentalRBWRequest) returns (HarmCfgFundamentalRBWResponse);
  rpc HarmCfgHarmonic(HarmCfgHarmonicRequest) returns (HarmCfgHarmonicResponse);
  rpc HarmCfgHarmonicArray(HarmCfgHarmonicArrayRequest) returns (HarmCfgHarmonicArrayResponse);
  rpc HarmCfgNumberOfHarmonics(HarmCfgNumberOfHarmonicsRequest) returns (HarmCfgNumberOfHarmonicsResponse);
  rpc HarmFetchHarmonicMeasurement(HarmFetchHarmonicMeasurementRequest) returns (HarmFetchHarmonicMeasurementResponse);
  rpc HarmFetchHarmonicMeasurementArray(HarmFetchHarmonicMeasurementArrayRequest) returns (HarmFetchHarmonicMeasurementArrayResponse);
  rpc HarmFetchHarmonicPowerTrace(HarmFetchHarmonicPowerTraceRequest) returns (HarmFetchHarmonicPowerTraceResponse);
  rpc HarmFetchTHD(HarmFetchTHDRequest) returns (HarmFetchTHDResponse);
  rpc HarmRead(HarmReadRequest) returns (HarmReadResponse);
  rpc IMCfgAutoIntermodsSetup(IMCfgAutoIntermodsSetupRequest) returns (IMCfgAutoIntermodsSetupResponse);
  rpc IMCfgAveraging(IMCfgAveragingRequest) returns (IMCfgAveragingResponse);
  rpc IMCfgFFT(IMCfgFFTRequest) returns (IMCfgFFTResponse);
  rpc IMCfgFrequencyDefinition(IMCfgFrequencyDefinitionRequest) returns (IMCfgFrequencyDefinitionResponse);
  rpc IMCfgFundamentalTones(IMCfgFundamentalTonesRequest) returns (IMCfgFundamentalTonesResponse);
  rpc IMCfgIntermod(IMCfgIntermodRequest) returns (IMCfgIntermodResponse);
  rpc IMCfgIntermodArray(IMCfgIntermodArrayRequest) returns (IMCfgIntermodArrayResponse);
  rpc IMCfgMeasurementMethod(IMCfgMeasurementMethodRequest) returns (IMCfgMeasurementMethodResponse);
  rpc IMCfgNumberOfIntermods(IMCfgNumberOfIntermodsRequest) returns (IMCfgNumberOfIntermodsResponse);
  rpc IMCfgRBWFilter(IMCfgRBWFilterRequest) returns (IMCfgRBWFilterResponse);
  rpc IMCfgSweepTime(IMCfgSweepTimeRequest) returns (IMCfgSweepTimeResponse);
  rpc IMFetchFundamentalMeasurement(IMFetchFundamentalMeasurementRequest) returns (IMFetchFundamentalMeasurementResponse);
  rpc IMFetchInterceptPower(IMFetchInterceptPowerRequest) returns (IMFetchInterceptPowerResponse);
  rpc IMFetchInterceptPowerArray(IMFetchInterceptPowerArrayRequest) returns (IMFetchInterceptPowerArrayResponse);
  rpc IMFetchIntermodMeasurement(IMFetchIntermodMeasurementRequest) returns (IMFetchIntermodMeasurementResponse);
  rpc IMFetchIntermodMeasurementArray(IMFetchIntermodMeasurementArrayRequest) returns (IMFetchIntermodMeasurementArrayResponse);
  rpc IMFetchSpectrum(IMFetchSpectrumRequest) returns (IMFetchSpectrumResponse);
  rpc IQCfgAcquisition(IQCfgAcquisitionRequest) returns (IQCfgAcquisitionResponse);
  rpc IQCfgBandwidth(IQCfgBandwidthRequest) returns (IQCfgBandwidthResponse);
  rpc IQFetchData(IQFetchDataRequest) returns (IQFetchDataResponse);
  rpc IQGetRecordsDone(IQGetRecordsDoneRequest) returns (IQGetRecordsDoneResponse);
  rpc Initialize(InitializeRequest) returns (InitializeResponse);
  rpc InitializeFromNIRFSASession(InitializeFromNIRFSASessionRequest) returns (InitializeFromNIRFSASessionResponse);
  rpc Initiate(InitiateRequest) returns (InitiateResponse);
  rpc MarkerCfgNumberOfMarkers(MarkerCfgNumberOfMarkersRequest) returns (MarkerCfgNumberOfMarkersResponse);
  rpc MarkerCfgPeakExcursion(MarkerCfgPeakExcursionRequest) returns (MarkerCfgPeakExcursionResponse);
  rpc MarkerCfgReferenceMarker(MarkerCfgReferenceMarkerRequest) returns (MarkerCfgReferenceMarkerResponse);
  rpc MarkerCfgThreshold(MarkerCfgThresholdRequest) returns (MarkerCfgThresholdResponse);
  rpc MarkerCfgTrace(MarkerCfgTraceRequest) returns (MarkerCfgTraceResponse);
  rpc MarkerCfgType(MarkerCfgTypeRequest) returns (MarkerCfgTypeResponse);
  rpc MarkerCfgXLocation(MarkerCfgXLocationRequest) returns (MarkerCfgXLocationResponse);
  rpc MarkerFetchXY(MarkerFetchXYRequest) returns (MarkerFetchXYResponse);
  rpc MarkerNextPeak(MarkerNextPeakRequest) returns (MarkerNextPeakResponse);
  rpc MarkerPeakSearch(MarkerPeakSearchRequest) returns (MarkerPeakSearchResponse);
  rpc NFCfgAveraging(NFCfgAveragingRequest) returns (NFCfgAveragingResponse);
  rpc NFCfgCalibrationLoss(NFCfgCalibrationLossRequest) returns (NFCfgCalibrationLossResponse);
  rpc NFCfgColdSourceDUTSParameters(NFCfgColdSourceDUTSParametersRequest) returns (NFCfgColdSourceDUTSParametersResponse);
  rpc NFCfgColdSourceInputTermination(NFCfgColdSourceInputTerminationRequest) returns (NFCfgColdSourceInputTerminationResponse);
  rpc NFCfgColdSourceMode(NFCfgColdSourceModeRequest) returns (NFCfgColdSourceModeResponse);
  rpc NFCfgDUTInputLoss(NFCfgDUTInputLossRequest) returns (NFCfgDUTInputLossResponse);
  rpc NFCfgDUTOutputLoss(NFCfgDUTOutputLossRequest) returns (NFCfgDUTOutputLossResponse);
  rpc NFCfgFrequencyList(NFCfgFrequencyListRequest) returns (NFCfgFrequencyListResponse);
  rpc NFCfgFrequencyListStartStopPoints(NFCfgFrequencyListStartStopPointsRequest) returns (NFCfgFrequencyListStartStopPointsResponse);
  rpc NFCfgFrequencyListStartStopStep(NFCfgFrequencyListStartStopStepRequest) returns (NFCfgFrequencyListStartStopStepResponse);
  rpc NFCfgMeasurementBandwidth(NFCfgMeasurementBandwidthRequest) returns (NFCfgMeasurementBandwidthResponse);
  rpc NFCfgMeasurementInterval(NFCfgMeasurementIntervalRequest) returns (NFCfgMeasurementIntervalResponse);
  rpc NFCfgMeasurementMethod(NFCfgMeasurementMethodRequest) returns (NFCfgMeasurementMethodResponse);
  rpc NFCfgYFactorMode(NFCfgYFactorModeRequest) returns (NFCfgYFactorModeResponse);
  rpc NFCfgYFactorNoiseSourceENR(NFCfgYFactorNoiseSourceENRRequest) returns (NFCfgYFactorNoiseSourceENRResponse);
  rpc NFCfgYFactorNoiseSourceLoss(NFCfgYFactorNoiseSourceLossRequest) returns (NFCfgYFactorNoiseSourceLossResponse);
  rpc NFCfgYFactorNoiseSourceSettlingTime(NFCfgYFactorNoiseSourceSettlingTimeRequest) returns (NFCfgYFactorNoiseSourceSettlingTimeResponse);
  rpc NFClearCalibrationDatabase(NFClearCalibrationDatabaseRequest) returns (NFClearCalibrationDatabaseResponse);
  rpc NFFetchAnalyzerNoiseFigure(NFFetchAnalyzerNoiseFigureRequest) returns (NFFetchAnalyzerNoiseFigureResponse);
  rpc NFFetchColdSourcePower(NFFetchColdSourcePowerRequest) returns (NFFetchColdSourcePowerResponse);
  rpc NFFetchDUTNoiseFigureAndGain(NFFetchDUTNoiseFigureAndGainRequest) returns (NFFetchDUTNoiseFigureAndGainResponse);
  rpc NFFetchYFactorPowers(NFFetchYFactorPowersRequest) returns (NFFetchYFactorPowersResponse);
  rpc NFFetchYFactors(NFFetchYFactorsRequest) returns (NFFetchYFactorsResponse);
  rpc NFRecommendReferenceLevel(NFRecommendReferenceLevelRequest) returns (NFRecommendReferenceLevelResponse);
  rpc NFValidateCalibrationData(NFValidateCalibrationDataRequest) returns (NFValidateCalibrationDataResponse);
  rpc OBWCfgAveraging(OBWCfgAveragingRequest) returns (OBWCfgAveragingResponse);
  rpc OBWCfgBandwidthPercentage(OBWCfgBandwidthPercentageRequest) returns (OBWCfgBandwidthPercentageResponse);
  rpc OBWCfgFFT(OBWCfgFFTRequest) returns (OBWCfgFFTResponse);
  rpc OBWCfgPowerUnits(OBWCfgPowerUnitsRequest) returns (OBWCfgPowerUnitsResponse);
  rpc OBWCfgRBWFilter(OBWCfgRBWFilterRequest) returns (OBWCfgRBWFilterResponse);
  rpc OBWCfgSpan(OBWCfgSpanRequest) returns (OBWCfgSpanResponse);
  rpc OBWCfgSweepTime(OBWCfgSweepTimeRequest) returns (OBWCfgSweepTimeResponse);
  rpc OBWFetchMeasurement(OBWFetchMeasurementRequest) returns (OBWFetchMeasurementResponse);
  rpc OBWFetchSpectrumTrace(OBWFetchSpectrumTraceRequest) returns (OBWFetchSpectrumTraceResponse);
  rpc OBWRead(OBWReadRequest) returns (OBWReadResponse);
  rpc PAVTCfgMeasurementBandwidth(PAVTCfgMeasurementBandwidthRequest) returns (PAVTCfgMeasurementBandwidthResponse);
  rpc PAVTCfgMeasurementInterval(PAVTCfgMeasurementIntervalRequest) returns (PAVTCfgMeasurementIntervalResponse);
  rpc PAVTCfgMeasurementIntervalMode(PAVTCfgMeasurementIntervalModeRequest) returns (PAVTCfgMeasurementIntervalModeResponse);
  rpc PAVTCfgMeasurementLocationType(PAVTCfgMeasurementLocationTypeRequest) returns (PAVTCfgMeasurementLocationTypeResponse);
  rpc PAVTCfgNumberOfSegments(PAVTCfgNumberOfSegmentsRequest) returns (PAVTCfgNumberOfSegmentsResponse);
  rpc PAVTCfgSegmentMeasurementInterval(PAVTCfgSegmentMeasurementIntervalRequest) returns (PAVTCfgSegmentMeasurementIntervalResponse);
  rpc PAVTCfgSegmentMeasurementIntervalArray(PAVTCfgSegmentMeasurementIntervalArrayRequest) returns (PAVTCfgSegmentMeasurementIntervalArrayResponse);
  rpc PAVTCfgSegmentStartTimeList(PAVTCfgSegmentStartTimeListRequest) returns (PAVTCfgSegmentStartTimeListResponse);
  rpc PAVTCfgSegmentStartTimeStep(PAVTCfgSegmentStartTimeStepRequest) returns (PAVTCfgSegmentStartTimeStepResponse);
  rpc PAVTCfgSegmentType(PAVTCfgSegmentTypeRequest) returns (PAVTCfgSegmentTypeResponse);
  rpc PAVTCfgSegmentTypeArray(PAVTCfgSegmentTypeArrayRequest) returns (PAVTCfgSegmentTypeArrayResponse);
  rpc PAVTFetchAmplitudeTrace(PAVTFetchAmplitudeTraceRequest) returns (PAVTFetchAmplitudeTraceResponse);
  rpc PAVTFetchPhaseAndAmplitude(PAVTFetchPhaseAndAmplitudeRequest) returns (PAVTFetchPhaseAndAmplitudeResponse);
  rpc PAVTFetchPhaseAndAmplitudeArray(PAVTFetchPhaseAndAmplitudeArrayRequest) returns (PAVTFetchPhaseAndAmplitudeArrayResponse);
  rpc PAVTFetchPhaseTrace(PAVTFetchPhaseTraceRequest) returns (PAVTFetchPhaseTraceResponse);
  rpc PhaseNoiseCfgAutoRange(PhaseNoiseCfgAutoRangeRequest) returns (PhaseNoiseCfgAutoRangeResponse);
  rpc PhaseNoiseCfgAveragingMultiplier(PhaseNoiseCfgAveragingMultiplierRequest) returns (PhaseNoiseCfgAveragingMultiplierResponse);
  rpc PhaseNoiseCfgCancellation(PhaseNoiseCfgCancellationRequest) returns (PhaseNoiseCfgCancellationResponse);
  rpc PhaseNoiseCfgIntegratedNoise(PhaseNoiseCfgIntegratedNoiseRequest) returns (PhaseNoiseCfgIntegratedNoiseResponse);
  rpc PhaseNoiseCfgNumberOfRanges(PhaseNoiseCfgNumberOfRangesRequest) returns (PhaseNoiseCfgNumberOfRangesResponse);
  rpc PhaseNoiseCfgRangeArray(PhaseNoiseCfgRangeArrayRequest) returns (PhaseNoiseCfgRangeArrayResponse);
  rpc PhaseNoiseCfgRangeDefinition(PhaseNoiseCfgRangeDefinitionRequest) returns (PhaseNoiseCfgRangeDefinitionResponse);
  rpc PhaseNoiseCfgSmoothing(PhaseNoiseCfgSmoothingRequest) returns (PhaseNoiseCfgSmoothingResponse);
  rpc PhaseNoiseCfgSpotNoiseFrequencyList(PhaseNoiseCfgSpotNoiseFrequencyListRequest) returns (PhaseNoiseCfgSpotNoiseFrequencyListResponse);
  rpc PhaseNoiseCfgSpurRemoval(PhaseNoiseCfgSpurRemovalRequest) returns (PhaseNoiseCfgSpurRemovalResponse);
  rpc PhaseNoiseFetchCarrierMeasurement(PhaseNoiseFetchCarrierMeasurementRequest) returns (PhaseNoiseFetchCarrierMeasurementResponse);
  rpc PhaseNoiseFetchIntegratedNoise(PhaseNoiseFetchIntegratedNoiseRequest) returns (PhaseNoiseFetchIntegratedNoiseResponse);
  rpc PhaseNoiseFetchMeasuredLogPlotTrace(PhaseNoiseFetchMeasuredLogPlotTraceRequest) returns (PhaseNoiseFetchMeasuredLogPlotTraceResponse);
  rpc PhaseNoiseFetchSmoothedLogPlotTrace(PhaseNoiseFetchSmoothedLogPlotTraceRequest) returns (PhaseNoiseFetchSmoothedLogPlotTraceResponse);
  rpc PhaseNoiseFetchSpotNoise(PhaseNoiseFetchSpotNoiseRequest) returns (PhaseNoiseFetchSpotNoiseResponse);
  rpc ResetAttribute(ResetAttributeRequest) returns (ResetAttributeResponse);
  rpc ResetToDefault(ResetToDefaultRequest) returns (ResetToDefaultResponse);
  rpc SEMCfgAveraging(SEMCfgAveragingRequest) returns (SEMCfgAveragingResponse);
  rpc SEMCfgCarrierChannelBandwidth(SEMCfgCarrierChannelBandwidthRequest) returns (SEMCfgCarrierChannelBandwidthResponse);
  rpc SEMCfgCarrierEnabled(SEMCfgCarrierEnabledRequest) returns (SEMCfgCarrierEnabledResponse);
  rpc SEMCfgCarrierFrequency(SEMCfgCarrierFrequencyRequest) returns (SEMCfgCarrierFrequencyResponse);
  rpc SEMCfgCarrierIntegrationBandwidth(SEMCfgCarrierIntegrationBandwidthRequest) returns (SEMCfgCarrierIntegrationBandwidthResponse);
  rpc SEMCfgCarrierRBWFilter(SEMCfgCarrierRBWFilterRequest) returns (SEMCfgCarrierRBWFilterResponse);
  rpc SEMCfgCarrierRRCFilter(SEMCfgCarrierRRCFilterRequest) returns (SEMCfgCarrierRRCFilterResponse);
  rpc SEMCfgFFT(SEMCfgFFTRequest) returns (SEMCfgFFTResponse);
  rpc SEMCfgNumberOfCarriers(SEMCfgNumberOfCarriersRequest) returns (SEMCfgNumberOfCarriersResponse);
  rpc SEMCfgNumberOfOffsets(SEMCfgNumberOfOffsetsRequest) returns (SEMCfgNumberOfOffsetsResponse);
  rpc SEMCfgOffsetAbsoluteLimit(SEMCfgOffsetAbsoluteLimitRequest) returns (SEMCfgOffsetAbsoluteLimitResponse);
  rpc SEMCfgOffsetAbsoluteLimitArray(SEMCfgOffsetAbsoluteLimitArrayRequest) returns (SEMCfgOffsetAbsoluteLimitArrayResponse);
  rpc SEMCfgOffsetBandwidthIntegral(SEMCfgOffsetBandwidthIntegralRequest) returns (SEMCfgOffsetBandwidthIntegralResponse);
  rpc SEMCfgOffsetFrequency(SEMCfgOffsetFrequencyRequest) returns (SEMCfgOffsetFrequencyResponse);
  rpc SEMCfgOffsetFrequencyArray(SEMCfgOffsetFrequencyArrayRequest) returns (SEMCfgOffsetFrequencyArrayResponse);
  rpc SEMCfgOffsetFrequencyDefinition(SEMCfgOffsetFrequencyDefinitionRequest) returns (SEMCfgOffsetFrequencyDefinitionResponse);
  rpc SEMCfgOffsetLimitFailMask(SEMCfgOffsetLimitFailMaskRequest) returns (SEMCfgOffsetLimitFailMaskResponse);
  rpc SEMCfgOffsetRBWFilter(SEMCfgOffsetRBWFilterRequest) returns (SEMCfgOffsetRBWFilterResponse);
  rpc SEMCfgOffsetRBWFilterArray(SEMCfgOffsetRBWFilterArrayRequest) returns (SEMCfgOffsetRBWFilterArrayResponse);
  rpc SEMCfgOffsetRelativeAttenuation(SEMCfgOffsetRelativeAttenuationRequest) returns (SEMCfgOffsetRelativeAttenuationResponse);
  rpc SEMCfgOffsetRelativeAttenuationArray(SEMCfgOffsetRelativeAttenuationArrayRequest) returns (SEMCfgOffsetRelativeAttenuationArrayResponse);
  rpc SEMCfgOffsetRelativeLimit(SEMCfgOffsetRelativeLimitRequest) returns (SEMCfgOffsetRelativeLimitResponse);
  rpc SEMCfgOffsetRelativeLimitArray(SEMCfgOffsetRelativeLimitArrayRequest) returns (SEMCfgOffsetRelativeLimitArrayResponse);
  rpc SEMCfgPowerUnits(SEMCfgPowerUnitsRequest) returns (SEMCfgPowerUnitsResponse);
  rpc SEMCfgReferenceType(SEMCfgReferenceTypeRequest) returns (SEMCfgReferenceTypeResponse);
  rpc SEMCfgSweepTime(SEMCfgSweepTimeRequest) returns (SEMCfgSweepTimeResponse);
  rpc SEMFetchAbsoluteMaskTrace(SEMFetchAbsoluteMaskTraceRequest) returns (SEMFetchAbsoluteMaskTraceResponse);
  rpc SEMFetchCarrierMeasurement(SEMFetchCarrierMeasurementRequest) returns (SEMFetchCarrierMeasurementResponse);
  rpc SEMFetchCompositeMeasurementStatus(SEMFetchCompositeMeasurementStatusRequest) returns (SEMFetchCompositeMeasurementStatusResponse);
  rpc SEMFetchFrequencyResolution(SEMFetchFrequencyResolutionRequest) returns (SEMFetchFrequencyResolutionResponse);
  rpc SEMFetchLowerOffsetMargin(SEMFetchLowerOffsetMarginRequest) returns (SEMFetchLowerOffsetMarginResponse);
  rpc SEMFetchLowerOffsetMarginArray(SEMFetchLowerOffsetMarginArrayRequest) returns (SEMFetchLowerOffsetMarginArrayResponse);
  rpc SEMFetchLowerOffsetPower(SEMFetchLowerOffsetPowerRequest) returns (SEMFetchLowerOffsetPowerResponse);
  rpc SEMFetchLowerOffsetPowerArray(SEMFetchLowerOffsetPowerArrayRequest) returns (SEMFetchLowerOffsetPowerArrayResponse);
  rpc SEMFetchRelativeMaskTrace(SEMFetchRelativeMaskTraceRequest) returns (SEMFetchRelativeMaskTraceResponse);
  rpc SEMFetchSpectrum(SEMFetchSpectrumRequest) returns (SEMFetchSpectrumResponse);
  rpc SEMFetchTotalCarrierPower(SEMFetchTotalCarrierPowerRequest) returns (SEMFetchTotalCarrierPowerResponse);
  rpc SEMFetchUpperOffsetMargin(SEMFetchUpperOffsetMarginRequest) returns (SEMFetchUpperOffsetMarginResponse);
  rpc SEMFetchUpperOffsetMarginArray(SEMFetchUpperOffsetMarginArrayRequest) returns (SEMFetchUpperOffsetMarginArrayResponse);
  rpc SEMFetchUpperOffsetPower(SEMFetchUpperOffsetPowerRequest) returns (SEMFetchUpperOffsetPowerResponse);
  rpc SEMFetchUpperOffsetPowerArray(SEMFetchUpperOffsetPowerArrayRequest) returns (SEMFetchUpperOffsetPowerArrayResponse);
  rpc SelectMeasurements(SelectMeasurementsRequest) returns (SelectMeasurementsResponse);
  rpc SendSoftwareEdgeTrigger(SendSoftwareEdgeTriggerRequest) returns (SendSoftwareEdgeTriggerResponse);
  rpc SetAttributeF32(SetAttributeF32Request) returns (SetAttributeF32Response);
  rpc SetAttributeF32Array(SetAttributeF32ArrayRequest) returns (SetAttributeF32ArrayResponse);
  rpc SetAttributeF64(SetAttributeF64Request) returns (SetAttributeF64Response);
  rpc SetAttributeF64Array(SetAttributeF64ArrayRequest) returns (SetAttributeF64ArrayResponse);
  rpc SetAttributeI16(SetAttributeI16Request) returns (SetAttributeI16Response);
  rpc SetAttributeI32(SetAttributeI32Request) returns (SetAttributeI32Response);
  rpc SetAttributeI32Array(SetAttributeI32ArrayRequest) returns (SetAttributeI32ArrayResponse);
  rpc SetAttributeI64(SetAttributeI64Request) returns (SetAttributeI64Response);
  rpc SetAttributeI64Array(SetAttributeI64ArrayRequest) returns (SetAttributeI64ArrayResponse);
  rpc SetAttributeI8(SetAttributeI8Request) returns (SetAttributeI8Response);
  rpc SetAttributeI8Array(SetAttributeI8ArrayRequest) returns (SetAttributeI8ArrayResponse);
  rpc SetAttributeNIComplexDoubleArray(SetAttributeNIComplexDoubleArrayRequest) returns (SetAttributeNIComplexDoubleArrayResponse);
  rpc SetAttributeNIComplexSingleArray(SetAttributeNIComplexSingleArrayRequest) returns (SetAttributeNIComplexSingleArrayResponse);
  rpc SetAttributeString(SetAttributeStringRequest) returns (SetAttributeStringResponse);
  rpc SetAttributeU16(SetAttributeU16Request) returns (SetAttributeU16Response);
  rpc SetAttributeU32(SetAttributeU32Request) returns (SetAttributeU32Response);
  rpc SetAttributeU32Array(SetAttributeU32ArrayRequest) returns (SetAttributeU32ArrayResponse);
  rpc SetAttributeU64Array(SetAttributeU64ArrayRequest) returns (SetAttributeU64ArrayResponse);
  rpc SetAttributeU8(SetAttributeU8Request) returns (SetAttributeU8Response);
  rpc SetAttributeU8Array(SetAttributeU8ArrayRequest) returns (SetAttributeU8ArrayResponse);
  rpc SpectrumCfgAveraging(SpectrumCfgAveragingRequest) returns (SpectrumCfgAveragingResponse);
  rpc SpectrumCfgDetector(SpectrumCfgDetectorRequest) returns (SpectrumCfgDetectorResponse);
  rpc SpectrumCfgFFT(SpectrumCfgFFTRequest) returns (SpectrumCfgFFTResponse);
  rpc SpectrumCfgFrequencyStartStop(SpectrumCfgFrequencyStartStopRequest) returns (SpectrumCfgFrequencyStartStopResponse);
  rpc SpectrumCfgNoiseCompensationEnabled(SpectrumCfgNoiseCompensationEnabledRequest) returns (SpectrumCfgNoiseCompensationEnabledResponse);
  rpc SpectrumCfgPowerUnits(SpectrumCfgPowerUnitsRequest) returns (SpectrumCfgPowerUnitsResponse);
  rpc SpectrumCfgRBWFilter(SpectrumCfgRBWFilterRequest) returns (SpectrumCfgRBWFilterResponse);
  rpc SpectrumCfgSpan(SpectrumCfgSpanRequest) returns (SpectrumCfgSpanResponse);
  rpc SpectrumCfgSweepTime(SpectrumCfgSweepTimeRequest) returns (SpectrumCfgSweepTimeResponse);
  rpc SpectrumCfgVBWFilter(SpectrumCfgVBWFilterRequest) returns (SpectrumCfgVBWFilterResponse);
  rpc SpectrumFetchMeasurement(SpectrumFetchMeasurementRequest) returns (SpectrumFetchMeasurementResponse);
  rpc SpectrumFetchPowerTrace(SpectrumFetchPowerTraceRequest) returns (SpectrumFetchPowerTraceResponse);
  rpc SpectrumFetchSpectrum(SpectrumFetchSpectrumRequest) returns (SpectrumFetchSpectrumResponse);
  rpc SpectrumRead(SpectrumReadRequest) returns (SpectrumReadResponse);
  rpc SpectrumValidateNoiseCalibrationData(SpectrumValidateNoiseCalibrationDataRequest) returns (SpectrumValidateNoiseCalibrationDataResponse);
  rpc SpurCfgAveraging(SpurCfgAveragingRequest) returns (SpurCfgAveragingResponse);
  rpc SpurCfgFFTWindowType(SpurCfgFFTWindowTypeRequest) returns (SpurCfgFFTWindowTypeResponse);
  rpc SpurCfgNumberOfRanges(SpurCfgNumberOfRangesRequest) returns (SpurCfgNumberOfRangesResponse);
  rpc SpurCfgRangeAbsoluteLimit(SpurCfgRangeAbsoluteLimitRequest) returns (SpurCfgRangeAbsoluteLimitResponse);
  rpc SpurCfgRangeAbsoluteLimitArray(SpurCfgRangeAbsoluteLimitArrayRequest) returns (SpurCfgRangeAbsoluteLimitArrayResponse);
  rpc SpurCfgRangeDetector(SpurCfgRangeDetectorRequest) returns (SpurCfgRangeDetectorResponse);
  rpc SpurCfgRangeDetectorArray(SpurCfgRangeDetectorArrayRequest) returns (SpurCfgRangeDetectorArrayResponse);
  rpc SpurCfgRangeFrequency(SpurCfgRangeFrequencyRequest) returns (SpurCfgRangeFrequencyResponse);
  rpc SpurCfgRangeFrequencyArray(SpurCfgRangeFrequencyArrayRequest) returns (SpurCfgRangeFrequencyArrayResponse);
  rpc SpurCfgRangeNumberOfSpursToReport(SpurCfgRangeNumberOfSpursToReportRequest) returns (SpurCfgRangeNumberOfSpursToReportResponse);
  rpc SpurCfgRangeNumberOfSpursToReportArray(SpurCfgRangeNumberOfSpursToReportArrayRequest) returns (SpurCfgRangeNumberOfSpursToReportArrayResponse);
  rpc SpurCfgRangePeakCriteria(SpurCfgRangePeakCriteriaRequest) returns (SpurCfgRangePeakCriteriaResponse);
  rpc SpurCfgRangePeakCriteriaArray(SpurCfgRangePeakCriteriaArrayRequest) returns (SpurCfgRangePeakCriteriaArrayResponse);
  rpc SpurCfgRangeRBWArray(SpurCfgRangeRBWArrayRequest) returns (SpurCfgRangeRBWArrayResponse);
  rpc SpurCfgRangeRBWFilter(SpurCfgRangeRBWFilterRequest) returns (SpurCfgRangeRBWFilterResponse);
  rpc SpurCfgRangeRelativeAttenuation(SpurCfgRangeRelativeAttenuationRequest) returns (SpurCfgRangeRelativeAttenuationResponse);
  rpc SpurCfgRangeRelativeAttenuationArray(SpurCfgRangeRelativeAttenuationArrayRequest) returns (SpurCfgRangeRelativeAttenuationArrayResponse);
  rpc SpurCfgRangeSweepTime(SpurCfgRangeSweepTimeRequest) returns (SpurCfgRangeSweepTimeResponse);
  rpc SpurCfgRangeSweepTimeArray(SpurCfgRangeSweepTimeArrayRequest) returns (SpurCfgRangeSweepTimeArrayResponse);
  rpc SpurCfgRangeVBWFilter(SpurCfgRangeVBWFilterRequest) returns (SpurCfgRangeVBWFilterResponse);
  rpc SpurCfgRangeVBWFilterArray(SpurCfgRangeVBWFilterArrayRequest) returns (SpurCfgRangeVBWFilterArrayResponse);
  rpc SpurCfgTraceRangeIndex(SpurCfgTraceRangeIndexRequest) returns (SpurCfgTraceRangeIndexResponse);
  rpc SpurFetchAllSpurs(SpurFetchAllSpursRequest) returns (SpurFetchAllSpursResponse);
  rpc SpurFetchMeasurementStatus(SpurFetchMeasurementStatusRequest) returns (SpurFetchMeasurementStatusResponse);
  rpc SpurFetchRangeAbsoluteLimitTrace(SpurFetchRangeAbsoluteLimitTraceRequest) returns (SpurFetchRangeAbsoluteLimitTraceResponse);
  rpc SpurFetchRangeSpectrumTrace(SpurFetchRangeSpectrumTraceRequest) returns (SpurFetchRangeSpectrumTraceResponse);
  rpc SpurFetchRangeStatus(SpurFetchRangeStatusRequest) returns (SpurFetchRangeStatusResponse);
  rpc SpurFetchRangeStatusArray(SpurFetchRangeStatusArrayRequest) returns (SpurFetchRangeStatusArrayResponse);
  rpc SpurFetchSpurMeasurement(SpurFetchSpurMeasurementRequest) returns (SpurFetchSpurMeasurementResponse);
  rpc SpurFetchSpurMeasurementArray(SpurFetchSpurMeasurementArrayRequest) returns (SpurFetchSpurMeasurementArrayResponse);
  rpc TXPCfgAveraging(TXPCfgAveragingRequest) returns (TXPCfgAveragingResponse);
  rpc TXPCfgMeasurementInterval(TXPCfgMeasurementIntervalRequest) returns (TXPCfgMeasurementIntervalResponse);
  rpc TXPCfgRBWFilter(TXPCfgRBWFilterRequest) returns (TXPCfgRBWFilterResponse);
  rpc TXPCfgThreshold(TXPCfgThresholdRequest) returns (TXPCfgThresholdResponse);
  rpc TXPCfgVBWFilter(TXPCfgVBWFilterRequest) returns (TXPCfgVBWFilterResponse);
  rpc TXPFetchMeasurement(TXPFetchMeasurementRequest) returns (TXPFetchMeasurementResponse);
  rpc TXPFetchPowerTrace(TXPFetchPowerTraceRequest) returns (TXPFetchPowerTraceResponse);
  rpc TXPRead(TXPReadRequest) returns (TXPReadResponse);
  rpc WaitForAcquisitionComplete(WaitForAcquisitionCompleteRequest) returns (WaitForAcquisitionCompleteResponse);
  rpc WaitForMeasurementComplete(WaitForMeasurementCompleteRequest) returns (WaitForMeasurementCompleteResponse);
}

enum NiRFmxSpecAnAttribute {
  NIRFMXSPECAN_ATTRIBUTE_UNSPECIFIED = 0;
  NIRFMXSPECAN_ATTRIBUTE_CENTER_FREQUENCY = 1048577;
  NIRFMXSPECAN_ATTRIBUTE_REFERENCE_LEVEL = 1048578;
  NIRFMXSPECAN_ATTRIBUTE_EXTERNAL_ATTENUATION = 1048579;
  NIRFMXSPECAN_ATTRIBUTE_TRIGGER_TYPE = 1048580;
  NIRFMXSPECAN_ATTRIBUTE_DIGITAL_EDGE_TRIGGER_SOURCE = 1048581;
  NIRFMXSPECAN_ATTRIBUTE_DIGITAL_EDGE_TRIGGER_EDGE = 1048582;
  NIRFMXSPECAN_ATTRIBUTE_IQ_POWER_EDGE_TRIGGER_SOURCE = 1048583;
  NIRFMXSPECAN_ATTRIBUTE_IQ_POWER_EDGE_TRIGGER_LEVEL = 1048584;
  NIRFMXSPECAN_ATTRIBUTE_IQ_POWER_EDGE_TRIGGER_SLOPE = 1048585;
  NIRFMXSPECAN_ATTRIBUTE_TRIGGER_DELAY = 1048586;
  NIRFMXSPECAN_ATTRIBUTE_TRIGGER_MINIMUM_QUIET_TIME_MODE = 1048587;
  NIRFMXSPECAN_ATTRIBUTE_TRIGGER_MINIMUM_QUIET_TIME_DURATION = 1048588;
  NIRFMXSPECAN_ATTRIBUTE_AUTO_LEVEL_INITIAL_REFERENCE_LEVEL = 1048589;
  NIRFMXSPECAN_ATTRIBUTE_LIMITED_CONFIGURATION_CHANGE = 1048590;
  NIRFMXSPECAN_ATTRIBUTE_LIST_STEP_TIMER_OFFSET = 1052663;
  NIRFMXSPECAN_ATTRIBUTE_NUMBER_OF_STEPS = 1052664;
  NIRFMXSPECAN_ATTRIBUTE_LIST_STEP_TIMER_DURATION = 1052665;
  NIRFMXSPECAN_ATTRIBUTE_REFERENCE_LEVEL_HEADROOM = 1052668;
  NIRFMXSPECAN_ATTRIBUTE_SELECTED_PORTS = 1052669;
  NIRFMXSPECAN_ATTRIBUTE_IQ_POWER_EDGE_TRIGGER_LEVEL_TYPE = 1052671;
  NIRFMXSPECAN_ATTRIBUTE_ACP_MEASUREMENT_ENABLED = 1052672;
  NIRFMXSPECAN_ATTRIBUTE_ACP_NUMBER_OF_CARRIERS = 1052674;
  NIRFMXSPECAN_ATTRIBUTE_ACP_CARRIER_MODE = 1052675;
  NIRFMXSPECAN_ATTRIBUTE_ACP_CARRIER_FREQUENCY = 1052676;
  NIRFMXSPECAN_ATTRIBUTE_ACP_CARRIER_INTEGRATION_BANDWIDTH = 1052677;
  NIRFMXSPECAN_ATTRIBUTE_ACP_CARRIER_RRC_FILTER_ENABLED = 1052678;
  NIRFMXSPECAN_ATTRIBUTE_ACP_CARRIER_RRC_FILTER_ALPHA = 1052679;
  NIRFMXSPECAN_ATTRIBUTE_ACP_NUMBER_OF_OFFSETS = 1052680;
  NIRFMXSPECAN_ATTRIBUTE_ACP_OFFSET_ENABLED = 1052681;
  NIRFMXSPECAN_ATTRIBUTE_ACP_OFFSET_FREQUENCY = 1052682;
  NIRFMXSPECAN_ATTRIBUTE_ACP_OFFSET_SIDEBAND = 1052683;
  NIRFMXSPECAN_ATTRIBUTE_ACP_OFFSET_POWER_REFERENCE_CARRIER = 1052684;
  NIRFMXSPECAN_ATTRIBUTE_ACP_OFFSET_POWER_REFERENCE_SPECIFIC = 1052685;
  NIRFMXSPECAN_ATTRIBUTE_ACP_OFFSET_INTEGRATION_BANDWIDTH = 1052686;
  NIRFMXSPECAN_ATTRIBUTE_ACP_OFFSET_RELATIVE_ATTENUATION = 1052687;
  NIRFMXSPECAN_ATTRIBUTE_ACP_OFFSET_RRC_FILTER_ENABLED = 1052688;
  NIRFMXSPECAN_ATTRIBUTE_ACP_OFFSET_RRC_FILTER_ALPHA = 1052689;
  NIRFMXSPECAN_ATTRIBUTE_ACP_MEASUREMENT_METHOD = 1052690;
  NIRFMXSPECAN_ATTRIBUTE_ACP_POWER_UNITS = 1052691;
  NIRFMXSPECAN_ATTRIBUTE_ACP_NUMBER_OF_ANALYSIS_THREADS = 1052692;
  NIRFMXSPECAN_ATTRIBUTE_ACP_AVERAGING_COUNT = 1052693;
  NIRFMXSPECAN_ATTRIBUTE_ACP_AVERAGING_ENABLED = 1052694;
  NIRFMXSPECAN_ATTRIBUTE_ACP_AVERAGING_TYPE = 1052696;
  NIRFMXSPECAN_ATTRIBUTE_ACP_FFT_WINDOW = 1052697;
  NIRFMXSPECAN_ATTRIBUTE_ACP_FFT_PADDING = 1052698;
  NIRFMXSPECAN_ATTRIBUTE_ACP_RBW_FILTER_AUTO_BANDWIDTH = 1052699;
  NIRFMXSPECAN_ATTRIBUTE_ACP_RBW_FILTER_BANDWIDTH = 1052700;
  NIRFMXSPECAN_ATTRIBUTE_ACP_RBW_FILTER_TYPE = 1052701;
  NIRFMXSPECAN_ATTRIBUTE_ACP_SWEEP_TIME_AUTO = 1052702;
  NIRFMXSPECAN_ATTRIBUTE_ACP_SWEEP_TIME_INTERVAL = 1052703;
  NIRFMXSPECAN_ATTRIBUTE_ACP_NOISE_COMPENSATION_ENABLED = 1052704;
  NIRFMXSPECAN_ATTRIBUTE_ACP_ALL_TRACES_ENABLED = 1052705;
  NIRFMXSPECAN_ATTRIBUTE_ACP_RESULTS_TOTAL_CARRIER_POWER = 1052706;
  NIRFMXSPECAN_ATTRIBUTE_ACP_RESULTS_FREQUENCY_RESOLUTION = 1052707;
  NIRFMXSPECAN_ATTRIBUTE_ACP_RESULTS_CARRIER_FREQUENCY = 1052708;
  NIRFMXSPECAN_ATTRIBUTE_ACP_RESULTS_CARRIER_INTEGRATION_BANDWIDTH = 1052709;
  NIRFMXSPECAN_ATTRIBUTE_ACP_RESULTS_CARRIER_ABSOLUTE_POWER = 1052710;
  NIRFMXSPECAN_ATTRIBUTE_ACP_RESULTS_CARRIER_TOTAL_RELATIVE_POWER = 1052711;
  NIRFMXSPECAN_ATTRIBUTE_ACP_RESULTS_LOWER_OFFSET_FREQUENCY_REFERENCE_CARRIER = 1052712;
  NIRFMXSPECAN_ATTRIBUTE_ACP_RESULTS_LOWER_OFFSET_FREQUENCY = 1052713;
  NIRFMXSPECAN_ATTRIBUTE_ACP_RESULTS_LOWER_OFFSET_INTEGRATION_BANDWIDTH = 1052714;
  NIRFMXSPECAN_ATTRIBUTE_ACP_RESULTS_LOWER_OFFSET_POWER_REFERENCE_CARRIER = 1052715;
  NIRFMXSPECAN_ATTRIBUTE_ACP_RESULTS_LOWER_OFFSET_ABSOLUTE_POWER = 1052716;
  NIRFMXSPECAN_ATTRIBUTE_ACP_RESULTS_LOWER_OFFSET_RELATIVE_POWER = 1052717;
  NIRFMXSPECAN_ATTRIBUTE_ACP_RESULTS_UPPER_OFFSET_FREQUENCY_REFERENCE_CARRIER = 1052718;
  NIRFMXSPECAN_ATTRIBUTE_ACP_RESULTS_UPPER_OFFSET_FREQUENCY = 1052719;
  NIRFMXSPECAN_ATTRIBUTE_ACP_RESULTS_UPPER_OFFSET_INTEGRATION_BANDWIDTH = 1052720;
  NIRFMXSPECAN_ATTRIBUTE_ACP_RESULTS_UPPER_OFFSET_POWER_REFERENCE_CARRIER = 1052721;
  NIRFMXSPECAN_ATTRIBUTE_ACP_RESULTS_UPPER_OFFSET_ABSOLUTE_POWER = 1052722;
  NIRFMXSPECAN_ATTRIBUTE_ACP_RESULTS_UPPER_OFFSET_RELATIVE_POWER = 1052723;
  NIRFMXSPECAN_ATTRIBUTE_ACP_IF_OUTPUT_POWER_OFFSET_AUTO = 1052724;
  NIRFMXSPECAN_ATTRIBUTE_ACP_NEAR_IF_OUTPUT_POWER_OFFSET = 1052725;
  NIRFMXSPECAN_ATTRIBUTE_ACP_FAR_IF_OUTPUT_POWER_OFFSET = 1052726;
  NIRFMXSPECAN_ATTRIBUTE_ACP_OFFSET_FREQUENCY_DEFINITION = 1052727;
  NIRFMXSPECAN_ATTRIBUTE_ACP_RBW_FILTER_BANDWIDTH_DEFINITION = 1052728;
  NIRFMXSPECAN_ATTRIBUTE_ACP_AMPLITUDE_CORRECTION_TYPE = 1052729;
  NIRFMXSPECAN_ATTRIBUTE_ACP_SEQUENTIAL_FFT_SIZE = 1052730;
  NIRFMXSPECAN_ATTRIBUTE_ACP_FFT_OVERLAP_MODE = 1052731;
  NIRFMXSPECAN_ATTRIBUTE_ACP_FFT_OVERLAP = 1052732;
  NIRFMXSPECAN_ATTRIBUTE_ACP_MEASUREMENT_MODE = 1052733;
  NIRFMXSPECAN_ATTRIBUTE_ACP_NOISE_COMPENSATION_TYPE = 1052734;
  NIRFMXSPECAN_ATTRIBUTE_ACP_NOISE_CALIBRATION_AVERAGING_COUNT = 1052735;
  NIRFMXSPECAN_ATTRIBUTE_ACP_NOISE_CALIBRATION_AVERAGING_AUTO = 1052736;
  NIRFMXSPECAN_ATTRIBUTE_ACP_NOISE_CALIBRATION_MODE = 1052737;
  NIRFMXSPECAN_ATTRIBUTE_CCDF_MEASUREMENT_ENABLED = 1056768;
  NIRFMXSPECAN_ATTRIBUTE_CCDF_MEASUREMENT_INTERVAL = 1056770;
  NIRFMXSPECAN_ATTRIBUTE_CCDF_NUMBER_OF_ANALYSIS_THREADS = 1056771;
  NIRFMXSPECAN_ATTRIBUTE_CCDF_NUMBER_OF_RECORDS = 1056772;
  NIRFMXSPECAN_ATTRIBUTE_CCDF_RBW_FILTER_RRC_ALPHA = 1056774;
  NIRFMXSPECAN_ATTRIBUTE_CCDF_RBW_FILTER_BANDWIDTH = 1056775;
  NIRFMXSPECAN_ATTRIBUTE_CCDF_RBW_FILTER_TYPE = 1056776;
  NIRFMXSPECAN_ATTRIBUTE_CCDF_THRESHOLD_ENABLED = 1056777;
  NIRFMXSPECAN_ATTRIBUTE_CCDF_THRESHOLD_LEVEL = 1056778;
  NIRFMXSPECAN_ATTRIBUTE_CCDF_THRESHOLD_TYPE = 1056779;
  NIRFMXSPECAN_ATTRIBUTE_CCDF_ALL_TRACES_ENABLED = 1056781;
  NIRFMXSPECAN_ATTRIBUTE_CCDF_RESULTS_MEAN_POWER = 1056782;
  NIRFMXSPECAN_ATTRIBUTE_CCDF_RESULTS_MEAN_POWER_PERCENTILE = 1056783;
  NIRFMXSPECAN_ATTRIBUTE_CCDF_RESULTS_TEN_PERCENT_POWER = 1056784;
  NIRFMXSPECAN_ATTRIBUTE_CCDF_RESULTS_ONE_PERCENT_POWER = 1056785;
  NIRFMXSPECAN_ATTRIBUTE_CCDF_RESULTS_ONE_TENTH_PERCENT_POWER = 1056786;
  NIRFMXSPECAN_ATTRIBUTE_CCDF_RESULTS_ONE_HUNDREDTH_PERCENT_POWER = 1056787;
  NIRFMXSPECAN_ATTRIBUTE_CCDF_RESULTS_ONE_THOUSANDTH_PERCENT_POWER = 1056788;
  NIRFMXSPECAN_ATTRIBUTE_CCDF_RESULTS_ONE_TEN_THOUSANDTH_PERCENT_POWER = 1056789;
  NIRFMXSPECAN_ATTRIBUTE_CCDF_RESULTS_PEAK_POWER = 1056790;
  NIRFMXSPECAN_ATTRIBUTE_CCDF_RESULTS_MEASURED_SAMPLES_COUNT = 1056791;
  NIRFMXSPECAN_ATTRIBUTE_CHP_MEASUREMENT_ENABLED = 1060864;
  NIRFMXSPECAN_ATTRIBUTE_CHP_CARRIER_INTEGRATION_BANDWIDTH = 1060866;
  NIRFMXSPECAN_ATTRIBUTE_CHP_NUMBER_OF_ANALYSIS_THREADS = 1060867;
  NIRFMXSPECAN_ATTRIBUTE_CHP_SPAN = 1060868;
  NIRFMXSPECAN_ATTRIBUTE_CHP_AVERAGING_COUNT = 1060870;
  NIRFMXSPECAN_ATTRIBUTE_CHP_AVERAGING_ENABLED = 1060871;
  NIRFMXSPECAN_ATTRIBUTE_CHP_AVERAGING_TYPE = 1060873;
  NIRFMXSPECAN_ATTRIBUTE_CHP_FFT_WINDOW = 1060874;
  NIRFMXSPECAN_ATTRIBUTE_CHP_FFT_PADDING = 1060875;
  NIRFMXSPECAN_ATTRIBUTE_CHP_RBW_FILTER_AUTO_BANDWIDTH = 1060876;
  NIRFMXSPECAN_ATTRIBUTE_CHP_RBW_FILTER_BANDWIDTH = 1060877;
  NIRFMXSPECAN_ATTRIBUTE_CHP_RBW_FILTER_TYPE = 1060878;
  NIRFMXSPECAN_ATTRIBUTE_CHP_CARRIER_RRC_FILTER_ENABLED = 1060879;
  NIRFMXSPECAN_ATTRIBUTE_CHP_CARRIER_RRC_FILTER_ALPHA = 1060880;
  NIRFMXSPECAN_ATTRIBUTE_CHP_SWEEP_TIME_AUTO = 1060881;
  NIRFMXSPECAN_ATTRIBUTE_CHP_SWEEP_TIME_INTERVAL = 1060882;
  NIRFMXSPECAN_ATTRIBUTE_CHP_ALL_TRACES_ENABLED = 1060884;
  NIRFMXSPECAN_ATTRIBUTE_CHP_RESULTS_CARRIER_ABSOLUTE_POWER = 1060885;
  NIRFMXSPECAN_ATTRIBUTE_CHP_RESULTS_CARRIER_PSD = 1060886;
  NIRFMXSPECAN_ATTRIBUTE_CHP_RESULTS_FREQUENCY_RESOLUTION = 1060887;
  NIRFMXSPECAN_ATTRIBUTE_CHP_NUMBER_OF_CARRIERS = 1060888;
  NIRFMXSPECAN_ATTRIBUTE_CHP_CARRIER_FREQUENCY = 1060889;
  NIRFMXSPECAN_ATTRIBUTE_CHP_RESULTS_TOTAL_CARRIER_POWER = 1060890;
  NIRFMXSPECAN_ATTRIBUTE_CHP_RESULTS_CARRIER_FREQUENCY = 1060891;
  NIRFMXSPECAN_ATTRIBUTE_CHP_RESULTS_CARRIER_INTEGRATION_BANDWIDTH = 1060892;
  NIRFMXSPECAN_ATTRIBUTE_CHP_RESULTS_CARRIER_RELATIVE_POWER = 1060893;
  NIRFMXSPECAN_ATTRIBUTE_CHP_RBW_FILTER_BANDWIDTH_DEFINITION = 1060894;
  NIRFMXSPECAN_ATTRIBUTE_CHP_AMPLITUDE_CORRECTION_TYPE = 1060895;
  NIRFMXSPECAN_ATTRIBUTE_CHP_MEASUREMENT_MODE = 1060896;
  NIRFMXSPECAN_ATTRIBUTE_CHP_NOISE_COMPENSATION_ENABLED = 1060897;
  NIRFMXSPECAN_ATTRIBUTE_CHP_NOISE_COMPENSATION_TYPE = 1060898;
  NIRFMXSPECAN_ATTRIBUTE_CHP_NOISE_CALIBRATION_AVERAGING_COUNT = 1060899;
  NIRFMXSPECAN_ATTRIBUTE_CHP_NOISE_CALIBRATION_AVERAGING_AUTO = 1060900;
  NIRFMXSPECAN_ATTRIBUTE_CHP_NOISE_CALIBRATION_MODE = 1060901;
  NIRFMXSPECAN_ATTRIBUTE_FCNT_MEASUREMENT_ENABLED = 1064960;
  NIRFMXSPECAN_ATTRIBUTE_FCNT_MEASUREMENT_INTERVAL = 1064962;
  NIRFMXSPECAN_ATTRIBUTE_FCNT_NUMBER_OF_ANALYSIS_THREADS = 1064963;
  NIRFMXSPECAN_ATTRIBUTE_FCNT_AVERAGING_COUNT = 1064965;
  NIRFMXSPECAN_ATTRIBUTE_FCNT_AVERAGING_ENABLED = 1064966;
  NIRFMXSPECAN_ATTRIBUTE_FCNT_AVERAGING_TYPE = 1064968;
  NIRFMXSPECAN_ATTRIBUTE_FCNT_RBW_FILTER_RRC_ALPHA = 1064969;
  NIRFMXSPECAN_ATTRIBUTE_FCNT_RBW_FILTER_BANDWIDTH = 1064970;
  NIRFMXSPECAN_ATTRIBUTE_FCNT_RBW_FILTER_TYPE = 1064971;
  NIRFMXSPECAN_ATTRIBUTE_FCNT_THRESHOLD_ENABLED = 1064972;
  NIRFMXSPECAN_ATTRIBUTE_FCNT_THRESHOLD_LEVEL = 1064973;
  NIRFMXSPECAN_ATTRIBUTE_FCNT_THRESHOLD_TYPE = 1064974;
  NIRFMXSPECAN_ATTRIBUTE_FCNT_ALL_TRACES_ENABLED = 1064976;
  NIRFMXSPECAN_ATTRIBUTE_FCNT_RESULTS_AVERAGE_RELATIVE_FREQUENCY = 1064977;
  NIRFMXSPECAN_ATTRIBUTE_FCNT_RESULTS_MEAN_PHASE = 1064978;
  NIRFMXSPECAN_ATTRIBUTE_FCNT_RESULTS_AVERAGE_ABSOLUTE_FREQUENCY = 1064979;
  NIRFMXSPECAN_ATTRIBUTE_FCNT_RESULTS_ALLAN_DEVIATION = 1064980;
  NIRFMXSPECAN_ATTRIBUTE_HARM_MEASUREMENT_ENABLED = 1069056;
  NIRFMXSPECAN_ATTRIBUTE_HARM_NUMBER_OF_ANALYSIS_THREADS = 1069058;
  NIRFMXSPECAN_ATTRIBUTE_HARM_FUNDAMENTAL_RBW_FILTER_ALPHA = 1069059;
  NIRFMXSPECAN_ATTRIBUTE_HARM_FUNDAMENTAL_RBW_FILTER_BANDWIDTH = 1069060;
  NIRFMXSPECAN_ATTRIBUTE_HARM_FUNDAMENTAL_RBW_FILTER_TYPE = 1069061;
  NIRFMXSPECAN_ATTRIBUTE_HARM_FUNDAMENTAL_MEASUREMENT_INTERVAL = 1069062;
  NIRFMXSPECAN_ATTRIBUTE_HARM_NUMBER_OF_HARMONICS = 1069063;
  NIRFMXSPECAN_ATTRIBUTE_HARM_AUTO_SETUP_ENABLED = 1069064;
  NIRFMXSPECAN_ATTRIBUTE_HARM_HARMONIC_ENABLED = 1069065;
  NIRFMXSPECAN_ATTRIBUTE_HARM_HARMONIC_ORDER = 1069066;
  NIRFMXSPECAN_ATTRIBUTE_HARM_HARMONIC_MEASUREMENT_INTERVAL = 1069067;
  NIRFMXSPECAN_ATTRIBUTE_HARM_AVERAGING_COUNT = 1069068;
  NIRFMXSPECAN_ATTRIBUTE_HARM_AVERAGING_ENABLED = 1069069;
  NIRFMXSPECAN_ATTRIBUTE_HARM_AVERAGING_TYPE = 1069071;
  NIRFMXSPECAN_ATTRIBUTE_HARM_ALL_TRACES_ENABLED = 1069072;
  NIRFMXSPECAN_ATTRIBUTE_HARM_RESULTS_FUNDAMENTAL_FREQUENCY = 1069073;
  NIRFMXSPECAN_ATTRIBUTE_HARM_RESULTS_AVERAGE_FUNDAMENTAL_POWER = 1069074;
  NIRFMXSPECAN_ATTRIBUTE_HARM_RESULTS_TOTAL_HARMONIC_DISTORTION = 1069075;
  NIRFMXSPECAN_ATTRIBUTE_HARM_RESULTS_HARMONIC_FREQUENCY = 1069076;
  NIRFMXSPECAN_ATTRIBUTE_HARM_RESULTS_HARMONIC_RBW = 1069077;
  NIRFMXSPECAN_ATTRIBUTE_HARM_RESULTS_HARMONIC_AVERAGE_ABSOLUTE_POWER = 1069078;
  NIRFMXSPECAN_ATTRIBUTE_HARM_RESULTS_HARMONIC_AVERAGE_RELATIVE_POWER = 1069079;
  NIRFMXSPECAN_ATTRIBUTE_HARM_HARMONIC_BANDWIDTH = 1069080;
  NIRFMXSPECAN_ATTRIBUTE_HARM_MEASUREMENT_METHOD = 1069082;
  NIRFMXSPECAN_ATTRIBUTE_HARM_NOISE_COMPENSATION_ENABLED = 1069083;
  NIRFMXSPECAN_ATTRIBUTE_OBW_MEASUREMENT_ENABLED = 1073152;
  NIRFMXSPECAN_ATTRIBUTE_OBW_BANDWIDTH_PERCENTAGE = 1073154;
  NIRFMXSPECAN_ATTRIBUTE_OBW_NUMBER_OF_ANALYSIS_THREADS = 1073155;
  NIRFMXSPECAN_ATTRIBUTE_OBW_SPAN = 1073156;
  NIRFMXSPECAN_ATTRIBUTE_OBW_AVERAGING_COUNT = 1073158;
  NIRFMXSPECAN_ATTRIBUTE_OBW_AVERAGING_ENABLED = 1073159;
  NIRFMXSPECAN_ATTRIBUTE_OBW_AVERAGING_TYPE = 1073161;
  NIRFMXSPECAN_ATTRIBUTE_OBW_FFT_WINDOW = 1073162;
  NIRFMXSPECAN_ATTRIBUTE_OBW_FFT_PADDING = 1073163;
  NIRFMXSPECAN_ATTRIBUTE_OBW_RBW_FILTER_AUTO_BANDWIDTH = 1073164;
  NIRFMXSPECAN_ATTRIBUTE_OBW_RBW_FILTER_BANDWIDTH = 1073165;
  NIRFMXSPECAN_ATTRIBUTE_OBW_RBW_FILTER_TYPE = 1073166;
  NIRFMXSPECAN_ATTRIBUTE_OBW_SWEEP_TIME_AUTO = 1073167;
  NIRFMXSPECAN_ATTRIBUTE_OBW_SWEEP_TIME_INTERVAL = 1073168;
  NIRFMXSPECAN_ATTRIBUTE_OBW_ALL_TRACES_ENABLED = 1073170;
  NIRFMXSPECAN_ATTRIBUTE_OBW_RESULTS_OCCUPIED_BANDWIDTH = 1073171;
  NIRFMXSPECAN_ATTRIBUTE_OBW_RESULTS_AVERAGE_POWER = 1073172;
  NIRFMXSPECAN_ATTRIBUTE_OBW_RESULTS_START_FREQUENCY = 1073173;
  NIRFMXSPECAN_ATTRIBUTE_OBW_RESULTS_STOP_FREQUENCY = 1073174;
  NIRFMXSPECAN_ATTRIBUTE_OBW_RESULTS_FREQUENCY_RESOLUTION = 1073175;
  NIRFMXSPECAN_ATTRIBUTE_OBW_POWER_UNITS = 1073176;
  NIRFMXSPECAN_ATTRIBUTE_OBW_RBW_FILTER_BANDWIDTH_DEFINITION = 1073177;
  NIRFMXSPECAN_ATTRIBUTE_OBW_AMPLITUDE_CORRECTION_TYPE = 1073178;
  NIRFMXSPECAN_ATTRIBUTE_PAVT_MEASUREMENT_ENABLED = 1077248;
  NIRFMXSPECAN_ATTRIBUTE_PAVT_MEASUREMENT_LOCATION_TYPE = 1077250;
  NIRFMXSPECAN_ATTRIBUTE_PAVT_NUMBER_OF_SEGMENTS = 1077251;
  NIRFMXSPECAN_ATTRIBUTE_PAVT_SEGMENT_START_TIME = 1077252;
  NIRFMXSPECAN_ATTRIBUTE_PAVT_MEASUREMENT_OFFSET = 1077253;
  NIRFMXSPECAN_ATTRIBUTE_PAVT_MEASUREMENT_LENGTH = 1077254;
  NIRFMXSPECAN_ATTRIBUTE_PAVT_ALL_TRACES_ENABLED = 1077255;
  NIRFMXSPECAN_ATTRIBUTE_PAVT_RESULTS_MEAN_RELATIVE_PHASE = 1077258;
  NIRFMXSPECAN_ATTRIBUTE_PAVT_RESULTS_MEAN_RELATIVE_AMPLITUDE = 1077259;
  NIRFMXSPECAN_ATTRIBUTE_PAVT_FREQUENCY_OFFSET_CORRECTION_ENABLED = 1077260;
  NIRFMXSPECAN_ATTRIBUTE_PAVT_MEASUREMENT_BANDWIDTH = 1077261;
  NIRFMXSPECAN_ATTRIBUTE_PAVT_RESULTS_MEAN_ABSOLUTE_AMPLITUDE = 1077262;
  NIRFMXSPECAN_ATTRIBUTE_PAVT_RESULTS_MEAN_ABSOLUTE_PHASE = 1077263;
  NIRFMXSPECAN_ATTRIBUTE_PAVT_SEGMENT_TYPE = 1077264;
  NIRFMXSPECAN_ATTRIBUTE_PAVT_SEGMENT_MEASUREMENT_OFFSET = 1077265;
  NIRFMXSPECAN_ATTRIBUTE_PAVT_SEGMENT_MEASUREMENT_LENGTH = 1077266;
  NIRFMXSPECAN_ATTRIBUTE_PAVT_PHASE_UNWRAP_ENABLED = 1077267;
  NIRFMXSPECAN_ATTRIBUTE_PAVT_RESULTS_FREQUENCY_ERROR_MEAN = 1077268;
  NIRFMXSPECAN_ATTRIBUTE_PAVT_MEASUREMENT_INTERVAL_MODE = 1077269;
  NIRFMXSPECAN_ATTRIBUTE_PAVT_FREQUENCY_TRACKING_ENABLED = 1077270;
  NIRFMXSPECAN_ATTRIBUTE_SEM_MEASUREMENT_ENABLED = 1081344;
  NIRFMXSPECAN_ATTRIBUTE_SEM_NUMBER_OF_CARRIERS = 1081346;
  NIRFMXSPECAN_ATTRIBUTE_SEM_CARRIER_ENABLED = 1081347;
  NIRFMXSPECAN_ATTRIBUTE_SEM_CARRIER_FREQUENCY = 1081348;
  NIRFMXSPECAN_ATTRIBUTE_SEM_CARRIER_INTEGRATION_BANDWIDTH = 1081349;
  NIRFMXSPECAN_ATTRIBUTE_SEM_CARRIER_RBW_FILTER_AUTO_BANDWIDTH = 1081350;
  NIRFMXSPECAN_ATTRIBUTE_SEM_CARRIER_RBW_FILTER_BANDWIDTH = 1081351;
  NIRFMXSPECAN_ATTRIBUTE_SEM_CARRIER_RBW_FILTER_TYPE = 1081352;
  NIRFMXSPECAN_ATTRIBUTE_SEM_CARRIER_RRC_FILTER_ENABLED = 1081353;
  NIRFMXSPECAN_ATTRIBUTE_SEM_CARRIER_RRC_FILTER_ALPHA = 1081354;
  NIRFMXSPECAN_ATTRIBUTE_SEM_NUMBER_OF_OFFSETS = 1081355;
  NIRFMXSPECAN_ATTRIBUTE_SEM_OFFSET_BANDWIDTH_INTEGRAL = 1081356;
  NIRFMXSPECAN_ATTRIBUTE_SEM_OFFSET_LIMIT_FAIL_MASK = 1081357;
  NIRFMXSPECAN_ATTRIBUTE_SEM_OFFSET_RELATIVE_ATTENUATION = 1081358;
  NIRFMXSPECAN_ATTRIBUTE_SEM_OFFSET_ABSOLUTE_LIMIT_MODE = 1081359;
  NIRFMXSPECAN_ATTRIBUTE_SEM_OFFSET_ABSOLUTE_LIMIT_START = 1081360;
  NIRFMXSPECAN_ATTRIBUTE_SEM_OFFSET_ABSOLUTE_LIMIT_STOP = 1081361;
  NIRFMXSPECAN_ATTRIBUTE_SEM_OFFSET_ENABLED = 1081362;
  NIRFMXSPECAN_ATTRIBUTE_SEM_OFFSET_SIDEBAND = 1081363;
  NIRFMXSPECAN_ATTRIBUTE_SEM_OFFSET_START_FREQUENCY = 1081364;
  NIRFMXSPECAN_ATTRIBUTE_SEM_OFFSET_STOP_FREQUENCY = 1081365;
  NIRFMXSPECAN_ATTRIBUTE_SEM_OFFSET_RBW_FILTER_AUTO_BANDWIDTH = 1081366;
  NIRFMXSPECAN_ATTRIBUTE_SEM_OFFSET_RBW_FILTER_BANDWIDTH = 1081367;
  NIRFMXSPECAN_ATTRIBUTE_SEM_OFFSET_RBW_FILTER_TYPE = 1081368;
  NIRFMXSPECAN_ATTRIBUTE_SEM_OFFSET_RELATIVE_LIMIT_MODE = 1081369;
  NIRFMXSPECAN_ATTRIBUTE_SEM_OFFSET_RELATIVE_LIMIT_START = 1081370;
  NIRFMXSPECAN_ATTRIBUTE_SEM_OFFSET_RELATIVE_LIMIT_STOP = 1081371;
  NIRFMXSPECAN_ATTRIBUTE_SEM_POWER_UNITS = 1081372;
  NIRFMXSPECAN_ATTRIBUTE_SEM_NUMBER_OF_ANALYSIS_THREADS = 1081373;
  NIRFMXSPECAN_ATTRIBUTE_SEM_AVERAGING_COUNT = 1081374;
  NIRFMXSPECAN_ATTRIBUTE_SEM_AVERAGING_ENABLED = 1081375;
  NIRFMXSPECAN_ATTRIBUTE_SEM_AVERAGING_TYPE = 1081377;
  NIRFMXSPECAN_ATTRIBUTE_SEM_FFT_WINDOW = 1081378;
  NIRFMXSPECAN_ATTRIBUTE_SEM_FFT_PADDING = 1081379;
  NIRFMXSPECAN_ATTRIBUTE_SEM_REFERENCE_TYPE = 1081380;
  NIRFMXSPECAN_ATTRIBUTE_SEM_SWEEP_TIME_AUTO = 1081381;
  NIRFMXSPECAN_ATTRIBUTE_SEM_SWEEP_TIME_INTERVAL = 1081382;
  NIRFMXSPECAN_ATTRIBUTE_SEM_ALL_TRACES_ENABLED = 1081383;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_TOTAL_CARRIER_POWER = 1081384;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_COMPOSITE_MEASUREMENT_STATUS = 1081385;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_FREQUENCY_RESOLUTION = 1081386;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_CARRIER_FREQUENCY = 1081387;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_CARRIER_INTEGRATION_BANDWIDTH = 1081388;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_CARRIER_ABSOLUTE_POWER = 1081389;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_CARRIER_TOTAL_RELATIVE_POWER = 1081390;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_CARRIER_PEAK_ABSOLUTE_POWER = 1081391;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_CARRIER_PEAK_FREQUENCY = 1081392;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_LOWER_OFFSET_START_FREQUENCY = 1081393;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_LOWER_OFFSET_STOP_FREQUENCY = 1081394;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_LOWER_OFFSET_POWER_REFERENCE_CARRIER = 1081395;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_LOWER_OFFSET_TOTAL_ABSOLUTE_POWER = 1081396;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_LOWER_OFFSET_TOTAL_RELATIVE_POWER = 1081397;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_LOWER_OFFSET_PEAK_ABSOLUTE_POWER = 1081398;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_LOWER_OFFSET_PEAK_RELATIVE_POWER = 1081399;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_LOWER_OFFSET_PEAK_FREQUENCY = 1081400;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_LOWER_OFFSET_MARGIN = 1081401;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_LOWER_OFFSET_MARGIN_ABSOLUTE_POWER = 1081402;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_LOWER_OFFSET_MARGIN_RELATIVE_POWER = 1081403;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_LOWER_OFFSET_MARGIN_FREQUENCY = 1081404;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_LOWER_OFFSET_MEASUREMENT_STATUS = 1081405;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_UPPER_OFFSET_START_FREQUENCY = 1081406;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_UPPER_OFFSET_STOP_FREQUENCY = 1081407;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_UPPER_OFFSET_POWER_REFERENCE_CARRIER = 1081408;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_UPPER_OFFSET_TOTAL_ABSOLUTE_POWER = 1081409;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_UPPER_OFFSET_TOTAL_RELATIVE_POWER = 1081410;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_UPPER_OFFSET_PEAK_ABSOLUTE_POWER = 1081411;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_UPPER_OFFSET_PEAK_RELATIVE_POWER = 1081412;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_UPPER_OFFSET_PEAK_FREQUENCY = 1081413;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_UPPER_OFFSET_MARGIN = 1081414;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_UPPER_OFFSET_MARGIN_ABSOLUTE_POWER = 1081415;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_UPPER_OFFSET_MARGIN_RELATIVE_POWER = 1081416;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_UPPER_OFFSET_MARGIN_FREQUENCY = 1081417;
  NIRFMXSPECAN_ATTRIBUTE_SEM_RESULTS_UPPER_OFFSET_MEASUREMENT_STATUS = 1081418;
  NIRFMXSPECAN_ATTRIBUTE_SEM_CARRIER_CHANNEL_BANDWIDTH = 1081419;
  NIRFMXSPECAN_ATTRIBUTE_SEM_OFFSET_FREQUENCY_DEFINITION = 1081420;
  NIRFMXSPECAN_ATTRIBUTE_SEM_OFFSET_RBW_FILTER_BANDWIDTH_DEFINITION = 1081421;
  NIRFMXSPECAN_ATTRIBUTE_SEM_CARRIER_RBW_FILTER_BANDWIDTH_DEFINITION = 1081422;
  NIRFMXSPECAN_ATTRIBUTE_SEM_AMPLITUDE_CORRECTION_TYPE = 1081423;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_MEASUREMENT_ENABLED = 1085440;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_NUMBER_OF_ANALYSIS_THREADS = 1085442;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_SPAN = 1085443;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_AVERAGING_COUNT = 1085445;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_AVERAGING_ENABLED = 1085446;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_AVERAGING_TYPE = 1085448;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_FFT_WINDOW = 1085449;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_FFT_PADDING = 1085450;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_RBW_FILTER_AUTO_BANDWIDTH = 1085451;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_RBW_FILTER_BANDWIDTH = 1085452;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_RBW_FILTER_TYPE = 1085453;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_SWEEP_TIME_AUTO = 1085454;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_SWEEP_TIME_INTERVAL = 1085455;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_NOISE_COMPENSATION_ENABLED = 1085456;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_RESULTS_PEAK_AMPLITUDE = 1085458;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_RESULTS_PEAK_FREQUENCY = 1085459;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_RESULTS_FREQUENCY_RESOLUTION = 1085460;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_POWER_UNITS = 1085461;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_RBW_FILTER_BANDWIDTH_DEFINITION = 1085462;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_AMPLITUDE_CORRECTION_TYPE = 1085463;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_DETECTOR_TYPE = 1085464;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_DETECTOR_POINTS = 1085465;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_VBW_FILTER_AUTO_BANDWIDTH = 1085466;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_VBW_FILTER_BANDWIDTH = 1085467;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_VBW_FILTER_VBW_TO_RBW_RATIO = 1085468;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_MEASUREMENT_MODE = 1085470;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_NOISE_COMPENSATION_TYPE = 1085471;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_NOISE_CALIBRATION_AVERAGING_COUNT = 1085472;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_NOISE_CALIBRATION_AVERAGING_AUTO = 1085473;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_NOISE_CALIBRATION_MODE = 1085474;
  NIRFMXSPECAN_ATTRIBUTE_SPECTRUM_ANALYSIS_INPUT = 1085475;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_MEASUREMENT_ENABLED = 1089536;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_NUMBER_OF_ANALYSIS_THREADS = 1089539;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_NUMBER_OF_RANGES = 1089540;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RANGE_ENABLED = 1089541;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RANGE_RELATIVE_ATTENUATION = 1089542;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RANGE_NUMBER_OF_SPURS_TO_REPORT = 1089543;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RANGE_START_FREQUENCY = 1089544;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RANGE_STOP_FREQUENCY = 1089545;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_AVERAGING_COUNT = 1089546;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_AVERAGING_ENABLED = 1089547;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_AVERAGING_TYPE = 1089549;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_FFT_WINDOW = 1089551;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RANGE_ABSOLUTE_LIMIT_MODE = 1089552;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RANGE_ABSOLUTE_LIMIT_START = 1089553;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RANGE_ABSOLUTE_LIMIT_STOP = 1089554;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RANGE_RBW_FILTER_AUTO_BANDWIDTH = 1089555;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RANGE_RBW_FILTER_BANDWIDTH = 1089556;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RANGE_RBW_FILTER_TYPE = 1089557;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RANGE_SWEEP_TIME_AUTO = 1089558;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RANGE_SWEEP_TIME_INTERVAL = 1089559;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_ALL_TRACES_ENABLED = 1089560;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RESULTS_MEASUREMENT_STATUS = 1089561;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RESULTS_RANGE_FREQUENCY = 1089562;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RESULTS_RANGE_AMPLITUDE = 1089563;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RESULTS_RANGE_ABSOLUTE_LIMIT = 1089564;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RESULTS_RANGE_MARGIN = 1089565;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RESULTS_RANGE_MEASUREMENT_STATUS = 1089566;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RESULTS_RANGE_NUMBER_OF_DETECTED_SPURS = 1089567;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_TRACE_RANGE_INDEX = 1089568;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RANGE_PEAK_THRESHOLD = 1089569;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RANGE_PEAK_EXCURSION = 1089570;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RANGE_RBW_FILTER_BANDWIDTH_DEFINITION = 1089571;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_AMPLITUDE_CORRECTION_TYPE = 1089572;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RANGE_DETECTOR_TYPE = 1089573;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RANGE_DETECTOR_POINTS = 1089574;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RANGE_VBW_FILTER_AUTO_BANDWIDTH = 1089575;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RANGE_VBW_FILTER_BANDWIDTH = 1089576;
  NIRFMXSPECAN_ATTRIBUTE_SPUR_RANGE_VBW_FILTER_VBW_TO_RBW_RATIO = 1089577;
  NIRFMXSPECAN_ATTRIBUTE_TXP_MEASUREMENT_ENABLED = 1093632;
  NIRFMXSPECAN_ATTRIBUTE_TXP_MEASUREMENT_INTERVAL = 1093634;
  NIRFMXSPECAN_ATTRIBUTE_TXP_NUMBER_OF_ANALYSIS_THREADS = 1093635;
  NIRFMXSPECAN_ATTRIBUTE_TXP_AVERAGING_COUNT = 1093637;
  NIRFMXSPECAN_ATTRIBUTE_TXP_AVERAGING_ENABLED = 1093638;
  NIRFMXSPECAN_ATTRIBUTE_TXP_AVERAGING_TYPE = 1093640;
  NIRFMXSPECAN_ATTRIBUTE_TXP_RBW_FILTER_ALPHA = 1093641;
  NIRFMXSPECAN_ATTRIBUTE_TXP_RBW_FILTER_BANDWIDTH = 1093642;
  NIRFMXSPECAN_ATTRIBUTE_TXP_RBW_FILTER_TYPE = 1093643;
  NIRFMXSPECAN_ATTRIBUTE_TXP_THRESHOLD_ENABLED = 1093644;
  NIRFMXSPECAN_ATTRIBUTE_TXP_THRESHOLD_LEVEL = 1093645;
  NIRFMXSPECAN_ATTRIBUTE_TXP_THRESHOLD_TYPE = 1093646;
  NIRFMXSPECAN_ATTRIBUTE_TXP_ALL_TRACES_ENABLED = 1093648;
  NIRFMXSPECAN_ATTRIBUTE_TXP_RESULTS_AVERAGE_MEAN_POWER = 1093649;
  NIRFMXSPECAN_ATTRIBUTE_TXP_RESULTS_PEAK_TO_AVERAGE_RATIO = 1093650;
  NIRFMXSPECAN_ATTRIBUTE_TXP_RESULTS_MAXIMUM_POWER = 1093651;
  NIRFMXSPECAN_ATTRIBUTE_TXP_RESULTS_MINIMUM_POWER = 1093652;
  NIRFMXSPECAN_ATTRIBUTE_TXP_VBW_FILTER_AUTO_BANDWIDTH = 1093655;
  NIRFMXSPECAN_ATTRIBUTE_TXP_VBW_FILTER_BANDWIDTH = 1093656;
  NIRFMXSPECAN_ATTRIBUTE_TXP_VBW_FILTER_VBW_TO_RBW_RATIO = 1093657;
  NIRFMXSPECAN_ATTRIBUTE_RESULT_FETCH_TIMEOUT = 1097728;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_MEASUREMENT_ENABLED = 1105920;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_AM_TO_AM_CURVE_FIT_ORDER = 1105922;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_AM_TO_AM_CURVE_FIT_TYPE = 1105923;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_AM_TO_PM_CURVE_FIT_ORDER = 1105924;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_AM_TO_PM_CURVE_FIT_TYPE = 1105925;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_AVERAGING_ENABLED = 1105926;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_AVERAGING_COUNT = 1105927;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_MEASUREMENT_INTERVAL = 1105929;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_SIGNAL_TYPE = 1105930;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_MEASUREMENT_SAMPLE_RATE_MODE = 1105931;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_MEASUREMENT_SAMPLE_RATE = 1105932;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_THRESHOLD_ENABLED = 1105933;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_THRESHOLD_TYPE = 1105934;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_THRESHOLD_LEVEL = 1105935;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_DUT_AVERAGE_INPUT_POWER = 1105936;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_ALL_TRACES_ENABLED = 1105937;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_NUMBER_OF_ANALYSIS_THREADS = 1105938;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_RESULTS_AM_TO_AM_CURVE_FIT_COEFFICIENTS = 1105940;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_RESULTS_AM_TO_PM_CURVE_FIT_COEFFICIENTS = 1105941;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_RESULTS_MEAN_LINEAR_GAIN = 1105942;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_RESULTS_MEAN_PHASE_ERROR = 1105943;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_RESULTS_MEAN_RMS_EVM = 1105944;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_RESULTS_AM_TO_AM_CURVE_FIT_RESIDUAL = 1105945;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_RESULTS_AM_TO_PM_CURVE_FIT_RESIDUAL = 1105946;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_RESULTS_GAIN_ERROR_RANGE = 1105947;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_RESULTS_PHASE_ERROR_RANGE = 1105948;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_RESULTS_1_DB_COMPRESSION_POINT = 1105949;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_FREQUENCY_OFFSET_CORRECTION_ENABLED = 1105953;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_MAXIMUM_TIMING_ERROR = 1105954;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_REFERENCE_POWER_TYPE = 1105955;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_COMPRESSION_POINT_ENABLED = 1105956;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_COMPRESSION_POINT_LEVEL = 1105957;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_RESULTS_INPUT_COMPRESSION_POINT = 1105958;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_RESULTS_OUTPUT_COMPRESSION_POINT = 1105959;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_USER_LOOKUP_TABLE_INPUT_POWER = 1105960;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_IQ_ORIGIN_OFFSET_CORRECTION_ENABLED = 1105961;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_SYNCHRONIZATION_METHOD = 1105962;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_AUTO_CARRIER_DETECTION_ENABLED = 1105963;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_NUMBER_OF_CARRIERS = 1105964;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_CARRIER_OFFSET = 1105965;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_CARRIER_BANDWIDTH = 1105966;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_EQUALIZER_MODE = 1105967;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_EQUALIZER_FILTER_LENGTH = 1105968;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_AM_TO_AM_ENABLED = 1105969;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_AM_TO_PM_ENABLED = 1105970;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_EVM_ENABLED = 1105971;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_COMPRESSION_POINT_GAIN_REFERENCE = 1105972;
  NIRFMXSPECAN_ATTRIBUTE_AMPM_COMPRESSION_POINT_GAIN_REFERENCE_POWER = 1105973;
  NIRFMXSPECAN_ATTRIBUTE_DPD_MEASUREMENT_ENABLED = 1110016;
  NIRFMXSPECAN_ATTRIBUTE_DPD_MEASUREMENT_SAMPLE_RATE_MODE = 1110018;
  NIRFMXSPECAN_ATTRIBUTE_DPD_MEASUREMENT_SAMPLE_RATE = 1110019;
  NIRFMXSPECAN_ATTRIBUTE_DPD_MEASUREMENT_INTERVAL = 1110020;
  NIRFMXSPECAN_ATTRIBUTE_DPD_SIGNAL_TYPE = 1110021;
  NIRFMXSPECAN_ATTRIBUTE_DPD_DUT_AVERAGE_INPUT_POWER = 1110023;
  NIRFMXSPECAN_ATTRIBUTE_DPD_MODEL = 1110024;
  NIRFMXSPECAN_ATTRIBUTE_DPD_LOOKUP_TABLE_AM_TO_AM_CURVE_FIT_ORDER = 1110025;
  NIRFMXSPECAN_ATTRIBUTE_DPD_LOOKUP_TABLE_AM_TO_AM_CURVE_FIT_TYPE = 1110026;
  NIRFMXSPECAN_ATTRIBUTE_DPD_LOOKUP_TABLE_AM_TO_PM_CURVE_FIT_ORDER = 1110027;
  NIRFMXSPECAN_ATTRIBUTE_DPD_LOOKUP_TABLE_AM_TO_PM_CURVE_FIT_TYPE = 1110028;
  NIRFMXSPECAN_ATTRIBUTE_DPD_LOOKUP_TABLE_THRESHOLD_ENABLED = 1110029;
  NIRFMXSPECAN_ATTRIBUTE_DPD_LOOKUP_TABLE_THRESHOLD_TYPE = 1110030;
  NIRFMXSPECAN_ATTRIBUTE_DPD_LOOKUP_TABLE_THRESHOLD_LEVEL = 1110031;
  NIRFMXSPECAN_ATTRIBUTE_DPD_LOOKUP_TABLE_STEP_SIZE = 1110032;
  NIRFMXSPECAN_ATTRIBUTE_DPD_MEMORY_POLYNOMIAL_ORDER = 1110033;
  NIRFMXSPECAN_ATTRIBUTE_DPD_MEMORY_POLYNOMIAL_MEMORY_DEPTH = 1110034;
  NIRFMXSPECAN_ATTRIBUTE_DPD_MEMORY_POLYNOMIAL_LEAD_ORDER = 1110035;
  NIRFMXSPECAN_ATTRIBUTE_DPD_MEMORY_POLYNOMIAL_LAG_ORDER = 1110036;
  NIRFMXSPECAN_ATTRIBUTE_DPD_MEMORY_POLYNOMIAL_LEAD_MEMORY_DEPTH = 1110037;
  NIRFMXSPECAN_ATTRIBUTE_DPD_MEMORY_POLYNOMIAL_LAG_MEMORY_DEPTH = 1110038;
  NIRFMXSPECAN_ATTRIBUTE_DPD_MEMORY_POLYNOMIAL_MAXIMUM_LEAD = 1110039;
  NIRFMXSPECAN_ATTRIBUTE_DPD_MEMORY_POLYNOMIAL_MAXIMUM_LAG = 1110040;
  NIRFMXSPECAN_ATTRIBUTE_DPD_ITERATIVE_DPD_ENABLED = 1110042;
  NIRFMXSPECAN_ATTRIBUTE_DPD_AVERAGING_ENABLED = 1110044;
  NIRFMXSPECAN_ATTRIBUTE_DPD_AVERAGING_COUNT = 1110045;
  NIRFMXSPECAN_ATTRIBUTE_DPD_ALL_TRACES_ENABLED = 1110047;
  NIRFMXSPECAN_ATTRIBUTE_DPD_NUMBER_OF_ANALYSIS_THREADS = 1110048;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_CONFIGURATION_INPUT = 1110049;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_LOOKUP_TABLE_CORRECTION_TYPE = 1110050;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_USER_DUT_AVERAGE_INPUT_POWER = 1110053;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_USER_DPD_MODEL = 1110054;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_USER_MEASUREMENT_SAMPLE_RATE = 1110055;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_USER_MEMORY_POLYNOMIAL_ORDER = 1110058;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_USER_MEMORY_POLYNOMIAL_MEMORY_DEPTH = 1110059;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_USER_MEMORY_POLYNOMIAL_LEAD_ORDER = 1110060;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_USER_MEMORY_POLYNOMIAL_LAG_ORDER = 1110061;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_USER_MEMORY_POLYNOMIAL_LEAD_MEMORY_DEPTH = 1110062;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_USER_MEMORY_POLYNOMIAL_LAG_MEMORY_DEPTH = 1110063;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_USER_MEMORY_POLYNOMIAL_MAXIMUM_LEAD = 1110064;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_USER_MEMORY_POLYNOMIAL_MAXIMUM_LAG = 1110065;
  NIRFMXSPECAN_ATTRIBUTE_DPD_RESULTS_AVERAGE_GAIN = 1110067;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_MEMORY_MODEL_CORRECTION_TYPE = 1110070;
  NIRFMXSPECAN_ATTRIBUTE_DPD_TARGET_GAIN_TYPE = 1110071;
  NIRFMXSPECAN_ATTRIBUTE_DPD_LOOKUP_TABLE_TYPE = 1110072;
  NIRFMXSPECAN_ATTRIBUTE_DPD_FREQUENCY_OFFSET_CORRECTION_ENABLED = 1110073;
  NIRFMXSPECAN_ATTRIBUTE_DPD_MAXIMUM_TIMING_ERROR = 1110074;
  NIRFMXSPECAN_ATTRIBUTE_DPD_NMSE_ENABLED = 1110075;
  NIRFMXSPECAN_ATTRIBUTE_DPD_PRE_DPD_CFR_ENABLED = 1110076;
  NIRFMXSPECAN_ATTRIBUTE_DPD_PRE_DPD_CFR_MAXIMUM_ITERATIONS = 1110077;
  NIRFMXSPECAN_ATTRIBUTE_DPD_PRE_DPD_CFR_METHOD = 1110078;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_USER_LOOKUP_TABLE_TYPE = 1110080;
  NIRFMXSPECAN_ATTRIBUTE_DPD_PRE_DPD_CFR_TARGET_PAPR = 1110081;
  NIRFMXSPECAN_ATTRIBUTE_DPD_PRE_DPD_CFR_WINDOW_TYPE = 1110082;
  NIRFMXSPECAN_ATTRIBUTE_DPD_PRE_DPD_CFR_WINDOW_LENGTH = 1110083;
  NIRFMXSPECAN_ATTRIBUTE_DPD_PRE_DPD_CFR_SHAPING_FACTOR = 1110084;
  NIRFMXSPECAN_ATTRIBUTE_DPD_PRE_DPD_CFR_SHAPING_THRESHOLD = 1110085;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_CFR_ENABLED = 1110086;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_CFR_METHOD = 1110087;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_CFR_MAXIMUM_ITERATIONS = 1110088;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_CFR_TARGET_PAPR_TYPE = 1110089;
  NIRFMXSPECAN_ATTRIBUTE_DPD_SYNCHRONIZATION_METHOD = 1110090;
  NIRFMXSPECAN_ATTRIBUTE_DPD_AUTO_CARRIER_DETECTION_ENABLED = 1110091;
  NIRFMXSPECAN_ATTRIBUTE_DPD_NUMBER_OF_CARRIERS = 1110092;
  NIRFMXSPECAN_ATTRIBUTE_DPD_CARRIER_OFFSET = 1110093;
  NIRFMXSPECAN_ATTRIBUTE_DPD_CARRIER_BANDWIDTH = 1110094;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_CFR_TARGET_PAPR = 1110106;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_CFR_WINDOW_TYPE = 1110107;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_CFR_WINDOW_LENGTH = 1110108;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_CFR_SHAPING_FACTOR = 1110109;
  NIRFMXSPECAN_ATTRIBUTE_DPD_APPLY_DPD_CFR_SHAPING_THRESHOLD = 1110110;
  NIRFMXSPECAN_ATTRIBUTE_DPD_RESULTS_NMSE = 1110111;
  NIRFMXSPECAN_ATTRIBUTE_DPD_PRE_DPD_CFR_FILTER_ENABLED = 1110112;
  NIRFMXSPECAN_ATTRIBUTE_DPD_PRE_DPD_CFR_NUMBER_OF_CARRIERS = 1110114;
  NIRFMXSPECAN_ATTRIBUTE_DPD_PRE_DPD_CARRIER_OFFSET = 1110115;
  NIRFMXSPECAN_ATTRIBUTE_DPD_PRE_DPD_CARRIER_BANDWIDTH = 1110116;
  NIRFMXSPECAN_ATTRIBUTE_DPD_IQ_ORIGIN_OFFSET_CORRECTION_ENABLED = 1110117;
  NIRFMXSPECAN_ATTRIBUTE_IQ_MEASUREMENT_ENABLED = 1110272;
  NIRFMXSPECAN_ATTRIBUTE_IQ_SAMPLE_RATE = 1110274;
  NIRFMXSPECAN_ATTRIBUTE_IQ_NUMBER_OF_RECORDS = 1110275;
  NIRFMXSPECAN_ATTRIBUTE_IQ_ACQUISITION_TIME = 1110276;
  NIRFMXSPECAN_ATTRIBUTE_IQ_PRETRIGGER_TIME = 1110277;
  NIRFMXSPECAN_ATTRIBUTE_IQ_BANDWIDTH_AUTO = 1110280;
  NIRFMXSPECAN_ATTRIBUTE_IQ_BANDWIDTH = 1110281;
  NIRFMXSPECAN_ATTRIBUTE_IQ_DELETE_RECORD_ON_FETCH = 1110282;
  NIRFMXSPECAN_ATTRIBUTE_IM_MEASUREMENT_ENABLED = 1114112;
  NIRFMXSPECAN_ATTRIBUTE_IM_FREQUENCY_DEFINITION = 1114114;
  NIRFMXSPECAN_ATTRIBUTE_IM_FUNDAMENTAL_LOWER_TONE_FREQUENCY = 1114115;
  NIRFMXSPECAN_ATTRIBUTE_IM_FUNDAMENTAL_UPPER_TONE_FREQUENCY = 1114116;
  NIRFMXSPECAN_ATTRIBUTE_IM_AUTO_INTERMODS_SETUP_ENABLED = 1114117;
  NIRFMXSPECAN_ATTRIBUTE_IM_MAXIMUM_INTERMOD_ORDER = 1114118;
  NIRFMXSPECAN_ATTRIBUTE_IM_NUMBER_OF_INTERMODS = 1114119;
  NIRFMXSPECAN_ATTRIBUTE_IM_INTERMOD_ENABLED = 1114120;
  NIRFMXSPECAN_ATTRIBUTE_IM_INTERMOD_ORDER = 1114121;
  NIRFMXSPECAN_ATTRIBUTE_IM_INTERMOD_SIDE = 1114122;
  NIRFMXSPECAN_ATTRIBUTE_IM_LOWER_INTERMOD_FREQUENCY = 1114123;
  NIRFMXSPECAN_ATTRIBUTE_IM_UPPER_INTERMOD_FREQUENCY = 1114124;
  NIRFMXSPECAN_ATTRIBUTE_IM_MEASUREMENT_METHOD = 1114125;
  NIRFMXSPECAN_ATTRIBUTE_IM_RBW_FILTER_AUTO_BANDWIDTH = 1114126;
  NIRFMXSPECAN_ATTRIBUTE_IM_RBW_FILTER_BANDWIDTH = 1114127;
  NIRFMXSPECAN_ATTRIBUTE_IM_RBW_FILTER_TYPE = 1114128;
  NIRFMXSPECAN_ATTRIBUTE_IM_SWEEP_TIME_AUTO = 1114129;
  NIRFMXSPECAN_ATTRIBUTE_IM_SWEEP_TIME_INTERVAL = 1114130;
  NIRFMXSPECAN_ATTRIBUTE_IM_AVERAGING_ENABLED = 1114131;
  NIRFMXSPECAN_ATTRIBUTE_IM_AVERAGING_COUNT = 1114132;
  NIRFMXSPECAN_ATTRIBUTE_IM_AVERAGING_TYPE = 1114134;
  NIRFMXSPECAN_ATTRIBUTE_IM_FFT_WINDOW = 1114135;
  NIRFMXSPECAN_ATTRIBUTE_IM_FFT_PADDING = 1114136;
  NIRFMXSPECAN_ATTRIBUTE_IM_IF_OUTPUT_POWER_OFFSET_AUTO = 1114137;
  NIRFMXSPECAN_ATTRIBUTE_IM_NEAR_IF_OUTPUT_POWER_OFFSET = 1114138;
  NIRFMXSPECAN_ATTRIBUTE_IM_FAR_IF_OUTPUT_POWER_OFFSET = 1114139;
  NIRFMXSPECAN_ATTRIBUTE_IM_ALL_TRACES_ENABLED = 1114140;
  NIRFMXSPECAN_ATTRIBUTE_IM_NUMBER_OF_ANALYSIS_THREADS = 1114141;
  NIRFMXSPECAN_ATTRIBUTE_IM_RESULTS_LOWER_TONE_POWER = 1114143;
  NIRFMXSPECAN_ATTRIBUTE_IM_RESULTS_UPPER_TONE_POWER = 1114145;
  NIRFMXSPECAN_ATTRIBUTE_IM_RESULTS_INTERMOD_ORDER = 1114146;
  NIRFMXSPECAN_ATTRIBUTE_IM_RESULTS_LOWER_INTERMOD_POWER = 1114148;
  NIRFMXSPECAN_ATTRIBUTE_IM_RESULTS_UPPER_INTERMOD_POWER = 1114150;
  NIRFMXSPECAN_ATTRIBUTE_IM_RESULTS_LOWER_OUTPUT_INTERCEPT_POWER = 1114151;
  NIRFMXSPECAN_ATTRIBUTE_IM_RESULTS_UPPER_OUTPUT_INTERCEPT_POWER = 1114152;
  NIRFMXSPECAN_ATTRIBUTE_IM_RESULTS_WORST_CASE_OUTPUT_INTERCEPT_POWER = 1114153;
  NIRFMXSPECAN_ATTRIBUTE_IM_LOCAL_PEAK_SEARCH_ENABLED = 1114154;
  NIRFMXSPECAN_ATTRIBUTE_IM_AMPLITUDE_CORRECTION_TYPE = 1114155;
  NIRFMXSPECAN_ATTRIBUTE_NF_MEASUREMENT_ENABLED = 1179649;
  NIRFMXSPECAN_ATTRIBUTE_NF_FREQUENCY_LIST = 1179652;
  NIRFMXSPECAN_ATTRIBUTE_NF_MEASUREMENT_BANDWIDTH = 1179653;
  NIRFMXSPECAN_ATTRIBUTE_NF_MEASUREMENT_INTERVAL = 1179654;
  NIRFMXSPECAN_ATTRIBUTE_NF_AVERAGING_ENABLED = 1179655;
  NIRFMXSPECAN_ATTRIBUTE_NF_AVERAGING_COUNT = 1179656;
  NIRFMXSPECAN_ATTRIBUTE_NF_MEASUREMENT_METHOD = 1179657;
  NIRFMXSPECAN_ATTRIBUTE_NF_Y_FACTOR_MODE = 1179658;
  NIRFMXSPECAN_ATTRIBUTE_NF_Y_FACTOR_NOISE_SOURCE_ENR = 1179660;
  NIRFMXSPECAN_ATTRIBUTE_NF_Y_FACTOR_NOISE_SOURCE_ENR_FREQUENCY = 1179661;
  NIRFMXSPECAN_ATTRIBUTE_NF_Y_FACTOR_NOISE_SOURCE_COLD_TEMPERATURE = 1179662;
  NIRFMXSPECAN_ATTRIBUTE_NF_Y_FACTOR_NOISE_SOURCE_OFF_TEMPERATURE = 1179663;
  NIRFMXSPECAN_ATTRIBUTE_NF_Y_FACTOR_NOISE_SOURCE_SETTLING_TIME = 1179664;
  NIRFMXSPECAN_ATTRIBUTE_NF_DUT_INPUT_LOSS_COMPENSATION_ENABLED = 1179665;
  NIRFMXSPECAN_ATTRIBUTE_NF_DUT_INPUT_LOSS = 1179666;
  NIRFMXSPECAN_ATTRIBUTE_NF_DUT_INPUT_LOSS_FREQUENCY = 1179667;
  NIRFMXSPECAN_ATTRIBUTE_NF_DUT_INPUT_LOSS_TEMPERATURE = 1179668;
  NIRFMXSPECAN_ATTRIBUTE_NF_DUT_OUTPUT_LOSS_COMPENSATION_ENABLED = 1179669;
  NIRFMXSPECAN_ATTRIBUTE_NF_DUT_OUTPUT_LOSS = 1179670;
  NIRFMXSPECAN_ATTRIBUTE_NF_DUT_OUTPUT_LOSS_FREQUENCY = 1179671;
  NIRFMXSPECAN_ATTRIBUTE_NF_DUT_OUTPUT_LOSS_TEMPERATURE = 1179672;
  NIRFMXSPECAN_ATTRIBUTE_NF_Y_FACTOR_NOISE_SOURCE_LOSS_COMPENSATION_ENABLED = 1179673;
  NIRFMXSPECAN_ATTRIBUTE_NF_Y_FACTOR_NOISE_SOURCE_LOSS = 1179674;
  NIRFMXSPECAN_ATTRIBUTE_NF_Y_FACTOR_NOISE_SOURCE_LOSS_FREQUENCY = 1179675;
  NIRFMXSPECAN_ATTRIBUTE_NF_Y_FACTOR_NOISE_SOURCE_LOSS_TEMPERATURE = 1179676;
  NIRFMXSPECAN_ATTRIBUTE_NF_CALIBRATION_LOSS_COMPENSATION_ENABLED = 1179677;
  NIRFMXSPECAN_ATTRIBUTE_NF_CALIBRATION_LOSS = 1179678;
  NIRFMXSPECAN_ATTRIBUTE_NF_CALIBRATION_LOSS_FREQUENCY = 1179679;
  NIRFMXSPECAN_ATTRIBUTE_NF_CALIBRATION_LOSS_TEMPERATURE = 1179680;
  NIRFMXSPECAN_ATTRIBUTE_NF_NUMBER_OF_ANALYSIS_THREADS = 1179681;
  NIRFMXSPECAN_ATTRIBUTE_NF_RESULTS_DUT_NOISE_FIGURE = 1179682;
  NIRFMXSPECAN_ATTRIBUTE_NF_RESULTS_DUT_NOISE_TEMPERATURE = 1179683;
  NIRFMXSPECAN_ATTRIBUTE_NF_RESULTS_DUT_GAIN = 1179684;
  NIRFMXSPECAN_ATTRIBUTE_NF_RESULTS_ANALYZER_NOISE_FIGURE = 1179685;
  NIRFMXSPECAN_ATTRIBUTE_NF_RESULTS_MEASUREMENT_Y_FACTOR = 1179686;
  NIRFMXSPECAN_ATTRIBUTE_NF_RESULTS_CALIBRATION_Y_FACTOR = 1179687;
  NIRFMXSPECAN_ATTRIBUTE_NF_RESULTS_Y_FACTOR_HOT_POWER = 1179688;
  NIRFMXSPECAN_ATTRIBUTE_NF_RESULTS_Y_FACTOR_COLD_POWER = 1179689;
  NIRFMXSPECAN_ATTRIBUTE_NF_RESULTS_COLD_SOURCE_POWER = 1179690;
  NIRFMXSPECAN_ATTRIBUTE_NF_COLD_SOURCE_MODE = 1179691;
  NIRFMXSPECAN_ATTRIBUTE_NF_COLD_SOURCE_INPUT_TERMINATION_VSWR = 1179692;
  NIRFMXSPECAN_ATTRIBUTE_NF_COLD_SOURCE_INPUT_TERMINATION_VSWR_FREQUENCY = 1179693;
  NIRFMXSPECAN_ATTRIBUTE_NF_COLD_SOURCE_INPUT_TERMINATION_TEMPERATURE = 1179694;
  NIRFMXSPECAN_ATTRIBUTE_NF_COLD_SOURCE_DUT_S21 = 1179695;
  NIRFMXSPECAN_ATTRIBUTE_NF_COLD_SOURCE_DUT_S12 = 1179696;
  NIRFMXSPECAN_ATTRIBUTE_NF_COLD_SOURCE_DUT_S11 = 1179697;
  NIRFMXSPECAN_ATTRIBUTE_NF_COLD_SOURCE_DUT_S22 = 1179698;
  NIRFMXSPECAN_ATTRIBUTE_NF_COLD_SOURCE_DUT_S_PARAMETERS_FREQUENCY = 1179699;
  NIRFMXSPECAN_ATTRIBUTE_NF_CALIBRATION_SETUP_ID = 1179700;
  NIRFMXSPECAN_ATTRIBUTE_NF_EXTERNAL_PREAMP_PRESENT = 1179701;
  NIRFMXSPECAN_ATTRIBUTE_NF_EXTERNAL_PREAMP_FREQUENCY = 1179702;
  NIRFMXSPECAN_ATTRIBUTE_NF_EXTERNAL_PREAMP_GAIN = 1179703;
  NIRFMXSPECAN_ATTRIBUTE_NF_DEVICE_TEMPERATURE_TOLERANCE = 1179705;
  NIRFMXSPECAN_ATTRIBUTE_NF_DUT_TYPE = 1179706;
  NIRFMXSPECAN_ATTRIBUTE_NF_FREQUENCY_CONVERTER_LO_FREQUENCY = 1179708;
  NIRFMXSPECAN_ATTRIBUTE_NF_FREQUENCY_CONVERTER_FREQUENCY_CONTEXT = 1179710;
  NIRFMXSPECAN_ATTRIBUTE_NF_FREQUENCY_CONVERTER_SIDEBAND = 1179711;
  NIRFMXSPECAN_ATTRIBUTE_NF_FREQUENCY_CONVERTER_IMAGE_REJECTION = 1179712;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_MEASUREMENT_ENABLED = 1245184;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_RANGE_DEFINITION = 1245186;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_START_FREQUENCY = 1245187;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_STOP_FREQUENCY = 1245188;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_RBW_PERCENTAGE = 1245189;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_AVERAGING_MULTIPLIER = 1245190;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_FFT_WINDOW = 1245191;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_NUMBER_OF_RANGES = 1245192;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_RANGE_START_FREQUENCY = 1245193;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_RANGE_STOP_FREQUENCY = 1245194;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_RANGE_RBW_PERCENTAGE = 1245195;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_RANGE_AVERAGING_COUNT = 1245196;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_SMOOTHING_TYPE = 1245197;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_SMOOTHING_PERCENTAGE = 1245198;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_SPOT_NOISE_FREQUENCY_LIST = 1245199;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_INTEGRATED_NOISE_RANGE_DEFINITION = 1245200;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_INTEGRATED_NOISE_START_FREQUENCY = 1245201;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_INTEGRATED_NOISE_STOP_FREQUENCY = 1245202;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_ALL_TRACES_ENABLED = 1245203;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_RESULTS_CARRIER_POWER = 1245205;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_RESULTS_CARRIER_FREQUENCY = 1245206;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_RESULTS_SPOT_PHASE_NOISE = 1245207;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_RESULTS_INTEGRATED_PHASE_NOISE = 1245208;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_RESULTS_INTEGRATED_NOISE_RESIDUAL_PM_IN_RADIAN = 1245209;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_RESULTS_INTEGRATED_NOISE_RESIDUAL_PM_IN_DEGREE = 1245210;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_RESULTS_INTEGRATED_NOISE_RESIDUAL_FM = 1245211;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_RESULTS_INTEGRATED_NOISE_JITTER = 1245212;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_SPUR_REMOVAL_ENABLED = 1245213;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_SPUR_REMOVAL_PEAK_EXCURSION = 1245214;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_CANCELLATION_ENABLED = 1245215;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_CANCELLATION_THRESHOLD = 1245216;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_CANCELLATION_FREQUENCY = 1245217;
  NIRFMXSPECAN_ATTRIBUTE_PHASENOISE_CANCELLATION_REFERENCE_PHASE_NOISE = 1245218;
}

enum AcpAveragingEnabled {
  ACP_AVERAGING_ENABLED_FALSE = 0;
  ACP_AVERAGING_ENABLED_TRUE = 1;
}

enum AcpAveragingType {
  ACP_AVERAGING_TYPE_RMS = 0;
  ACP_AVERAGING_TYPE_LOG = 1;
  ACP_AVERAGING_TYPE_SCALAR = 2;
  ACP_AVERAGING_TYPE_MAXIMUM = 3;
  ACP_AVERAGING_TYPE_MINIMUM = 4;
}

enum AcpCarrierMode {
  ACP_CARRIER_MODE_PASSIVE = 0;
  ACP_CARRIER_MODE_ACTIVE = 1;
}

enum AcpCarrierRrcFilterEnabled {
  ACP_CARRIER_RRC_FILTER_ENABLED_FALSE = 0;
  ACP_CARRIER_RRC_FILTER_ENABLED_TRUE = 1;
}

enum AcpFftWindow {
  ACP_FFT_WINDOW_NONE = 0;
  ACP_FFT_WINDOW_FLAT_TOP = 1;
  ACP_FFT_WINDOW_HANNING = 2;
  ACP_FFT_WINDOW_HAMMING = 3;
  ACP_FFT_WINDOW_GAUSSIAN = 4;
  ACP_FFT_WINDOW_BLACKMAN = 5;
  ACP_FFT_WINDOW_BLACKMAN_HARRIS = 6;
  ACP_FFT_WINDOW_KAISER_BESSEL = 7;
}

enum AcpMeasurementMethod {
  ACP_MEASUREMENT_METHOD_NORMAL = 0;
  ACP_MEASUREMENT_METHOD_DYNAMIC_RANGE = 1;
  ACP_MEASUREMENT_METHOD_SEQUENTIAL_FFT = 2;
}

enum AcpNoiseCalibrationDataValid {
  ACP_NOISE_CALIBRATION_DATA_VALID_FALSE = 0;
  ACP_NOISE_CALIBRATION_DATA_VALID_TRUE = 1;
}

enum AcpNoiseCompensationEnabled {
  ACP_NOISE_COMPENSATION_ENABLED_FALSE = 0;
  ACP_NOISE_COMPENSATION_ENABLED_TRUE = 1;
}

enum AcpOffsetEnabled {
  ACP_OFFSET_ENABLED_FALSE = 0;
  ACP_OFFSET_ENABLED_TRUE = 1;
}

enum AcpOffsetFrequencyDefinition {
  ACP_OFFSET_FREQUENCY_DEFINITION_CARRIER_CENTER_TO_OFFSET_CENTER = 0;
  ACP_OFFSET_FREQUENCY_DEFINITION_CARRIER_CENTER_TO_OFFSET_EDGE = 1;
}

enum AcpOffsetPowerReferenceCarrier {
  ACP_OFFSET_POWER_REFERENCE_CARRIER_CLOSEST = 0;
  ACP_OFFSET_POWER_REFERENCE_CARRIER_HIGHEST = 1;
  ACP_OFFSET_POWER_REFERENCE_CARRIER_COMPOSITE = 2;
  ACP_OFFSET_POWER_REFERENCE_CARRIER_SPECIFIC = 3;
}

enum AcpOffsetRrcFilterEnabled {
  ACP_OFFSET_RRC_FILTER_ENABLED_FALSE = 0;
  ACP_OFFSET_RRC_FILTER_ENABLED_TRUE = 1;
}

enum AcpOffsetSideband {
  ACP_OFFSET_SIDEBAND_NEGATIVE = 0;
  ACP_OFFSET_SIDEBAND_POSITIVE = 1;
  ACP_OFFSET_SIDEBAND_BOTH = 2;
}

enum AcpPowerUnits {
  ACP_POWER_UNITS_DBM = 0;
  ACP_POWER_UNITS_DBM_PER_HZ = 1;
}

enum AcpRbwAutoBandwidth {
  ACP_RBW_AUTO_BANDWIDTH_FALSE = 0;
  ACP_RBW_AUTO_BANDWIDTH_TRUE = 1;
}

enum AcpRbwFilterType {
  ACP_RBW_FILTER_TYPE_FFT_BASED = 0;
  ACP_RBW_FILTER_TYPE_GAUSSIAN = 1;
  ACP_RBW_FILTER_TYPE_FLAT = 2;
}

enum AcpSweepTimeAuto {
  ACP_SWEEP_TIME_AUTO_FALSE = 0;
  ACP_SWEEP_TIME_AUTO_TRUE = 1;
}

enum AmpmAMToAMCurveFitType {
  AMPM_AM_TO_AM_CURVE_FIT_TYPE_LEAST_SQUARE = 0;
  AMPM_AM_TO_AM_CURVE_FIT_TYPE_LEAST_ABSOLUTE_RESIDUAL = 1;
  AMPM_AM_TO_AM_CURVE_FIT_TYPE_BISQUARE = 2;
}

enum AmpmAMToPMCurveFitType {
  AMPM_AM_TO_PM_CURVE_FIT_TYPE_LEAST_SQUARE = 0;
  AMPM_AM_TO_PM_CURVE_FIT_TYPE_LEAST_ABSOLUTE_RESIDUAL = 1;
  AMPM_AM_TO_PM_CURVE_FIT_TYPE_BISQUARE = 2;
}

enum AmpmAveragingEnabled {
  AMPM_AVERAGING_ENABLED_FALSE = 0;
  AMPM_AVERAGING_ENABLED_TRUE = 1;
}

enum AmpmCompressionPointEnabled {
  AMPM_COMPRESSION_POINT_ENABLED_FALSE = 0;
  AMPM_COMPRESSION_POINT_ENABLED_TRUE = 1;
}

enum AmpmMeasurementSampleRateMode {
  AMPM_MEASUREMENT_SAMPLE_RATE_MODE_USER = 0;
  AMPM_MEASUREMENT_SAMPLE_RATE_MODE_REFERENCE_WAVEFORM = 1;
}

enum AmpmReferencePowerType {
  AMPM_REFERENCE_POWER_TYPE_INPUT = 0;
  AMPM_REFERENCE_POWER_TYPE_OUTPUT = 1;
}

enum AmpmReferenceWaveformIdleDurationPresent {
  AMPM_REFERENCE_WAVEFORM_IDLE_DURATION_PRESENT_FALSE = 0;
  AMPM_REFERENCE_WAVEFORM_IDLE_DURATION_PRESENT_TRUE = 1;
}

enum AmpmSignalType {
  AMPM_SIGNAL_TYPE_MODULATED = 0;
  AMPM_SIGNAL_TYPE_TONES = 1;
}

enum AmpmSynchronizationMethod {
  AMPM_SYNCHRONIZATION_METHOD_UNSPECIFIED = 0;
  AMPM_SYNCHRONIZATION_METHOD_DIRECT = 1;
  AMPM_SYNCHRONIZATION_METHOD_ALIAS_PROTECTED = 2;
}

enum AmpmThresholdEnabled {
  AMPM_THRESHOLD_ENABLED_FALSE = 0;
  AMPM_THRESHOLD_ENABLED_TRUE = 1;
}

enum AmpmThresholdType {
  AMPM_THRESHOLD_TYPE_RELATIVE = 0;
  AMPM_THRESHOLD_TYPE_ABSOLUTE = 1;
}

enum CcdfRbwFilterType {
  CCDF_RBW_FILTER_TYPE_UNSPECIFIED = 0;
  CCDF_RBW_FILTER_TYPE_GAUSSIAN = 1;
  CCDF_RBW_FILTER_TYPE_FLAT = 2;
  CCDF_RBW_FILTER_TYPE_NONE = 5;
  CCDF_RBW_FILTER_TYPE_RRC = 6;
}

enum CcdfThresholdEnabled {
  CCDF_THRESHOLD_ENABLED_FALSE = 0;
  CCDF_THRESHOLD_ENABLED_TRUE = 1;
}

enum CcdfThresholdType {
  CCDF_THRESHOLD_TYPE_RELATIVE = 0;
  CCDF_THRESHOLD_TYPE_ABSOLUTE = 1;
}

enum ChpAveragingEnabled {
  CHP_AVERAGING_ENABLED_FALSE = 0;
  CHP_AVERAGING_ENABLED_TRUE = 1;
}

enum ChpAveragingType {
  CHP_AVERAGING_TYPE_RMS = 0;
  CHP_AVERAGING_TYPE_LOG = 1;
  CHP_AVERAGING_TYPE_SCALAR = 2;
  CHP_AVERAGING_TYPE_MAXIMUM = 3;
  CHP_AVERAGING_TYPE_MINIMUM = 4;
}

enum ChpCarrierRrcFilterEnabled {
  CHP_CARRIER_RRC_FILTER_ENABLED_FALSE = 0;
  CHP_CARRIER_RRC_FILTER_ENABLED_TRUE = 1;
}

enum ChpFftWindow {
  CHP_FFT_WINDOW_NONE = 0;
  CHP_FFT_WINDOW_FLAT_TOP = 1;
  CHP_FFT_WINDOW_HANNING = 2;
  CHP_FFT_WINDOW_HAMMING = 3;
  CHP_FFT_WINDOW_GAUSSIAN = 4;
  CHP_FFT_WINDOW_BLACKMAN = 5;
  CHP_FFT_WINDOW_BLACKMAN_HARRIS = 6;
  CHP_FFT_WINDOW_KAISER_BESSEL = 7;
}

enum ChpNoiseCalibrationDataValid {
  CHP_NOISE_CALIBRATION_DATA_VALID_FALSE = 0;
  CHP_NOISE_CALIBRATION_DATA_VALID_TRUE = 1;
}

enum ChpRbwAutoBandwidth {
  CHP_RBW_AUTO_BANDWIDTH_FALSE = 0;
  CHP_RBW_AUTO_BANDWIDTH_TRUE = 1;
}

enum ChpRbwFilterType {
  CHP_RBW_FILTER_TYPE_FFT_BASED = 0;
  CHP_RBW_FILTER_TYPE_GAUSSIAN = 1;
  CHP_RBW_FILTER_TYPE_FLAT = 2;
}

enum ChpSweepTimeAuto {
  CHP_SWEEP_TIME_AUTO_FALSE = 0;
  CHP_SWEEP_TIME_AUTO_TRUE = 1;
}

enum DigitalEdgeTriggerEdge {
  DIGITAL_EDGE_TRIGGER_EDGE_RISING = 0;
  DIGITAL_EDGE_TRIGGER_EDGE_FALLING = 1;
}

enum DigitalEdgeTriggerSource {
  DIGITAL_EDGE_TRIGGER_SOURCE_UNSPECIFIED = 0;
  DIGITAL_EDGE_TRIGGER_SOURCE_PFI0 = 1;
  DIGITAL_EDGE_TRIGGER_SOURCE_PFI1 = 2;
  DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG0 = 3;
  DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG1 = 4;
  DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG2 = 5;
  DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG3 = 6;
  DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG4 = 7;
  DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG5 = 8;
  DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG6 = 9;
  DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG7 = 10;
  DIGITAL_EDGE_TRIGGER_SOURCE_PXI_STAR = 11;
  DIGITAL_EDGE_TRIGGER_SOURCE_PXIE_DSTARB = 12;
  DIGITAL_EDGE_TRIGGER_SOURCE_TIMER_EVENT = 13;
}

enum DpdApplyDpdConfigurationInput {
  DPD_APPLY_DPD_CONFIGURATION_INPUT_MEASUREMENT = 0;
  DPD_APPLY_DPD_CONFIGURATION_INPUT_USER = 1;
}

enum DpdApplyDpdIdleDurationPresent {
  DPD_APPLY_DPD_IDLE_DURATION_PRESENT_FALSE = 0;
  DPD_APPLY_DPD_IDLE_DURATION_PRESENT_TRUE = 1;
}

enum DpdApplyDpdLookupTableCorrectionType {
  DPD_APPLY_DPD_LOOKUP_TABLE_CORRECTION_TYPE_MAGNITUDE_AND_PHASE = 0;
  DPD_APPLY_DPD_LOOKUP_TABLE_CORRECTION_TYPE_MAGNITUDE_ONLY = 1;
  DPD_APPLY_DPD_LOOKUP_TABLE_CORRECTION_TYPE_PHASE_ONLY = 2;
}

enum DpdApplyDpdMemoryModelCorrectionType {
  DPD_APPLY_DPD_MEMORY_MODEL_CORRECTION_TYPE_MAGNITUDE_AND_PHASE = 0;
  DPD_APPLY_DPD_MEMORY_MODEL_CORRECTION_TYPE_MAGNITUDE_ONLY = 1;
  DPD_APPLY_DPD_MEMORY_MODEL_CORRECTION_TYPE_PHASE_ONLY = 2;
}

enum DpdAveragingEnabled {
  DPD_AVERAGING_ENABLED_FALSE = 0;
  DPD_AVERAGING_ENABLED_TRUE = 1;
}

enum DpdIterativeDpdEnabled {
  DPD_ITERATIVE_DPD_ENABLED_FALSE = 0;
  DPD_ITERATIVE_DPD_ENABLED_TRUE = 1;
}

enum DpdLookupTableAMToAMCurveFitType {
  DPD_LOOKUP_TABLE_AM_TO_AM_CURVE_FIT_TYPE_LEAST_SQUARE = 0;
  DPD_LOOKUP_TABLE_AM_TO_AM_CURVE_FIT_TYPE_LEAST_ABSOLUTE_RESIDUAL = 1;
  DPD_LOOKUP_TABLE_AM_TO_AM_CURVE_FIT_TYPE_BISQUARE = 2;
}

enum DpdLookupTableAMToPMCurveFitType {
  DPD_LOOKUP_TABLE_AM_TO_PM_CURVE_FIT_TYPE_LEAST_SQUARE = 0;
  DPD_LOOKUP_TABLE_AM_TO_PM_CURVE_FIT_TYPE_LEAST_ABSOLUTE_RESIDUAL = 1;
  DPD_LOOKUP_TABLE_AM_TO_PM_CURVE_FIT_TYPE_BISQUARE = 2;
}

enum DpdLookupTableThresholdEnabled {
  DPD_LOOKUP_TABLE_THRESHOLD_ENABLED_FALSE = 0;
  DPD_LOOKUP_TABLE_THRESHOLD_ENABLED_TRUE = 1;
}

enum DpdLookupTableThresholdType {
  DPD_LOOKUP_TABLE_THRESHOLD_TYPE_RELATIVE = 0;
  DPD_LOOKUP_TABLE_THRESHOLD_TYPE_ABSOLUTE = 1;
}

enum DpdLookupTableType {
  DPD_LOOKUP_TABLE_TYPE_LOG = 0;
  DPD_LOOKUP_TABLE_TYPE_LINEAR = 1;
}

enum DpdMeasurementSampleRateMode {
  DPD_MEASUREMENT_SAMPLE_RATE_MODE_USER = 0;
  DPD_MEASUREMENT_SAMPLE_RATE_MODE_REFERENCE_WAVEFORM = 1;
}

enum DpdModel {
  DPD_MODEL_LOOKUP_TABLE = 0;
  DPD_MODEL_MEMORY_POLYNOMIAL = 1;
  DPD_MODEL_GENERALIZED_MEMORY_POLYNOMIAL = 2;
}

enum DpdReferenceWaveformIdleDurationPresent {
  DPD_REFERENCE_WAVEFORM_IDLE_DURATION_PRESENT_FALSE = 0;
  DPD_REFERENCE_WAVEFORM_IDLE_DURATION_PRESENT_TRUE = 1;
}

enum DpdSignalType {
  DPD_SIGNAL_TYPE_MODULATED = 0;
  DPD_SIGNAL_TYPE_TONES = 1;
}

enum DpdSynchronizationMethod {
  DPD_SYNCHRONIZATION_METHOD_UNSPECIFIED = 0;
  DPD_SYNCHRONIZATION_METHOD_DIRECT = 1;
  DPD_SYNCHRONIZATION_METHOD_ALIAS_PROTECTED = 2;
}

enum FcntAveragingEnabled {
  FCNT_AVERAGING_ENABLED_FALSE = 0;
  FCNT_AVERAGING_ENABLED_TRUE = 1;
}

enum FcntAveragingType {
  FCNT_AVERAGING_TYPE_UNSPECIFIED = 0;
  FCNT_AVERAGING_TYPE_MAXIMUM = 3;
  FCNT_AVERAGING_TYPE_MINIMUM = 4;
  FCNT_AVERAGING_TYPE_MEAN = 6;
  FCNT_AVERAGING_TYPE_MINMAX = 7;
}

enum FcntRbwFilterType {
  FCNT_RBW_FILTER_TYPE_UNSPECIFIED = 0;
  FCNT_RBW_FILTER_TYPE_GAUSSIAN = 1;
  FCNT_RBW_FILTER_TYPE_FLAT = 2;
  FCNT_RBW_FILTER_TYPE_NONE = 5;
  FCNT_RBW_FILTER_TYPE_RRC = 6;
}

enum FcntThresholdEnabled {
  FCNT_THRESHOLD_ENABLED_FALSE = 0;
  FCNT_THRESHOLD_ENABLED_TRUE = 1;
}

enum FcntThresholdType {
  FCNT_THRESHOLD_TYPE_RELATIVE = 0;
  FCNT_THRESHOLD_TYPE_ABSOLUTE = 1;
}

enum FrequencyReferenceSource {
  FREQUENCY_REFERENCE_SOURCE_UNSPECIFIED = 0;
  FREQUENCY_REFERENCE_SOURCE_ONBOARD_CLOCK = 1;
  FREQUENCY_REFERENCE_SOURCE_REF_IN = 2;
  FREQUENCY_REFERENCE_SOURCE_PXI_CLK = 3;
  FREQUENCY_REFERENCE_SOURCE_CLK_IN = 4;
}

enum HarmAutoHarmonicsSetupEnabled {
  HARM_AUTO_HARMONICS_SETUP_ENABLED_FALSE = 0;
  HARM_AUTO_HARMONICS_SETUP_ENABLED_TRUE = 1;
}

enum HarmAveragingEnabled {
  HARM_AVERAGING_ENABLED_FALSE = 0;
  HARM_AVERAGING_ENABLED_TRUE = 1;
}

enum HarmAveragingType {
  HARM_AVERAGING_TYPE_RMS = 0;
  HARM_AVERAGING_TYPE_LOG = 1;
  HARM_AVERAGING_TYPE_SCALAR = 2;
  HARM_AVERAGING_TYPE_MAXIMUM = 3;
  HARM_AVERAGING_TYPE_MINIMUM = 4;
}

enum HarmHarmonicEnabled {
  HARM_HARMONIC_ENABLED_FALSE = 0;
  HARM_HARMONIC_ENABLED_TRUE = 1;
}

enum HarmRbwFilterType {
  HARM_RBW_FILTER_TYPE_UNSPECIFIED = 0;
  HARM_RBW_FILTER_TYPE_GAUSSIAN = 1;
  HARM_RBW_FILTER_TYPE_FLAT = 2;
  HARM_RBW_FILTER_TYPE_NONE = 5;
  HARM_RBW_FILTER_TYPE_RRC = 6;
}

enum IMAutoIntermodsSetupEnabled {
  IM_AUTO_INTERMODS_SETUP_ENABLED_FALSE = 0;
  IM_AUTO_INTERMODS_SETUP_ENABLED_TRUE = 1;
}

enum IMAveragingEnabled {
  IM_AVERAGING_ENABLED_FALSE = 0;
  IM_AVERAGING_ENABLED_TRUE = 1;
}

enum IMAveragingType {
  IM_AVERAGING_TYPE_RMS = 0;
  IM_AVERAGING_TYPE_LOG = 1;
  IM_AVERAGING_TYPE_SCALAR = 2;
  IM_AVERAGING_TYPE_MAXIMUM = 3;
  IM_AVERAGING_TYPE_MINIMUM = 4;
}

enum IMFftWindow {
  IM_FFT_WINDOW_NONE = 0;
  IM_FFT_WINDOW_FLAT_TOP = 1;
  IM_FFT_WINDOW_HANNING = 2;
  IM_FFT_WINDOW_HAMMING = 3;
  IM_FFT_WINDOW_GAUSSIAN = 4;
  IM_FFT_WINDOW_BLACKMAN = 5;
  IM_FFT_WINDOW_BLACKMAN_HARRIS = 6;
  IM_FFT_WINDOW_KAISER_BESSEL = 7;
}

enum IMFrequencyDefinition {
  IM_FREQUENCY_DEFINITION_RELATIVE = 0;
  IM_FREQUENCY_DEFINITION_ABSOLUTE = 1;
}

enum IMIntermodEnabled {
  IM_INTERMOD_ENABLED_FALSE = 0;
  IM_INTERMOD_ENABLED_TRUE = 1;
}

enum IMIntermodSide {
  IM_INTERMOD_SIDE_LOWER = 0;
  IM_INTERMOD_SIDE_UPPER = 1;
  IM_INTERMOD_SIDE_BOTH = 2;
}

enum IMMeasurementMethod {
  IM_MEASUREMENT_METHOD_NORMAL = 0;
  IM_MEASUREMENT_METHOD_DYNAMIC_RANGE = 1;
  IM_MEASUREMENT_METHOD_SEGMENTED = 2;
}

enum IMRbwFilterAutoBandwidth {
  IM_RBW_FILTER_AUTO_BANDWIDTH_FALSE = 0;
  IM_RBW_FILTER_AUTO_BANDWIDTH_TRUE = 1;
}

enum IMRbwFilterType {
  IM_RBW_FILTER_TYPE_FFT_BASED = 0;
  IM_RBW_FILTER_TYPE_GAUSSIAN = 1;
  IM_RBW_FILTER_TYPE_FLAT = 2;
}

enum IMSweepTimeAuto {
  IM_SWEEP_TIME_AUTO_FALSE = 0;
  IM_SWEEP_TIME_AUTO_TRUE = 1;
}

enum IQBandwidthAuto {
  IQ_BANDWIDTH_AUTO_FALSE = 0;
  IQ_BANDWIDTH_AUTO_TRUE = 1;
}

enum IQPowerEdgeTriggerSlope {
  IQ_POWER_EDGE_TRIGGER_SLOPE_RISING = 0;
  IQ_POWER_EDGE_TRIGGER_SLOPE_FALLING = 1;
}

enum MarkerNextPeak {
  MARKER_NEXT_PEAK_NEXT_HIGHEST = 0;
  MARKER_NEXT_PEAK_NEXT_LEFT = 1;
  MARKER_NEXT_PEAK_NEXT_RIGHT = 2;
}

enum MarkerPeakExcursionEnabled {
  MARKER_PEAK_EXCURSION_ENABLED_FALSE = 0;
  MARKER_PEAK_EXCURSION_ENABLED_TRUE = 1;
}

enum MarkerThresholdEnabled {
  MARKER_THRESHOLD_ENABLED_FALSE = 0;
  MARKER_THRESHOLD_ENABLED_TRUE = 1;
}

enum MarkerTrace {
  MARKER_TRACE_ACP_SPECTRUM = 0;
  MARKER_TRACE_CCDF_GAUSSIAN_PROBABILITIES_TRACE = 1;
  MARKER_TRACE_CCDF_PROBABILITIES_TRACE = 2;
  MARKER_TRACE_CHP_SPECTRUM = 3;
  MARKER_TRACE_FCNT_POWER_TRACE = 4;
  MARKER_TRACE_OBW_SPECTRUM = 5;
  MARKER_TRACE_SEM_SPECTRUM = 6;
  MARKER_TRACE_SPECTRUM = 7;
  MARKER_TRACE_TXP_POWER_TRACE = 8;
}

enum MarkerType {
  MARKER_TYPE_OFF = 0;
  MARKER_TYPE_NORMAL = 1;
  MARKER_TYPE_DELTA = 3;
}

enum MeasurementTypes {
  MEASUREMENT_TYPES_UNSPECIFIED = 0;
  MEASUREMENT_TYPES_ACP = 1;
  MEASUREMENT_TYPES_CCDF = 2;
  MEASUREMENT_TYPES_CHP = 4;
  MEASUREMENT_TYPES_FCNT = 8;
  MEASUREMENT_TYPES_HARMONICS = 16;
  MEASUREMENT_TYPES_OBW = 32;
  MEASUREMENT_TYPES_SEM = 64;
  MEASUREMENT_TYPES_SPECTRUM = 128;
  MEASUREMENT_TYPES_SPUR = 256;
  MEASUREMENT_TYPES_TXP = 512;
  MEASUREMENT_TYPES_AMPM = 1024;
  MEASUREMENT_TYPES_DPD = 2048;
  MEASUREMENT_TYPES_IQ = 4096;
  MEASUREMENT_TYPES_IM = 8192;
  MEASUREMENT_TYPES_NF = 16384;
  MEASUREMENT_TYPES_PHASENOISE = 32768;
  MEASUREMENT_TYPES_PAVT = 65536;
}

enum MechanicalAttenuationAuto {
  MECHANICAL_ATTENUATION_AUTO_FALSE = 0;
  MECHANICAL_ATTENUATION_AUTO_TRUE = 1;
}

enum NFAveragingEnabled {
  NF_AVERAGING_ENABLED_FALSE = 0;
  NF_AVERAGING_ENABLED_TRUE = 1;
}

enum NFCalibrationDataValid {
  NF_CALIBRATION_DATA_VALID_FALSE = 0;
  NF_CALIBRATION_DATA_VALID_TRUE = 1;
}

enum NFCalibrationLossCompensationEnabled {
  NF_CALIBRATION_LOSS_COMPENSATION_ENABLED_FALSE = 0;
  NF_CALIBRATION_LOSS_COMPENSATION_ENABLED_TRUE = 1;
}

enum NFColdSourceMode {
  NF_COLD_SOURCE_MODE_MEASURE = 0;
  NF_COLD_SOURCE_MODE_CALIBRATE = 1;
}

enum NFDutInputLossCompensationEnabled {
  NF_DUT_INPUT_LOSS_COMPENSATION_ENABLED_FALSE = 0;
  NF_DUT_INPUT_LOSS_COMPENSATION_ENABLED_TRUE = 1;
}

enum NFDutOutputLossCompensationEnabled {
  NF_DUT_OUTPUT_LOSS_COMPENSATION_ENABLED_FALSE = 0;
  NF_DUT_OUTPUT_LOSS_COMPENSATION_ENABLED_TRUE = 1;
}

enum NFMeasurementMethod {
  NF_MEASUREMENT_METHOD_Y_FACTOR = 0;
  NF_MEASUREMENT_METHOD_COLD_SOURCE = 1;
}

enum NFYFactorMode {
  NF_Y_FACTOR_MODE_MEASURE = 0;
  NF_Y_FACTOR_MODE_CALIBRATE = 1;
}

enum NFYFactorNoiseSourceLossCompensationEnabled {
  NF_Y_FACTOR_NOISE_SOURCE_LOSS_COMPENSATION_ENABLED_FALSE = 0;
  NF_Y_FACTOR_NOISE_SOURCE_LOSS_COMPENSATION_ENABLED_TRUE = 1;
}

enum ObwAveragingEnabled {
  OBW_AVERAGING_ENABLED_FALSE = 0;
  OBW_AVERAGING_ENABLED_TRUE = 1;
}

enum ObwAveragingType {
  OBW_AVERAGING_TYPE_RMS = 0;
  OBW_AVERAGING_TYPE_LOG = 1;
  OBW_AVERAGING_TYPE_SCALAR = 2;
  OBW_AVERAGING_TYPE_MAXIMUM = 3;
  OBW_AVERAGING_TYPE_MINIMUM = 4;
}

enum ObwFftWindow {
  OBW_FFT_WINDOW_NONE = 0;
  OBW_FFT_WINDOW_FLAT_TOP = 1;
  OBW_FFT_WINDOW_HANNING = 2;
  OBW_FFT_WINDOW_HAMMING = 3;
  OBW_FFT_WINDOW_GAUSSIAN = 4;
  OBW_FFT_WINDOW_BLACKMAN = 5;
  OBW_FFT_WINDOW_BLACKMAN_HARRIS = 6;
  OBW_FFT_WINDOW_KAISER_BESSEL = 7;
}

enum ObwPowerUnits {
  OBW_POWER_UNITS_DBM = 0;
  OBW_POWER_UNITS_DBM_PER_HZ = 1;
}

enum ObwRbwAutoBandwidth {
  OBW_RBW_AUTO_BANDWIDTH_FALSE = 0;
  OBW_RBW_AUTO_BANDWIDTH_TRUE = 1;
}

enum ObwRbwFilterType {
  OBW_RBW_FILTER_TYPE_FFT_BASED = 0;
  OBW_RBW_FILTER_TYPE_GAUSSIAN = 1;
  OBW_RBW_FILTER_TYPE_FLAT = 2;
}

enum ObwSweepTimeAuto {
  OBW_SWEEP_TIME_AUTO_FALSE = 0;
  OBW_SWEEP_TIME_AUTO_TRUE = 1;
}

enum PavtMeasurementIntervalMode {
  PAVT_MEASUREMENT_INTERVAL_MODE_UNIFORM = 0;
  PAVT_MEASUREMENT_INTERVAL_MODE_VARIABLE = 1;
}

enum PavtMeasurementLocationType {
  PAVT_MEASUREMENT_LOCATION_TYPE_TIME = 0;
  PAVT_MEASUREMENT_LOCATION_TYPE_TRIGGER = 1;
}

enum PavtSegmentType {
  PAVT_SEGMENT_TYPE_PHASE_AND_AMPLITUDE = 0;
  PAVT_SEGMENT_TYPE_AMPLITUDE = 1;
  PAVT_SEGMENT_TYPE_FREQUENCY_ERROR_MEASUREMENT = 2;
}

enum PhaseNoiseCancellationEnabled {
  PHASE_NOISE_CANCELLATION_ENABLED_FALSE = 0;
  PHASE_NOISE_CANCELLATION_ENABLED_TRUE = 1;
}

enum PhaseNoiseIntegratedNoiseRangeDefinition {
  PHASE_NOISE_INTEGRATED_NOISE_RANGE_DEFINITION_NONE = 0;
  PHASE_NOISE_INTEGRATED_NOISE_RANGE_DEFINITION_MEASUREMENT = 1;
  PHASE_NOISE_INTEGRATED_NOISE_RANGE_DEFINITION_CUSTOM = 2;
}

enum PhaseNoiseRangeDefinition {
  PHASE_NOISE_RANGE_DEFINITION_MANUAL = 0;
  PHASE_NOISE_RANGE_DEFINITION_AUTO = 1;
}

enum PhaseNoiseSmoothingType {
  PHASE_NOISE_SMOOTHING_TYPE_NONE = 0;
  PHASE_NOISE_SMOOTHING_TYPE_LINEAR = 1;
  PHASE_NOISE_SMOOTHING_TYPE_LOGARITHMIC = 2;
  PHASE_NOISE_SMOOTHING_TYPE_MEDIAN = 3;
}

enum PhaseNoiseSpurRemovalEnabled {
  PHASE_NOISE_SPUR_REMOVAL_ENABLED_FALSE = 0;
  PHASE_NOISE_SPUR_REMOVAL_ENABLED_TRUE = 1;
}

enum RFAttenuationAuto {
  RF_ATTENUATION_AUTO_FALSE = 0;
  RF_ATTENUATION_AUTO_TRUE = 1;
}

enum SemAveragingEnabled {
  SEM_AVERAGING_ENABLED_FALSE = 0;
  SEM_AVERAGING_ENABLED_TRUE = 1;
}

enum SemAveragingType {
  SEM_AVERAGING_TYPE_RMS = 0;
  SEM_AVERAGING_TYPE_LOG = 1;
  SEM_AVERAGING_TYPE_SCALAR = 2;
  SEM_AVERAGING_TYPE_MAXIMUM = 3;
  SEM_AVERAGING_TYPE_MINIMUM = 4;
}

enum SemCarrierEnabled {
  SEM_CARRIER_ENABLED_FALSE = 0;
  SEM_CARRIER_ENABLED_TRUE = 1;
}

enum SemCarrierRbwAutoBandwidth {
  SEM_CARRIER_RBW_AUTO_BANDWIDTH_FALSE = 0;
  SEM_CARRIER_RBW_AUTO_BANDWIDTH_TRUE = 1;
}

enum SemCarrierRbwFilterType {
  SEM_CARRIER_RBW_FILTER_TYPE_FFT_BASED = 0;
  SEM_CARRIER_RBW_FILTER_TYPE_GAUSSIAN = 1;
  SEM_CARRIER_RBW_FILTER_TYPE_FLAT = 2;
}

enum SemCarrierRrcFilterEnabled {
  SEM_CARRIER_RRC_FILTER_ENABLED_FALSE = 0;
  SEM_CARRIER_RRC_FILTER_ENABLED_TRUE = 1;
}

enum SemCompositeMeasurementStatus {
  SEM_COMPOSITE_MEASUREMENT_STATUS_FAIL = 0;
  SEM_COMPOSITE_MEASUREMENT_STATUS_PASS = 1;
}

enum SemFftWindow {
  SEM_FFT_WINDOW_NONE = 0;
  SEM_FFT_WINDOW_FLAT_TOP = 1;
  SEM_FFT_WINDOW_HANNING = 2;
  SEM_FFT_WINDOW_HAMMING = 3;
  SEM_FFT_WINDOW_GAUSSIAN = 4;
  SEM_FFT_WINDOW_BLACKMAN = 5;
  SEM_FFT_WINDOW_BLACKMAN_HARRIS = 6;
  SEM_FFT_WINDOW_KAISER_BESSEL = 7;
}

enum SemLowerOffsetMeasurementStatus {
  SEM_LOWER_OFFSET_MEASUREMENT_STATUS_FAIL = 0;
  SEM_LOWER_OFFSET_MEASUREMENT_STATUS_PASS = 1;
}

enum SemOffsetAbsoluteLimitMode {
  SEM_OFFSET_ABSOLUTE_LIMIT_MODE_MANUAL = 0;
  SEM_OFFSET_ABSOLUTE_LIMIT_MODE_COUPLE = 1;
}

enum SemOffsetEnabled {
  SEM_OFFSET_ENABLED_FALSE = 0;
  SEM_OFFSET_ENABLED_TRUE = 1;
}

enum SemOffsetFrequencyDefinition {
  SEM_OFFSET_FREQUENCY_DEFINITION_CARRIER_CENTER_TO_MEASUREMENT_BANDWIDTH_CENTER = 0;
  SEM_OFFSET_FREQUENCY_DEFINITION_CARRIER_CENTER_TO_MEASUREMENT_BANDWIDTH_EDGE = 1;
  SEM_OFFSET_FREQUENCY_DEFINITION_CARRIER_EDGE_TO_MEASUREMENT_BANDWIDTH_CENTER = 2;
  SEM_OFFSET_FREQUENCY_DEFINITION_CARRIER_EDGE_TO_MEASUREMENT_BANDWIDTH_EDGE = 3;
}

enum SemOffsetLimitFailMask {
  SEM_OFFSET_LIMIT_FAIL_MASK_ABSOLUTE_AND_RELATIVE = 0;
  SEM_OFFSET_LIMIT_FAIL_MASK_ABSOLUTE_OR_RELATIVE = 1;
  SEM_OFFSET_LIMIT_FAIL_MASK_ABSOLUTE = 2;
  SEM_OFFSET_LIMIT_FAIL_MASK_RELATIVE = 3;
}

enum SemOffsetRbwAutoBandwidth {
  SEM_OFFSET_RBW_AUTO_BANDWIDTH_FALSE = 0;
  SEM_OFFSET_RBW_AUTO_BANDWIDTH_TRUE = 1;
}

enum SemOffsetRbwFilterType {
  SEM_OFFSET_RBW_FILTER_TYPE_FFT_BASED = 0;
  SEM_OFFSET_RBW_FILTER_TYPE_GAUSSIAN = 1;
  SEM_OFFSET_RBW_FILTER_TYPE_FLAT = 2;
}

enum SemOffsetRelativeLimitMode {
  SEM_OFFSET_RELATIVE_LIMIT_MODE_MANUAL = 0;
  SEM_OFFSET_RELATIVE_LIMIT_MODE_COUPLE = 1;
}

enum SemOffsetSideband {
  SEM_OFFSET_SIDEBAND_NEGATIVE = 0;
  SEM_OFFSET_SIDEBAND_POSITIVE = 1;
  SEM_OFFSET_SIDEBAND_BOTH = 2;
}

enum SemPowerUnits {
  SEM_POWER_UNITS_DBM = 0;
  SEM_POWER_UNITS_DBM_PER_HZ = 1;
}

enum SemReferenceType {
  SEM_REFERENCE_TYPE_INTEGRATION = 0;
  SEM_REFERENCE_TYPE_PEAK = 1;
}

enum SemSweepTimeAuto {
  SEM_SWEEP_TIME_AUTO_FALSE = 0;
  SEM_SWEEP_TIME_AUTO_TRUE = 1;
}

enum SemUpperOffsetMeasurementStatus {
  SEM_UPPER_OFFSET_MEASUREMENT_STATUS_FAIL = 0;
  SEM_UPPER_OFFSET_MEASUREMENT_STATUS_PASS = 1;
}

enum SpectrumAveragingEnabled {
  SPECTRUM_AVERAGING_ENABLED_FALSE = 0;
  SPECTRUM_AVERAGING_ENABLED_TRUE = 1;
}

enum SpectrumAveragingType {
  SPECTRUM_AVERAGING_TYPE_RMS = 0;
  SPECTRUM_AVERAGING_TYPE_LOG = 1;
  SPECTRUM_AVERAGING_TYPE_SCALAR = 2;
  SPECTRUM_AVERAGING_TYPE_MAXIMUM = 3;
  SPECTRUM_AVERAGING_TYPE_MINIMUM = 4;
}

enum SpectrumDetectorType {
  SPECTRUM_DETECTOR_TYPE_NONE = 0;
  SPECTRUM_DETECTOR_TYPE_SAMPLE = 1;
  SPECTRUM_DETECTOR_TYPE_NORMAL = 2;
  SPECTRUM_DETECTOR_TYPE_PEAK = 3;
  SPECTRUM_DETECTOR_TYPE_NEGATIVE_PEAK = 4;
  SPECTRUM_DETECTOR_TYPE_AVERAGE_RMS = 5;
  SPECTRUM_DETECTOR_TYPE_AVERAGE_VOLTAGE = 6;
  SPECTRUM_DETECTOR_TYPE_AVERAGE_LOG = 7;
}

enum SpectrumFftWindow {
  SPECTRUM_FFT_WINDOW_NONE = 0;
  SPECTRUM_FFT_WINDOW_FLAT_TOP = 1;
  SPECTRUM_FFT_WINDOW_HANNING = 2;
  SPECTRUM_FFT_WINDOW_HAMMING = 3;
  SPECTRUM_FFT_WINDOW_GAUSSIAN = 4;
  SPECTRUM_FFT_WINDOW_BLACKMAN = 5;
  SPECTRUM_FFT_WINDOW_BLACKMAN_HARRIS = 6;
  SPECTRUM_FFT_WINDOW_KAISER_BESSEL = 7;
}

enum SpectrumNoiseCalibrationDataValid {
  SPECTRUM_NOISE_CALIBRATION_DATA_VALID_FALSE = 0;
  SPECTRUM_NOISE_CALIBRATION_DATA_VALID_TRUE = 1;
}

enum SpectrumNoiseCompensationEnabled {
  SPECTRUM_NOISE_COMPENSATION_ENABLED_FALSE = 0;
  SPECTRUM_NOISE_COMPENSATION_ENABLED_TRUE = 1;
}

enum SpectrumPowerUnits {
  SPECTRUM_POWER_UNITS_DBM = 0;
  SPECTRUM_POWER_UNITS_DBM_PER_HZ = 1;
  SPECTRUM_POWER_UNITS_DBW = 2;
  SPECTRUM_POWER_UNITS_DBV = 3;
  SPECTRUM_POWER_UNITS_DBMV = 4;
  SPECTRUM_POWER_UNITS_DBUV = 5;
  SPECTRUM_POWER_UNITS_WATTS = 6;
  SPECTRUM_POWER_UNITS_VOLTS = 7;
  SPECTRUM_POWER_UNITS_VOLTS_SQUARED = 8;
}

enum SpectrumRbwAutoBandwidth {
  SPECTRUM_RBW_AUTO_BANDWIDTH_FALSE = 0;
  SPECTRUM_RBW_AUTO_BANDWIDTH_TRUE = 1;
}

enum SpectrumRbwFilterType {
  SPECTRUM_RBW_FILTER_TYPE_FFT_BASED = 0;
  SPECTRUM_RBW_FILTER_TYPE_GAUSSIAN = 1;
  SPECTRUM_RBW_FILTER_TYPE_FLAT = 2;
}

enum SpectrumSweepTimeAuto {
  SPECTRUM_SWEEP_TIME_AUTO_FALSE = 0;
  SPECTRUM_SWEEP_TIME_AUTO_TRUE = 1;
}

enum SpectrumVbwFilterAutoBandwidth {
  SPECTRUM_VBW_FILTER_AUTO_BANDWIDTH_FALSE = 0;
  SPECTRUM_VBW_FILTER_AUTO_BANDWIDTH_TRUE = 1;
}

enum SpurAbsoluteLimitMode {
  SPUR_ABSOLUTE_LIMIT_MODE_MANUAL = 0;
  SPUR_ABSOLUTE_LIMIT_MODE_COUPLE = 1;
}

enum SpurAveragingEnabled {
  SPUR_AVERAGING_ENABLED_FALSE = 0;
  SPUR_AVERAGING_ENABLED_TRUE = 1;
}

enum SpurAveragingType {
  SPUR_AVERAGING_TYPE_RMS = 0;
  SPUR_AVERAGING_TYPE_LOG = 1;
  SPUR_AVERAGING_TYPE_SCALAR = 2;
  SPUR_AVERAGING_TYPE_MAXIMUM = 3;
  SPUR_AVERAGING_TYPE_MINIMUM = 4;
}

enum SpurFftWindow {
  SPUR_FFT_WINDOW_NONE = 0;
  SPUR_FFT_WINDOW_FLAT_TOP = 1;
  SPUR_FFT_WINDOW_HANNING = 2;
  SPUR_FFT_WINDOW_HAMMING = 3;
  SPUR_FFT_WINDOW_GAUSSIAN = 4;
  SPUR_FFT_WINDOW_BLACKMAN = 5;
  SPUR_FFT_WINDOW_BLACKMAN_HARRIS = 6;
  SPUR_FFT_WINDOW_KAISER_BESSEL = 7;
}

enum SpurMeasurementStatus {
  SPUR_MEASUREMENT_STATUS_FAIL = 0;
  SPUR_MEASUREMENT_STATUS_PASS = 1;
}

enum SpurRangeDetectorType {
  SPUR_RANGE_DETECTOR_TYPE_NONE = 0;
  SPUR_RANGE_DETECTOR_TYPE_SAMPLE = 1;
  SPUR_RANGE_DETECTOR_TYPE_NORMAL = 2;
  SPUR_RANGE_DETECTOR_TYPE_PEAK = 3;
  SPUR_RANGE_DETECTOR_TYPE_NEGATIVE_PEAK = 4;
  SPUR_RANGE_DETECTOR_TYPE_AVERAGE_RMS = 5;
  SPUR_RANGE_DETECTOR_TYPE_AVERAGE_VOLTAGE = 6;
  SPUR_RANGE_DETECTOR_TYPE_AVERAGE_LOG = 7;
}

enum SpurRangeEnabled {
  SPUR_RANGE_ENABLED_FALSE = 0;
  SPUR_RANGE_ENABLED_TRUE = 1;
}

enum SpurRangeStatus {
  SPUR_RANGE_STATUS_FAIL = 0;
  SPUR_RANGE_STATUS_PASS = 1;
}

enum SpurRangeVbwFilterAutoBandwidth {
  SPUR_RANGE_VBW_FILTER_AUTO_BANDWIDTH_FALSE = 0;
  SPUR_RANGE_VBW_FILTER_AUTO_BANDWIDTH_TRUE = 1;
}

enum SpurRbwAutoBandwidth {
  SPUR_RBW_AUTO_BANDWIDTH_FALSE = 0;
  SPUR_RBW_AUTO_BANDWIDTH_TRUE = 1;
}

enum SpurRbwFilterType {
  SPUR_RBW_FILTER_TYPE_FFT_BASED = 0;
  SPUR_RBW_FILTER_TYPE_GAUSSIAN = 1;
  SPUR_RBW_FILTER_TYPE_FLAT = 2;
}

enum SpurSweepTimeAuto {
  SPUR_SWEEP_TIME_AUTO_FALSE = 0;
  SPUR_SWEEP_TIME_AUTO_TRUE = 1;
}

enum TriggerMinimumQuietTimeMode {
  TRIGGER_MINIMUM_QUIET_TIME_MODE_MANUAL = 0;
  TRIGGER_MINIMUM_QUIET_TIME_MODE_AUTO = 1;
}

enum TxpAveragingEnabled {
  TXP_AVERAGING_ENABLED_FALSE = 0;
  TXP_AVERAGING_ENABLED_TRUE = 1;
}

enum TxpAveragingType {
  TXP_AVERAGING_TYPE_RMS = 0;
  TXP_AVERAGING_TYPE_LOG = 1;
  TXP_AVERAGING_TYPE_SCALAR = 2;
  TXP_AVERAGING_TYPE_MAXIMUM = 3;
  TXP_AVERAGING_TYPE_MINIMUM = 4;
}

enum TxpRbwFilterType {
  TXP_RBW_FILTER_TYPE_UNSPECIFIED = 0;
  TXP_RBW_FILTER_TYPE_GAUSSIAN = 1;
  TXP_RBW_FILTER_TYPE_FLAT = 2;
  TXP_RBW_FILTER_TYPE_NONE = 5;
  TXP_RBW_FILTER_TYPE_RRC = 6;
}

enum TxpThresholdEnabled {
  TXP_THRESHOLD_ENABLED_FALSE = 0;
  TXP_THRESHOLD_ENABLED_TRUE = 1;
}

enum TxpThresholdType {
  TXP_THRESHOLD_TYPE_RELATIVE = 0;
  TXP_THRESHOLD_TYPE_ABSOLUTE = 1;
}

enum TxpVbwFilterAutoBandwidth {
  TXP_VBW_FILTER_AUTO_BANDWIDTH_FALSE = 0;
  TXP_VBW_FILTER_AUTO_BANDWIDTH_TRUE = 1;
}

enum NiRFmxSpecAnInt32AttributeValues {
  option allow_alias = true;
  NIRFMXSPECAN_INT32_UNSPECIFIED = 0;
  NIRFMXSPECAN_INT32_ACP_AMPLITUDE_CORRECTION_TYPE_RF_CENTER_FREQUENCY = 0;
  NIRFMXSPECAN_INT32_ACP_AMPLITUDE_CORRECTION_TYPE_SPECTRUM_FREQUENCY_BIN = 1;
  NIRFMXSPECAN_INT32_ACP_AVERAGING_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_ACP_AVERAGING_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_ACP_AVERAGING_TYPE_RMS = 0;
  NIRFMXSPECAN_INT32_ACP_AVERAGING_TYPE_LOG = 1;
  NIRFMXSPECAN_INT32_ACP_AVERAGING_TYPE_SCALAR = 2;
  NIRFMXSPECAN_INT32_ACP_AVERAGING_TYPE_MAXIMUM = 3;
  NIRFMXSPECAN_INT32_ACP_AVERAGING_TYPE_MINIMUM = 4;
  NIRFMXSPECAN_INT32_ACP_CARRIER_MODE_PASSIVE = 0;
  NIRFMXSPECAN_INT32_ACP_CARRIER_MODE_ACTIVE = 1;
  NIRFMXSPECAN_INT32_ACP_CARRIER_RRC_FILTER_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_ACP_CARRIER_RRC_FILTER_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_ACP_FFT_OVERLAP_MODE_DISABLED = 0;
  NIRFMXSPECAN_INT32_ACP_FFT_OVERLAP_MODE_AUTOMATIC = 1;
  NIRFMXSPECAN_INT32_ACP_FFT_OVERLAP_MODE_USER_DEFINED = 2;
  NIRFMXSPECAN_INT32_ACP_FFT_WINDOW_NONE = 0;
  NIRFMXSPECAN_INT32_ACP_FFT_WINDOW_FLAT_TOP = 1;
  NIRFMXSPECAN_INT32_ACP_FFT_WINDOW_HANNING = 2;
  NIRFMXSPECAN_INT32_ACP_FFT_WINDOW_HAMMING = 3;
  NIRFMXSPECAN_INT32_ACP_FFT_WINDOW_GAUSSIAN = 4;
  NIRFMXSPECAN_INT32_ACP_FFT_WINDOW_BLACKMAN = 5;
  NIRFMXSPECAN_INT32_ACP_FFT_WINDOW_BLACKMAN_HARRIS = 6;
  NIRFMXSPECAN_INT32_ACP_FFT_WINDOW_KAISER_BESSEL = 7;
  NIRFMXSPECAN_INT32_ACP_IF_OUTPUT_POWER_OFFSET_AUTO_FALSE = 0;
  NIRFMXSPECAN_INT32_ACP_IF_OUTPUT_POWER_OFFSET_AUTO_TRUE = 1;
  NIRFMXSPECAN_INT32_ACP_MEASUREMENT_METHOD_NORMAL = 0;
  NIRFMXSPECAN_INT32_ACP_MEASUREMENT_METHOD_DYNAMIC_RANGE = 1;
  NIRFMXSPECAN_INT32_ACP_MEASUREMENT_METHOD_SEQUENTIAL_FFT = 2;
  NIRFMXSPECAN_INT32_ACP_MEASUREMENT_MODE_MEASURE = 0;
  NIRFMXSPECAN_INT32_ACP_MEASUREMENT_MODE_CALIBRATE_NOISE_FLOOR = 1;
  NIRFMXSPECAN_INT32_ACP_NOISE_CALIBRATION_AVERAGING_AUTO_FALSE = 0;
  NIRFMXSPECAN_INT32_ACP_NOISE_CALIBRATION_AVERAGING_AUTO_TRUE = 1;
  NIRFMXSPECAN_INT32_ACP_NOISE_CALIBRATION_MODE_MANUAL = 0;
  NIRFMXSPECAN_INT32_ACP_NOISE_CALIBRATION_MODE_AUTO = 1;
  NIRFMXSPECAN_INT32_ACP_NOISE_COMPENSATION_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_ACP_NOISE_COMPENSATION_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_ACP_NOISE_COMPENSATION_TYPE_ANALYZER_AND_TERMINATION = 0;
  NIRFMXSPECAN_INT32_ACP_NOISE_COMPENSATION_TYPE_ANALYZER_ONLY = 1;
  NIRFMXSPECAN_INT32_ACP_OFFSET_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_ACP_OFFSET_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_ACP_OFFSET_FREQUENCY_DEFINITION_CARRIER_CENTER_TO_OFFSET_CENTER = 0;
  NIRFMXSPECAN_INT32_ACP_OFFSET_FREQUENCY_DEFINITION_CARRIER_CENTER_TO_OFFSET_EDGE = 1;
  NIRFMXSPECAN_INT32_ACP_OFFSET_POWER_REFERENCE_CARRIER_CLOSEST = 0;
  NIRFMXSPECAN_INT32_ACP_OFFSET_POWER_REFERENCE_CARRIER_HIGHEST = 1;
  NIRFMXSPECAN_INT32_ACP_OFFSET_POWER_REFERENCE_CARRIER_COMPOSITE = 2;
  NIRFMXSPECAN_INT32_ACP_OFFSET_POWER_REFERENCE_CARRIER_SPECIFIC = 3;
  NIRFMXSPECAN_INT32_ACP_OFFSET_RRC_FILTER_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_ACP_OFFSET_RRC_FILTER_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_ACP_OFFSET_SIDEBAND_NEGATIVE = 0;
  NIRFMXSPECAN_INT32_ACP_OFFSET_SIDEBAND_POSITIVE = 1;
  NIRFMXSPECAN_INT32_ACP_OFFSET_SIDEBAND_BOTH = 2;
  NIRFMXSPECAN_INT32_ACP_POWER_UNITS_DBM = 0;
  NIRFMXSPECAN_INT32_ACP_POWER_UNITS_DBM_PER_HZ = 1;
  NIRFMXSPECAN_INT32_ACP_RBW_AUTO_BANDWIDTH_FALSE = 0;
  NIRFMXSPECAN_INT32_ACP_RBW_AUTO_BANDWIDTH_TRUE = 1;
  NIRFMXSPECAN_INT32_ACP_RBW_FILTER_BANDWIDTH_DEFINITION_3DB = 0;
  NIRFMXSPECAN_INT32_ACP_RBW_FILTER_BANDWIDTH_DEFINITION_BIN_WIDTH = 2;
  NIRFMXSPECAN_INT32_ACP_RBW_FILTER_TYPE_FFT_BASED = 0;
  NIRFMXSPECAN_INT32_ACP_RBW_FILTER_TYPE_GAUSSIAN = 1;
  NIRFMXSPECAN_INT32_ACP_RBW_FILTER_TYPE_FLAT = 2;
  NIRFMXSPECAN_INT32_ACP_SWEEP_TIME_AUTO_FALSE = 0;
  NIRFMXSPECAN_INT32_ACP_SWEEP_TIME_AUTO_TRUE = 1;
  NIRFMXSPECAN_INT32_AMPM_AM_TO_AM_CURVE_FIT_TYPE_LEAST_SQUARE = 0;
  NIRFMXSPECAN_INT32_AMPM_AM_TO_AM_CURVE_FIT_TYPE_LEAST_ABSOLUTE_RESIDUAL = 1;
  NIRFMXSPECAN_INT32_AMPM_AM_TO_AM_CURVE_FIT_TYPE_BISQUARE = 2;
  NIRFMXSPECAN_INT32_AMPM_AM_TO_AM_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_AMPM_AM_TO_AM_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_AMPM_AM_TO_PM_CURVE_FIT_TYPE_LEAST_SQUARE = 0;
  NIRFMXSPECAN_INT32_AMPM_AM_TO_PM_CURVE_FIT_TYPE_LEAST_ABSOLUTE_RESIDUAL = 1;
  NIRFMXSPECAN_INT32_AMPM_AM_TO_PM_CURVE_FIT_TYPE_BISQUARE = 2;
  NIRFMXSPECAN_INT32_AMPM_AM_TO_PM_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_AMPM_AM_TO_PM_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_AMPM_AUTO_CARRIER_DETECTION_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_AMPM_AUTO_CARRIER_DETECTION_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_AMPM_AVERAGING_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_AMPM_AVERAGING_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_AMPM_COMPRESSION_POINT_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_AMPM_COMPRESSION_POINT_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_AMPM_COMPRESSION_POINT_GAIN_REFERENCE_AUTO = 0;
  NIRFMXSPECAN_INT32_AMPM_COMPRESSION_POINT_GAIN_REFERENCE_REFERENCE_POWER = 1;
  NIRFMXSPECAN_INT32_AMPM_EQUALIZER_MODE_OFF = 0;
  NIRFMXSPECAN_INT32_AMPM_EQUALIZER_MODE_TRAIN = 1;
  NIRFMXSPECAN_INT32_AMPM_EVM_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_AMPM_EVM_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_AMPM_FREQUENCY_OFFSET_CORRECTION_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_AMPM_FREQUENCY_OFFSET_CORRECTION_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_AMPM_IQ_ORIGIN_OFFSET_CORRECTION_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_AMPM_IQ_ORIGIN_OFFSET_CORRECTION_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_AMPM_MEASUREMENT_SAMPLE_RATE_MODE_USER = 0;
  NIRFMXSPECAN_INT32_AMPM_MEASUREMENT_SAMPLE_RATE_MODE_REFERENCE_WAVEFORM = 1;
  NIRFMXSPECAN_INT32_AMPM_REFERENCE_POWER_TYPE_INPUT = 0;
  NIRFMXSPECAN_INT32_AMPM_REFERENCE_POWER_TYPE_OUTPUT = 1;
  NIRFMXSPECAN_INT32_AMPM_SIGNAL_TYPE_MODULATED = 0;
  NIRFMXSPECAN_INT32_AMPM_SIGNAL_TYPE_TONES = 1;
  NIRFMXSPECAN_INT32_AMPM_SYNCHRONIZATION_METHOD_DIRECT = 1;
  NIRFMXSPECAN_INT32_AMPM_SYNCHRONIZATION_METHOD_ALIAS_PROTECTED = 2;
  NIRFMXSPECAN_INT32_AMPM_THRESHOLD_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_AMPM_THRESHOLD_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_AMPM_THRESHOLD_TYPE_RELATIVE = 0;
  NIRFMXSPECAN_INT32_AMPM_THRESHOLD_TYPE_ABSOLUTE = 1;
  NIRFMXSPECAN_INT32_CCDF_RBW_FILTER_TYPE_GAUSSIAN = 1;
  NIRFMXSPECAN_INT32_CCDF_RBW_FILTER_TYPE_FLAT = 2;
  NIRFMXSPECAN_INT32_CCDF_RBW_FILTER_TYPE_NONE = 5;
  NIRFMXSPECAN_INT32_CCDF_RBW_FILTER_TYPE_RRC = 6;
  NIRFMXSPECAN_INT32_CCDF_THRESHOLD_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_CCDF_THRESHOLD_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_CCDF_THRESHOLD_TYPE_RELATIVE = 0;
  NIRFMXSPECAN_INT32_CCDF_THRESHOLD_TYPE_ABSOLUTE = 1;
  NIRFMXSPECAN_INT32_CHP_AMPLITUDE_CORRECTION_TYPE_RF_CENTER_FREQUENCY = 0;
  NIRFMXSPECAN_INT32_CHP_AMPLITUDE_CORRECTION_TYPE_SPECTRUM_FREQUENCY_BIN = 1;
  NIRFMXSPECAN_INT32_CHP_AVERAGING_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_CHP_AVERAGING_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_CHP_AVERAGING_TYPE_RMS = 0;
  NIRFMXSPECAN_INT32_CHP_AVERAGING_TYPE_LOG = 1;
  NIRFMXSPECAN_INT32_CHP_AVERAGING_TYPE_SCALAR = 2;
  NIRFMXSPECAN_INT32_CHP_AVERAGING_TYPE_MAXIMUM = 3;
  NIRFMXSPECAN_INT32_CHP_AVERAGING_TYPE_MINIMUM = 4;
  NIRFMXSPECAN_INT32_CHP_CARRIER_RRC_FILTER_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_CHP_CARRIER_RRC_FILTER_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_CHP_FFT_WINDOW_NONE = 0;
  NIRFMXSPECAN_INT32_CHP_FFT_WINDOW_FLAT_TOP = 1;
  NIRFMXSPECAN_INT32_CHP_FFT_WINDOW_HANNING = 2;
  NIRFMXSPECAN_INT32_CHP_FFT_WINDOW_HAMMING = 3;
  NIRFMXSPECAN_INT32_CHP_FFT_WINDOW_GAUSSIAN = 4;
  NIRFMXSPECAN_INT32_CHP_FFT_WINDOW_BLACKMAN = 5;
  NIRFMXSPECAN_INT32_CHP_FFT_WINDOW_BLACKMAN_HARRIS = 6;
  NIRFMXSPECAN_INT32_CHP_FFT_WINDOW_KAISER_BESSEL = 7;
  NIRFMXSPECAN_INT32_CHP_MEASUREMENT_MODE_MEASURE = 0;
  NIRFMXSPECAN_INT32_CHP_MEASUREMENT_MODE_CALIBRATE_NOISE_FLOOR = 1;
  NIRFMXSPECAN_INT32_CHP_NOISE_CALIBRATION_AVERAGING_AUTO_FALSE = 0;
  NIRFMXSPECAN_INT32_CHP_NOISE_CALIBRATION_AVERAGING_AUTO_TRUE = 1;
  NIRFMXSPECAN_INT32_CHP_NOISE_CALIBRATION_MODE_MANUAL = 0;
  NIRFMXSPECAN_INT32_CHP_NOISE_CALIBRATION_MODE_AUTO = 1;
  NIRFMXSPECAN_INT32_CHP_NOISE_COMPENSATION_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_CHP_NOISE_COMPENSATION_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_CHP_NOISE_COMPENSATION_TYPE_ANALYZER_AND_TERMINATION = 0;
  NIRFMXSPECAN_INT32_CHP_NOISE_COMPENSATION_TYPE_ANALYZER_ONLY = 1;
  NIRFMXSPECAN_INT32_CHP_RBW_AUTO_BANDWIDTH_FALSE = 0;
  NIRFMXSPECAN_INT32_CHP_RBW_AUTO_BANDWIDTH_TRUE = 1;
  NIRFMXSPECAN_INT32_CHP_RBW_FILTER_BANDWIDTH_DEFINITION_3DB = 0;
  NIRFMXSPECAN_INT32_CHP_RBW_FILTER_BANDWIDTH_DEFINITION_BIN_WIDTH = 2;
  NIRFMXSPECAN_INT32_CHP_RBW_FILTER_TYPE_FFT_BASED = 0;
  NIRFMXSPECAN_INT32_CHP_RBW_FILTER_TYPE_GAUSSIAN = 1;
  NIRFMXSPECAN_INT32_CHP_RBW_FILTER_TYPE_FLAT = 2;
  NIRFMXSPECAN_INT32_CHP_SWEEP_TIME_AUTO_FALSE = 0;
  NIRFMXSPECAN_INT32_CHP_SWEEP_TIME_AUTO_TRUE = 1;
  NIRFMXSPECAN_INT32_DIGITAL_EDGE_TRIGGER_EDGE_RISING = 0;
  NIRFMXSPECAN_INT32_DIGITAL_EDGE_TRIGGER_EDGE_FALLING = 1;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_CFR_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_CFR_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_CFR_METHOD_CLIPPING = 0;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_CFR_METHOD_PEAK_WINDOWING = 1;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_CFR_METHOD_SIGMOID = 2;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_CFR_TARGET_PAPR_TYPE_INPUT_PAPR = 0;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_CFR_TARGET_PAPR_TYPE_CUSTOM = 1;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_CFR_WINDOW_TYPE_FLAT_TOP = 1;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_CFR_WINDOW_TYPE_HANNING = 2;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_CFR_WINDOW_TYPE_HAMMING = 3;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_CFR_WINDOW_TYPE_GAUSSIAN = 4;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_CFR_WINDOW_TYPE_BLACKMAN = 5;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_CFR_WINDOW_TYPE_BLACKMAN_HARRIS = 6;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_CFR_WINDOW_TYPE_KAISER_BESSEL = 7;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_CONFIGURATION_INPUT_MEASUREMENT = 0;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_CONFIGURATION_INPUT_USER = 1;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_LOOKUP_TABLE_CORRECTION_TYPE_MAGNITUDE_AND_PHASE = 0;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_LOOKUP_TABLE_CORRECTION_TYPE_MAGNITUDE_ONLY = 1;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_LOOKUP_TABLE_CORRECTION_TYPE_PHASE_ONLY = 2;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_MEMORY_MODEL_CORRECTION_TYPE_MAGNITUDE_AND_PHASE = 0;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_MEMORY_MODEL_CORRECTION_TYPE_MAGNITUDE_ONLY = 1;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_MEMORY_MODEL_CORRECTION_TYPE_PHASE_ONLY = 2;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_USER_DPD_MODEL_LOOKUP_TABLE = 0;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_USER_DPD_MODEL_MEMORY_POLYNOMIAL = 1;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_USER_DPD_MODEL_GENERALIZED_MEMORY_POLYNOMIAL = 2;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_USER_LOOKUP_TABLE_TYPE_LOG = 0;
  NIRFMXSPECAN_INT32_DPD_APPLY_DPD_USER_LOOKUP_TABLE_TYPE_LINEAR = 1;
  NIRFMXSPECAN_INT32_DPD_AUTO_CARRIER_DETECTION_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_DPD_AUTO_CARRIER_DETECTION_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_DPD_AVERAGING_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_DPD_AVERAGING_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_DPD_FREQUENCY_OFFSET_CORRECTION_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_DPD_FREQUENCY_OFFSET_CORRECTION_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_DPD_IQ_ORIGIN_OFFSET_CORRECTION_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_DPD_IQ_ORIGIN_OFFSET_CORRECTION_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_DPD_ITERATIVE_DPD_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_DPD_ITERATIVE_DPD_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_DPD_LOOKUP_TABLE_AM_TO_AM_CURVE_FIT_TYPE_LEAST_SQUARE = 0;
  NIRFMXSPECAN_INT32_DPD_LOOKUP_TABLE_AM_TO_AM_CURVE_FIT_TYPE_LEAST_ABSOLUTE_RESIDUAL = 1;
  NIRFMXSPECAN_INT32_DPD_LOOKUP_TABLE_AM_TO_AM_CURVE_FIT_TYPE_BISQUARE = 2;
  NIRFMXSPECAN_INT32_DPD_LOOKUP_TABLE_AM_TO_PM_CURVE_FIT_TYPE_LEAST_SQUARE = 0;
  NIRFMXSPECAN_INT32_DPD_LOOKUP_TABLE_AM_TO_PM_CURVE_FIT_TYPE_LEAST_ABSOLUTE_RESIDUAL = 1;
  NIRFMXSPECAN_INT32_DPD_LOOKUP_TABLE_AM_TO_PM_CURVE_FIT_TYPE_BISQUARE = 2;
  NIRFMXSPECAN_INT32_DPD_LOOKUP_TABLE_THRESHOLD_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_DPD_LOOKUP_TABLE_THRESHOLD_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_DPD_LOOKUP_TABLE_THRESHOLD_TYPE_RELATIVE = 0;
  NIRFMXSPECAN_INT32_DPD_LOOKUP_TABLE_THRESHOLD_TYPE_ABSOLUTE = 1;
  NIRFMXSPECAN_INT32_DPD_LOOKUP_TABLE_TYPE_LOG = 0;
  NIRFMXSPECAN_INT32_DPD_LOOKUP_TABLE_TYPE_LINEAR = 1;
  NIRFMXSPECAN_INT32_DPD_MEASUREMENT_SAMPLE_RATE_MODE_USER = 0;
  NIRFMXSPECAN_INT32_DPD_MEASUREMENT_SAMPLE_RATE_MODE_REFERENCE_WAVEFORM = 1;
  NIRFMXSPECAN_INT32_DPD_MODEL_LOOKUP_TABLE = 0;
  NIRFMXSPECAN_INT32_DPD_MODEL_MEMORY_POLYNOMIAL = 1;
  NIRFMXSPECAN_INT32_DPD_MODEL_GENERALIZED_MEMORY_POLYNOMIAL = 2;
  NIRFMXSPECAN_INT32_DPD_NMSE_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_DPD_NMSE_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_DPD_PRE_DPD_CFR_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_DPD_PRE_DPD_CFR_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_DPD_PRE_DPD_CFR_FILTER_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_DPD_PRE_DPD_CFR_FILTER_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_DPD_PRE_DPD_CFR_METHOD_CLIPPING = 0;
  NIRFMXSPECAN_INT32_DPD_PRE_DPD_CFR_METHOD_PEAK_WINDOWING = 1;
  NIRFMXSPECAN_INT32_DPD_PRE_DPD_CFR_METHOD_SIGMOID = 2;
  NIRFMXSPECAN_INT32_DPD_PRE_DPD_CFR_WINDOW_TYPE_FLAT_TOP = 1;
  NIRFMXSPECAN_INT32_DPD_PRE_DPD_CFR_WINDOW_TYPE_HANNING = 2;
  NIRFMXSPECAN_INT32_DPD_PRE_DPD_CFR_WINDOW_TYPE_HAMMING = 3;
  NIRFMXSPECAN_INT32_DPD_PRE_DPD_CFR_WINDOW_TYPE_GAUSSIAN = 4;
  NIRFMXSPECAN_INT32_DPD_PRE_DPD_CFR_WINDOW_TYPE_BLACKMAN = 5;
  NIRFMXSPECAN_INT32_DPD_PRE_DPD_CFR_WINDOW_TYPE_BLACKMAN_HARRIS = 6;
  NIRFMXSPECAN_INT32_DPD_PRE_DPD_CFR_WINDOW_TYPE_KAISER_BESSEL = 7;
  NIRFMXSPECAN_INT32_DPD_SIGNAL_TYPE_MODULATED = 0;
  NIRFMXSPECAN_INT32_DPD_SIGNAL_TYPE_TONES = 1;
  NIRFMXSPECAN_INT32_DPD_SYNCHRONIZATION_METHOD_DIRECT = 1;
  NIRFMXSPECAN_INT32_DPD_SYNCHRONIZATION_METHOD_ALIAS_PROTECTED = 2;
  NIRFMXSPECAN_INT32_DPD_TARGET_GAIN_TYPE_AVERAGE_GAIN = 0;
  NIRFMXSPECAN_INT32_DPD_TARGET_GAIN_TYPE_LINEAR_REGION_GAIN = 1;
  NIRFMXSPECAN_INT32_DPD_TARGET_GAIN_TYPE_PEAK_INPUT_POWER_GAIN = 2;
  NIRFMXSPECAN_INT32_FCNT_AVERAGING_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_FCNT_AVERAGING_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_FCNT_AVERAGING_TYPE_MAXIMUM = 3;
  NIRFMXSPECAN_INT32_FCNT_AVERAGING_TYPE_MINIMUM = 4;
  NIRFMXSPECAN_INT32_FCNT_AVERAGING_TYPE_MEAN = 6;
  NIRFMXSPECAN_INT32_FCNT_AVERAGING_TYPE_MINMAX = 7;
  NIRFMXSPECAN_INT32_FCNT_RBW_FILTER_TYPE_GAUSSIAN = 1;
  NIRFMXSPECAN_INT32_FCNT_RBW_FILTER_TYPE_FLAT = 2;
  NIRFMXSPECAN_INT32_FCNT_RBW_FILTER_TYPE_NONE = 5;
  NIRFMXSPECAN_INT32_FCNT_RBW_FILTER_TYPE_RRC = 6;
  NIRFMXSPECAN_INT32_FCNT_THRESHOLD_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_FCNT_THRESHOLD_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_FCNT_THRESHOLD_TYPE_RELATIVE = 0;
  NIRFMXSPECAN_INT32_FCNT_THRESHOLD_TYPE_ABSOLUTE = 1;
  NIRFMXSPECAN_INT32_HARM_AUTO_HARMONICS_SETUP_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_HARM_AUTO_HARMONICS_SETUP_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_HARM_AVERAGING_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_HARM_AVERAGING_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_HARM_AVERAGING_TYPE_RMS = 0;
  NIRFMXSPECAN_INT32_HARM_AVERAGING_TYPE_LOG = 1;
  NIRFMXSPECAN_INT32_HARM_AVERAGING_TYPE_SCALAR = 2;
  NIRFMXSPECAN_INT32_HARM_AVERAGING_TYPE_MAXIMUM = 3;
  NIRFMXSPECAN_INT32_HARM_AVERAGING_TYPE_MINIMUM = 4;
  NIRFMXSPECAN_INT32_HARM_HARMONIC_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_HARM_HARMONIC_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_HARM_MEASUREMENT_METHOD_TIME_DOMAIN = 0;
  NIRFMXSPECAN_INT32_HARM_MEASUREMENT_METHOD_DYNAMIC_RANGE = 2;
  NIRFMXSPECAN_INT32_HARM_NOISE_COMPENSATION_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_HARM_NOISE_COMPENSATION_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_HARM_RBW_FILTER_TYPE_GAUSSIAN = 1;
  NIRFMXSPECAN_INT32_HARM_RBW_FILTER_TYPE_FLAT = 2;
  NIRFMXSPECAN_INT32_HARM_RBW_FILTER_TYPE_NONE = 5;
  NIRFMXSPECAN_INT32_HARM_RBW_FILTER_TYPE_RRC = 6;
  NIRFMXSPECAN_INT32_IM_AMPLITUDE_CORRECTION_TYPE_RF_CENTER_FREQUENCY = 0;
  NIRFMXSPECAN_INT32_IM_AMPLITUDE_CORRECTION_TYPE_SPECTRUM_FREQUENCY_BIN = 1;
  NIRFMXSPECAN_INT32_IM_AUTO_INTERMODS_SETUP_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_IM_AUTO_INTERMODS_SETUP_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_IM_AVERAGING_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_IM_AVERAGING_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_IM_AVERAGING_TYPE_RMS = 0;
  NIRFMXSPECAN_INT32_IM_AVERAGING_TYPE_LOG = 1;
  NIRFMXSPECAN_INT32_IM_AVERAGING_TYPE_SCALAR = 2;
  NIRFMXSPECAN_INT32_IM_AVERAGING_TYPE_MAXIMUM = 3;
  NIRFMXSPECAN_INT32_IM_AVERAGING_TYPE_MINIMUM = 4;
  NIRFMXSPECAN_INT32_IM_FFT_WINDOW_NONE = 0;
  NIRFMXSPECAN_INT32_IM_FFT_WINDOW_FLAT_TOP = 1;
  NIRFMXSPECAN_INT32_IM_FFT_WINDOW_HANNING = 2;
  NIRFMXSPECAN_INT32_IM_FFT_WINDOW_HAMMING = 3;
  NIRFMXSPECAN_INT32_IM_FFT_WINDOW_GAUSSIAN = 4;
  NIRFMXSPECAN_INT32_IM_FFT_WINDOW_BLACKMAN = 5;
  NIRFMXSPECAN_INT32_IM_FFT_WINDOW_BLACKMAN_HARRIS = 6;
  NIRFMXSPECAN_INT32_IM_FFT_WINDOW_KAISER_BESSEL = 7;
  NIRFMXSPECAN_INT32_IM_FREQUENCY_DEFINITION_RELATIVE = 0;
  NIRFMXSPECAN_INT32_IM_FREQUENCY_DEFINITION_ABSOLUTE = 1;
  NIRFMXSPECAN_INT32_IM_IF_OUTPUT_POWER_OFFSET_AUTO_FALSE = 0;
  NIRFMXSPECAN_INT32_IM_IF_OUTPUT_POWER_OFFSET_AUTO_TRUE = 1;
  NIRFMXSPECAN_INT32_IM_INTERMOD_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_IM_INTERMOD_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_IM_INTERMOD_SIDE_LOWER = 0;
  NIRFMXSPECAN_INT32_IM_INTERMOD_SIDE_UPPER = 1;
  NIRFMXSPECAN_INT32_IM_INTERMOD_SIDE_BOTH = 2;
  NIRFMXSPECAN_INT32_IM_LOCAL_PEAK_SEARCH_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_IM_LOCAL_PEAK_SEARCH_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_IM_MEASUREMENT_METHOD_NORMAL = 0;
  NIRFMXSPECAN_INT32_IM_MEASUREMENT_METHOD_DYNAMIC_RANGE = 1;
  NIRFMXSPECAN_INT32_IM_MEASUREMENT_METHOD_SEGMENTED = 2;
  NIRFMXSPECAN_INT32_IM_RBW_FILTER_AUTO_BANDWIDTH_FALSE = 0;
  NIRFMXSPECAN_INT32_IM_RBW_FILTER_AUTO_BANDWIDTH_TRUE = 1;
  NIRFMXSPECAN_INT32_IM_RBW_FILTER_TYPE_FFT_BASED = 0;
  NIRFMXSPECAN_INT32_IM_RBW_FILTER_TYPE_GAUSSIAN = 1;
  NIRFMXSPECAN_INT32_IM_RBW_FILTER_TYPE_FLAT = 2;
  NIRFMXSPECAN_INT32_IM_SWEEP_TIME_AUTO_FALSE = 0;
  NIRFMXSPECAN_INT32_IM_SWEEP_TIME_AUTO_TRUE = 1;
  NIRFMXSPECAN_INT32_IQ_BANDWIDTH_AUTO_FALSE = 0;
  NIRFMXSPECAN_INT32_IQ_BANDWIDTH_AUTO_TRUE = 1;
  NIRFMXSPECAN_INT32_IQ_DELETE_RECORD_ON_FETCH_FALSE = 0;
  NIRFMXSPECAN_INT32_IQ_DELETE_RECORD_ON_FETCH_TRUE = 1;
  NIRFMXSPECAN_INT32_IQ_POWER_EDGE_TRIGGER_LEVEL_TYPE_RELATIVE = 0;
  NIRFMXSPECAN_INT32_IQ_POWER_EDGE_TRIGGER_LEVEL_TYPE_ABSOLUTE = 1;
  NIRFMXSPECAN_INT32_IQ_POWER_EDGE_TRIGGER_SLOPE_RISING = 0;
  NIRFMXSPECAN_INT32_IQ_POWER_EDGE_TRIGGER_SLOPE_FALLING = 1;
  NIRFMXSPECAN_INT32_LIMITED_CONFIGURATION_CHANGE_DISABLED = 0;
  NIRFMXSPECAN_INT32_LIMITED_CONFIGURATION_CHANGE_NO_CHANGE = 1;
  NIRFMXSPECAN_INT32_LIMITED_CONFIGURATION_CHANGE_FREQUENCY = 2;
  NIRFMXSPECAN_INT32_LIMITED_CONFIGURATION_CHANGE_REFERENCE_LEVEL = 3;
  NIRFMXSPECAN_INT32_LIMITED_CONFIGURATION_CHANGE_FREQUENCY_AND_REFERENCE_LEVEL = 4;
  NIRFMXSPECAN_INT32_LIMITED_CONFIGURATION_CHANGE_SELECTED_PORTS_FREQUENCY_AND_REFERENCE_LEVEL = 5;
  NIRFMXSPECAN_INT32_NF_AVERAGING_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_NF_AVERAGING_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_NF_CALIBRATION_LOSS_COMPENSATION_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_NF_CALIBRATION_LOSS_COMPENSATION_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_NF_COLD_SOURCE_MODE_MEASURE = 0;
  NIRFMXSPECAN_INT32_NF_COLD_SOURCE_MODE_CALIBRATE = 1;
  NIRFMXSPECAN_INT32_NF_DUT_INPUT_LOSS_COMPENSATION_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_NF_DUT_INPUT_LOSS_COMPENSATION_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_NF_DUT_OUTPUT_LOSS_COMPENSATION_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_NF_DUT_OUTPUT_LOSS_COMPENSATION_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_NF_DUT_TYPE_AMPLIFIER = 0;
  NIRFMXSPECAN_INT32_NF_DUT_TYPE_DOWNCONVERTER = 1;
  NIRFMXSPECAN_INT32_NF_DUT_TYPE_UPCONVERTER = 2;
  NIRFMXSPECAN_INT32_NF_EXTERNAL_PREAMP_PRESENT_FALSE = 0;
  NIRFMXSPECAN_INT32_NF_EXTERNAL_PREAMP_PRESENT_TRUE = 1;
  NIRFMXSPECAN_INT32_NF_FREQUENCY_CONVERTER_FREQUENCY_CONTEXT_RF = 0;
  NIRFMXSPECAN_INT32_NF_FREQUENCY_CONVERTER_FREQUENCY_CONTEXT_IF = 1;
  NIRFMXSPECAN_INT32_NF_FREQUENCY_CONVERTER_SIDEBAND_LSB = 0;
  NIRFMXSPECAN_INT32_NF_FREQUENCY_CONVERTER_SIDEBAND_USB = 1;
  NIRFMXSPECAN_INT32_NF_MEASUREMENT_METHOD_Y_FACTOR = 0;
  NIRFMXSPECAN_INT32_NF_MEASUREMENT_METHOD_COLD_SOURCE = 1;
  NIRFMXSPECAN_INT32_NF_Y_FACTOR_MODE_MEASURE = 0;
  NIRFMXSPECAN_INT32_NF_Y_FACTOR_MODE_CALIBRATE = 1;
  NIRFMXSPECAN_INT32_NF_Y_FACTOR_NOISE_SOURCE_LOSS_COMPENSATION_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_NF_Y_FACTOR_NOISE_SOURCE_LOSS_COMPENSATION_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_OBW_AMPLITUDE_CORRECTION_TYPE_RF_CENTER_FREQUENCY = 0;
  NIRFMXSPECAN_INT32_OBW_AMPLITUDE_CORRECTION_TYPE_SPECTRUM_FREQUENCY_BIN = 1;
  NIRFMXSPECAN_INT32_OBW_AVERAGING_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_OBW_AVERAGING_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_OBW_AVERAGING_TYPE_RMS = 0;
  NIRFMXSPECAN_INT32_OBW_AVERAGING_TYPE_LOG = 1;
  NIRFMXSPECAN_INT32_OBW_AVERAGING_TYPE_SCALAR = 2;
  NIRFMXSPECAN_INT32_OBW_AVERAGING_TYPE_MAXIMUM = 3;
  NIRFMXSPECAN_INT32_OBW_AVERAGING_TYPE_MINIMUM = 4;
  NIRFMXSPECAN_INT32_OBW_FFT_WINDOW_NONE = 0;
  NIRFMXSPECAN_INT32_OBW_FFT_WINDOW_FLAT_TOP = 1;
  NIRFMXSPECAN_INT32_OBW_FFT_WINDOW_HANNING = 2;
  NIRFMXSPECAN_INT32_OBW_FFT_WINDOW_HAMMING = 3;
  NIRFMXSPECAN_INT32_OBW_FFT_WINDOW_GAUSSIAN = 4;
  NIRFMXSPECAN_INT32_OBW_FFT_WINDOW_BLACKMAN = 5;
  NIRFMXSPECAN_INT32_OBW_FFT_WINDOW_BLACKMAN_HARRIS = 6;
  NIRFMXSPECAN_INT32_OBW_FFT_WINDOW_KAISER_BESSEL = 7;
  NIRFMXSPECAN_INT32_OBW_POWER_UNITS_DBM = 0;
  NIRFMXSPECAN_INT32_OBW_POWER_UNITS_DBM_PER_HZ = 1;
  NIRFMXSPECAN_INT32_OBW_RBW_AUTO_BANDWIDTH_FALSE = 0;
  NIRFMXSPECAN_INT32_OBW_RBW_AUTO_BANDWIDTH_TRUE = 1;
  NIRFMXSPECAN_INT32_OBW_RBW_FILTER_BANDWIDTH_DEFINITION_3DB = 0;
  NIRFMXSPECAN_INT32_OBW_RBW_FILTER_BANDWIDTH_DEFINITION_BIN_WIDTH = 2;
  NIRFMXSPECAN_INT32_OBW_RBW_FILTER_TYPE_FFT_BASED = 0;
  NIRFMXSPECAN_INT32_OBW_RBW_FILTER_TYPE_GAUSSIAN = 1;
  NIRFMXSPECAN_INT32_OBW_RBW_FILTER_TYPE_FLAT = 2;
  NIRFMXSPECAN_INT32_OBW_SWEEP_TIME_AUTO_FALSE = 0;
  NIRFMXSPECAN_INT32_OBW_SWEEP_TIME_AUTO_TRUE = 1;
  NIRFMXSPECAN_INT32_PAVT_FREQUENCY_OFFSET_CORRECTION_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_PAVT_FREQUENCY_OFFSET_CORRECTION_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_PAVT_FREQUENCY_TRACKING_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_PAVT_FREQUENCY_TRACKING_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_PAVT_MEASUREMENT_INTERVAL_MODE_UNIFORM = 0;
  NIRFMXSPECAN_INT32_PAVT_MEASUREMENT_INTERVAL_MODE_VARIABLE = 1;
  NIRFMXSPECAN_INT32_PAVT_MEASUREMENT_LOCATION_TYPE_TIME = 0;
  NIRFMXSPECAN_INT32_PAVT_MEASUREMENT_LOCATION_TYPE_TRIGGER = 1;
  NIRFMXSPECAN_INT32_PAVT_PHASE_UNWRAP_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_PAVT_PHASE_UNWRAP_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_PAVT_SEGMENT_TYPE_PHASE_AND_AMPLITUDE = 0;
  NIRFMXSPECAN_INT32_PAVT_SEGMENT_TYPE_AMPLITUDE = 1;
  NIRFMXSPECAN_INT32_PAVT_SEGMENT_TYPE_FREQUENCY_ERROR_MEASUREMENT = 2;
  NIRFMXSPECAN_INT32_PHASE_NOISE_CANCELLATION_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_PHASE_NOISE_CANCELLATION_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_PHASE_NOISE_FFT_WINDOW_NONE = 0;
  NIRFMXSPECAN_INT32_PHASE_NOISE_FFT_WINDOW_FLAT_TOP = 1;
  NIRFMXSPECAN_INT32_PHASE_NOISE_FFT_WINDOW_HANNING = 2;
  NIRFMXSPECAN_INT32_PHASE_NOISE_FFT_WINDOW_HAMMING = 3;
  NIRFMXSPECAN_INT32_PHASE_NOISE_FFT_WINDOW_GAUSSIAN = 4;
  NIRFMXSPECAN_INT32_PHASE_NOISE_FFT_WINDOW_BLACKMAN = 5;
  NIRFMXSPECAN_INT32_PHASE_NOISE_FFT_WINDOW_BLACKMAN_HARRIS = 6;
  NIRFMXSPECAN_INT32_PHASE_NOISE_FFT_WINDOW_KAISER_BESSEL = 7;
  NIRFMXSPECAN_INT32_PHASE_NOISE_INTEGRATED_NOISE_RANGE_DEFINITION_NONE = 0;
  NIRFMXSPECAN_INT32_PHASE_NOISE_INTEGRATED_NOISE_RANGE_DEFINITION_MEASUREMENT = 1;
  NIRFMXSPECAN_INT32_PHASE_NOISE_INTEGRATED_NOISE_RANGE_DEFINITION_CUSTOM = 2;
  NIRFMXSPECAN_INT32_PHASE_NOISE_RANGE_DEFINITION_MANUAL = 0;
  NIRFMXSPECAN_INT32_PHASE_NOISE_RANGE_DEFINITION_AUTO = 1;
  NIRFMXSPECAN_INT32_PHASE_NOISE_SMOOTHING_TYPE_NONE = 0;
  NIRFMXSPECAN_INT32_PHASE_NOISE_SMOOTHING_TYPE_LINEAR = 1;
  NIRFMXSPECAN_INT32_PHASE_NOISE_SMOOTHING_TYPE_LOGARITHMIC = 2;
  NIRFMXSPECAN_INT32_PHASE_NOISE_SMOOTHING_TYPE_MEDIAN = 3;
  NIRFMXSPECAN_INT32_PHASE_NOISE_SPUR_REMOVAL_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_PHASE_NOISE_SPUR_REMOVAL_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_SEM_AMPLITUDE_CORRECTION_TYPE_RF_CENTER_FREQUENCY = 0;
  NIRFMXSPECAN_INT32_SEM_AMPLITUDE_CORRECTION_TYPE_SPECTRUM_FREQUENCY_BIN = 1;
  NIRFMXSPECAN_INT32_SEM_AVERAGING_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_SEM_AVERAGING_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_SEM_AVERAGING_TYPE_RMS = 0;
  NIRFMXSPECAN_INT32_SEM_AVERAGING_TYPE_LOG = 1;
  NIRFMXSPECAN_INT32_SEM_AVERAGING_TYPE_SCALAR = 2;
  NIRFMXSPECAN_INT32_SEM_AVERAGING_TYPE_MAXIMUM = 3;
  NIRFMXSPECAN_INT32_SEM_AVERAGING_TYPE_MINIMUM = 4;
  NIRFMXSPECAN_INT32_SEM_CARRIER_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_SEM_CARRIER_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_SEM_CARRIER_RBW_AUTO_BANDWIDTH_FALSE = 0;
  NIRFMXSPECAN_INT32_SEM_CARRIER_RBW_AUTO_BANDWIDTH_TRUE = 1;
  NIRFMXSPECAN_INT32_SEM_CARRIER_RBW_FILTER_BANDWIDTH_DEFINITION_3DB = 0;
  NIRFMXSPECAN_INT32_SEM_CARRIER_RBW_FILTER_BANDWIDTH_DEFINITION_BIN_WIDTH = 2;
  NIRFMXSPECAN_INT32_SEM_CARRIER_RBW_FILTER_TYPE_FFT_BASED = 0;
  NIRFMXSPECAN_INT32_SEM_CARRIER_RBW_FILTER_TYPE_GAUSSIAN = 1;
  NIRFMXSPECAN_INT32_SEM_CARRIER_RBW_FILTER_TYPE_FLAT = 2;
  NIRFMXSPECAN_INT32_SEM_CARRIER_RRC_FILTER_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_SEM_CARRIER_RRC_FILTER_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_SEM_COMPOSITE_MEASUREMENT_STATUS_FAIL = 0;
  NIRFMXSPECAN_INT32_SEM_COMPOSITE_MEASUREMENT_STATUS_PASS = 1;
  NIRFMXSPECAN_INT32_SEM_FFT_WINDOW_NONE = 0;
  NIRFMXSPECAN_INT32_SEM_FFT_WINDOW_FLAT_TOP = 1;
  NIRFMXSPECAN_INT32_SEM_FFT_WINDOW_HANNING = 2;
  NIRFMXSPECAN_INT32_SEM_FFT_WINDOW_HAMMING = 3;
  NIRFMXSPECAN_INT32_SEM_FFT_WINDOW_GAUSSIAN = 4;
  NIRFMXSPECAN_INT32_SEM_FFT_WINDOW_BLACKMAN = 5;
  NIRFMXSPECAN_INT32_SEM_FFT_WINDOW_BLACKMAN_HARRIS = 6;
  NIRFMXSPECAN_INT32_SEM_FFT_WINDOW_KAISER_BESSEL = 7;
  NIRFMXSPECAN_INT32_SEM_LOWER_OFFSET_MEASUREMENT_STATUS_FAIL = 0;
  NIRFMXSPECAN_INT32_SEM_LOWER_OFFSET_MEASUREMENT_STATUS_PASS = 1;
  NIRFMXSPECAN_INT32_SEM_OFFSET_ABSOLUTE_LIMIT_MODE_MANUAL = 0;
  NIRFMXSPECAN_INT32_SEM_OFFSET_ABSOLUTE_LIMIT_MODE_COUPLE = 1;
  NIRFMXSPECAN_INT32_SEM_OFFSET_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_SEM_OFFSET_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_SEM_OFFSET_FREQUENCY_DEFINITION_CARRIER_CENTER_TO_MEASUREMENT_BANDWIDTH_CENTER = 0;
  NIRFMXSPECAN_INT32_SEM_OFFSET_FREQUENCY_DEFINITION_CARRIER_CENTER_TO_MEASUREMENT_BANDWIDTH_EDGE = 1;
  NIRFMXSPECAN_INT32_SEM_OFFSET_FREQUENCY_DEFINITION_CARRIER_EDGE_TO_MEASUREMENT_BANDWIDTH_CENTER = 2;
  NIRFMXSPECAN_INT32_SEM_OFFSET_FREQUENCY_DEFINITION_CARRIER_EDGE_TO_MEASUREMENT_BANDWIDTH_EDGE = 3;
  NIRFMXSPECAN_INT32_SEM_OFFSET_LIMIT_FAIL_MASK_ABSOLUTE_AND_RELATIVE = 0;
  NIRFMXSPECAN_INT32_SEM_OFFSET_LIMIT_FAIL_MASK_ABSOLUTE_OR_RELATIVE = 1;
  NIRFMXSPECAN_INT32_SEM_OFFSET_LIMIT_FAIL_MASK_ABSOLUTE = 2;
  NIRFMXSPECAN_INT32_SEM_OFFSET_LIMIT_FAIL_MASK_RELATIVE = 3;
  NIRFMXSPECAN_INT32_SEM_OFFSET_RBW_AUTO_BANDWIDTH_FALSE = 0;
  NIRFMXSPECAN_INT32_SEM_OFFSET_RBW_AUTO_BANDWIDTH_TRUE = 1;
  NIRFMXSPECAN_INT32_SEM_OFFSET_RBW_FILTER_BANDWIDTH_DEFINITION_3DB = 0;
  NIRFMXSPECAN_INT32_SEM_OFFSET_RBW_FILTER_BANDWIDTH_DEFINITION_BIN_WIDTH = 2;
  NIRFMXSPECAN_INT32_SEM_OFFSET_RBW_FILTER_TYPE_FFT_BASED = 0;
  NIRFMXSPECAN_INT32_SEM_OFFSET_RBW_FILTER_TYPE_GAUSSIAN = 1;
  NIRFMXSPECAN_INT32_SEM_OFFSET_RBW_FILTER_TYPE_FLAT = 2;
  NIRFMXSPECAN_INT32_SEM_OFFSET_RELATIVE_LIMIT_MODE_MANUAL = 0;
  NIRFMXSPECAN_INT32_SEM_OFFSET_RELATIVE_LIMIT_MODE_COUPLE = 1;
  NIRFMXSPECAN_INT32_SEM_OFFSET_SIDEBAND_NEGATIVE = 0;
  NIRFMXSPECAN_INT32_SEM_OFFSET_SIDEBAND_POSITIVE = 1;
  NIRFMXSPECAN_INT32_SEM_OFFSET_SIDEBAND_BOTH = 2;
  NIRFMXSPECAN_INT32_SEM_POWER_UNITS_DBM = 0;
  NIRFMXSPECAN_INT32_SEM_POWER_UNITS_DBM_PER_HZ = 1;
  NIRFMXSPECAN_INT32_SEM_REFERENCE_TYPE_INTEGRATION = 0;
  NIRFMXSPECAN_INT32_SEM_REFERENCE_TYPE_PEAK = 1;
  NIRFMXSPECAN_INT32_SEM_SWEEP_TIME_AUTO_FALSE = 0;
  NIRFMXSPECAN_INT32_SEM_SWEEP_TIME_AUTO_TRUE = 1;
  NIRFMXSPECAN_INT32_SEM_UPPER_OFFSET_MEASUREMENT_STATUS_FAIL = 0;
  NIRFMXSPECAN_INT32_SEM_UPPER_OFFSET_MEASUREMENT_STATUS_PASS = 1;
  NIRFMXSPECAN_INT32_SPECTRUM_AMPLITUDE_CORRECTION_TYPE_RF_CENTER_FREQUENCY = 0;
  NIRFMXSPECAN_INT32_SPECTRUM_AMPLITUDE_CORRECTION_TYPE_SPECTRUM_FREQUENCY_BIN = 1;
  NIRFMXSPECAN_INT32_SPECTRUM_ANALYSIS_INPUT_IQ = 0;
  NIRFMXSPECAN_INT32_SPECTRUM_ANALYSIS_INPUT_I_ONLY = 1;
  NIRFMXSPECAN_INT32_SPECTRUM_ANALYSIS_INPUT_Q_ONLY = 2;
  NIRFMXSPECAN_INT32_SPECTRUM_AVERAGING_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_SPECTRUM_AVERAGING_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_SPECTRUM_AVERAGING_TYPE_RMS = 0;
  NIRFMXSPECAN_INT32_SPECTRUM_AVERAGING_TYPE_LOG = 1;
  NIRFMXSPECAN_INT32_SPECTRUM_AVERAGING_TYPE_SCALAR = 2;
  NIRFMXSPECAN_INT32_SPECTRUM_AVERAGING_TYPE_MAXIMUM = 3;
  NIRFMXSPECAN_INT32_SPECTRUM_AVERAGING_TYPE_MINIMUM = 4;
  NIRFMXSPECAN_INT32_SPECTRUM_DETECTOR_TYPE_NONE = 0;
  NIRFMXSPECAN_INT32_SPECTRUM_DETECTOR_TYPE_SAMPLE = 1;
  NIRFMXSPECAN_INT32_SPECTRUM_DETECTOR_TYPE_NORMAL = 2;
  NIRFMXSPECAN_INT32_SPECTRUM_DETECTOR_TYPE_PEAK = 3;
  NIRFMXSPECAN_INT32_SPECTRUM_DETECTOR_TYPE_NEGATIVE_PEAK = 4;
  NIRFMXSPECAN_INT32_SPECTRUM_DETECTOR_TYPE_AVERAGE_RMS = 5;
  NIRFMXSPECAN_INT32_SPECTRUM_DETECTOR_TYPE_AVERAGE_VOLTAGE = 6;
  NIRFMXSPECAN_INT32_SPECTRUM_DETECTOR_TYPE_AVERAGE_LOG = 7;
  NIRFMXSPECAN_INT32_SPECTRUM_FFT_WINDOW_NONE = 0;
  NIRFMXSPECAN_INT32_SPECTRUM_FFT_WINDOW_FLAT_TOP = 1;
  NIRFMXSPECAN_INT32_SPECTRUM_FFT_WINDOW_HANNING = 2;
  NIRFMXSPECAN_INT32_SPECTRUM_FFT_WINDOW_HAMMING = 3;
  NIRFMXSPECAN_INT32_SPECTRUM_FFT_WINDOW_GAUSSIAN = 4;
  NIRFMXSPECAN_INT32_SPECTRUM_FFT_WINDOW_BLACKMAN = 5;
  NIRFMXSPECAN_INT32_SPECTRUM_FFT_WINDOW_BLACKMAN_HARRIS = 6;
  NIRFMXSPECAN_INT32_SPECTRUM_FFT_WINDOW_KAISER_BESSEL = 7;
  NIRFMXSPECAN_INT32_SPECTRUM_MEASUREMENT_MODE_MEASURE = 0;
  NIRFMXSPECAN_INT32_SPECTRUM_MEASUREMENT_MODE_CALIBRATE_NOISE_FLOOR = 1;
  NIRFMXSPECAN_INT32_SPECTRUM_NOISE_CALIBRATION_AVERAGING_AUTO_FALSE = 0;
  NIRFMXSPECAN_INT32_SPECTRUM_NOISE_CALIBRATION_AVERAGING_AUTO_TRUE = 1;
  NIRFMXSPECAN_INT32_SPECTRUM_NOISE_CALIBRATION_MODE_MANUAL = 0;
  NIRFMXSPECAN_INT32_SPECTRUM_NOISE_CALIBRATION_MODE_AUTO = 1;
  NIRFMXSPECAN_INT32_SPECTRUM_NOISE_COMPENSATION_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_SPECTRUM_NOISE_COMPENSATION_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_SPECTRUM_NOISE_COMPENSATION_TYPE_ANALYZER_AND_TERMINATION = 0;
  NIRFMXSPECAN_INT32_SPECTRUM_NOISE_COMPENSATION_TYPE_ANALYZER_ONLY = 1;
  NIRFMXSPECAN_INT32_SPECTRUM_POWER_UNITS_DBM = 0;
  NIRFMXSPECAN_INT32_SPECTRUM_POWER_UNITS_DBM_PER_HZ = 1;
  NIRFMXSPECAN_INT32_SPECTRUM_POWER_UNITS_DBW = 2;
  NIRFMXSPECAN_INT32_SPECTRUM_POWER_UNITS_DBV = 3;
  NIRFMXSPECAN_INT32_SPECTRUM_POWER_UNITS_DBMV = 4;
  NIRFMXSPECAN_INT32_SPECTRUM_POWER_UNITS_DBUV = 5;
  NIRFMXSPECAN_INT32_SPECTRUM_POWER_UNITS_WATTS = 6;
  NIRFMXSPECAN_INT32_SPECTRUM_POWER_UNITS_VOLTS = 7;
  NIRFMXSPECAN_INT32_SPECTRUM_POWER_UNITS_VOLTS_SQUARED = 8;
  NIRFMXSPECAN_INT32_SPECTRUM_RBW_AUTO_BANDWIDTH_FALSE = 0;
  NIRFMXSPECAN_INT32_SPECTRUM_RBW_AUTO_BANDWIDTH_TRUE = 1;
  NIRFMXSPECAN_INT32_SPECTRUM_RBW_FILTER_BANDWIDTH_DEFINITION_3DB = 0;
  NIRFMXSPECAN_INT32_SPECTRUM_RBW_FILTER_BANDWIDTH_DEFINITION_6DB = 1;
  NIRFMXSPECAN_INT32_SPECTRUM_RBW_FILTER_BANDWIDTH_DEFINITION_BIN_WIDTH = 2;
  NIRFMXSPECAN_INT32_SPECTRUM_RBW_FILTER_BANDWIDTH_DEFINITION_ENBW = 3;
  NIRFMXSPECAN_INT32_SPECTRUM_RBW_FILTER_TYPE_FFT_BASED = 0;
  NIRFMXSPECAN_INT32_SPECTRUM_RBW_FILTER_TYPE_GAUSSIAN = 1;
  NIRFMXSPECAN_INT32_SPECTRUM_RBW_FILTER_TYPE_FLAT = 2;
  NIRFMXSPECAN_INT32_SPECTRUM_SWEEP_TIME_AUTO_FALSE = 0;
  NIRFMXSPECAN_INT32_SPECTRUM_SWEEP_TIME_AUTO_TRUE = 1;
  NIRFMXSPECAN_INT32_SPECTRUM_VBW_FILTER_AUTO_BANDWIDTH_FALSE = 0;
  NIRFMXSPECAN_INT32_SPECTRUM_VBW_FILTER_AUTO_BANDWIDTH_TRUE = 1;
  NIRFMXSPECAN_INT32_SPUR_ABSOLUTE_LIMIT_MODE_MANUAL = 0;
  NIRFMXSPECAN_INT32_SPUR_ABSOLUTE_LIMIT_MODE_COUPLE = 1;
  NIRFMXSPECAN_INT32_SPUR_AMPLITUDE_CORRECTION_TYPE_RF_CENTER_FREQUENCY = 0;
  NIRFMXSPECAN_INT32_SPUR_AMPLITUDE_CORRECTION_TYPE_SPECTRUM_FREQUENCY_BIN = 1;
  NIRFMXSPECAN_INT32_SPUR_AVERAGING_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_SPUR_AVERAGING_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_SPUR_AVERAGING_TYPE_RMS = 0;
  NIRFMXSPECAN_INT32_SPUR_AVERAGING_TYPE_LOG = 1;
  NIRFMXSPECAN_INT32_SPUR_AVERAGING_TYPE_SCALAR = 2;
  NIRFMXSPECAN_INT32_SPUR_AVERAGING_TYPE_MAXIMUM = 3;
  NIRFMXSPECAN_INT32_SPUR_AVERAGING_TYPE_MINIMUM = 4;
  NIRFMXSPECAN_INT32_SPUR_FFT_WINDOW_NONE = 0;
  NIRFMXSPECAN_INT32_SPUR_FFT_WINDOW_FLAT_TOP = 1;
  NIRFMXSPECAN_INT32_SPUR_FFT_WINDOW_HANNING = 2;
  NIRFMXSPECAN_INT32_SPUR_FFT_WINDOW_HAMMING = 3;
  NIRFMXSPECAN_INT32_SPUR_FFT_WINDOW_GAUSSIAN = 4;
  NIRFMXSPECAN_INT32_SPUR_FFT_WINDOW_BLACKMAN = 5;
  NIRFMXSPECAN_INT32_SPUR_FFT_WINDOW_BLACKMAN_HARRIS = 6;
  NIRFMXSPECAN_INT32_SPUR_FFT_WINDOW_KAISER_BESSEL = 7;
  NIRFMXSPECAN_INT32_SPUR_MEASUREMENT_STATUS_FAIL = 0;
  NIRFMXSPECAN_INT32_SPUR_MEASUREMENT_STATUS_PASS = 1;
  NIRFMXSPECAN_INT32_SPUR_RANGE_DETECTOR_TYPE_NONE = 0;
  NIRFMXSPECAN_INT32_SPUR_RANGE_DETECTOR_TYPE_SAMPLE = 1;
  NIRFMXSPECAN_INT32_SPUR_RANGE_DETECTOR_TYPE_NORMAL = 2;
  NIRFMXSPECAN_INT32_SPUR_RANGE_DETECTOR_TYPE_PEAK = 3;
  NIRFMXSPECAN_INT32_SPUR_RANGE_DETECTOR_TYPE_NEGATIVE_PEAK = 4;
  NIRFMXSPECAN_INT32_SPUR_RANGE_DETECTOR_TYPE_AVERAGE_RMS = 5;
  NIRFMXSPECAN_INT32_SPUR_RANGE_DETECTOR_TYPE_AVERAGE_VOLTAGE = 6;
  NIRFMXSPECAN_INT32_SPUR_RANGE_DETECTOR_TYPE_AVERAGE_LOG = 7;
  NIRFMXSPECAN_INT32_SPUR_RANGE_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_SPUR_RANGE_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_SPUR_RANGE_STATUS_FAIL = 0;
  NIRFMXSPECAN_INT32_SPUR_RANGE_STATUS_PASS = 1;
  NIRFMXSPECAN_INT32_SPUR_RANGE_VBW_FILTER_AUTO_BANDWIDTH_FALSE = 0;
  NIRFMXSPECAN_INT32_SPUR_RANGE_VBW_FILTER_AUTO_BANDWIDTH_TRUE = 1;
  NIRFMXSPECAN_INT32_SPUR_RBW_AUTO_BANDWIDTH_FALSE = 0;
  NIRFMXSPECAN_INT32_SPUR_RBW_AUTO_BANDWIDTH_TRUE = 1;
  NIRFMXSPECAN_INT32_SPUR_RBW_FILTER_BANDWIDTH_DEFINITION_3DB = 0;
  NIRFMXSPECAN_INT32_SPUR_RBW_FILTER_BANDWIDTH_DEFINITION_BIN_WIDTH = 2;
  NIRFMXSPECAN_INT32_SPUR_RBW_FILTER_BANDWIDTH_DEFINITION_ENBW = 3;
  NIRFMXSPECAN_INT32_SPUR_RBW_FILTER_TYPE_FFT_BASED = 0;
  NIRFMXSPECAN_INT32_SPUR_RBW_FILTER_TYPE_GAUSSIAN = 1;
  NIRFMXSPECAN_INT32_SPUR_RBW_FILTER_TYPE_FLAT = 2;
  NIRFMXSPECAN_INT32_SPUR_SWEEP_TIME_AUTO_FALSE = 0;
  NIRFMXSPECAN_INT32_SPUR_SWEEP_TIME_AUTO_TRUE = 1;
  NIRFMXSPECAN_INT32_TRIGGER_MINIMUM_QUIET_TIME_MODE_MANUAL = 0;
  NIRFMXSPECAN_INT32_TRIGGER_MINIMUM_QUIET_TIME_MODE_AUTO = 1;
  NIRFMXSPECAN_INT32_TRIGGER_TYPE_NONE = 0;
  NIRFMXSPECAN_INT32_TRIGGER_TYPE_DIGITAL_EDGE = 1;
  NIRFMXSPECAN_INT32_TRIGGER_TYPE_IQ_POWER_EDGE = 2;
  NIRFMXSPECAN_INT32_TRIGGER_TYPE_SOFTWARE = 3;
  NIRFMXSPECAN_INT32_TXP_AVERAGING_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_TXP_AVERAGING_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_TXP_AVERAGING_TYPE_RMS = 0;
  NIRFMXSPECAN_INT32_TXP_AVERAGING_TYPE_LOG = 1;
  NIRFMXSPECAN_INT32_TXP_AVERAGING_TYPE_SCALAR = 2;
  NIRFMXSPECAN_INT32_TXP_AVERAGING_TYPE_MAXIMUM = 3;
  NIRFMXSPECAN_INT32_TXP_AVERAGING_TYPE_MINIMUM = 4;
  NIRFMXSPECAN_INT32_TXP_RBW_FILTER_TYPE_GAUSSIAN = 1;
  NIRFMXSPECAN_INT32_TXP_RBW_FILTER_TYPE_FLAT = 2;
  NIRFMXSPECAN_INT32_TXP_RBW_FILTER_TYPE_NONE = 5;
  NIRFMXSPECAN_INT32_TXP_RBW_FILTER_TYPE_RRC = 6;
  NIRFMXSPECAN_INT32_TXP_THRESHOLD_ENABLED_FALSE = 0;
  NIRFMXSPECAN_INT32_TXP_THRESHOLD_ENABLED_TRUE = 1;
  NIRFMXSPECAN_INT32_TXP_THRESHOLD_TYPE_RELATIVE = 0;
  NIRFMXSPECAN_INT32_TXP_THRESHOLD_TYPE_ABSOLUTE = 1;
  NIRFMXSPECAN_INT32_TXP_VBW_FILTER_AUTO_BANDWIDTH_FALSE = 0;
  NIRFMXSPECAN_INT32_TXP_VBW_FILTER_AUTO_BANDWIDTH_TRUE = 1;
}

enum NiRFmxSpecAnStringAttributeValuesMapped {
  NIRFMXSPECAN_STRING_MAPPED_UNSPECIFIED = 0;
  NIRFMXSPECAN_STRING_DIGITAL_EDGE_TRIGGER_SOURCE_PFI0 = 1;
  NIRFMXSPECAN_STRING_DIGITAL_EDGE_TRIGGER_SOURCE_PFI1 = 2;
  NIRFMXSPECAN_STRING_DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG0 = 3;
  NIRFMXSPECAN_STRING_DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG1 = 4;
  NIRFMXSPECAN_STRING_DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG2 = 5;
  NIRFMXSPECAN_STRING_DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG3 = 6;
  NIRFMXSPECAN_STRING_DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG4 = 7;
  NIRFMXSPECAN_STRING_DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG5 = 8;
  NIRFMXSPECAN_STRING_DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG6 = 9;
  NIRFMXSPECAN_STRING_DIGITAL_EDGE_TRIGGER_SOURCE_PXI_TRIG7 = 10;
  NIRFMXSPECAN_STRING_DIGITAL_EDGE_TRIGGER_SOURCE_PXI_STAR = 11;
  NIRFMXSPECAN_STRING_DIGITAL_EDGE_TRIGGER_SOURCE_PXIE_DSTARB = 12;
  NIRFMXSPECAN_STRING_DIGITAL_EDGE_TRIGGER_SOURCE_TIMER_EVENT = 13;
}

message ACPCfgAveragingRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof averaging_enabled_enum {
    AcpAveragingEnabled averaging_enabled = 3;
    int32 averaging_enabled_raw = 4;
  }
  int32 averaging_count = 5;
  oneof averaging_type_enum {
    AcpAveragingType averaging_type = 6;
    int32 averaging_type_raw = 7;
  }
}

message ACPCfgAveragingResponse {
  int32 status = 1;
}

message ACPCfgCarrierAndOffsetsRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double integration_bandwidth = 3;
  int32 number_of_offsets = 4;
  double channel_spacing = 5;
}

message ACPCfgCarrierAndOffsetsResponse {
  int32 status = 1;
}

message ACPCfgCarrierFrequencyRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double carrier_frequency = 3;
}

message ACPCfgCarrierFrequencyResponse {
  int32 status = 1;
}

message ACPCfgCarrierIntegrationBandwidthRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double integration_bandwidth = 3;
}

message ACPCfgCarrierIntegrationBandwidthResponse {
  int32 status = 1;
}

message ACPCfgCarrierModeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof carrier_mode_enum {
    AcpCarrierMode carrier_mode = 3;
    int32 carrier_mode_raw = 4;
  }
}

message ACPCfgCarrierModeResponse {
  int32 status = 1;
}

message ACPCfgCarrierRRCFilterRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof rrc_filter_enabled_enum {
    AcpCarrierRrcFilterEnabled rrc_filter_enabled = 3;
    int32 rrc_filter_enabled_raw = 4;
  }
  double rrc_alpha = 5;
}

message ACPCfgCarrierRRCFilterResponse {
  int32 status = 1;
}

message ACPCfgFFTRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof fft_window_enum {
    AcpFftWindow fft_window = 3;
    int32 fft_window_raw = 4;
  }
  double fft_padding = 5;
}

message ACPCfgFFTResponse {
  int32 status = 1;
}

message ACPCfgMeasurementMethodRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof measurement_method_enum {
    AcpMeasurementMethod measurement_method = 3;
    int32 measurement_method_raw = 4;
  }
}

message ACPCfgMeasurementMethodResponse {
  int32 status = 1;
}

message ACPCfgNoiseCompensationEnabledRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof noise_compensation_enabled_enum {
    AcpNoiseCompensationEnabled noise_compensation_enabled = 3;
    int32 noise_compensation_enabled_raw = 4;
  }
}

message ACPCfgNoiseCompensationEnabledResponse {
  int32 status = 1;
}

message ACPCfgNumberOfCarriersRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 number_of_carriers = 3;
}

message ACPCfgNumberOfCarriersResponse {
  int32 status = 1;
}

message ACPCfgNumberOfOffsetsRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 number_of_offsets = 3;
}

message ACPCfgNumberOfOffsetsResponse {
  int32 status = 1;
}

message ACPCfgOffsetRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double offset_frequency = 3;
  oneof offset_sideband_enum {
    AcpOffsetSideband offset_sideband = 4;
    int32 offset_sideband_raw = 5;
  }
  oneof offset_enabled_enum {
    AcpOffsetEnabled offset_enabled = 6;
    int32 offset_enabled_raw = 7;
  }
}

message ACPCfgOffsetResponse {
  int32 status = 1;
}

message ACPCfgOffsetArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated double offset_frequency = 3;
  repeated AcpOffsetSideband offset_sideband = 4;
  repeated AcpOffsetEnabled offset_enabled = 5;
}

message ACPCfgOffsetArrayResponse {
  int32 status = 1;
}

message ACPCfgOffsetFrequencyDefinitionRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof offset_frequency_definition_enum {
    AcpOffsetFrequencyDefinition offset_frequency_definition = 3;
    int32 offset_frequency_definition_raw = 4;
  }
}

message ACPCfgOffsetFrequencyDefinitionResponse {
  int32 status = 1;
}

message ACPCfgOffsetIntegrationBandwidthRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double integration_bandwidth = 3;
}

message ACPCfgOffsetIntegrationBandwidthResponse {
  int32 status = 1;
}

message ACPCfgOffsetIntegrationBandwidthArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated double integration_bandwidth = 3;
}

message ACPCfgOffsetIntegrationBandwidthArrayResponse {
  int32 status = 1;
}

message ACPCfgOffsetPowerReferenceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof offset_reference_carrier_enum {
    AcpOffsetPowerReferenceCarrier offset_reference_carrier = 3;
    int32 offset_reference_carrier_raw = 4;
  }
  int32 offset_reference_specific = 5;
}

message ACPCfgOffsetPowerReferenceResponse {
  int32 status = 1;
}

message ACPCfgOffsetPowerReferenceArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated AcpOffsetPowerReferenceCarrier offset_power_reference_carrier = 3;
  repeated int32 offset_power_reference_specific = 4;
}

message ACPCfgOffsetPowerReferenceArrayResponse {
  int32 status = 1;
}

message ACPCfgOffsetRRCFilterRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof rrc_filter_enabled_enum {
    AcpOffsetRrcFilterEnabled rrc_filter_enabled = 3;
    int32 rrc_filter_enabled_raw = 4;
  }
  double rrc_alpha = 5;
}

message ACPCfgOffsetRRCFilterResponse {
  int32 status = 1;
}

message ACPCfgOffsetRRCFilterArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated AcpOffsetRrcFilterEnabled rrc_filter_enabled = 3;
  repeated double rrc_alpha = 4;
}

message ACPCfgOffsetRRCFilterArrayResponse {
  int32 status = 1;
}

message ACPCfgOffsetRelativeAttenuationRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double relative_attenuation = 3;
}

message ACPCfgOffsetRelativeAttenuationResponse {
  int32 status = 1;
}

message ACPCfgOffsetRelativeAttenuationArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated double relative_attenuation = 3;
}

message ACPCfgOffsetRelativeAttenuationArrayResponse {
  int32 status = 1;
}

message ACPCfgPowerUnitsRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof power_units_enum {
    AcpPowerUnits power_units = 3;
    int32 power_units_raw = 4;
  }
}

message ACPCfgPowerUnitsResponse {
  int32 status = 1;
}

message ACPCfgRBWFilterRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof rbw_auto_enum {
    AcpRbwAutoBandwidth rbw_auto = 3;
    int32 rbw_auto_raw = 4;
  }
  double rbw = 5;
  oneof rbw_filter_type_enum {
    AcpRbwFilterType rbw_filter_type = 6;
    int32 rbw_filter_type_raw = 7;
  }
}

message ACPCfgRBWFilterResponse {
  int32 status = 1;
}

message ACPCfgSweepTimeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof sweep_time_auto_enum {
    AcpSweepTimeAuto sweep_time_auto = 3;
    int32 sweep_time_auto_raw = 4;
  }
  double sweep_time_interval = 5;
}

message ACPCfgSweepTimeResponse {
  int32 status = 1;
}

message ACPFetchAbsolutePowersTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
  int32 trace_index = 4;
}

message ACPFetchAbsolutePowersTraceResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float absolute_powers_trace = 4;
  int32 actual_array_size = 5;
}

message ACPFetchCarrierMeasurementRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message ACPFetchCarrierMeasurementResponse {
  int32 status = 1;
  double absolute_power = 2;
  double total_relative_power = 3;
  double carrier_offset = 4;
  double integration_bandwidth = 5;
}

message ACPFetchFrequencyResolutionRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message ACPFetchFrequencyResolutionResponse {
  int32 status = 1;
  double frequency_resolution = 2;
}

message ACPFetchOffsetMeasurementRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message ACPFetchOffsetMeasurementResponse {
  int32 status = 1;
  double lower_relative_power = 2;
  double upper_relative_power = 3;
  double lower_absolute_power = 4;
  double upper_absolute_power = 5;
}

message ACPFetchOffsetMeasurementArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message ACPFetchOffsetMeasurementArrayResponse {
  int32 status = 1;
  repeated double lower_relative_power = 2;
  repeated double upper_relative_power = 3;
  repeated double lower_absolute_power = 4;
  repeated double upper_absolute_power = 5;
  int32 actual_array_size = 6;
}

message ACPFetchRelativePowersTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
  int32 trace_index = 4;
}

message ACPFetchRelativePowersTraceResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float relative_powers_trace = 4;
  int32 actual_array_size = 5;
}

message ACPFetchSpectrumRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message ACPFetchSpectrumResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float spectrum = 4;
  int32 actual_array_size = 5;
}

message ACPFetchTotalCarrierPowerRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message ACPFetchTotalCarrierPowerResponse {
  int32 status = 1;
  double total_carrier_power = 2;
}

message ACPReadRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message ACPReadResponse {
  int32 status = 1;
  double carrier_absolute_power = 2;
  double offset_ch0_lower_relative_power = 3;
  double offset_ch0_upper_relative_power = 4;
  double offset_ch1_lower_relative_power = 5;
  double offset_ch1_upper_relative_power = 6;
}

message ACPValidateNoiseCalibrationDataRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
}

message ACPValidateNoiseCalibrationDataResponse {
  int32 status = 1;
  AcpNoiseCalibrationDataValid noise_calibration_data_valid = 2;
  int32 noise_calibration_data_valid_raw = 3;
}

message AMPMCfgAMToAMCurveFitRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 am_to_am_curve_fit_order = 3;
  oneof am_to_am_curve_fit_type_enum {
    AmpmAMToAMCurveFitType am_to_am_curve_fit_type = 4;
    int32 am_to_am_curve_fit_type_raw = 5;
  }
}

message AMPMCfgAMToAMCurveFitResponse {
  int32 status = 1;
}

message AMPMCfgAMToPMCurveFitRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 am_to_pm_curve_fit_order = 3;
  oneof am_to_pm_curve_fit_type_enum {
    AmpmAMToPMCurveFitType am_to_pm_curve_fit_type = 4;
    int32 am_to_pm_curve_fit_type_raw = 5;
  }
}

message AMPMCfgAMToPMCurveFitResponse {
  int32 status = 1;
}

message AMPMCfgAveragingRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof averaging_enabled_enum {
    AmpmAveragingEnabled averaging_enabled = 3;
    int32 averaging_enabled_raw = 4;
  }
  int32 averaging_count = 5;
}

message AMPMCfgAveragingResponse {
  int32 status = 1;
}

message AMPMCfgCompressionPointsRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof compression_point_enabled_enum {
    AmpmCompressionPointEnabled compression_point_enabled = 3;
    int32 compression_point_enabled_raw = 4;
  }
  repeated double compression_level = 5;
}

message AMPMCfgCompressionPointsResponse {
  int32 status = 1;
}

message AMPMCfgDUTAverageInputPowerRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double dut_average_input_power = 3;
}

message AMPMCfgDUTAverageInputPowerResponse {
  int32 status = 1;
}

message AMPMCfgMeasurementIntervalRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double measurement_interval = 3;
}

message AMPMCfgMeasurementIntervalResponse {
  int32 status = 1;
}

message AMPMCfgMeasurementSampleRateRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof sample_rate_mode_enum {
    AmpmMeasurementSampleRateMode sample_rate_mode = 3;
    int32 sample_rate_mode_raw = 4;
  }
  double sample_rate = 5;
}

message AMPMCfgMeasurementSampleRateResponse {
  int32 status = 1;
}

message AMPMCfgReferencePowerTypeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof reference_power_type_enum {
    AmpmReferencePowerType reference_power_type = 3;
    int32 reference_power_type_raw = 4;
  }
}

message AMPMCfgReferencePowerTypeResponse {
  int32 status = 1;
}

message AMPMCfgReferenceWaveformRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double x0 = 3;
  double dx = 4;
  repeated nidevice_grpc.NIComplexNumberF32 reference_waveform = 5;
  oneof idle_duration_present_enum {
    AmpmReferenceWaveformIdleDurationPresent idle_duration_present = 6;
    int32 idle_duration_present_raw = 7;
  }
  oneof signal_type_enum {
    AmpmSignalType signal_type = 8;
    int32 signal_type_raw = 9;
  }
}

message AMPMCfgReferenceWaveformResponse {
  int32 status = 1;
}

message AMPMCfgSynchronizationMethodRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof synchronization_method_enum {
    AmpmSynchronizationMethod synchronization_method = 3;
    int32 synchronization_method_raw = 4;
  }
}

message AMPMCfgSynchronizationMethodResponse {
  int32 status = 1;
}

message AMPMCfgThresholdRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof threshold_enabled_enum {
    AmpmThresholdEnabled threshold_enabled = 3;
    int32 threshold_enabled_raw = 4;
  }
  double threshold_level = 5;
  oneof threshold_type_enum {
    AmpmThresholdType threshold_type = 6;
    int32 threshold_type_raw = 7;
  }
}

message AMPMCfgThresholdResponse {
  int32 status = 1;
}

message AMPMFetchAMToAMTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message AMPMFetchAMToAMTraceResponse {
  int32 status = 1;
  repeated float reference_powers = 2;
  repeated float measured_am_to_am = 3;
  repeated float curve_fit_am_to_am = 4;
  int32 actual_array_size = 5;
}

message AMPMFetchAMToPMTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message AMPMFetchAMToPMTraceResponse {
  int32 status = 1;
  repeated float reference_powers = 2;
  repeated float measured_am_to_pm = 3;
  repeated float curve_fit_am_to_pm = 4;
  int32 actual_array_size = 5;
}

message AMPMFetchCompressionPointsRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message AMPMFetchCompressionPointsResponse {
  int32 status = 1;
  repeated double input_compression_point = 2;
  repeated double output_compression_point = 3;
  int32 actual_array_size = 4;
}

message AMPMFetchCurveFitCoefficientsRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message AMPMFetchCurveFitCoefficientsResponse {
  int32 status = 1;
  repeated float am_to_am_coefficients = 2;
  repeated float am_to_pm_coefficients = 3;
  int32 actual_array_size = 4;
}

message AMPMFetchCurveFitResidualRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message AMPMFetchCurveFitResidualResponse {
  int32 status = 1;
  double am_to_am_residual = 2;
  double am_to_pm_residual = 3;
}

message AMPMFetchDUTCharacteristicsRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message AMPMFetchDUTCharacteristicsResponse {
  int32 status = 1;
  double mean_linear_gain = 2;
  double one_db_compression_point = 3;
  double mean_rms_evm = 4;
}

message AMPMFetchErrorRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message AMPMFetchErrorResponse {
  int32 status = 1;
  double gain_error_range = 2;
  double phase_error_range = 3;
  double mean_phase_error = 4;
}

message AMPMFetchProcessedMeanAcquiredWaveformRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message AMPMFetchProcessedMeanAcquiredWaveformResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated nidevice_grpc.NIComplexNumberF32 processed_mean_acquired_waveform = 4;
  int32 actual_array_size = 5;
}

message AMPMFetchProcessedReferenceWaveformRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message AMPMFetchProcessedReferenceWaveformResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated nidevice_grpc.NIComplexNumberF32 processed_reference_waveform = 4;
  int32 actual_array_size = 5;
}

message AMPMFetchRelativePhaseTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message AMPMFetchRelativePhaseTraceResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float relative_phase = 4;
  int32 actual_array_size = 5;
}

message AMPMFetchRelativePowerTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message AMPMFetchRelativePowerTraceResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float relative_power = 4;
  int32 actual_array_size = 5;
}

message AbortMeasurementsRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
}

message AbortMeasurementsResponse {
  int32 status = 1;
}

message AnalyzeIQ1WaveformRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  string result_name = 3;
  double x0 = 4;
  double dx = 5;
  repeated nidevice_grpc.NIComplexNumberF32 iq = 6;
  int32 reset = 7;
}

message AnalyzeIQ1WaveformResponse {
  int32 status = 1;
}

message AnalyzeSpectrum1WaveformRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  string result_name = 3;
  double x0 = 4;
  double dx = 5;
  repeated float spectrum = 6;
  int32 reset = 7;
}

message AnalyzeSpectrum1WaveformResponse {
  int32 status = 1;
}

message AutoLevelRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double bandwidth = 3;
  double measurement_interval = 4;
}

message AutoLevelResponse {
  int32 status = 1;
  double reference_level = 2;
}

message BuildCarrierStringRequest {
  string selector_string = 1;
  int32 carrier_number = 2;
}

message BuildCarrierStringResponse {
  int32 status = 1;
  string selector_string_out = 2;
}

message BuildHarmonicStringRequest {
  string selector_string = 1;
  int32 harmonic_number = 2;
}

message BuildHarmonicStringResponse {
  int32 status = 1;
  string selector_string_out = 2;
}

message BuildIntermodStringRequest {
  string selector_string = 1;
  int32 intermod_number = 2;
}

message BuildIntermodStringResponse {
  int32 status = 1;
  string selector_string_out = 2;
}

message BuildListStepStringRequest {
  string list_name = 1;
  string result_name = 2;
  int32 step_number = 3;
}

message BuildListStepStringResponse {
  int32 status = 1;
  string selector_string = 2;
}

message BuildListStringRequest {
  string list_name = 1;
  string result_name = 2;
}

message BuildListStringResponse {
  int32 status = 1;
  string selector_string = 2;
}

message BuildMarkerStringRequest {
  string selector_string = 1;
  int32 marker_number = 2;
}

message BuildMarkerStringResponse {
  int32 status = 1;
  string selector_string_out = 2;
}

message BuildOffsetStringRequest {
  string selector_string = 1;
  int32 offset_number = 2;
}

message BuildOffsetStringResponse {
  int32 status = 1;
  string selector_string_out = 2;
}

message BuildRangeSpurStringRequest {
  string signal_name = 1;
  string result_name = 2;
  int32 range_number = 3;
  int32 spur_number = 4;
}

message BuildRangeSpurStringResponse {
  int32 status = 1;
  string selector_string = 2;
}

message BuildRangeStringRequest {
  string selector_string = 1;
  int32 range_number = 2;
}

message BuildRangeStringResponse {
  int32 status = 1;
  string selector_string_out = 2;
}

message BuildSegmentStringRequest {
  string selector_string = 1;
  int32 segment_number = 2;
}

message BuildSegmentStringResponse {
  int32 status = 1;
  string selector_string_out = 2;
}

message BuildSignalStringRequest {
  string signal_name = 1;
  string result_name = 2;
}

message BuildSignalStringResponse {
  int32 status = 1;
  string selector_string = 2;
}

message BuildSpurStringRequest {
  string selector_string = 1;
  int32 spur_number = 2;
}

message BuildSpurStringResponse {
  int32 status = 1;
  string selector_string_out = 2;
}

message CCDFCfgMeasurementIntervalRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double measurement_interval = 3;
}

message CCDFCfgMeasurementIntervalResponse {
  int32 status = 1;
}

message CCDFCfgNumberOfRecordsRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 number_of_records = 3;
}

message CCDFCfgNumberOfRecordsResponse {
  int32 status = 1;
}

message CCDFCfgRBWFilterRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double rbw = 3;
  oneof rbw_filter_type_enum {
    CcdfRbwFilterType rbw_filter_type = 4;
    int32 rbw_filter_type_raw = 5;
  }
  double rrc_alpha = 6;
}

message CCDFCfgRBWFilterResponse {
  int32 status = 1;
}

message CCDFCfgThresholdRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof threshold_enabled_enum {
    CcdfThresholdEnabled threshold_enabled = 3;
    int32 threshold_enabled_raw = 4;
  }
  double threshold_level = 5;
  oneof threshold_type_enum {
    CcdfThresholdType threshold_type = 6;
    int32 threshold_type_raw = 7;
  }
}

message CCDFCfgThresholdResponse {
  int32 status = 1;
}

message CCDFFetchBasicPowerProbabilitiesRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message CCDFFetchBasicPowerProbabilitiesResponse {
  int32 status = 1;
  double ten_percent_power = 2;
  double one_percent_power = 3;
  double one_tenth_percent_power = 4;
  double one_hundredth_percent_power = 5;
  double one_thousandth_percent_power = 6;
  double one_ten_thousandth_percent_power = 7;
}

message CCDFFetchGaussianProbabilitiesTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message CCDFFetchGaussianProbabilitiesTraceResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float gaussian_probabilities = 4;
  int32 actual_array_size = 5;
}

message CCDFFetchPowerRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message CCDFFetchPowerResponse {
  int32 status = 1;
  double mean_power = 2;
  double mean_power_percentile = 3;
  double peak_power = 4;
  int32 measured_samples_count = 5;
}

message CCDFFetchProbabilitiesTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message CCDFFetchProbabilitiesTraceResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float probabilities = 4;
  int32 actual_array_size = 5;
}

message CCDFReadRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message CCDFReadResponse {
  int32 status = 1;
  double mean_power = 2;
  double mean_power_percentile = 3;
  double peak_power = 4;
  int32 measured_samples_count = 5;
}

message CHPCfgAveragingRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof averaging_enabled_enum {
    ChpAveragingEnabled averaging_enabled = 3;
    int32 averaging_enabled_raw = 4;
  }
  int32 averaging_count = 5;
  oneof averaging_type_enum {
    ChpAveragingType averaging_type = 6;
    int32 averaging_type_raw = 7;
  }
}

message CHPCfgAveragingResponse {
  int32 status = 1;
}

message CHPCfgCarrierOffsetRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double carrier_frequency = 3;
}

message CHPCfgCarrierOffsetResponse {
  int32 status = 1;
}

message CHPCfgFFTRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof fft_window_enum {
    ChpFftWindow fft_window = 3;
    int32 fft_window_raw = 4;
  }
  double fft_padding = 5;
}

message CHPCfgFFTResponse {
  int32 status = 1;
}

message CHPCfgIntegrationBandwidthRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double integration_bandwidth = 3;
}

message CHPCfgIntegrationBandwidthResponse {
  int32 status = 1;
}

message CHPCfgNumberOfCarriersRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 number_of_carriers = 3;
}

message CHPCfgNumberOfCarriersResponse {
  int32 status = 1;
}

message CHPCfgRBWFilterRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof rbw_auto_enum {
    ChpRbwAutoBandwidth rbw_auto = 3;
    int32 rbw_auto_raw = 4;
  }
  double rbw = 5;
  oneof rbw_filter_type_enum {
    ChpRbwFilterType rbw_filter_type = 6;
    int32 rbw_filter_type_raw = 7;
  }
}

message CHPCfgRBWFilterResponse {
  int32 status = 1;
}

message CHPCfgRRCFilterRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof rrc_filter_enabled_enum {
    ChpCarrierRrcFilterEnabled rrc_filter_enabled = 3;
    int32 rrc_filter_enabled_raw = 4;
  }
  double rrc_alpha = 5;
}

message CHPCfgRRCFilterResponse {
  int32 status = 1;
}

message CHPCfgSpanRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double span = 3;
}

message CHPCfgSpanResponse {
  int32 status = 1;
}

message CHPCfgSweepTimeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof sweep_time_auto_enum {
    ChpSweepTimeAuto sweep_time_auto = 3;
    int32 sweep_time_auto_raw = 4;
  }
  double sweep_time_interval = 5;
}

message CHPCfgSweepTimeResponse {
  int32 status = 1;
}

message CHPFetchCarrierMeasurementRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message CHPFetchCarrierMeasurementResponse {
  int32 status = 1;
  double absolute_power = 2;
  double psd = 3;
  double relative_power = 4;
}

message CHPFetchSpectrumRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message CHPFetchSpectrumResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float spectrum = 4;
  int32 actual_array_size = 5;
}

message CHPFetchTotalCarrierPowerRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message CHPFetchTotalCarrierPowerResponse {
  int32 status = 1;
  double total_carrier_power = 2;
}

message CHPReadRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message CHPReadResponse {
  int32 status = 1;
  double absolute_power = 2;
  double psd = 3;
}

message CHPValidateNoiseCalibrationDataRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
}

message CHPValidateNoiseCalibrationDataResponse {
  int32 status = 1;
  ChpNoiseCalibrationDataValid noise_calibration_data_valid = 2;
  int32 noise_calibration_data_valid_raw = 3;
}

message CfgDigitalEdgeTriggerRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof digital_edge_source_enum {
    DigitalEdgeTriggerSource digital_edge_source_mapped = 3;
    string digital_edge_source_raw = 4;
  }
  oneof digital_edge_enum {
    DigitalEdgeTriggerEdge digital_edge = 5;
    int32 digital_edge_raw = 6;
  }
  double trigger_delay = 7;
  int32 enable_trigger = 8;
}

message CfgDigitalEdgeTriggerResponse {
  int32 status = 1;
}

message CfgExternalAttenuationRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double external_attenuation = 3;
}

message CfgExternalAttenuationResponse {
  int32 status = 1;
}

message CfgFrequencyRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double center_frequency = 3;
}

message CfgFrequencyResponse {
  int32 status = 1;
}

message CfgFrequencyReferenceRequest {
  nidevice_grpc.Session instrument = 1;
  string channel_name = 2;
  oneof frequency_reference_source_enum {
    FrequencyReferenceSource frequency_reference_source_mapped = 3;
    string frequency_reference_source_raw = 4;
  }
  double frequency_reference_frequency = 5;
}

message CfgFrequencyReferenceResponse {
  int32 status = 1;
}

message CfgIQPowerEdgeTriggerRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  string iq_power_edge_source = 3;
  double iq_power_edge_level = 4;
  oneof iq_power_edge_slope_enum {
    IQPowerEdgeTriggerSlope iq_power_edge_slope = 5;
    int32 iq_power_edge_slope_raw = 6;
  }
  double trigger_delay = 7;
  oneof trigger_min_quiet_time_mode_enum {
    TriggerMinimumQuietTimeMode trigger_min_quiet_time_mode = 8;
    int32 trigger_min_quiet_time_mode_raw = 9;
  }
  double trigger_min_quiet_time_duration = 10;
  int32 enable_trigger = 11;
}

message CfgIQPowerEdgeTriggerResponse {
  int32 status = 1;
}

message CfgMechanicalAttenuationRequest {
  nidevice_grpc.Session instrument = 1;
  string channel_name = 2;
  oneof mechanical_attenuation_auto_enum {
    MechanicalAttenuationAuto mechanical_attenuation_auto = 3;
    int32 mechanical_attenuation_auto_raw = 4;
  }
  double mechanical_attenuation_value = 5;
}

message CfgMechanicalAttenuationResponse {
  int32 status = 1;
}

message CfgRFRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double center_frequency = 3;
  double reference_level = 4;
  double external_attenuation = 5;
}

message CfgRFResponse {
  int32 status = 1;
}

message CfgRFAttenuationRequest {
  nidevice_grpc.Session instrument = 1;
  string channel_name = 2;
  oneof rf_attenuation_auto_enum {
    RFAttenuationAuto rf_attenuation_auto = 3;
    int32 rf_attenuation_auto_raw = 4;
  }
  double rf_attenuation_value = 5;
}

message CfgRFAttenuationResponse {
  int32 status = 1;
}

message CfgReferenceLevelRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double reference_level = 3;
}

message CfgReferenceLevelResponse {
  int32 status = 1;
}

message CfgSoftwareEdgeTriggerRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double trigger_delay = 3;
  int32 enable_trigger = 4;
}

message CfgSoftwareEdgeTriggerResponse {
  int32 status = 1;
}

message CheckMeasurementStatusRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
}

message CheckMeasurementStatusResponse {
  int32 status = 1;
  bool is_done = 2;
}

message ClearAllNamedResultsRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
}

message ClearAllNamedResultsResponse {
  int32 status = 1;
}

message ClearNamedResultRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
}

message ClearNamedResultResponse {
  int32 status = 1;
}

message ClearNoiseCalibrationDatabaseRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
}

message ClearNoiseCalibrationDatabaseResponse {
  int32 status = 1;
}

message CloneSignalConfigurationRequest {
  nidevice_grpc.Session instrument = 1;
  string old_signal_name = 2;
  string new_signal_name = 3;
}

message CloneSignalConfigurationResponse {
  int32 status = 1;
}

message CloseRequest {
  nidevice_grpc.Session instrument = 1;
  bool force_destroy = 2;
}

message CloseResponse {
  int32 status = 1;
}

message CommitRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
}

message CommitResponse {
  int32 status = 1;
}

message CreateListRequest {
  nidevice_grpc.Session instrument = 1;
  string list_name = 2;
}

message CreateListResponse {
  int32 status = 1;
}

message CreateListStepRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
}

message CreateListStepResponse {
  int32 status = 1;
  int32 created_step_index = 2;
}

message CreateSignalConfigurationRequest {
  nidevice_grpc.Session instrument = 1;
  string signal_name = 2;
}

message CreateSignalConfigurationResponse {
  int32 status = 1;
}

message DPDApplyDigitalPredistortionRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double x0_in = 3;
  double dx_in = 4;
  repeated nidevice_grpc.NIComplexNumberF32 waveform_in = 5;
  oneof idle_duration_present_enum {
    DpdApplyDpdIdleDurationPresent idle_duration_present = 6;
    int32 idle_duration_present_raw = 7;
  }
  double measurement_timeout = 8;
}

message DPDApplyDigitalPredistortionResponse {
  int32 status = 1;
  double x0_out = 2;
  double dx_out = 3;
  repeated nidevice_grpc.NIComplexNumberF32 waveform_out = 4;
  int32 actual_array_size = 5;
  double papr = 6;
  double power_offset = 7;
}

message DPDApplyPreDPDSignalConditioningRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double x0_in = 3;
  double dx_in = 4;
  repeated nidevice_grpc.NIComplexNumberF32 waveform_in = 5;
  oneof idle_duration_present_enum {
    DpdApplyDpdIdleDurationPresent idle_duration_present = 6;
    int32 idle_duration_present_raw = 7;
  }
}

message DPDApplyPreDPDSignalConditioningResponse {
  int32 status = 1;
  double x0_out = 2;
  double dx_out = 3;
  repeated nidevice_grpc.NIComplexNumberF32 waveform_out = 4;
  int32 actual_array_size = 5;
  double papr = 6;
}

message DPDCfgApplyDPDConfigurationInputRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof configuration_input_enum {
    DpdApplyDpdConfigurationInput configuration_input = 3;
    int32 configuration_input_raw = 4;
  }
}

message DPDCfgApplyDPDConfigurationInputResponse {
  int32 status = 1;
}

message DPDCfgApplyDPDLookupTableCorrectionTypeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof lut_correction_type_enum {
    DpdApplyDpdLookupTableCorrectionType lut_correction_type = 3;
    int32 lut_correction_type_raw = 4;
  }
}

message DPDCfgApplyDPDLookupTableCorrectionTypeResponse {
  int32 status = 1;
}

message DPDCfgApplyDPDMemoryModelCorrectionTypeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof memory_model_correction_type_enum {
    DpdApplyDpdMemoryModelCorrectionType memory_model_correction_type = 3;
    int32 memory_model_correction_type_raw = 4;
  }
}

message DPDCfgApplyDPDMemoryModelCorrectionTypeResponse {
  int32 status = 1;
}

message DPDCfgApplyDPDUserDPDPolynomialRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated nidevice_grpc.NIComplexNumberF32 dpd_polynomial = 3;
}

message DPDCfgApplyDPDUserDPDPolynomialResponse {
  int32 status = 1;
}

message DPDCfgApplyDPDUserLookupTableRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated float lut_input_powers = 3;
  repeated nidevice_grpc.NIComplexNumberF32 lut_complex_gains = 4;
}

message DPDCfgApplyDPDUserLookupTableResponse {
  int32 status = 1;
}

message DPDCfgAveragingRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof averaging_enabled_enum {
    DpdAveragingEnabled averaging_enabled = 3;
    int32 averaging_enabled_raw = 4;
  }
  int32 averaging_count = 5;
}

message DPDCfgAveragingResponse {
  int32 status = 1;
}

message DPDCfgDPDModelRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof dpd_model_enum {
    DpdModel dpd_model = 3;
    int32 dpd_model_raw = 4;
  }
}

message DPDCfgDPDModelResponse {
  int32 status = 1;
}

message DPDCfgDUTAverageInputPowerRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double dut_average_input_power = 3;
}

message DPDCfgDUTAverageInputPowerResponse {
  int32 status = 1;
}

message DPDCfgGeneralizedMemoryPolynomialCrossTermsRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 memory_polynomial_lead_order = 3;
  int32 memory_polynomial_lag_order = 4;
  int32 memory_polynomial_lead_memory_depth = 5;
  int32 memory_polynomial_lag_memory_depth = 6;
  int32 memory_polynomial_maximum_lead = 7;
  int32 memory_polynomial_maximum_lag = 8;
}

message DPDCfgGeneralizedMemoryPolynomialCrossTermsResponse {
  int32 status = 1;
}

message DPDCfgIterativeDPDEnabledRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof iterative_dpd_enabled_enum {
    DpdIterativeDpdEnabled iterative_dpd_enabled = 3;
    int32 iterative_dpd_enabled_raw = 4;
  }
}

message DPDCfgIterativeDPDEnabledResponse {
  int32 status = 1;
}

message DPDCfgLookupTableAMToAMCurveFitRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 am_to_am_curve_fit_order = 3;
  oneof am_to_am_curve_fit_type_enum {
    DpdLookupTableAMToAMCurveFitType am_to_am_curve_fit_type = 4;
    int32 am_to_am_curve_fit_type_raw = 5;
  }
}

message DPDCfgLookupTableAMToAMCurveFitResponse {
  int32 status = 1;
}

message DPDCfgLookupTableAMToPMCurveFitRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 am_to_pm_curve_fit_order = 3;
  oneof am_to_pm_curve_fit_type_enum {
    DpdLookupTableAMToPMCurveFitType am_to_pm_curve_fit_type = 4;
    int32 am_to_pm_curve_fit_type_raw = 5;
  }
}

message DPDCfgLookupTableAMToPMCurveFitResponse {
  int32 status = 1;
}

message DPDCfgLookupTableStepSizeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double step_size = 3;
}

message DPDCfgLookupTableStepSizeResponse {
  int32 status = 1;
}

message DPDCfgLookupTableThresholdRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof threshold_enabled_enum {
    DpdLookupTableThresholdEnabled threshold_enabled = 3;
    int32 threshold_enabled_raw = 4;
  }
  double threshold_level = 5;
  oneof threshold_type_enum {
    DpdLookupTableThresholdType threshold_type = 6;
    int32 threshold_type_raw = 7;
  }
}

message DPDCfgLookupTableThresholdResponse {
  int32 status = 1;
}

message DPDCfgLookupTableTypeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof lookup_table_type_enum {
    DpdLookupTableType lookup_table_type = 3;
    int32 lookup_table_type_raw = 4;
  }
}

message DPDCfgLookupTableTypeResponse {
  int32 status = 1;
}

message DPDCfgMeasurementIntervalRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double measurement_interval = 3;
}

message DPDCfgMeasurementIntervalResponse {
  int32 status = 1;
}

message DPDCfgMeasurementSampleRateRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof sample_rate_mode_enum {
    DpdMeasurementSampleRateMode sample_rate_mode = 3;
    int32 sample_rate_mode_raw = 4;
  }
  double sample_rate = 5;
}

message DPDCfgMeasurementSampleRateResponse {
  int32 status = 1;
}

message DPDCfgMemoryPolynomialRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 memory_polynomial_order = 3;
  int32 memory_polynomial_memory_depth = 4;
}

message DPDCfgMemoryPolynomialResponse {
  int32 status = 1;
}

message DPDCfgPreviousDPDPolynomialRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated nidevice_grpc.NIComplexNumberF32 previous_dpd_polynomial = 3;
}

message DPDCfgPreviousDPDPolynomialResponse {
  int32 status = 1;
}

message DPDCfgReferenceWaveformRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double x0 = 3;
  double dx = 4;
  repeated nidevice_grpc.NIComplexNumberF32 reference_waveform = 5;
  oneof idle_duration_present_enum {
    DpdReferenceWaveformIdleDurationPresent idle_duration_present = 6;
    int32 idle_duration_present_raw = 7;
  }
  oneof signal_type_enum {
    DpdSignalType signal_type = 8;
    int32 signal_type_raw = 9;
  }
}

message DPDCfgReferenceWaveformResponse {
  int32 status = 1;
}

message DPDCfgSynchronizationMethodRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof synchronization_method_enum {
    DpdSynchronizationMethod synchronization_method = 3;
    int32 synchronization_method_raw = 4;
  }
}

message DPDCfgSynchronizationMethodResponse {
  int32 status = 1;
}

message DPDFetchApplyDPDPreCFRPAPRRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message DPDFetchApplyDPDPreCFRPAPRResponse {
  int32 status = 1;
  double pre_cfr_papr = 2;
}

message DPDFetchAverageGainRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message DPDFetchAverageGainResponse {
  int32 status = 1;
  double average_gain = 2;
}

message DPDFetchDPDPolynomialRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message DPDFetchDPDPolynomialResponse {
  int32 status = 1;
  repeated nidevice_grpc.NIComplexNumberF32 dpd_polynomial = 2;
  int32 actual_array_size = 3;
}

message DPDFetchLookupTableRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message DPDFetchLookupTableResponse {
  int32 status = 1;
  repeated float input_powers = 2;
  repeated nidevice_grpc.NIComplexNumberF32 complex_gains = 3;
  int32 actual_array_size = 4;
}

message DPDFetchNMSERequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message DPDFetchNMSEResponse {
  int32 status = 1;
  double nmse = 2;
}

message DPDFetchProcessedMeanAcquiredWaveformRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message DPDFetchProcessedMeanAcquiredWaveformResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated nidevice_grpc.NIComplexNumberF32 processed_mean_acquired_waveform = 4;
  int32 actual_array_size = 5;
}

message DPDFetchProcessedReferenceWaveformRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message DPDFetchProcessedReferenceWaveformResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated nidevice_grpc.NIComplexNumberF32 processed_reference_waveform = 4;
  int32 actual_array_size = 5;
}

message DeleteListRequest {
  nidevice_grpc.Session instrument = 1;
  string list_name = 2;
}

message DeleteListResponse {
  int32 status = 1;
}

message DeleteSignalConfigurationRequest {
  nidevice_grpc.Session instrument = 1;
  string signal_name = 2;
}

message DeleteSignalConfigurationResponse {
  int32 status = 1;
}

message DisableTriggerRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
}

message DisableTriggerResponse {
  int32 status = 1;
}

message FCntCfgAveragingRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof averaging_enabled_enum {
    FcntAveragingEnabled averaging_enabled = 3;
    int32 averaging_enabled_raw = 4;
  }
  int32 averaging_count = 5;
  oneof averaging_type_enum {
    FcntAveragingType averaging_type = 6;
    int32 averaging_type_raw = 7;
  }
}

message FCntCfgAveragingResponse {
  int32 status = 1;
}

message FCntCfgMeasurementIntervalRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double measurement_interval = 3;
}

message FCntCfgMeasurementIntervalResponse {
  int32 status = 1;
}

message FCntCfgRBWFilterRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double rbw = 3;
  oneof rbw_filter_type_enum {
    FcntRbwFilterType rbw_filter_type = 4;
    int32 rbw_filter_type_raw = 5;
  }
  double rrc_alpha = 6;
}

message FCntCfgRBWFilterResponse {
  int32 status = 1;
}

message FCntCfgThresholdRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof threshold_enabled_enum {
    FcntThresholdEnabled threshold_enabled = 3;
    int32 threshold_enabled_raw = 4;
  }
  double threshold_level = 5;
  oneof threshold_type_enum {
    FcntThresholdType threshold_type = 6;
    int32 threshold_type_raw = 7;
  }
}

message FCntCfgThresholdResponse {
  int32 status = 1;
}

message FCntFetchAllanDeviationRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message FCntFetchAllanDeviationResponse {
  int32 status = 1;
  double allan_deviation = 2;
}

message FCntFetchFrequencyTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message FCntFetchFrequencyTraceResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float frequency_trace = 4;
  int32 actual_array_size = 5;
}

message FCntFetchMeasurementRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message FCntFetchMeasurementResponse {
  int32 status = 1;
  double average_relative_frequency = 2;
  double average_absolute_frequency = 3;
  double mean_phase = 4;
}

message FCntFetchPhaseTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message FCntFetchPhaseTraceResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float phase_trace = 4;
  int32 actual_array_size = 5;
}

message FCntFetchPowerTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message FCntFetchPowerTraceResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float power_trace = 4;
  int32 actual_array_size = 5;
}

message FCntReadRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message FCntReadResponse {
  int32 status = 1;
  double average_relative_frequency = 2;
  double average_absolute_frequency = 3;
  double mean_phase = 4;
}

message GetAllNamedResultNamesRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
}

message GetAllNamedResultNamesResponse {
  int32 status = 1;
  string result_names = 2;
  int32 actual_result_names_size = 3;
  int32 default_result_exists = 4;
}

message GetAttributeF32Request {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
}

message GetAttributeF32Response {
  int32 status = 1;
  float attr_val = 2;
}

message GetAttributeF32ArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
}

message GetAttributeF32ArrayResponse {
  int32 status = 1;
  repeated float attr_val = 2;
  int32 actual_array_size = 3;
}

message GetAttributeF64Request {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
}

message GetAttributeF64Response {
  int32 status = 1;
  double attr_val = 2;
}

message GetAttributeF64ArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
}

message GetAttributeF64ArrayResponse {
  int32 status = 1;
  repeated double attr_val = 2;
  int32 actual_array_size = 3;
}

message GetAttributeI16Request {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
}

message GetAttributeI16Response {
  int32 status = 1;
  int32 attr_val = 2;
}

message GetAttributeI32Request {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
}

message GetAttributeI32Response {
  int32 status = 1;
  NiRFmxSpecAnInt32AttributeValues attr_val = 2;
  int32 attr_val_raw = 3;
}

message GetAttributeI32ArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
}

message GetAttributeI32ArrayResponse {
  int32 status = 1;
  repeated NiRFmxSpecAnInt32AttributeValues attr_val = 2;
  repeated int32 attr_val_raw = 3;
  int32 actual_array_size = 4;
}

message GetAttributeI64Request {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
}

message GetAttributeI64Response {
  int32 status = 1;
  int64 attr_val = 2;
}

message GetAttributeI64ArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
}

message GetAttributeI64ArrayResponse {
  int32 status = 1;
  repeated int64 attr_val = 2;
  int32 actual_array_size = 3;
}

message GetAttributeI8Request {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
}

message GetAttributeI8Response {
  int32 status = 1;
  int32 attr_val = 2;
}

message GetAttributeI8ArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
}

message GetAttributeI8ArrayResponse {
  int32 status = 1;
  repeated int32 attr_val = 2;
  int32 actual_array_size = 3;
}

message GetAttributeNIComplexDoubleArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
}

message GetAttributeNIComplexDoubleArrayResponse {
  int32 status = 1;
  repeated nidevice_grpc.NIComplexNumber attr_val = 2;
  int32 actual_array_size = 3;
}

message GetAttributeNIComplexSingleArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
}

message GetAttributeNIComplexSingleArrayResponse {
  int32 status = 1;
  repeated nidevice_grpc.NIComplexNumberF32 attr_val = 2;
  int32 actual_array_size = 3;
}

message GetAttributeStringRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
}

message GetAttributeStringResponse {
  int32 status = 1;
  string attr_val = 2;
}

message GetAttributeU16Request {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
}

message GetAttributeU16Response {
  int32 status = 1;
  uint32 attr_val = 2;
}

message GetAttributeU32Request {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
}

message GetAttributeU32Response {
  int32 status = 1;
  uint32 attr_val = 2;
}

message GetAttributeU32ArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
}

message GetAttributeU32ArrayResponse {
  int32 status = 1;
  repeated uint32 attr_val = 2;
  int32 actual_array_size = 3;
}

message GetAttributeU64ArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
}

message GetAttributeU64ArrayResponse {
  int32 status = 1;
  repeated uint64 attr_val = 2;
  int32 actual_array_size = 3;
}

message GetAttributeU8Request {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
}

message GetAttributeU8Response {
  int32 status = 1;
  uint32 attr_val = 2;
}

message GetAttributeU8ArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
}

message GetAttributeU8ArrayResponse {
  int32 status = 1;
  bytes attr_val = 2;
  int32 actual_array_size = 3;
}

message GetErrorRequest {
  nidevice_grpc.Session instrument = 1;
}

message GetErrorResponse {
  int32 status = 1;
  int32 error_code = 2;
  string error_description = 3;
}

message GetErrorStringRequest {
  nidevice_grpc.Session instrument = 1;
  int32 error_code = 2;
}

message GetErrorStringResponse {
  int32 status = 1;
  string error_description = 2;
}

message HarmCfgAutoHarmonicsRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof auto_harmonics_setup_enabled_enum {
    HarmAutoHarmonicsSetupEnabled auto_harmonics_setup_enabled = 3;
    int32 auto_harmonics_setup_enabled_raw = 4;
  }
}

message HarmCfgAutoHarmonicsResponse {
  int32 status = 1;
}

message HarmCfgAveragingRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof averaging_enabled_enum {
    HarmAveragingEnabled averaging_enabled = 3;
    int32 averaging_enabled_raw = 4;
  }
  int32 averaging_count = 5;
  oneof averaging_type_enum {
    HarmAveragingType averaging_type = 6;
    int32 averaging_type_raw = 7;
  }
}

message HarmCfgAveragingResponse {
  int32 status = 1;
}

message HarmCfgFundamentalMeasurementIntervalRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double measurement_interval = 3;
}

message HarmCfgFundamentalMeasurementIntervalResponse {
  int32 status = 1;
}

message HarmCfgFundamentalRBWRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double rbw = 3;
  oneof rbw_filter_type_enum {
    HarmRbwFilterType rbw_filter_type = 4;
    int32 rbw_filter_type_raw = 5;
  }
  double rrc_alpha = 6;
}

message HarmCfgFundamentalRBWResponse {
  int32 status = 1;
}

message HarmCfgHarmonicRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 harmonic_order = 3;
  double harmonic_bandwidth = 4;
  oneof harmonic_enabled_enum {
    HarmHarmonicEnabled harmonic_enabled = 5;
    int32 harmonic_enabled_raw = 6;
  }
  double harmonic_measurement_interval = 7;
}

message HarmCfgHarmonicResponse {
  int32 status = 1;
}

message HarmCfgHarmonicArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated int32 harmonic_order = 3;
  repeated double harmonic_bandwidth = 4;
  repeated HarmHarmonicEnabled harmonic_enabled = 5;
  repeated double harmonic_measurement_interval = 6;
}

message HarmCfgHarmonicArrayResponse {
  int32 status = 1;
}

message HarmCfgNumberOfHarmonicsRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 number_of_harmonics = 3;
}

message HarmCfgNumberOfHarmonicsResponse {
  int32 status = 1;
}

message HarmFetchHarmonicMeasurementRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message HarmFetchHarmonicMeasurementResponse {
  int32 status = 1;
  double average_relative_power = 2;
  double average_absolute_power = 3;
  double rbw = 4;
  double frequency = 5;
}

message HarmFetchHarmonicMeasurementArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message HarmFetchHarmonicMeasurementArrayResponse {
  int32 status = 1;
  repeated double average_relative_power = 2;
  repeated double average_absolute_power = 3;
  repeated double rbw = 4;
  repeated double frequency = 5;
  int32 actual_array_size = 6;
}

message HarmFetchHarmonicPowerTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message HarmFetchHarmonicPowerTraceResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float power = 4;
  int32 actual_array_size = 5;
}

message HarmFetchTHDRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message HarmFetchTHDResponse {
  int32 status = 1;
  double total_harmonic_distortion = 2;
  double average_fundamental_power = 3;
  double fundamental_frequency = 4;
}

message HarmReadRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message HarmReadResponse {
  int32 status = 1;
  double total_harmonic_distortion = 2;
  double average_fundamental_power = 3;
}

message IMCfgAutoIntermodsSetupRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof auto_intermods_setup_enabled_enum {
    IMAutoIntermodsSetupEnabled auto_intermods_setup_enabled = 3;
    int32 auto_intermods_setup_enabled_raw = 4;
  }
  int32 maximum_intermod_order = 5;
}

message IMCfgAutoIntermodsSetupResponse {
  int32 status = 1;
}

message IMCfgAveragingRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof averaging_enabled_enum {
    IMAveragingEnabled averaging_enabled = 3;
    int32 averaging_enabled_raw = 4;
  }
  int32 averaging_count = 5;
  oneof averaging_type_enum {
    IMAveragingType averaging_type = 6;
    int32 averaging_type_raw = 7;
  }
}

message IMCfgAveragingResponse {
  int32 status = 1;
}

message IMCfgFFTRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof fft_window_enum {
    IMFftWindow fft_window = 3;
    int32 fft_window_raw = 4;
  }
  double fft_padding = 5;
}

message IMCfgFFTResponse {
  int32 status = 1;
}

message IMCfgFrequencyDefinitionRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof frequency_definition_enum {
    IMFrequencyDefinition frequency_definition = 3;
    int32 frequency_definition_raw = 4;
  }
}

message IMCfgFrequencyDefinitionResponse {
  int32 status = 1;
}

message IMCfgFundamentalTonesRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double lower_tone_frequency = 3;
  double upper_tone_frequency = 4;
}

message IMCfgFundamentalTonesResponse {
  int32 status = 1;
}

message IMCfgIntermodRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 intermod_order = 3;
  double lower_intermod_frequency = 4;
  double upper_intermod_frequency = 5;
  oneof intermod_side_enum {
    IMIntermodSide intermod_side = 6;
    int32 intermod_side_raw = 7;
  }
  oneof intermod_enabled_enum {
    IMIntermodEnabled intermod_enabled = 8;
    int32 intermod_enabled_raw = 9;
  }
}

message IMCfgIntermodResponse {
  int32 status = 1;
}

message IMCfgIntermodArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated int32 intermod_order = 3;
  repeated double lower_intermod_frequency = 4;
  repeated double upper_intermod_frequency = 5;
  repeated IMIntermodSide intermod_side = 6;
  repeated IMIntermodEnabled intermod_enabled = 7;
}

message IMCfgIntermodArrayResponse {
  int32 status = 1;
}

message IMCfgMeasurementMethodRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof measurement_method_enum {
    IMMeasurementMethod measurement_method = 3;
    int32 measurement_method_raw = 4;
  }
}

message IMCfgMeasurementMethodResponse {
  int32 status = 1;
}

message IMCfgNumberOfIntermodsRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 number_of_intermods = 3;
}

message IMCfgNumberOfIntermodsResponse {
  int32 status = 1;
}

message IMCfgRBWFilterRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof rbw_auto_enum {
    IMRbwFilterAutoBandwidth rbw_auto = 3;
    int32 rbw_auto_raw = 4;
  }
  double rbw = 5;
  oneof rbw_filter_type_enum {
    IMRbwFilterType rbw_filter_type = 6;
    int32 rbw_filter_type_raw = 7;
  }
}

message IMCfgRBWFilterResponse {
  int32 status = 1;
}

message IMCfgSweepTimeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof sweep_time_auto_enum {
    IMSweepTimeAuto sweep_time_auto = 3;
    int32 sweep_time_auto_raw = 4;
  }
  double sweep_time_interval = 5;
}

message IMCfgSweepTimeResponse {
  int32 status = 1;
}

message IMFetchFundamentalMeasurementRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message IMFetchFundamentalMeasurementResponse {
  int32 status = 1;
  double lower_tone_power = 2;
  double upper_tone_power = 3;
}

message IMFetchInterceptPowerRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message IMFetchInterceptPowerResponse {
  int32 status = 1;
  int32 intermod_order = 2;
  double worst_case_output_intercept_power = 3;
  double lower_output_intercept_power = 4;
  double upper_output_intercept_power = 5;
}

message IMFetchInterceptPowerArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message IMFetchInterceptPowerArrayResponse {
  int32 status = 1;
  repeated int32 intermod_order = 2;
  repeated double worst_case_output_intercept_power = 3;
  repeated double lower_output_intercept_power = 4;
  repeated double upper_output_intercept_power = 5;
  int32 actual_array_size = 6;
}

message IMFetchIntermodMeasurementRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message IMFetchIntermodMeasurementResponse {
  int32 status = 1;
  int32 intermod_order = 2;
  double lower_intermod_power = 3;
  double upper_intermod_power = 4;
}

message IMFetchIntermodMeasurementArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message IMFetchIntermodMeasurementArrayResponse {
  int32 status = 1;
  repeated int32 intermod_order = 2;
  repeated double lower_intermod_power = 3;
  repeated double upper_intermod_power = 4;
  int32 actual_array_size = 5;
}

message IMFetchSpectrumRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
  int32 spectrum_index = 4;
}

message IMFetchSpectrumResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float spectrum = 4;
  int32 actual_array_size = 5;
}

message IQCfgAcquisitionRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double sample_rate = 3;
  int32 number_of_records = 4;
  double acquisition_time = 5;
  double pretrigger_time = 6;
}

message IQCfgAcquisitionResponse {
  int32 status = 1;
}

message IQCfgBandwidthRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof bandwidth_auto_enum {
    IQBandwidthAuto bandwidth_auto = 3;
    int32 bandwidth_auto_raw = 4;
  }
  double bandwidth = 5;
}

message IQCfgBandwidthResponse {
  int32 status = 1;
}

message IQFetchDataRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
  int32 record_to_fetch = 4;
  int64 samples_to_read = 5;
}

message IQFetchDataResponse {
  int32 status = 1;
  double t0 = 2;
  double dt = 3;
  repeated nidevice_grpc.NIComplexNumberF32 data = 4;
  int32 actual_array_size = 5;
}

message IQGetRecordsDoneRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
}

message IQGetRecordsDoneResponse {
  int32 status = 1;
  int32 records_done = 2;
}

message InitializeRequest {
  string session_name = 1;
  string resource_name = 2;
  string option_string = 3;
}

message InitializeResponse {
  int32 status = 1;
  nidevice_grpc.Session instrument = 2;
  int32 is_new_session = 3;
  string error_message = 4;
}

message InitializeFromNIRFSASessionRequest {
  string session_name = 1;
  nidevice_grpc.Session nirfsa_session = 2;
}

message InitializeFromNIRFSASessionResponse {
  int32 status = 1;
  nidevice_grpc.Session instrument = 2;
  string error_message = 3;
}

message InitiateRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  string result_name = 3;
}

message InitiateResponse {
  int32 status = 1;
}

message MarkerCfgNumberOfMarkersRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 number_of_markers = 3;
}

message MarkerCfgNumberOfMarkersResponse {
  int32 status = 1;
}

message MarkerCfgPeakExcursionRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof peak_excursion_enabled_enum {
    MarkerPeakExcursionEnabled peak_excursion_enabled = 3;
    int32 peak_excursion_enabled_raw = 4;
  }
  double peak_excursion = 5;
}

message MarkerCfgPeakExcursionResponse {
  int32 status = 1;
}

message MarkerCfgReferenceMarkerRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 reference_marker = 3;
}

message MarkerCfgReferenceMarkerResponse {
  int32 status = 1;
}

message MarkerCfgThresholdRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof threshold_enabled_enum {
    MarkerThresholdEnabled threshold_enabled = 3;
    int32 threshold_enabled_raw = 4;
  }
  double threshold = 5;
}

message MarkerCfgThresholdResponse {
  int32 status = 1;
}

message MarkerCfgTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof trace_enum {
    MarkerTrace trace = 3;
    int32 trace_raw = 4;
  }
}

message MarkerCfgTraceResponse {
  int32 status = 1;
}

message MarkerCfgTypeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof marker_type_enum {
    MarkerType marker_type = 3;
    int32 marker_type_raw = 4;
  }
}

message MarkerCfgTypeResponse {
  int32 status = 1;
}

message MarkerCfgXLocationRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double marker_x_location = 3;
}

message MarkerCfgXLocationResponse {
  int32 status = 1;
}

message MarkerFetchXYRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
}

message MarkerFetchXYResponse {
  int32 status = 1;
  double marker_x_location = 2;
  double marker_y_location = 3;
}

message MarkerNextPeakRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof next_peak_enum {
    MarkerNextPeak next_peak = 3;
    int32 next_peak_raw = 4;
  }
}

message MarkerNextPeakResponse {
  int32 status = 1;
  int32 next_peak_found = 2;
}

message MarkerPeakSearchRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
}

message MarkerPeakSearchResponse {
  int32 status = 1;
  int32 number_of_peaks = 2;
}

message NFCfgAveragingRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof averaging_enabled_enum {
    NFAveragingEnabled averaging_enabled = 3;
    int32 averaging_enabled_raw = 4;
  }
  int32 averaging_count = 5;
}

message NFCfgAveragingResponse {
  int32 status = 1;
}

message NFCfgCalibrationLossRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof calibration_loss_compensation_enabled_enum {
    NFCalibrationLossCompensationEnabled calibration_loss_compensation_enabled = 3;
    int32 calibration_loss_compensation_enabled_raw = 4;
  }
  repeated double calibration_loss_frequency = 5;
  repeated double calibration_loss = 6;
  double calibration_loss_temperature = 7;
}

message NFCfgCalibrationLossResponse {
  int32 status = 1;
}

message NFCfgColdSourceDUTSParametersRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated double dut_s_parameters_frequency = 3;
  repeated double dut_s21 = 4;
  repeated double dut_s12 = 5;
  repeated double dut_s11 = 6;
  repeated double dut_s22 = 7;
}

message NFCfgColdSourceDUTSParametersResponse {
  int32 status = 1;
}

message NFCfgColdSourceInputTerminationRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated double termination_vswr = 3;
  repeated double termination_vswr_frequency = 4;
  double termination_temperature = 5;
}

message NFCfgColdSourceInputTerminationResponse {
  int32 status = 1;
}

message NFCfgColdSourceModeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof cold_source_mode_enum {
    NFColdSourceMode cold_source_mode = 3;
    int32 cold_source_mode_raw = 4;
  }
}

message NFCfgColdSourceModeResponse {
  int32 status = 1;
}

message NFCfgDUTInputLossRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof dut_input_loss_compensation_enabled_enum {
    NFDutInputLossCompensationEnabled dut_input_loss_compensation_enabled = 3;
    int32 dut_input_loss_compensation_enabled_raw = 4;
  }
  repeated double dut_input_loss_frequency = 5;
  repeated double dut_input_loss = 6;
  double dut_input_loss_temperature = 7;
}

message NFCfgDUTInputLossResponse {
  int32 status = 1;
}

message NFCfgDUTOutputLossRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof dut_output_loss_compensation_enabled_enum {
    NFDutOutputLossCompensationEnabled dut_output_loss_compensation_enabled = 3;
    int32 dut_output_loss_compensation_enabled_raw = 4;
  }
  repeated double dut_output_loss_frequency = 5;
  repeated double dut_output_loss = 6;
  double dut_output_loss_temperature = 7;
}

message NFCfgDUTOutputLossResponse {
  int32 status = 1;
}

message NFCfgFrequencyListRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated double frequency_list = 3;
}

message NFCfgFrequencyListResponse {
  int32 status = 1;
}

message NFCfgFrequencyListStartStopPointsRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double start_frequency = 3;
  double stop_frequency = 4;
  int32 number_of_points = 5;
}

message NFCfgFrequencyListStartStopPointsResponse {
  int32 status = 1;
}

message NFCfgFrequencyListStartStopStepRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double start_frequency = 3;
  double stop_frequency = 4;
  double step_size = 5;
}

message NFCfgFrequencyListStartStopStepResponse {
  int32 status = 1;
}

message NFCfgMeasurementBandwidthRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double measurement_bandwidth = 3;
}

message NFCfgMeasurementBandwidthResponse {
  int32 status = 1;
}

message NFCfgMeasurementIntervalRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double measurement_interval = 3;
}

message NFCfgMeasurementIntervalResponse {
  int32 status = 1;
}

message NFCfgMeasurementMethodRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof measurement_method_enum {
    NFMeasurementMethod measurement_method = 3;
    int32 measurement_method_raw = 4;
  }
}

message NFCfgMeasurementMethodResponse {
  int32 status = 1;
}

message NFCfgYFactorModeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof y_factor_mode_enum {
    NFYFactorMode y_factor_mode = 3;
    int32 y_factor_mode_raw = 4;
  }
}

message NFCfgYFactorModeResponse {
  int32 status = 1;
}

message NFCfgYFactorNoiseSourceENRRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated double enr_frequency = 3;
  repeated double enr = 4;
  double cold_temperature = 5;
  double off_temperature = 6;
}

message NFCfgYFactorNoiseSourceENRResponse {
  int32 status = 1;
}

message NFCfgYFactorNoiseSourceLossRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof noise_source_loss_compensation_enabled_enum {
    NFYFactorNoiseSourceLossCompensationEnabled noise_source_loss_compensation_enabled = 3;
    int32 noise_source_loss_compensation_enabled_raw = 4;
  }
  repeated double noise_source_loss_frequency = 5;
  repeated double noise_source_loss = 6;
  double noise_source_loss_temperature = 7;
}

message NFCfgYFactorNoiseSourceLossResponse {
  int32 status = 1;
}

message NFCfgYFactorNoiseSourceSettlingTimeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double settling_time = 3;
}

message NFCfgYFactorNoiseSourceSettlingTimeResponse {
  int32 status = 1;
}

message NFClearCalibrationDatabaseRequest {
  nidevice_grpc.Session instrument = 1;
  string calibration_setup_id = 2;
}

message NFClearCalibrationDatabaseResponse {
  int32 status = 1;
}

message NFFetchAnalyzerNoiseFigureRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message NFFetchAnalyzerNoiseFigureResponse {
  int32 status = 1;
  repeated double analyzer_noise_figure = 2;
  int32 actual_array_size = 3;
}

message NFFetchColdSourcePowerRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message NFFetchColdSourcePowerResponse {
  int32 status = 1;
  repeated double cold_source_power = 2;
  int32 actual_array_size = 3;
}

message NFFetchDUTNoiseFigureAndGainRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message NFFetchDUTNoiseFigureAndGainResponse {
  int32 status = 1;
  repeated double dut_noise_figure = 2;
  repeated double dut_noise_temperature = 3;
  repeated double dut_gain = 4;
  int32 actual_array_size = 5;
}

message NFFetchYFactorPowersRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message NFFetchYFactorPowersResponse {
  int32 status = 1;
  repeated double hot_power = 2;
  repeated double cold_power = 3;
  int32 actual_array_size = 4;
}

message NFFetchYFactorsRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message NFFetchYFactorsResponse {
  int32 status = 1;
  repeated double measurement_y_factor = 2;
  repeated double calibration_y_factor = 3;
  int32 actual_array_size = 4;
}

message NFRecommendReferenceLevelRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double dut_max_gain = 3;
  double dut_max_noise_figure = 4;
}

message NFRecommendReferenceLevelResponse {
  int32 status = 1;
  double reference_level = 2;
}

message NFValidateCalibrationDataRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
}

message NFValidateCalibrationDataResponse {
  int32 status = 1;
  NFCalibrationDataValid calibration_data_valid = 2;
  int32 calibration_data_valid_raw = 3;
}

message OBWCfgAveragingRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof averaging_enabled_enum {
    ObwAveragingEnabled averaging_enabled = 3;
    int32 averaging_enabled_raw = 4;
  }
  int32 averaging_count = 5;
  oneof averaging_type_enum {
    ObwAveragingType averaging_type = 6;
    int32 averaging_type_raw = 7;
  }
}

message OBWCfgAveragingResponse {
  int32 status = 1;
}

message OBWCfgBandwidthPercentageRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double bandwidth_percentage = 3;
}

message OBWCfgBandwidthPercentageResponse {
  int32 status = 1;
}

message OBWCfgFFTRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof fft_window_enum {
    ObwFftWindow fft_window = 3;
    int32 fft_window_raw = 4;
  }
  double fft_padding = 5;
}

message OBWCfgFFTResponse {
  int32 status = 1;
}

message OBWCfgPowerUnitsRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof power_units_enum {
    ObwPowerUnits power_units = 3;
    int32 power_units_raw = 4;
  }
}

message OBWCfgPowerUnitsResponse {
  int32 status = 1;
}

message OBWCfgRBWFilterRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof rbw_auto_enum {
    ObwRbwAutoBandwidth rbw_auto = 3;
    int32 rbw_auto_raw = 4;
  }
  double rbw = 5;
  oneof rbw_filter_type_enum {
    ObwRbwFilterType rbw_filter_type = 6;
    int32 rbw_filter_type_raw = 7;
  }
}

message OBWCfgRBWFilterResponse {
  int32 status = 1;
}

message OBWCfgSpanRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double span = 3;
}

message OBWCfgSpanResponse {
  int32 status = 1;
}

message OBWCfgSweepTimeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof sweep_time_auto_enum {
    ObwSweepTimeAuto sweep_time_auto = 3;
    int32 sweep_time_auto_raw = 4;
  }
  double sweep_time_interval = 5;
}

message OBWCfgSweepTimeResponse {
  int32 status = 1;
}

message OBWFetchMeasurementRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message OBWFetchMeasurementResponse {
  int32 status = 1;
  double occupied_bandwidth = 2;
  double average_power = 3;
  double frequency_resolution = 4;
  double start_frequency = 5;
  double stop_frequency = 6;
}

message OBWFetchSpectrumTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message OBWFetchSpectrumTraceResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float spectrum = 4;
  int32 actual_array_size = 5;
}

message OBWReadRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message OBWReadResponse {
  int32 status = 1;
  double occupied_bandwidth = 2;
  double average_power = 3;
  double frequency_resolution = 4;
  double start_frequency = 5;
  double stop_frequency = 6;
}

message PAVTCfgMeasurementBandwidthRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double measurement_bandwidth = 3;
}

message PAVTCfgMeasurementBandwidthResponse {
  int32 status = 1;
}

message PAVTCfgMeasurementIntervalRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double measurement_offset = 3;
  double measurement_length = 4;
}

message PAVTCfgMeasurementIntervalResponse {
  int32 status = 1;
}

message PAVTCfgMeasurementIntervalModeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof measurement_interval_mode_enum {
    PavtMeasurementIntervalMode measurement_interval_mode = 3;
    int32 measurement_interval_mode_raw = 4;
  }
}

message PAVTCfgMeasurementIntervalModeResponse {
  int32 status = 1;
}

message PAVTCfgMeasurementLocationTypeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof measurement_location_type_enum {
    PavtMeasurementLocationType measurement_location_type = 3;
    int32 measurement_location_type_raw = 4;
  }
}

message PAVTCfgMeasurementLocationTypeResponse {
  int32 status = 1;
}

message PAVTCfgNumberOfSegmentsRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 number_of_segments = 3;
}

message PAVTCfgNumberOfSegmentsResponse {
  int32 status = 1;
}

message PAVTCfgSegmentMeasurementIntervalRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double segment_measurement_offset = 3;
  double segment_measurement_length = 4;
}

message PAVTCfgSegmentMeasurementIntervalResponse {
  int32 status = 1;
}

message PAVTCfgSegmentMeasurementIntervalArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated double segment_measurement_offset = 3;
  repeated double segment_measurement_length = 4;
}

message PAVTCfgSegmentMeasurementIntervalArrayResponse {
  int32 status = 1;
}

message PAVTCfgSegmentStartTimeListRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated double segment_start_time = 3;
}

message PAVTCfgSegmentStartTimeListResponse {
  int32 status = 1;
}

message PAVTCfgSegmentStartTimeStepRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 number_of_segments = 3;
  double segment0_start_time = 4;
  double segment_interval = 5;
}

message PAVTCfgSegmentStartTimeStepResponse {
  int32 status = 1;
}

message PAVTCfgSegmentTypeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof segment_type_enum {
    PavtSegmentType segment_type = 3;
    int32 segment_type_raw = 4;
  }
}

message PAVTCfgSegmentTypeResponse {
  int32 status = 1;
}

message PAVTCfgSegmentTypeArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated PavtSegmentType segment_type = 3;
}

message PAVTCfgSegmentTypeArrayResponse {
  int32 status = 1;
}

message PAVTFetchAmplitudeTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
  int32 trace_index = 4;
}

message PAVTFetchAmplitudeTraceResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float amplitude = 4;
  int32 actual_array_size = 5;
}

message PAVTFetchPhaseAndAmplitudeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message PAVTFetchPhaseAndAmplitudeResponse {
  int32 status = 1;
  double mean_relative_phase = 2;
  double mean_relative_amplitude = 3;
  double mean_absolute_phase = 4;
  double mean_absolute_amplitude = 5;
}

message PAVTFetchPhaseAndAmplitudeArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message PAVTFetchPhaseAndAmplitudeArrayResponse {
  int32 status = 1;
  repeated double mean_relative_phase = 2;
  repeated double mean_relative_amplitude = 3;
  repeated double mean_absolute_phase = 4;
  repeated double mean_absolute_amplitude = 5;
  int32 actual_array_size = 6;
}

message PAVTFetchPhaseTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
  int32 trace_index = 4;
}

message PAVTFetchPhaseTraceResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float phase = 4;
  int32 actual_array_size = 5;
}

message PhaseNoiseCfgAutoRangeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double start_frequency = 3;
  double stop_frequency = 4;
  double rbw_percentage = 5;
}

message PhaseNoiseCfgAutoRangeResponse {
  int32 status = 1;
}

message PhaseNoiseCfgAveragingMultiplierRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 averaging_multiplier = 3;
}

message PhaseNoiseCfgAveragingMultiplierResponse {
  int32 status = 1;
}

message PhaseNoiseCfgCancellationRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof cancellation_enabled_enum {
    PhaseNoiseCancellationEnabled cancellation_enabled = 3;
    int32 cancellation_enabled_raw = 4;
  }
  double cancellation_threshold = 5;
  repeated float frequency = 6;
  repeated float reference_phase_noise = 7;
}

message PhaseNoiseCfgCancellationResponse {
  int32 status = 1;
}

message PhaseNoiseCfgIntegratedNoiseRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof integrated_noise_range_definition_enum {
    PhaseNoiseIntegratedNoiseRangeDefinition integrated_noise_range_definition = 3;
    int32 integrated_noise_range_definition_raw = 4;
  }
  repeated double integrated_noise_start_frequency = 5;
  repeated double integrated_noise_stop_frequency = 6;
}

message PhaseNoiseCfgIntegratedNoiseResponse {
  int32 status = 1;
}

message PhaseNoiseCfgNumberOfRangesRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 number_of_ranges = 3;
}

message PhaseNoiseCfgNumberOfRangesResponse {
  int32 status = 1;
}

message PhaseNoiseCfgRangeArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated double range_start_frequency = 3;
  repeated double range_stop_frequency = 4;
  repeated double range_rbw_percentage = 5;
  repeated int32 range_averaging_count = 6;
}

message PhaseNoiseCfgRangeArrayResponse {
  int32 status = 1;
}

message PhaseNoiseCfgRangeDefinitionRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof range_definition_enum {
    PhaseNoiseRangeDefinition range_definition = 3;
    int32 range_definition_raw = 4;
  }
}

message PhaseNoiseCfgRangeDefinitionResponse {
  int32 status = 1;
}

message PhaseNoiseCfgSmoothingRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof smoothing_type_enum {
    PhaseNoiseSmoothingType smoothing_type = 3;
    int32 smoothing_type_raw = 4;
  }
  double smoothing_percentage = 5;
}

message PhaseNoiseCfgSmoothingResponse {
  int32 status = 1;
}

message PhaseNoiseCfgSpotNoiseFrequencyListRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated double frequency_list = 3;
}

message PhaseNoiseCfgSpotNoiseFrequencyListResponse {
  int32 status = 1;
}

message PhaseNoiseCfgSpurRemovalRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof spur_removal_enabled_enum {
    PhaseNoiseSpurRemovalEnabled spur_removal_enabled = 3;
    int32 spur_removal_enabled_raw = 4;
  }
  double peak_excursion = 5;
}

message PhaseNoiseCfgSpurRemovalResponse {
  int32 status = 1;
}

message PhaseNoiseFetchCarrierMeasurementRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message PhaseNoiseFetchCarrierMeasurementResponse {
  int32 status = 1;
  double carrier_frequency = 2;
  double carrier_power = 3;
}

message PhaseNoiseFetchIntegratedNoiseRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message PhaseNoiseFetchIntegratedNoiseResponse {
  int32 status = 1;
  repeated double integrated_phase_noise = 2;
  repeated double residual_pm_in_radian = 3;
  repeated double residual_pm_in_degree = 4;
  repeated double residual_fm = 5;
  repeated double jitter = 6;
  int32 actual_array_size = 7;
}

message PhaseNoiseFetchMeasuredLogPlotTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message PhaseNoiseFetchMeasuredLogPlotTraceResponse {
  int32 status = 1;
  repeated float frequency = 2;
  repeated float measured_phase_noise = 3;
  int32 actual_array_size = 4;
}

message PhaseNoiseFetchSmoothedLogPlotTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message PhaseNoiseFetchSmoothedLogPlotTraceResponse {
  int32 status = 1;
  repeated float frequency = 2;
  repeated float smoothed_phase_noise = 3;
  int32 actual_array_size = 4;
}

message PhaseNoiseFetchSpotNoiseRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message PhaseNoiseFetchSpotNoiseResponse {
  int32 status = 1;
  repeated double spot_phase_noise = 2;
  int32 actual_array_size = 3;
}

message ResetAttributeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
}

message ResetAttributeResponse {
  int32 status = 1;
}

message ResetToDefaultRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
}

message ResetToDefaultResponse {
  int32 status = 1;
}

message SEMCfgAveragingRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof averaging_enabled_enum {
    SemAveragingEnabled averaging_enabled = 3;
    int32 averaging_enabled_raw = 4;
  }
  int32 averaging_count = 5;
  oneof averaging_type_enum {
    SemAveragingType averaging_type = 6;
    int32 averaging_type_raw = 7;
  }
}

message SEMCfgAveragingResponse {
  int32 status = 1;
}

message SEMCfgCarrierChannelBandwidthRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double carrier_channel_bandwidth = 3;
}

message SEMCfgCarrierChannelBandwidthResponse {
  int32 status = 1;
}

message SEMCfgCarrierEnabledRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof carrier_enabled_enum {
    SemCarrierEnabled carrier_enabled = 3;
    int32 carrier_enabled_raw = 4;
  }
}

message SEMCfgCarrierEnabledResponse {
  int32 status = 1;
}

message SEMCfgCarrierFrequencyRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double carrier_frequency = 3;
}

message SEMCfgCarrierFrequencyResponse {
  int32 status = 1;
}

message SEMCfgCarrierIntegrationBandwidthRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double integration_bandwidth = 3;
}

message SEMCfgCarrierIntegrationBandwidthResponse {
  int32 status = 1;
}

message SEMCfgCarrierRBWFilterRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof rbw_auto_enum {
    SemCarrierRbwAutoBandwidth rbw_auto = 3;
    int32 rbw_auto_raw = 4;
  }
  double rbw = 5;
  oneof rbw_filter_type_enum {
    SemCarrierRbwFilterType rbw_filter_type = 6;
    int32 rbw_filter_type_raw = 7;
  }
}

message SEMCfgCarrierRBWFilterResponse {
  int32 status = 1;
}

message SEMCfgCarrierRRCFilterRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof rrc_filter_enabled_enum {
    SemCarrierRrcFilterEnabled rrc_filter_enabled = 3;
    int32 rrc_filter_enabled_raw = 4;
  }
  double rrc_alpha = 5;
}

message SEMCfgCarrierRRCFilterResponse {
  int32 status = 1;
}

message SEMCfgFFTRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof fft_window_enum {
    SemFftWindow fft_window = 3;
    int32 fft_window_raw = 4;
  }
  double fft_padding = 5;
}

message SEMCfgFFTResponse {
  int32 status = 1;
}

message SEMCfgNumberOfCarriersRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 number_of_carriers = 3;
}

message SEMCfgNumberOfCarriersResponse {
  int32 status = 1;
}

message SEMCfgNumberOfOffsetsRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 number_of_offsets = 3;
}

message SEMCfgNumberOfOffsetsResponse {
  int32 status = 1;
}

message SEMCfgOffsetAbsoluteLimitRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof absolute_limit_mode_enum {
    SemOffsetAbsoluteLimitMode absolute_limit_mode = 3;
    int32 absolute_limit_mode_raw = 4;
  }
  double absolute_limit_start = 5;
  double absolute_limit_stop = 6;
}

message SEMCfgOffsetAbsoluteLimitResponse {
  int32 status = 1;
}

message SEMCfgOffsetAbsoluteLimitArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated SemOffsetAbsoluteLimitMode absolute_limit_mode = 3;
  repeated double absolute_limit_start = 4;
  repeated double absolute_limit_stop = 5;
}

message SEMCfgOffsetAbsoluteLimitArrayResponse {
  int32 status = 1;
}

message SEMCfgOffsetBandwidthIntegralRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 bandwidth_integral = 3;
}

message SEMCfgOffsetBandwidthIntegralResponse {
  int32 status = 1;
}

message SEMCfgOffsetFrequencyRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double offset_start_frequency = 3;
  double offset_stop_frequency = 4;
  oneof offset_enabled_enum {
    SemOffsetEnabled offset_enabled = 5;
    int32 offset_enabled_raw = 6;
  }
  oneof offset_sideband_enum {
    SemOffsetSideband offset_sideband = 7;
    int32 offset_sideband_raw = 8;
  }
}

message SEMCfgOffsetFrequencyResponse {
  int32 status = 1;
}

message SEMCfgOffsetFrequencyArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated double offset_start_frequency = 3;
  repeated double offset_stop_frequency = 4;
  repeated SemOffsetEnabled offset_enabled = 5;
  repeated SemOffsetSideband offset_sideband = 6;
}

message SEMCfgOffsetFrequencyArrayResponse {
  int32 status = 1;
}

message SEMCfgOffsetFrequencyDefinitionRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof offset_frequency_definition_enum {
    SemOffsetFrequencyDefinition offset_frequency_definition = 3;
    int32 offset_frequency_definition_raw = 4;
  }
}

message SEMCfgOffsetFrequencyDefinitionResponse {
  int32 status = 1;
}

message SEMCfgOffsetLimitFailMaskRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof limit_fail_mask_enum {
    SemOffsetLimitFailMask limit_fail_mask = 3;
    int32 limit_fail_mask_raw = 4;
  }
}

message SEMCfgOffsetLimitFailMaskResponse {
  int32 status = 1;
}

message SEMCfgOffsetRBWFilterRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof rbw_auto_enum {
    SemOffsetRbwAutoBandwidth rbw_auto = 3;
    int32 rbw_auto_raw = 4;
  }
  double rbw = 5;
  oneof rbw_filter_type_enum {
    SemOffsetRbwFilterType rbw_filter_type = 6;
    int32 rbw_filter_type_raw = 7;
  }
}

message SEMCfgOffsetRBWFilterResponse {
  int32 status = 1;
}

message SEMCfgOffsetRBWFilterArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated SemOffsetRbwAutoBandwidth rbw_auto = 3;
  repeated double rbw = 4;
  repeated SemOffsetRbwFilterType rbw_filter_type = 5;
}

message SEMCfgOffsetRBWFilterArrayResponse {
  int32 status = 1;
}

message SEMCfgOffsetRelativeAttenuationRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double relative_attenuation = 3;
}

message SEMCfgOffsetRelativeAttenuationResponse {
  int32 status = 1;
}

message SEMCfgOffsetRelativeAttenuationArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated double relative_attenuation = 3;
}

message SEMCfgOffsetRelativeAttenuationArrayResponse {
  int32 status = 1;
}

message SEMCfgOffsetRelativeLimitRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof relative_limit_mode_enum {
    SemOffsetRelativeLimitMode relative_limit_mode = 3;
    int32 relative_limit_mode_raw = 4;
  }
  double relative_limit_start = 5;
  double relative_limit_stop = 6;
}

message SEMCfgOffsetRelativeLimitResponse {
  int32 status = 1;
}

message SEMCfgOffsetRelativeLimitArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated SemOffsetRelativeLimitMode relative_limit_mode = 3;
  repeated double relative_limit_start = 4;
  repeated double relative_limit_stop = 5;
}

message SEMCfgOffsetRelativeLimitArrayResponse {
  int32 status = 1;
}

message SEMCfgPowerUnitsRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof power_units_enum {
    SemPowerUnits power_units = 3;
    int32 power_units_raw = 4;
  }
}

message SEMCfgPowerUnitsResponse {
  int32 status = 1;
}

message SEMCfgReferenceTypeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof reference_type_enum {
    SemReferenceType reference_type = 3;
    int32 reference_type_raw = 4;
  }
}

message SEMCfgReferenceTypeResponse {
  int32 status = 1;
}

message SEMCfgSweepTimeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof sweep_time_auto_enum {
    SemSweepTimeAuto sweep_time_auto = 3;
    int32 sweep_time_auto_raw = 4;
  }
  double sweep_time_interval = 5;
}

message SEMCfgSweepTimeResponse {
  int32 status = 1;
}

message SEMFetchAbsoluteMaskTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SEMFetchAbsoluteMaskTraceResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float absolute_mask = 4;
  int32 actual_array_size = 5;
}

message SEMFetchCarrierMeasurementRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SEMFetchCarrierMeasurementResponse {
  int32 status = 1;
  double absolute_power = 2;
  double peak_absolute_power = 3;
  double peak_frequency = 4;
  double total_relative_power = 5;
}

message SEMFetchCompositeMeasurementStatusRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SEMFetchCompositeMeasurementStatusResponse {
  int32 status = 1;
  SemCompositeMeasurementStatus composite_measurement_status = 2;
  int32 composite_measurement_status_raw = 3;
}

message SEMFetchFrequencyResolutionRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SEMFetchFrequencyResolutionResponse {
  int32 status = 1;
  double frequency_resolution = 2;
}

message SEMFetchLowerOffsetMarginRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SEMFetchLowerOffsetMarginResponse {
  int32 status = 1;
  SemLowerOffsetMeasurementStatus measurement_status = 2;
  int32 measurement_status_raw = 3;
  double margin = 4;
  double margin_frequency = 5;
  double margin_absolute_power = 6;
  double margin_relative_power = 7;
}

message SEMFetchLowerOffsetMarginArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SEMFetchLowerOffsetMarginArrayResponse {
  int32 status = 1;
  repeated SemLowerOffsetMeasurementStatus measurement_status = 2;
  repeated int32 measurement_status_raw = 3;
  repeated double margin = 4;
  repeated double margin_frequency = 5;
  repeated double margin_absolute_power = 6;
  repeated double margin_relative_power = 7;
  int32 actual_array_size = 8;
}

message SEMFetchLowerOffsetPowerRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SEMFetchLowerOffsetPowerResponse {
  int32 status = 1;
  double total_absolute_power = 2;
  double total_relative_power = 3;
  double peak_absolute_power = 4;
  double peak_frequency = 5;
  double peak_relative_power = 6;
}

message SEMFetchLowerOffsetPowerArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SEMFetchLowerOffsetPowerArrayResponse {
  int32 status = 1;
  repeated double total_absolute_power = 2;
  repeated double total_relative_power = 3;
  repeated double peak_absolute_power = 4;
  repeated double peak_frequency = 5;
  repeated double peak_relative_power = 6;
  int32 actual_array_size = 7;
}

message SEMFetchRelativeMaskTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SEMFetchRelativeMaskTraceResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float relative_mask = 4;
  int32 actual_array_size = 5;
}

message SEMFetchSpectrumRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SEMFetchSpectrumResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float spectrum = 4;
  int32 actual_array_size = 5;
}

message SEMFetchTotalCarrierPowerRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SEMFetchTotalCarrierPowerResponse {
  int32 status = 1;
  double total_carrier_power = 2;
}

message SEMFetchUpperOffsetMarginRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SEMFetchUpperOffsetMarginResponse {
  int32 status = 1;
  SemUpperOffsetMeasurementStatus measurement_status = 2;
  int32 measurement_status_raw = 3;
  double margin = 4;
  double margin_frequency = 5;
  double margin_absolute_power = 6;
  double margin_relative_power = 7;
}

message SEMFetchUpperOffsetMarginArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SEMFetchUpperOffsetMarginArrayResponse {
  int32 status = 1;
  repeated SemUpperOffsetMeasurementStatus measurement_status = 2;
  repeated int32 measurement_status_raw = 3;
  repeated double margin = 4;
  repeated double margin_frequency = 5;
  repeated double margin_absolute_power = 6;
  repeated double margin_relative_power = 7;
  int32 actual_array_size = 8;
}

message SEMFetchUpperOffsetPowerRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SEMFetchUpperOffsetPowerResponse {
  int32 status = 1;
  double total_absolute_power = 2;
  double total_relative_power = 3;
  double peak_absolute_power = 4;
  double peak_frequency = 5;
  double peak_relative_power = 6;
}

message SEMFetchUpperOffsetPowerArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SEMFetchUpperOffsetPowerArrayResponse {
  int32 status = 1;
  repeated double total_absolute_power = 2;
  repeated double total_relative_power = 3;
  repeated double peak_absolute_power = 4;
  repeated double peak_frequency = 5;
  repeated double peak_relative_power = 6;
  int32 actual_array_size = 7;
}

message SelectMeasurementsRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof measurements_enum {
    MeasurementTypes measurements = 3;
    uint32 measurements_raw = 4;
  }
  bool enable_all_traces = 5;
}

message SelectMeasurementsResponse {
  int32 status = 1;
}

message SendSoftwareEdgeTriggerRequest {
  nidevice_grpc.Session instrument = 1;
}

message SendSoftwareEdgeTriggerResponse {
  int32 status = 1;
}

message SetAttributeF32Request {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
  float attr_val = 4;
}

message SetAttributeF32Response {
  int32 status = 1;
}

message SetAttributeF32ArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
  repeated float attr_val = 4;
}

message SetAttributeF32ArrayResponse {
  int32 status = 1;
}

message SetAttributeF64Request {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
  double attr_val = 4;
}

message SetAttributeF64Response {
  int32 status = 1;
}

message SetAttributeF64ArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
  repeated double attr_val = 4;
}

message SetAttributeF64ArrayResponse {
  int32 status = 1;
}

message SetAttributeI16Request {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
  int32 attr_val = 4;
}

message SetAttributeI16Response {
  int32 status = 1;
}

message SetAttributeI32Request {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
  oneof attr_val_enum {
    NiRFmxSpecAnInt32AttributeValues attr_val = 4;
    int32 attr_val_raw = 5;
  }
}

message SetAttributeI32Response {
  int32 status = 1;
}

message SetAttributeI32ArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
  repeated NiRFmxSpecAnInt32AttributeValues attr_val = 4;
}

message SetAttributeI32ArrayResponse {
  int32 status = 1;
}

message SetAttributeI64Request {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
  int64 attr_val = 4;
}

message SetAttributeI64Response {
  int32 status = 1;
}

message SetAttributeI64ArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
  repeated int64 attr_val = 4;
}

message SetAttributeI64ArrayResponse {
  int32 status = 1;
}

message SetAttributeI8Request {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
  int32 attr_val = 4;
}

message SetAttributeI8Response {
  int32 status = 1;
}

message SetAttributeI8ArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
  repeated int32 attr_val = 4;
}

message SetAttributeI8ArrayResponse {
  int32 status = 1;
}

message SetAttributeNIComplexDoubleArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
  repeated nidevice_grpc.NIComplexNumber attr_val = 4;
}

message SetAttributeNIComplexDoubleArrayResponse {
  int32 status = 1;
}

message SetAttributeNIComplexSingleArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
  repeated nidevice_grpc.NIComplexNumberF32 attr_val = 4;
}

message SetAttributeNIComplexSingleArrayResponse {
  int32 status = 1;
}

message SetAttributeStringRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
  oneof attr_val_enum {
    NiRFmxSpecAnStringAttributeValuesMapped attr_val_mapped = 4;
    string attr_val_raw = 5;
  }
}

message SetAttributeStringResponse {
  int32 status = 1;
}

message SetAttributeU16Request {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
  uint32 attr_val = 4;
}

message SetAttributeU16Response {
  int32 status = 1;
}

message SetAttributeU32Request {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
  uint32 attr_val = 4;
}

message SetAttributeU32Response {
  int32 status = 1;
}

message SetAttributeU32ArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
  repeated uint32 attr_val = 4;
}

message SetAttributeU32ArrayResponse {
  int32 status = 1;
}

message SetAttributeU64ArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
  repeated uint64 attr_val = 4;
}

message SetAttributeU64ArrayResponse {
  int32 status = 1;
}

message SetAttributeU8Request {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
  uint32 attr_val = 4;
}

message SetAttributeU8Response {
  int32 status = 1;
}

message SetAttributeU8ArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  NiRFmxSpecAnAttribute attribute_id = 3;
  bytes attr_val = 4;
}

message SetAttributeU8ArrayResponse {
  int32 status = 1;
}

message SpectrumCfgAveragingRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof averaging_enabled_enum {
    SpectrumAveragingEnabled averaging_enabled = 3;
    int32 averaging_enabled_raw = 4;
  }
  int32 averaging_count = 5;
  oneof averaging_type_enum {
    SpectrumAveragingType averaging_type = 6;
    int32 averaging_type_raw = 7;
  }
}

message SpectrumCfgAveragingResponse {
  int32 status = 1;
}

message SpectrumCfgDetectorRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof detector_type_enum {
    SpectrumDetectorType detector_type = 3;
    int32 detector_type_raw = 4;
  }
  int32 detector_points = 5;
}

message SpectrumCfgDetectorResponse {
  int32 status = 1;
}

message SpectrumCfgFFTRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof fft_window_enum {
    SpectrumFftWindow fft_window = 3;
    int32 fft_window_raw = 4;
  }
  double fft_padding = 5;
}

message SpectrumCfgFFTResponse {
  int32 status = 1;
}

message SpectrumCfgFrequencyStartStopRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double start_frequency = 3;
  double stop_frequency = 4;
}

message SpectrumCfgFrequencyStartStopResponse {
  int32 status = 1;
}

message SpectrumCfgNoiseCompensationEnabledRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof noise_compensation_enabled_enum {
    SpectrumNoiseCompensationEnabled noise_compensation_enabled = 3;
    int32 noise_compensation_enabled_raw = 4;
  }
}

message SpectrumCfgNoiseCompensationEnabledResponse {
  int32 status = 1;
}

message SpectrumCfgPowerUnitsRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof spectrum_power_units_enum {
    SpectrumPowerUnits spectrum_power_units = 3;
    int32 spectrum_power_units_raw = 4;
  }
}

message SpectrumCfgPowerUnitsResponse {
  int32 status = 1;
}

message SpectrumCfgRBWFilterRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof rbw_auto_enum {
    SpectrumRbwAutoBandwidth rbw_auto = 3;
    int32 rbw_auto_raw = 4;
  }
  double rbw = 5;
  oneof rbw_filter_type_enum {
    SpectrumRbwFilterType rbw_filter_type = 6;
    int32 rbw_filter_type_raw = 7;
  }
}

message SpectrumCfgRBWFilterResponse {
  int32 status = 1;
}

message SpectrumCfgSpanRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double span = 3;
}

message SpectrumCfgSpanResponse {
  int32 status = 1;
}

message SpectrumCfgSweepTimeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof sweep_time_auto_enum {
    SpectrumSweepTimeAuto sweep_time_auto = 3;
    int32 sweep_time_auto_raw = 4;
  }
  double sweep_time_interval = 5;
}

message SpectrumCfgSweepTimeResponse {
  int32 status = 1;
}

message SpectrumCfgVBWFilterRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof vbw_auto_enum {
    SpectrumVbwFilterAutoBandwidth vbw_auto = 3;
    int32 vbw_auto_raw = 4;
  }
  double vbw = 5;
  double vbw_to_rbw_ratio = 6;
}

message SpectrumCfgVBWFilterResponse {
  int32 status = 1;
}

message SpectrumFetchMeasurementRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SpectrumFetchMeasurementResponse {
  int32 status = 1;
  double peak_amplitude = 2;
  double peak_frequency = 3;
  double frequency_resolution = 4;
}

message SpectrumFetchPowerTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SpectrumFetchPowerTraceResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float power = 4;
  int32 actual_array_size = 5;
}

message SpectrumFetchSpectrumRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SpectrumFetchSpectrumResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float spectrum = 4;
  int32 actual_array_size = 5;
}

message SpectrumReadRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SpectrumReadResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float spectrum = 4;
  int32 actual_array_size = 5;
}

message SpectrumValidateNoiseCalibrationDataRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
}

message SpectrumValidateNoiseCalibrationDataResponse {
  int32 status = 1;
  SpectrumNoiseCalibrationDataValid noise_calibration_data_valid = 2;
  int32 noise_calibration_data_valid_raw = 3;
}

message SpurCfgAveragingRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof averaging_enabled_enum {
    SpurAveragingEnabled averaging_enabled = 3;
    int32 averaging_enabled_raw = 4;
  }
  int32 averaging_count = 5;
  oneof averaging_type_enum {
    SpurAveragingType averaging_type = 6;
    int32 averaging_type_raw = 7;
  }
}

message SpurCfgAveragingResponse {
  int32 status = 1;
}

message SpurCfgFFTWindowTypeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof fft_window_enum {
    SpurFftWindow fft_window = 3;
    int32 fft_window_raw = 4;
  }
}

message SpurCfgFFTWindowTypeResponse {
  int32 status = 1;
}

message SpurCfgNumberOfRangesRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 number_of_ranges = 3;
}

message SpurCfgNumberOfRangesResponse {
  int32 status = 1;
}

message SpurCfgRangeAbsoluteLimitRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof absolute_limit_mode_enum {
    SpurAbsoluteLimitMode absolute_limit_mode = 3;
    int32 absolute_limit_mode_raw = 4;
  }
  double absolute_limit_start = 5;
  double absolute_limit_stop = 6;
}

message SpurCfgRangeAbsoluteLimitResponse {
  int32 status = 1;
}

message SpurCfgRangeAbsoluteLimitArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated SpurAbsoluteLimitMode absolute_limit_mode = 3;
  repeated double absolute_limit_start = 4;
  repeated double absolute_limit_stop = 5;
}

message SpurCfgRangeAbsoluteLimitArrayResponse {
  int32 status = 1;
}

message SpurCfgRangeDetectorRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof detector_type_enum {
    SpurRangeDetectorType detector_type = 3;
    int32 detector_type_raw = 4;
  }
  int32 detector_points = 5;
}

message SpurCfgRangeDetectorResponse {
  int32 status = 1;
}

message SpurCfgRangeDetectorArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated SpurRangeDetectorType detector_type = 3;
  repeated int32 detector_points = 4;
}

message SpurCfgRangeDetectorArrayResponse {
  int32 status = 1;
}

message SpurCfgRangeFrequencyRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double start_frequency = 3;
  double stop_frequency = 4;
  oneof range_enabled_enum {
    SpurRangeEnabled range_enabled = 5;
    int32 range_enabled_raw = 6;
  }
}

message SpurCfgRangeFrequencyResponse {
  int32 status = 1;
}

message SpurCfgRangeFrequencyArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated double start_frequency = 3;
  repeated double stop_frequency = 4;
  repeated SpurRangeEnabled range_enabled = 5;
}

message SpurCfgRangeFrequencyArrayResponse {
  int32 status = 1;
}

message SpurCfgRangeNumberOfSpursToReportRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 number_of_spurs_to_report = 3;
}

message SpurCfgRangeNumberOfSpursToReportResponse {
  int32 status = 1;
}

message SpurCfgRangeNumberOfSpursToReportArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated int32 number_of_spurs_to_report = 3;
}

message SpurCfgRangeNumberOfSpursToReportArrayResponse {
  int32 status = 1;
}

message SpurCfgRangePeakCriteriaRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double threshold = 3;
  double excursion = 4;
}

message SpurCfgRangePeakCriteriaResponse {
  int32 status = 1;
}

message SpurCfgRangePeakCriteriaArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated double threshold = 3;
  repeated double excursion = 4;
}

message SpurCfgRangePeakCriteriaArrayResponse {
  int32 status = 1;
}

message SpurCfgRangeRBWArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated SpurRbwAutoBandwidth rbw_auto = 3;
  repeated double rbw = 4;
  repeated SpurRbwFilterType rbw_filter_type = 5;
}

message SpurCfgRangeRBWArrayResponse {
  int32 status = 1;
}

message SpurCfgRangeRBWFilterRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof rbw_auto_enum {
    SpurRbwAutoBandwidth rbw_auto = 3;
    int32 rbw_auto_raw = 4;
  }
  double rbw = 5;
  oneof rbw_filter_type_enum {
    SpurRbwFilterType rbw_filter_type = 6;
    int32 rbw_filter_type_raw = 7;
  }
}

message SpurCfgRangeRBWFilterResponse {
  int32 status = 1;
}

message SpurCfgRangeRelativeAttenuationRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double relative_attenuation = 3;
}

message SpurCfgRangeRelativeAttenuationResponse {
  int32 status = 1;
}

message SpurCfgRangeRelativeAttenuationArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated double relative_attenuation = 3;
}

message SpurCfgRangeRelativeAttenuationArrayResponse {
  int32 status = 1;
}

message SpurCfgRangeSweepTimeRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof sweep_time_auto_enum {
    SpurSweepTimeAuto sweep_time_auto = 3;
    int32 sweep_time_auto_raw = 4;
  }
  double sweep_time_interval = 5;
}

message SpurCfgRangeSweepTimeResponse {
  int32 status = 1;
}

message SpurCfgRangeSweepTimeArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated SpurSweepTimeAuto sweep_time_auto = 3;
  repeated double sweep_time_interval = 4;
}

message SpurCfgRangeSweepTimeArrayResponse {
  int32 status = 1;
}

message SpurCfgRangeVBWFilterRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof vbw_auto_enum {
    SpurRangeVbwFilterAutoBandwidth vbw_auto = 3;
    int32 vbw_auto_raw = 4;
  }
  double vbw = 5;
  double vbw_to_rbw_ratio = 6;
}

message SpurCfgRangeVBWFilterResponse {
  int32 status = 1;
}

message SpurCfgRangeVBWFilterArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  repeated SpurRangeVbwFilterAutoBandwidth vbw_auto = 3;
  repeated double vbw = 4;
  repeated double vbw_to_rbw_ratio = 5;
}

message SpurCfgRangeVBWFilterArrayResponse {
  int32 status = 1;
}

message SpurCfgTraceRangeIndexRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  int32 trace_range_index = 3;
}

message SpurCfgTraceRangeIndexResponse {
  int32 status = 1;
}

message SpurFetchAllSpursRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SpurFetchAllSpursResponse {
  int32 status = 1;
  repeated double spur_frequency = 2;
  repeated double spur_amplitude = 3;
  repeated double spur_margin = 4;
  repeated double spur_absolute_limit = 5;
  repeated int32 spur_range_index = 6;
  int32 actual_array_size = 7;
}

message SpurFetchMeasurementStatusRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SpurFetchMeasurementStatusResponse {
  int32 status = 1;
  SpurMeasurementStatus measurement_status = 2;
  int32 measurement_status_raw = 3;
}

message SpurFetchRangeAbsoluteLimitTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SpurFetchRangeAbsoluteLimitTraceResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float absolute_limit = 4;
  int32 actual_array_size = 5;
}

message SpurFetchRangeSpectrumTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SpurFetchRangeSpectrumTraceResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float range_spectrum = 4;
  int32 actual_array_size = 5;
}

message SpurFetchRangeStatusRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SpurFetchRangeStatusResponse {
  int32 status = 1;
  SpurRangeStatus range_status = 2;
  int32 range_status_raw = 3;
  int32 detected_spurs = 4;
}

message SpurFetchRangeStatusArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SpurFetchRangeStatusArrayResponse {
  int32 status = 1;
  repeated SpurRangeStatus range_status = 2;
  repeated int32 range_status_raw = 3;
  repeated int32 number_of_detected_spurs = 4;
  int32 actual_array_size = 5;
}

message SpurFetchSpurMeasurementRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SpurFetchSpurMeasurementResponse {
  int32 status = 1;
  double spur_frequency = 2;
  double spur_amplitude = 3;
  double spur_margin = 4;
  double spur_absolute_limit = 5;
}

message SpurFetchSpurMeasurementArrayRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message SpurFetchSpurMeasurementArrayResponse {
  int32 status = 1;
  repeated double spur_frequency = 2;
  repeated double spur_amplitude = 3;
  repeated double spur_absolute_limit = 4;
  repeated double spur_margin = 5;
  int32 actual_array_size = 6;
}

message TXPCfgAveragingRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof averaging_enabled_enum {
    TxpAveragingEnabled averaging_enabled = 3;
    int32 averaging_enabled_raw = 4;
  }
  int32 averaging_count = 5;
  oneof averaging_type_enum {
    TxpAveragingType averaging_type = 6;
    int32 averaging_type_raw = 7;
  }
}

message TXPCfgAveragingResponse {
  int32 status = 1;
}

message TXPCfgMeasurementIntervalRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double measurement_interval = 3;
}

message TXPCfgMeasurementIntervalResponse {
  int32 status = 1;
}

message TXPCfgRBWFilterRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double rbw = 3;
  oneof rbw_filter_type_enum {
    TxpRbwFilterType rbw_filter_type = 4;
    int32 rbw_filter_type_raw = 5;
  }
  double rrc_alpha = 6;
}

message TXPCfgRBWFilterResponse {
  int32 status = 1;
}

message TXPCfgThresholdRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof threshold_enabled_enum {
    TxpThresholdEnabled threshold_enabled = 3;
    int32 threshold_enabled_raw = 4;
  }
  double threshold_level = 5;
  oneof threshold_type_enum {
    TxpThresholdType threshold_type = 6;
    int32 threshold_type_raw = 7;
  }
}

message TXPCfgThresholdResponse {
  int32 status = 1;
}

message TXPCfgVBWFilterRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  oneof vbw_auto_enum {
    TxpVbwFilterAutoBandwidth vbw_auto = 3;
    int32 vbw_auto_raw = 4;
  }
  double vbw = 5;
  double vbw_to_rbw_ratio = 6;
}

message TXPCfgVBWFilterResponse {
  int32 status = 1;
}

message TXPFetchMeasurementRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message TXPFetchMeasurementResponse {
  int32 status = 1;
  double average_mean_power = 2;
  double peak_to_average_ratio = 3;
  double maximum_power = 4;
  double minimum_power = 5;
}

message TXPFetchPowerTraceRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message TXPFetchPowerTraceResponse {
  int32 status = 1;
  double x0 = 2;
  double dx = 3;
  repeated float power = 4;
  int32 actual_array_size = 5;
}

message TXPReadRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message TXPReadResponse {
  int32 status = 1;
  double average_mean_power = 2;
  double peak_to_average_ratio = 3;
  double maximum_power = 4;
  double minimum_power = 5;
}

message WaitForAcquisitionCompleteRequest {
  nidevice_grpc.Session instrument = 1;
  double timeout = 2;
}

message WaitForAcquisitionCompleteResponse {
  int32 status = 1;
}

message WaitForMeasurementCompleteRequest {
  nidevice_grpc.Session instrument = 1;
  string selector_string = 2;
  double timeout = 3;
}

message WaitForMeasurementCompleteResponse {
  int32 status = 1;
}

