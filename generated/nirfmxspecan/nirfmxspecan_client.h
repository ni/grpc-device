
//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// EXPERIMENTAL Client convenience wrapper for NI-RFMXSPECAN.
//---------------------------------------------------------------------
#ifndef NIRFMXSPECAN_GRPC_CLIENT_H
#define NIRFMXSPECAN_GRPC_CLIENT_H

#include <grpcpp/grpcpp.h>

#include <nirfmxspecan.grpc.pb.h>
#include <tests/utilities/client_helpers.h>

#include <memory>
#include <vector>

namespace nirfmxspecan_grpc::experimental::client {

namespace pb = ::google::protobuf;
using StubPtr = std::unique_ptr<NiRFmxSpecAn::Stub>;
using namespace nidevice_grpc::experimental::client;


ACPCfgAveragingResponse acp_cfg_averaging(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<AcpAveragingEnabled, pb::int32>& averaging_enabled, const pb::int32& averaging_count, const simple_variant<AcpAveragingType, pb::int32>& averaging_type);
ACPCfgCarrierAndOffsetsResponse acp_cfg_carrier_and_offsets(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& integration_bandwidth, const pb::int32& number_of_offsets, const double& channel_spacing);
ACPCfgCarrierFrequencyResponse acp_cfg_carrier_frequency(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& carrier_frequency);
ACPCfgCarrierIntegrationBandwidthResponse acp_cfg_carrier_integration_bandwidth(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& integration_bandwidth);
ACPCfgCarrierModeResponse acp_cfg_carrier_mode(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<AcpCarrierMode, pb::int32>& carrier_mode);
ACPCfgCarrierRRCFilterResponse acp_cfg_carrier_rrc_filter(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<AcpCarrierRrcFilterEnabled, pb::int32>& rrc_filter_enabled, const double& rrc_alpha);
ACPCfgFFTResponse acp_cfg_fft(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<AcpFftWindow, pb::int32>& fft_window, const double& fft_padding);
ACPCfgMeasurementMethodResponse acp_cfg_measurement_method(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<AcpMeasurementMethod, pb::int32>& measurement_method);
ACPCfgNoiseCompensationEnabledResponse acp_cfg_noise_compensation_enabled(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<AcpNoiseCompensationEnabled, pb::int32>& noise_compensation_enabled);
ACPCfgNumberOfCarriersResponse acp_cfg_number_of_carriers(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& number_of_carriers);
ACPCfgNumberOfOffsetsResponse acp_cfg_number_of_offsets(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& number_of_offsets);
ACPCfgOffsetResponse acp_cfg_offset(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& offset_frequency, const simple_variant<AcpOffsetSideband, pb::int32>& offset_sideband, const simple_variant<AcpOffsetEnabled, pb::int32>& offset_enabled);
ACPCfgOffsetArrayResponse acp_cfg_offset_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<double>& offset_frequency, const std::vector<pb::int32>& offset_sideband, const std::vector<pb::int32>& offset_enabled);
ACPCfgOffsetFrequencyDefinitionResponse acp_cfg_offset_frequency_definition(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<AcpOffsetFrequencyDefinition, pb::int32>& offset_frequency_definition);
ACPCfgOffsetIntegrationBandwidthResponse acp_cfg_offset_integration_bandwidth(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& integration_bandwidth);
ACPCfgOffsetIntegrationBandwidthArrayResponse acp_cfg_offset_integration_bandwidth_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<double>& integration_bandwidth);
ACPCfgOffsetPowerReferenceResponse acp_cfg_offset_power_reference(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<AcpOffsetPowerReferenceCarrier, pb::int32>& offset_reference_carrier, const pb::int32& offset_reference_specific);
ACPCfgOffsetPowerReferenceArrayResponse acp_cfg_offset_power_reference_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<pb::int32>& offset_power_reference_carrier, const std::vector<pb::int32>& offset_power_reference_specific);
ACPCfgOffsetRRCFilterResponse acp_cfg_offset_rrc_filter(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<AcpOffsetRrcFilterEnabled, pb::int32>& rrc_filter_enabled, const double& rrc_alpha);
ACPCfgOffsetRRCFilterArrayResponse acp_cfg_offset_rrc_filter_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<pb::int32>& rrc_filter_enabled, const std::vector<double>& rrc_alpha);
ACPCfgOffsetRelativeAttenuationResponse acp_cfg_offset_relative_attenuation(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& relative_attenuation);
ACPCfgOffsetRelativeAttenuationArrayResponse acp_cfg_offset_relative_attenuation_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<double>& relative_attenuation);
ACPCfgPowerUnitsResponse acp_cfg_power_units(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<AcpPowerUnits, pb::int32>& power_units);
ACPCfgRBWFilterResponse acp_cfg_rbw_filter(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<AcpRbwAutoBandwidth, pb::int32>& rbw_auto, const double& rbw, const simple_variant<AcpRbwFilterType, pb::int32>& rbw_filter_type);
ACPCfgSweepTimeResponse acp_cfg_sweep_time(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<AcpSweepTimeAuto, pb::int32>& sweep_time_auto, const double& sweep_time_interval);
ACPFetchAbsolutePowersTraceResponse acp_fetch_absolute_powers_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout, const pb::int32& trace_index);
ACPFetchCarrierMeasurementResponse acp_fetch_carrier_measurement(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
ACPFetchFrequencyResolutionResponse acp_fetch_frequency_resolution(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
ACPFetchOffsetMeasurementResponse acp_fetch_offset_measurement(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
ACPFetchOffsetMeasurementArrayResponse acp_fetch_offset_measurement_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
ACPFetchRelativePowersTraceResponse acp_fetch_relative_powers_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout, const pb::int32& trace_index);
ACPFetchSpectrumResponse acp_fetch_spectrum(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
ACPFetchTotalCarrierPowerResponse acp_fetch_total_carrier_power(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
ACPReadResponse acp_read(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
ACPValidateNoiseCalibrationDataResponse acp_validate_noise_calibration_data(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string);
AMPMCfgAMToAMCurveFitResponse ampm_cfg_am_to_am_curve_fit(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& am_to_am_curve_fit_order, const simple_variant<AmpmAMToAMCurveFitType, pb::int32>& am_to_am_curve_fit_type);
AMPMCfgAMToPMCurveFitResponse ampm_cfg_am_to_pm_curve_fit(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& am_to_pm_curve_fit_order, const simple_variant<AmpmAMToPMCurveFitType, pb::int32>& am_to_pm_curve_fit_type);
AMPMCfgAveragingResponse ampm_cfg_averaging(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<AmpmAveragingEnabled, pb::int32>& averaging_enabled, const pb::int32& averaging_count);
AMPMCfgCompressionPointsResponse ampm_cfg_compression_points(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<AmpmCompressionPointEnabled, pb::int32>& compression_point_enabled, const std::vector<double>& compression_level);
AMPMCfgDUTAverageInputPowerResponse ampm_cfg_dut_average_input_power(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& dut_average_input_power);
AMPMCfgMeasurementIntervalResponse ampm_cfg_measurement_interval(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& measurement_interval);
AMPMCfgMeasurementSampleRateResponse ampm_cfg_measurement_sample_rate(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<AmpmMeasurementSampleRateMode, pb::int32>& sample_rate_mode, const double& sample_rate);
AMPMCfgReferencePowerTypeResponse ampm_cfg_reference_power_type(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<AmpmReferencePowerType, pb::int32>& reference_power_type);
AMPMCfgReferenceWaveformResponse ampm_cfg_reference_waveform(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& x0, const double& dx, const std::vector<nidevice_grpc::NIComplexNumberF32>& reference_waveform, const simple_variant<AmpmReferenceWaveformIdleDurationPresent, pb::int32>& idle_duration_present, const simple_variant<AmpmSignalType, pb::int32>& signal_type);
AMPMCfgSynchronizationMethodResponse ampm_cfg_synchronization_method(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<AmpmSynchronizationMethod, pb::int32>& synchronization_method);
AMPMCfgThresholdResponse ampm_cfg_threshold(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<AmpmThresholdEnabled, pb::int32>& threshold_enabled, const double& threshold_level, const simple_variant<AmpmThresholdType, pb::int32>& threshold_type);
AMPMFetchAMToAMTraceResponse ampm_fetch_am_to_am_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
AMPMFetchAMToPMTraceResponse ampm_fetch_am_to_pm_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
AMPMFetchCompressionPointsResponse ampm_fetch_compression_points(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
AMPMFetchCurveFitCoefficientsResponse ampm_fetch_curve_fit_coefficients(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
AMPMFetchCurveFitResidualResponse ampm_fetch_curve_fit_residual(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
AMPMFetchDUTCharacteristicsResponse ampm_fetch_dut_characteristics(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
AMPMFetchErrorResponse ampm_fetch_error(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
AMPMFetchProcessedMeanAcquiredWaveformResponse ampm_fetch_processed_mean_acquired_waveform(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
AMPMFetchProcessedReferenceWaveformResponse ampm_fetch_processed_reference_waveform(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
AMPMFetchRelativePhaseTraceResponse ampm_fetch_relative_phase_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
AMPMFetchRelativePowerTraceResponse ampm_fetch_relative_power_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
AbortMeasurementsResponse abort_measurements(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string);
AnalyzeIQ1WaveformResponse analyze_iq1_waveform(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::string& result_name, const double& x0, const double& dx, const std::vector<nidevice_grpc::NIComplexNumberF32>& iq, const pb::int32& reset, const pb::int64& reserved);
AnalyzeSpectrum1WaveformResponse analyze_spectrum1_waveform(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::string& result_name, const double& x0, const double& dx, const std::vector<float>& spectrum, const pb::int32& reset, const pb::int64& reserved);
AutoLevelResponse auto_level(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& bandwidth, const double& measurement_interval);
BuildCarrierStringResponse build_carrier_string(const StubPtr& stub, const pb::string& selector_string, const pb::int32& carrier_number);
BuildHarmonicStringResponse build_harmonic_string(const StubPtr& stub, const pb::string& selector_string, const pb::int32& harmonic_number);
BuildIntermodStringResponse build_intermod_string(const StubPtr& stub, const pb::string& selector_string, const pb::int32& intermod_number, const pb::int32& selector_string_out_length, const pb::string& selector_string_out);
BuildListStepStringResponse build_list_step_string(const StubPtr& stub, const pb::string& list_name, const pb::string& result_name, const pb::int32& step_number);
BuildListStringResponse build_list_string(const StubPtr& stub, const pb::string& list_name, const pb::string& result_name);
BuildMarkerStringResponse build_marker_string(const StubPtr& stub, const pb::string& selector_string, const pb::int32& marker_number);
BuildOffsetStringResponse build_offset_string(const StubPtr& stub, const pb::string& selector_string, const pb::int32& offset_number);
BuildRangeSpurStringResponse build_range_spur_string(const StubPtr& stub, const pb::string& signal_name, const pb::string& result_name, const pb::int32& range_number, const pb::int32& spur_number);
BuildRangeStringResponse build_range_string(const StubPtr& stub, const pb::string& selector_string, const pb::int32& range_number);
BuildSegmentStringResponse build_segment_string(const StubPtr& stub, const pb::string& selector_string, const pb::int32& segment_number);
BuildSignalStringResponse build_signal_string(const StubPtr& stub, const pb::string& signal_name, const pb::string& result_name);
BuildSpurStringResponse build_spur_string(const StubPtr& stub, const pb::string& selector_string, const pb::int32& spur_number);
CCDFCfgMeasurementIntervalResponse ccdf_cfg_measurement_interval(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& measurement_interval);
CCDFCfgNumberOfRecordsResponse ccdf_cfg_number_of_records(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& number_of_records);
CCDFCfgRBWFilterResponse ccdf_cfg_rbw_filter(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& rbw, const simple_variant<CcdfRbwFilterType, pb::int32>& rbw_filter_type, const double& rrc_alpha);
CCDFCfgThresholdResponse ccdf_cfg_threshold(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<CcdfThresholdEnabled, pb::int32>& threshold_enabled, const double& threshold_level, const simple_variant<CcdfThresholdType, pb::int32>& threshold_type);
CCDFFetchBasicPowerProbabilitiesResponse ccdf_fetch_basic_power_probabilities(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
CCDFFetchGaussianProbabilitiesTraceResponse ccdf_fetch_gaussian_probabilities_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
CCDFFetchPowerResponse ccdf_fetch_power(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
CCDFFetchProbabilitiesTraceResponse ccdf_fetch_probabilities_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
CCDFReadResponse ccdf_read(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
CHPCfgAveragingResponse chp_cfg_averaging(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<ChpAveragingEnabled, pb::int32>& averaging_enabled, const pb::int32& averaging_count, const simple_variant<ChpAveragingType, pb::int32>& averaging_type);
CHPCfgCarrierOffsetResponse chp_cfg_carrier_offset(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& carrier_frequency);
CHPCfgFFTResponse chp_cfg_fft(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<ChpFftWindow, pb::int32>& fft_window, const double& fft_padding);
CHPCfgIntegrationBandwidthResponse chp_cfg_integration_bandwidth(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& integration_bandwidth);
CHPCfgNumberOfCarriersResponse chp_cfg_number_of_carriers(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& number_of_carriers);
CHPCfgRBWFilterResponse chp_cfg_rbw_filter(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<ChpRbwAutoBandwidth, pb::int32>& rbw_auto, const double& rbw, const simple_variant<ChpRbwFilterType, pb::int32>& rbw_filter_type);
CHPCfgRRCFilterResponse chp_cfg_rrc_filter(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<ChpCarrierRrcFilterEnabled, pb::int32>& rrc_filter_enabled, const double& rrc_alpha);
CHPCfgSpanResponse chp_cfg_span(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& span);
CHPCfgSweepTimeResponse chp_cfg_sweep_time(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<ChpSweepTimeAuto, pb::int32>& sweep_time_auto, const double& sweep_time_interval);
CHPFetchCarrierMeasurementResponse chp_fetch_carrier_measurement(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
CHPFetchSpectrumResponse chp_fetch_spectrum(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
CHPFetchTotalCarrierPowerResponse chp_fetch_total_carrier_power(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
CHPReadResponse chp_read(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
CHPValidateNoiseCalibrationDataResponse chp_validate_noise_calibration_data(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string);
CfgDigitalEdgeTriggerResponse cfg_digital_edge_trigger(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<DigitalEdgeTriggerSource, std::string>& digital_edge_source, const simple_variant<DigitalEdgeTriggerEdge, pb::int32>& digital_edge, const double& trigger_delay, const pb::int32& enable_trigger);
CfgExternalAttenuationResponse cfg_external_attenuation(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& external_attenuation);
CfgFrequencyResponse cfg_frequency(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& center_frequency);
CfgFrequencyReferenceResponse cfg_frequency_reference(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& channel_name, const simple_variant<FrequencyReferenceSource, std::string>& frequency_reference_source, const double& frequency_reference_frequency);
CfgIQPowerEdgeTriggerResponse cfg_iq_power_edge_trigger(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::string& iq_power_edge_source, const double& iq_power_edge_level, const simple_variant<IQPowerEdgeTriggerSlope, pb::int32>& iq_power_edge_slope, const double& trigger_delay, const simple_variant<TriggerMinimumQuietTimeMode, pb::int32>& trigger_min_quiet_time_mode, const double& trigger_min_quiet_time_duration, const pb::int32& enable_trigger);
CfgMechanicalAttenuationResponse cfg_mechanical_attenuation(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& channel_name, const simple_variant<MechanicalAttenuationAuto, pb::int32>& mechanical_attenuation_auto, const double& mechanical_attenuation_value);
CfgRFResponse cfg_rf(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& center_frequency, const double& reference_level, const double& external_attenuation);
CfgRFAttenuationResponse cfg_rf_attenuation(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& channel_name, const simple_variant<RFAttenuationAuto, pb::int32>& rf_attenuation_auto, const double& rf_attenuation_value);
CfgReferenceLevelResponse cfg_reference_level(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& reference_level);
CfgSoftwareEdgeTriggerResponse cfg_software_edge_trigger(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& trigger_delay, const pb::int32& enable_trigger);
CheckMeasurementStatusResponse check_measurement_status(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string);
ClearAllNamedResultsResponse clear_all_named_results(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string);
ClearNamedResultResponse clear_named_result(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string);
ClearNoiseCalibrationDatabaseResponse clear_noise_calibration_database(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string);
CloneSignalConfigurationResponse clone_signal_configuration(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& old_signal_name, const pb::string& new_signal_name);
CloseResponse close(const StubPtr& stub, const nidevice_grpc::Session& instrument, const bool& force_destroy);
CommitResponse commit(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string);
CreateListResponse create_list(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& list_name);
CreateListStepResponse create_list_step(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string);
CreateSignalConfigurationResponse create_signal_configuration(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& signal_name);
DPDApplyDigitalPredistortionResponse dpd_apply_digital_predistortion(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& x0_in, const double& dx_in, const std::vector<nidevice_grpc::NIComplexNumberF32>& waveform_in, const simple_variant<DpdApplyDpdIdleDurationPresent, pb::int32>& idle_duration_present, const double& measurement_timeout);
DPDApplyPreDPDSignalConditioningResponse dpd_apply_pre_dpd_signal_conditioning(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& x0_in, const double& dx_in, const std::vector<nidevice_grpc::NIComplexNumberF32>& waveform_in, const simple_variant<DpdApplyDpdIdleDurationPresent, pb::int32>& idle_duration_present);
DPDCfgApplyDPDConfigurationInputResponse dpd_cfg_apply_dpd_configuration_input(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<DpdApplyDpdConfigurationInput, pb::int32>& configuration_input);
DPDCfgApplyDPDLookupTableCorrectionTypeResponse dpd_cfg_apply_dpd_lookup_table_correction_type(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<DpdApplyDpdLookupTableCorrectionType, pb::int32>& lut_correction_type);
DPDCfgApplyDPDMemoryModelCorrectionTypeResponse dpd_cfg_apply_dpd_memory_model_correction_type(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<DpdApplyDpdMemoryModelCorrectionType, pb::int32>& memory_model_correction_type);
DPDCfgApplyDPDUserDPDPolynomialResponse dpd_cfg_apply_dpd_user_dpd_polynomial(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<nidevice_grpc::NIComplexNumberF32>& dpd_polynomial);
DPDCfgApplyDPDUserLookupTableResponse dpd_cfg_apply_dpd_user_lookup_table(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<float>& lut_input_powers, const std::vector<nidevice_grpc::NIComplexNumberF32>& lut_complex_gains);
DPDCfgAveragingResponse dpd_cfg_averaging(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<DpdAveragingEnabled, pb::int32>& averaging_enabled, const pb::int32& averaging_count);
DPDCfgDPDModelResponse dpd_cfg_dpd_model(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<DpdModel, pb::int32>& dpd_model);
DPDCfgDUTAverageInputPowerResponse dpd_cfg_dut_average_input_power(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& dut_average_input_power);
DPDCfgGeneralizedMemoryPolynomialCrossTermsResponse dpd_cfg_generalized_memory_polynomial_cross_terms(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& memory_polynomial_lead_order, const pb::int32& memory_polynomial_lag_order, const pb::int32& memory_polynomial_lead_memory_depth, const pb::int32& memory_polynomial_lag_memory_depth, const pb::int32& memory_polynomial_maximum_lead, const pb::int32& memory_polynomial_maximum_lag);
DPDCfgIterativeDPDEnabledResponse dpd_cfg_iterative_dpd_enabled(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<DpdIterativeDpdEnabled, pb::int32>& iterative_dpd_enabled);
DPDCfgLookupTableAMToAMCurveFitResponse dpd_cfg_lookup_table_am_to_am_curve_fit(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& am_to_am_curve_fit_order, const simple_variant<DpdLookupTableAMToAMCurveFitType, pb::int32>& am_to_am_curve_fit_type);
DPDCfgLookupTableAMToPMCurveFitResponse dpd_cfg_lookup_table_am_to_pm_curve_fit(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& am_to_pm_curve_fit_order, const simple_variant<DpdLookupTableAMToPMCurveFitType, pb::int32>& am_to_pm_curve_fit_type);
DPDCfgLookupTableStepSizeResponse dpd_cfg_lookup_table_step_size(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& step_size);
DPDCfgLookupTableThresholdResponse dpd_cfg_lookup_table_threshold(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<DpdLookupTableThresholdEnabled, pb::int32>& threshold_enabled, const double& threshold_level, const simple_variant<DpdLookupTableThresholdType, pb::int32>& threshold_type);
DPDCfgLookupTableTypeResponse dpd_cfg_lookup_table_type(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<DpdLookupTableType, pb::int32>& lookup_table_type);
DPDCfgMeasurementIntervalResponse dpd_cfg_measurement_interval(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& measurement_interval);
DPDCfgMeasurementSampleRateResponse dpd_cfg_measurement_sample_rate(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<DpdMeasurementSampleRateMode, pb::int32>& sample_rate_mode, const double& sample_rate);
DPDCfgMemoryPolynomialResponse dpd_cfg_memory_polynomial(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& memory_polynomial_order, const pb::int32& memory_polynomial_memory_depth);
DPDCfgPreviousDPDPolynomialResponse dpd_cfg_previous_dpd_polynomial(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<nidevice_grpc::NIComplexNumberF32>& previous_dpd_polynomial);
DPDCfgReferenceWaveformResponse dpd_cfg_reference_waveform(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& x0, const double& dx, const std::vector<nidevice_grpc::NIComplexNumberF32>& reference_waveform, const simple_variant<DpdReferenceWaveformIdleDurationPresent, pb::int32>& idle_duration_present, const simple_variant<DpdSignalType, pb::int32>& signal_type);
DPDCfgSynchronizationMethodResponse dpd_cfg_synchronization_method(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<DpdSynchronizationMethod, pb::int32>& synchronization_method);
DPDFetchApplyDPDPreCFRPAPRResponse dpd_fetch_apply_dpd_pre_cfrpapr(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
DPDFetchAverageGainResponse dpd_fetch_average_gain(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
DPDFetchDPDPolynomialResponse dpd_fetch_dpd_polynomial(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
DPDFetchLookupTableResponse dpd_fetch_lookup_table(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
DPDFetchNMSEResponse dpd_fetch_nmse(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
DPDFetchProcessedMeanAcquiredWaveformResponse dpd_fetch_processed_mean_acquired_waveform(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
DPDFetchProcessedReferenceWaveformResponse dpd_fetch_processed_reference_waveform(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
DeleteListResponse delete_list(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& list_name);
DeleteSignalConfigurationResponse delete_signal_configuration(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& signal_name);
DisableTriggerResponse disable_trigger(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string);
FCntCfgAveragingResponse f_cnt_cfg_averaging(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<FcntAveragingEnabled, pb::int32>& averaging_enabled, const pb::int32& averaging_count, const simple_variant<FcntAveragingType, pb::int32>& averaging_type);
FCntCfgMeasurementIntervalResponse f_cnt_cfg_measurement_interval(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& measurement_interval);
FCntCfgRBWFilterResponse f_cnt_cfg_rbw_filter(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& rbw, const simple_variant<FcntRbwFilterType, pb::int32>& rbw_filter_type, const double& rrc_alpha);
FCntCfgThresholdResponse f_cnt_cfg_threshold(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<FcntThresholdEnabled, pb::int32>& threshold_enabled, const double& threshold_level, const simple_variant<FcntThresholdType, pb::int32>& threshold_type);
FCntFetchAllanDeviationResponse f_cnt_fetch_allan_deviation(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
FCntFetchFrequencyTraceResponse f_cnt_fetch_frequency_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
FCntFetchMeasurementResponse f_cnt_fetch_measurement(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
FCntFetchPhaseTraceResponse f_cnt_fetch_phase_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
FCntFetchPowerTraceResponse f_cnt_fetch_power_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
FCntReadResponse f_cnt_read(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
GetAllNamedResultNamesResponse get_all_named_result_names(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string);
GetAttributeF32Response get_attribute_f32(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id);
GetAttributeF32ArrayResponse get_attribute_f32_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id);
GetAttributeF64Response get_attribute_f64(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id);
GetAttributeF64ArrayResponse get_attribute_f64_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id);
GetAttributeI16Response get_attribute_i16(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id);
GetAttributeI32Response get_attribute_i32(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id);
GetAttributeI32ArrayResponse get_attribute_i32_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id);
GetAttributeI64Response get_attribute_i64(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id);
GetAttributeI64ArrayResponse get_attribute_i64_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id);
GetAttributeI8Response get_attribute_i8(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id);
GetAttributeI8ArrayResponse get_attribute_i8_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id);
GetAttributeNIComplexDoubleArrayResponse get_attribute_ni_complex_double_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id);
GetAttributeNIComplexSingleArrayResponse get_attribute_ni_complex_single_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id);
GetAttributeStringResponse get_attribute_string(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id);
GetAttributeU16Response get_attribute_u16(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id);
GetAttributeU32Response get_attribute_u32(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id);
GetAttributeU32ArrayResponse get_attribute_u32_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id);
GetAttributeU64ArrayResponse get_attribute_u64_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id);
GetAttributeU8Response get_attribute_u8(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id);
GetAttributeU8ArrayResponse get_attribute_u8_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id);
GetErrorResponse get_error(const StubPtr& stub, const nidevice_grpc::Session& instrument);
GetErrorStringResponse get_error_string(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::int32& error_code);
HarmCfgAutoHarmonicsResponse harm_cfg_auto_harmonics(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<HarmAutoHarmonicsSetupEnabled, pb::int32>& auto_harmonics_setup_enabled);
HarmCfgAveragingResponse harm_cfg_averaging(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<HarmAveragingEnabled, pb::int32>& averaging_enabled, const pb::int32& averaging_count, const simple_variant<HarmAveragingType, pb::int32>& averaging_type);
HarmCfgFundamentalMeasurementIntervalResponse harm_cfg_fundamental_measurement_interval(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& measurement_interval);
HarmCfgFundamentalRBWResponse harm_cfg_fundamental_rbw(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& rbw, const simple_variant<HarmRbwFilterType, pb::int32>& rbw_filter_type, const double& rrc_alpha);
HarmCfgHarmonicResponse harm_cfg_harmonic(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& harmonic_order, const double& harmonic_bandwidth, const simple_variant<HarmHarmonicEnabled, pb::int32>& harmonic_enabled, const double& harmonic_measurement_interval);
HarmCfgHarmonicArrayResponse harm_cfg_harmonic_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<pb::int32>& harmonic_order, const std::vector<double>& harmonic_bandwidth, const std::vector<pb::int32>& harmonic_enabled, const std::vector<double>& harmonic_measurement_interval);
HarmCfgNumberOfHarmonicsResponse harm_cfg_number_of_harmonics(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& number_of_harmonics);
HarmFetchHarmonicMeasurementResponse harm_fetch_harmonic_measurement(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
HarmFetchHarmonicMeasurementArrayResponse harm_fetch_harmonic_measurement_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
HarmFetchHarmonicPowerTraceResponse harm_fetch_harmonic_power_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
HarmFetchTHDResponse harm_fetch_thd(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
HarmReadResponse harm_read(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
IMCfgAutoIntermodsSetupResponse im_cfg_auto_intermods_setup(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<IMAutoIntermodsSetupEnabled, pb::int32>& auto_intermods_setup_enabled, const pb::int32& maximum_intermod_order);
IMCfgAveragingResponse im_cfg_averaging(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<IMAveragingEnabled, pb::int32>& averaging_enabled, const pb::int32& averaging_count, const simple_variant<IMAveragingType, pb::int32>& averaging_type);
IMCfgFFTResponse im_cfg_fft(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<IMFftWindow, pb::int32>& fft_window, const double& fft_padding);
IMCfgFrequencyDefinitionResponse im_cfg_frequency_definition(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<IMFrequencyDefinition, pb::int32>& frequency_definition);
IMCfgFundamentalTonesResponse im_cfg_fundamental_tones(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& lower_tone_frequency, const double& upper_tone_frequency);
IMCfgIntermodResponse im_cfg_intermod(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& intermod_order, const double& lower_intermod_frequency, const double& upper_intermod_frequency, const simple_variant<IMIntermodSide, pb::int32>& intermod_side, const simple_variant<IMIntermodEnabled, pb::int32>& intermod_enabled);
IMCfgIntermodArrayResponse im_cfg_intermod_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<pb::int32>& intermod_order, const std::vector<double>& lower_intermod_frequency, const std::vector<double>& upper_intermod_frequency, const std::vector<pb::int32>& intermod_side, const std::vector<pb::int32>& intermod_enabled);
IMCfgMeasurementMethodResponse im_cfg_measurement_method(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<IMMeasurementMethod, pb::int32>& measurement_method);
IMCfgNumberOfIntermodsResponse im_cfg_number_of_intermods(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& number_of_intermods);
IMCfgRBWFilterResponse im_cfg_rbw_filter(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<IMRbwFilterAutoBandwidth, pb::int32>& rbw_auto, const double& rbw, const simple_variant<IMRbwFilterType, pb::int32>& rbw_filter_type);
IMCfgSweepTimeResponse im_cfg_sweep_time(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<IMSweepTimeAuto, pb::int32>& sweep_time_auto, const double& sweep_time_interval);
IMFetchFundamentalMeasurementResponse im_fetch_fundamental_measurement(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
IMFetchInterceptPowerResponse im_fetch_intercept_power(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
IMFetchInterceptPowerArrayResponse im_fetch_intercept_power_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
IMFetchIntermodMeasurementResponse im_fetch_intermod_measurement(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
IMFetchIntermodMeasurementArrayResponse im_fetch_intermod_measurement_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
IMFetchSpectrumResponse im_fetch_spectrum(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout, const pb::int32& spectrum_index);
IQCfgAcquisitionResponse iq_cfg_acquisition(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& sample_rate, const pb::int32& number_of_records, const double& acquisition_time, const double& pretrigger_time);
IQCfgBandwidthResponse iq_cfg_bandwidth(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<IQBandwidthAuto, pb::int32>& bandwidth_auto, const double& bandwidth);
IQFetchDataResponse iq_fetch_data(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout, const pb::int32& record_to_fetch, const pb::int64& samples_to_read);
IQGetRecordsDoneResponse iq_get_records_done(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string);
InitializeResponse initialize(const StubPtr& stub, const pb::string& resource_name, const pb::string& option_string);
InitializeFromNIRFSASessionResponse initialize_from_nirfsa_session(const StubPtr& stub, const nidevice_grpc::Session& nirfsa_session);
InitiateResponse initiate(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::string& result_name);
MarkerCfgNumberOfMarkersResponse marker_cfg_number_of_markers(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& number_of_markers);
MarkerCfgPeakExcursionResponse marker_cfg_peak_excursion(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<MarkerPeakExcursionEnabled, pb::int32>& peak_excursion_enabled, const double& peak_excursion);
MarkerCfgReferenceMarkerResponse marker_cfg_reference_marker(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& reference_marker);
MarkerCfgThresholdResponse marker_cfg_threshold(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<MarkerThresholdEnabled, pb::int32>& threshold_enabled, const double& threshold);
MarkerCfgTraceResponse marker_cfg_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<MarkerTrace, pb::int32>& trace);
MarkerCfgTypeResponse marker_cfg_type(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<MarkerType, pb::int32>& marker_type);
MarkerCfgXLocationResponse marker_cfg_x_location(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& marker_x_location);
MarkerFetchXYResponse marker_fetch_xy(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string);
MarkerNextPeakResponse marker_next_peak(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<MarkerNextPeak, pb::int32>& next_peak);
MarkerPeakSearchResponse marker_peak_search(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string);
NFCfgAveragingResponse nf_cfg_averaging(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<NFAveragingEnabled, pb::int32>& averaging_enabled, const pb::int32& averaging_count);
NFCfgCalibrationLossResponse nf_cfg_calibration_loss(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<NFCalibrationLossCompensationEnabled, pb::int32>& calibration_loss_compensation_enabled, const std::vector<double>& calibration_loss_frequency, const std::vector<double>& calibration_loss, const double& calibration_loss_temperature);
NFCfgColdSourceDUTSParametersResponse nf_cfg_cold_source_duts_parameters(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<double>& dut_s_parameters_frequency, const std::vector<double>& duts21, const std::vector<double>& duts12, const std::vector<double>& duts11, const std::vector<double>& duts22);
NFCfgColdSourceInputTerminationResponse nf_cfg_cold_source_input_termination(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<double>& termination_vswr, const std::vector<double>& termination_vswr_frequency, const double& termination_temperature);
NFCfgColdSourceModeResponse nf_cfg_cold_source_mode(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<NFColdSourceMode, pb::int32>& cold_source_mode);
NFCfgDUTInputLossResponse nf_cfg_dut_input_loss(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<NFDutInputLossCompensationEnabled, pb::int32>& dut_input_loss_compensation_enabled, const std::vector<double>& dut_input_loss_frequency, const std::vector<double>& dut_input_loss, const double& dut_input_loss_temperature);
NFCfgDUTOutputLossResponse nf_cfg_dut_output_loss(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<NFDutOutputLossCompensationEnabled, pb::int32>& dut_output_loss_compensation_enabled, const std::vector<double>& dut_output_loss_frequency, const std::vector<double>& dut_output_loss, const double& dut_output_loss_temperature);
NFCfgFrequencyListResponse nf_cfg_frequency_list(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<double>& frequency_list);
NFCfgFrequencyListStartStopPointsResponse nf_cfg_frequency_list_start_stop_points(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& start_frequency, const double& stop_frequency, const pb::int32& number_of_points);
NFCfgFrequencyListStartStopStepResponse nf_cfg_frequency_list_start_stop_step(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& start_frequency, const double& stop_frequency, const double& step_size);
NFCfgMeasurementBandwidthResponse nf_cfg_measurement_bandwidth(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& measurement_bandwidth);
NFCfgMeasurementIntervalResponse nf_cfg_measurement_interval(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& measurement_interval);
NFCfgMeasurementMethodResponse nf_cfg_measurement_method(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<NFMeasurementMethod, pb::int32>& measurement_method);
NFCfgYFactorModeResponse nf_cfg_y_factor_mode(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<NFYFactorMode, pb::int32>& y_factor_mode);
NFCfgYFactorNoiseSourceENRResponse nf_cfg_y_factor_noise_source_enr(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<double>& enr_frequency, const std::vector<double>& enr, const double& cold_temperature, const double& off_temperature);
NFCfgYFactorNoiseSourceLossResponse nf_cfg_y_factor_noise_source_loss(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<NFYFactorNoiseSourceLossCompensationEnabled, pb::int32>& noise_source_loss_compensation_enabled, const std::vector<double>& noise_source_loss_frequency, const std::vector<double>& noise_source_loss, const double& noise_source_loss_temperature);
NFCfgYFactorNoiseSourceSettlingTimeResponse nf_cfg_y_factor_noise_source_settling_time(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& settling_time);
NFClearCalibrationDatabaseResponse nf_clear_calibration_database(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& calibration_setup_id);
NFFetchAnalyzerNoiseFigureResponse nf_fetch_analyzer_noise_figure(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
NFFetchColdSourcePowerResponse nf_fetch_cold_source_power(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
NFFetchDUTNoiseFigureAndGainResponse nf_fetch_dut_noise_figure_and_gain(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
NFFetchYFactorPowersResponse nf_fetch_y_factor_powers(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
NFFetchYFactorsResponse nf_fetch_y_factors(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
NFRecommendReferenceLevelResponse nf_recommend_reference_level(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& dut_max_gain, const double& dut_max_noise_figure);
NFValidateCalibrationDataResponse nf_validate_calibration_data(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string);
OBWCfgAveragingResponse obw_cfg_averaging(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<ObwAveragingEnabled, pb::int32>& averaging_enabled, const pb::int32& averaging_count, const simple_variant<ObwAveragingType, pb::int32>& averaging_type);
OBWCfgBandwidthPercentageResponse obw_cfg_bandwidth_percentage(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& bandwidth_percentage);
OBWCfgFFTResponse obw_cfg_fft(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<ObwFftWindow, pb::int32>& fft_window, const double& fft_padding);
OBWCfgPowerUnitsResponse obw_cfg_power_units(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<ObwPowerUnits, pb::int32>& power_units);
OBWCfgRBWFilterResponse obw_cfg_rbw_filter(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<ObwRbwAutoBandwidth, pb::int32>& rbw_auto, const double& rbw, const simple_variant<ObwRbwFilterType, pb::int32>& rbw_filter_type);
OBWCfgSpanResponse obw_cfg_span(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& span);
OBWCfgSweepTimeResponse obw_cfg_sweep_time(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<ObwSweepTimeAuto, pb::int32>& sweep_time_auto, const double& sweep_time_interval);
OBWFetchMeasurementResponse obw_fetch_measurement(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
OBWFetchSpectrumTraceResponse obw_fetch_spectrum_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
OBWReadResponse obw_read(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
PAVTCfgMeasurementBandwidthResponse pavt_cfg_measurement_bandwidth(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& measurement_bandwidth);
PAVTCfgMeasurementIntervalResponse pavt_cfg_measurement_interval(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& measurerment_offset, const double& measurerment_length);
PAVTCfgMeasurementIntervalModeResponse pavt_cfg_measurement_interval_mode(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<PavtMeasurementIntervalMode, pb::int32>& measurement_interval_mode);
PAVTCfgMeasurementLocationTypeResponse pavt_cfg_measurement_location_type(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<PavtMeasurementLocationType, pb::int32>& measurement_location_type);
PAVTCfgNumberOfSegmentsResponse pavt_cfg_number_of_segments(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& number_of_segments);
PAVTCfgSegmentMeasurementIntervalResponse pavt_cfg_segment_measurement_interval(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& segment_measurement_offset, const double& segment_measurement_length);
PAVTCfgSegmentMeasurementIntervalArrayResponse pavt_cfg_segment_measurement_interval_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<double>& segment_measurement_offset, const std::vector<double>& segment_measurement_length);
PAVTCfgSegmentStartTimeListResponse pavt_cfg_segment_start_time_list(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<double>& segment_start_time);
PAVTCfgSegmentStartTimeStepResponse pavt_cfg_segment_start_time_step(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& number_of_segments, const double& segment0_start_time, const double& segment_interval);
PAVTCfgSegmentTypeResponse pavt_cfg_segment_type(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<PavtSegmentType, pb::int32>& segment_type);
PAVTCfgSegmentTypeArrayResponse pavt_cfg_segment_type_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<pb::int32>& segment_type);
PAVTFetchAmplitudeTraceResponse pavt_fetch_amplitude_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout, const pb::int32& trace_index);
PAVTFetchPhaseAndAmplitudeResponse pavt_fetch_phase_and_amplitude(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
PAVTFetchPhaseAndAmplitudeArrayResponse pavt_fetch_phase_and_amplitude_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
PAVTFetchPhaseTraceResponse pavt_fetch_phase_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout, const pb::int32& trace_index);
PhaseNoiseCfgAutoRangeResponse phase_noise_cfg_auto_range(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& start_frequency, const double& stop_frequency, const double& rbw_percentage);
PhaseNoiseCfgAveragingMultiplierResponse phase_noise_cfg_averaging_multiplier(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& averaging_multiplier);
PhaseNoiseCfgCancellationResponse phase_noise_cfg_cancellation(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<PhaseNoiseCancellationEnabled, pb::int32>& cancellation_enabled, const double& cancellation_threshold, const std::vector<float>& frequency, const std::vector<float>& reference_phase_noise);
PhaseNoiseCfgIntegratedNoiseResponse phase_noise_cfg_integrated_noise(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<PhaseNoiseIntegratedNoiseRangeDefinition, pb::int32>& integrated_noise_range_definition, const std::vector<double>& integrated_noise_start_frequency, const std::vector<double>& integrated_noise_stop_frequency);
PhaseNoiseCfgNumberOfRangesResponse phase_noise_cfg_number_of_ranges(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& number_of_ranges);
PhaseNoiseCfgRangeArrayResponse phase_noise_cfg_range_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<double>& range_start_frequency, const std::vector<double>& range_stop_frequency, const std::vector<double>& range_rbw_percentage, const std::vector<pb::int32>& range_averaging_count);
PhaseNoiseCfgRangeDefinitionResponse phase_noise_cfg_range_definition(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<PhaseNoiseRangeDefinition, pb::int32>& range_definition);
PhaseNoiseCfgSmoothingResponse phase_noise_cfg_smoothing(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<PhaseNoiseSmoothingType, pb::int32>& smoothing_type, const double& smoothing_percentage);
PhaseNoiseCfgSpotNoiseFrequencyListResponse phase_noise_cfg_spot_noise_frequency_list(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<double>& frequency_list);
PhaseNoiseCfgSpurRemovalResponse phase_noise_cfg_spur_removal(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<PhaseNoiseSpurRemovalEnabled, pb::int32>& spur_removal_enabled, const double& peak_excursion);
PhaseNoiseFetchCarrierMeasurementResponse phase_noise_fetch_carrier_measurement(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
PhaseNoiseFetchIntegratedNoiseResponse phase_noise_fetch_integrated_noise(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
PhaseNoiseFetchMeasuredLogPlotTraceResponse phase_noise_fetch_measured_log_plot_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
PhaseNoiseFetchSmoothedLogPlotTraceResponse phase_noise_fetch_smoothed_log_plot_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
PhaseNoiseFetchSpotNoiseResponse phase_noise_fetch_spot_noise(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
ResetAttributeResponse reset_attribute(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id);
ResetToDefaultResponse reset_to_default(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string);
SEMCfgAveragingResponse sem_cfg_averaging(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SemAveragingEnabled, pb::int32>& averaging_enabled, const pb::int32& averaging_count, const simple_variant<SemAveragingType, pb::int32>& averaging_type);
SEMCfgCarrierChannelBandwidthResponse sem_cfg_carrier_channel_bandwidth(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& carrier_channel_bandwidth);
SEMCfgCarrierEnabledResponse sem_cfg_carrier_enabled(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SemCarrierEnabled, pb::int32>& carrier_enabled);
SEMCfgCarrierFrequencyResponse sem_cfg_carrier_frequency(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& carrier_frequency);
SEMCfgCarrierIntegrationBandwidthResponse sem_cfg_carrier_integration_bandwidth(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& integration_bandwidth);
SEMCfgCarrierRBWFilterResponse sem_cfg_carrier_rbw_filter(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SemCarrierRbwAutoBandwidth, pb::int32>& rbw_auto, const double& rbw, const simple_variant<SemCarrierRbwFilterType, pb::int32>& rbw_filter_type);
SEMCfgCarrierRRCFilterResponse sem_cfg_carrier_rrc_filter(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SemCarrierRrcFilterEnabled, pb::int32>& rrc_filter_enabled, const double& rrc_alpha);
SEMCfgFFTResponse sem_cfg_fft(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SemFftWindow, pb::int32>& fft_window, const double& fft_padding);
SEMCfgNumberOfCarriersResponse sem_cfg_number_of_carriers(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& number_of_carriers);
SEMCfgNumberOfOffsetsResponse sem_cfg_number_of_offsets(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& number_of_offsets);
SEMCfgOffsetAbsoluteLimitResponse sem_cfg_offset_absolute_limit(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SemOffsetAbsoluteLimitMode, pb::int32>& absolute_limit_mode, const double& absolute_limit_start, const double& absolute_limit_stop);
SEMCfgOffsetAbsoluteLimitArrayResponse sem_cfg_offset_absolute_limit_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<pb::int32>& absolute_limit_mode, const std::vector<double>& absolute_limit_start, const std::vector<double>& absolute_limit_stop);
SEMCfgOffsetBandwidthIntegralResponse sem_cfg_offset_bandwidth_integral(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& bandwidth_integral);
SEMCfgOffsetFrequencyResponse sem_cfg_offset_frequency(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& offset_start_frequency, const double& offset_stop_frequency, const simple_variant<SemOffsetEnabled, pb::int32>& offset_enabled, const simple_variant<SemOffsetSideband, pb::int32>& offset_sideband);
SEMCfgOffsetFrequencyArrayResponse sem_cfg_offset_frequency_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<double>& offset_start_frequency, const std::vector<double>& offset_stop_frequency, const std::vector<pb::int32>& offset_enabled, const std::vector<pb::int32>& offset_sideband);
SEMCfgOffsetFrequencyDefinitionResponse sem_cfg_offset_frequency_definition(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SemOffsetFrequencyDefinition, pb::int32>& offset_frequency_definition);
SEMCfgOffsetLimitFailMaskResponse sem_cfg_offset_limit_fail_mask(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SemOffsetLimitFailMask, pb::int32>& limit_fail_mask);
SEMCfgOffsetRBWFilterResponse sem_cfg_offset_rbw_filter(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SemOffsetRbwAutoBandwidth, pb::int32>& rbw_auto, const double& rbw, const simple_variant<SemOffsetRbwFilterType, pb::int32>& rbw_filter_type);
SEMCfgOffsetRBWFilterArrayResponse sem_cfg_offset_rbw_filter_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<pb::int32>& rbw_auto, const std::vector<double>& rbw, const std::vector<pb::int32>& rbw_filter_type);
SEMCfgOffsetRelativeAttenuationResponse sem_cfg_offset_relative_attenuation(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& relative_attenuation);
SEMCfgOffsetRelativeAttenuationArrayResponse sem_cfg_offset_relative_attenuation_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<double>& relative_attenuation);
SEMCfgOffsetRelativeLimitResponse sem_cfg_offset_relative_limit(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SemOffsetRelativeLimitMode, pb::int32>& relative_limit_mode, const double& relative_limit_start, const double& relative_limit_stop);
SEMCfgOffsetRelativeLimitArrayResponse sem_cfg_offset_relative_limit_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<pb::int32>& relative_limit_mode, const std::vector<double>& relative_limit_start, const std::vector<double>& relative_limit_stop);
SEMCfgPowerUnitsResponse sem_cfg_power_units(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SemPowerUnits, pb::int32>& power_units);
SEMCfgReferenceTypeResponse sem_cfg_reference_type(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SemReferenceType, pb::int32>& reference_type);
SEMCfgSweepTimeResponse sem_cfg_sweep_time(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SemSweepTimeAuto, pb::int32>& sweep_time_auto, const double& sweep_time_interval);
SEMFetchAbsoluteMaskTraceResponse sem_fetch_absolute_mask_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SEMFetchCarrierMeasurementResponse sem_fetch_carrier_measurement(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SEMFetchCompositeMeasurementStatusResponse sem_fetch_composite_measurement_status(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SEMFetchFrequencyResolutionResponse sem_fetch_frequency_resolution(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SEMFetchLowerOffsetMarginResponse sem_fetch_lower_offset_margin(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SEMFetchLowerOffsetMarginArrayResponse sem_fetch_lower_offset_margin_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SEMFetchLowerOffsetPowerResponse sem_fetch_lower_offset_power(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SEMFetchLowerOffsetPowerArrayResponse sem_fetch_lower_offset_power_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SEMFetchRelativeMaskTraceResponse sem_fetch_relative_mask_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SEMFetchSpectrumResponse sem_fetch_spectrum(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SEMFetchTotalCarrierPowerResponse sem_fetch_total_carrier_power(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SEMFetchUpperOffsetMarginResponse sem_fetch_upper_offset_margin(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SEMFetchUpperOffsetMarginArrayResponse sem_fetch_upper_offset_margin_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SEMFetchUpperOffsetPowerResponse sem_fetch_upper_offset_power(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SEMFetchUpperOffsetPowerArrayResponse sem_fetch_upper_offset_power_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SelectMeasurementsResponse select_measurements(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<MeasurementTypes, pb::uint32>& measurements, const bool& enable_all_traces);
SendSoftwareEdgeTriggerResponse send_software_edge_trigger(const StubPtr& stub, const nidevice_grpc::Session& instrument);
SetAttributeF32Response set_attribute_f32(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id, const float& attr_val);
SetAttributeF32ArrayResponse set_attribute_f32_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id, const std::vector<float>& attr_val);
SetAttributeF64Response set_attribute_f64(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id, const double& attr_val);
SetAttributeF64ArrayResponse set_attribute_f64_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id, const std::vector<double>& attr_val);
SetAttributeI16Response set_attribute_i16(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id, const pb::int32& attr_val);
SetAttributeI32Response set_attribute_i32(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id, const simple_variant<NiRFmxSpecAnInt32AttributeValues, pb::int32>& attr_val);
SetAttributeI32ArrayResponse set_attribute_i32_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id, const std::vector<pb::int32>& attr_val);
SetAttributeI64Response set_attribute_i64(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id, const pb::int64& attr_val);
SetAttributeI64ArrayResponse set_attribute_i64_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id, const std::vector<pb::int64>& attr_val);
SetAttributeI8Response set_attribute_i8(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id, const pb::int32& attr_val);
SetAttributeI8ArrayResponse set_attribute_i8_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id, const std::vector<pb::int32>& attr_val);
SetAttributeNIComplexDoubleArrayResponse set_attribute_ni_complex_double_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id, const std::vector<nidevice_grpc::NIComplexNumber>& attr_val);
SetAttributeNIComplexSingleArrayResponse set_attribute_ni_complex_single_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id, const std::vector<nidevice_grpc::NIComplexNumberF32>& attr_val);
SetAttributeStringResponse set_attribute_string(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id, const simple_variant<NiRFmxSpecAnStringAttributeValuesMapped, std::string>& attr_val);
SetAttributeU16Response set_attribute_u16(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id, const pb::uint32& attr_val);
SetAttributeU32Response set_attribute_u32(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id, const pb::uint32& attr_val);
SetAttributeU32ArrayResponse set_attribute_u32_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id, const std::vector<pb::uint32>& attr_val);
SetAttributeU64ArrayResponse set_attribute_u64_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id, const std::vector<pb::uint64>& attr_val);
SetAttributeU8Response set_attribute_u8(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id, const pb::uint32& attr_val);
SetAttributeU8ArrayResponse set_attribute_u8_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const NiRFmxSpecAnAttribute& attribute_id, const pb::string& attr_val);
SpectrumCfgAveragingResponse spectrum_cfg_averaging(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SpectrumAveragingEnabled, pb::int32>& averaging_enabled, const pb::int32& averaging_count, const simple_variant<SpectrumAveragingType, pb::int32>& averaging_type);
SpectrumCfgDetectorResponse spectrum_cfg_detector(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SpectrumDetectorType, pb::int32>& detector_type, const pb::int32& detector_points);
SpectrumCfgFFTResponse spectrum_cfg_fft(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SpectrumFftWindow, pb::int32>& fft_window, const double& fft_padding);
SpectrumCfgFrequencyStartStopResponse spectrum_cfg_frequency_start_stop(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& start_frequency, const double& stop_frequency);
SpectrumCfgNoiseCompensationEnabledResponse spectrum_cfg_noise_compensation_enabled(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SpectrumNoiseCompensationEnabled, pb::int32>& noise_compensation_enabled);
SpectrumCfgPowerUnitsResponse spectrum_cfg_power_units(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SpectrumPowerUnits, pb::int32>& spectrum_power_units);
SpectrumCfgRBWFilterResponse spectrum_cfg_rbw_filter(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SpectrumRbwAutoBandwidth, pb::int32>& rbw_auto, const double& rbw, const simple_variant<SpectrumRbwFilterType, pb::int32>& rbw_filter_type);
SpectrumCfgSpanResponse spectrum_cfg_span(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& span);
SpectrumCfgSweepTimeResponse spectrum_cfg_sweep_time(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SpectrumSweepTimeAuto, pb::int32>& sweep_time_auto, const double& sweep_time_interval);
SpectrumCfgVBWFilterResponse spectrum_cfg_vbw_filter(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SpectrumVbwFilterAutoBandwidth, pb::int32>& vbw_auto, const double& vbw, const double& vbw_to_rbw_ratio);
SpectrumFetchMeasurementResponse spectrum_fetch_measurement(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SpectrumFetchPowerTraceResponse spectrum_fetch_power_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SpectrumFetchSpectrumResponse spectrum_fetch_spectrum(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SpectrumReadResponse spectrum_read(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SpectrumValidateNoiseCalibrationDataResponse spectrum_validate_noise_calibration_data(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string);
SpurCfgAveragingResponse spur_cfg_averaging(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SpurAveragingEnabled, pb::int32>& averaging_enabled, const pb::int32& averaging_count, const simple_variant<SpurAveragingType, pb::int32>& averaging_type);
SpurCfgFFTWindowTypeResponse spur_cfg_fft_window_type(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SpurFftWindow, pb::int32>& fft_window);
SpurCfgNumberOfRangesResponse spur_cfg_number_of_ranges(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& number_of_ranges);
SpurCfgRangeAbsoluteLimitResponse spur_cfg_range_absolute_limit(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SpurAbsoluteLimitMode, pb::int32>& absolute_limit_mode, const double& absolute_limit_start, const double& absolute_limit_stop);
SpurCfgRangeAbsoluteLimitArrayResponse spur_cfg_range_absolute_limit_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<pb::int32>& absolute_limit_mode, const std::vector<double>& absolute_limit_start, const std::vector<double>& absolute_limit_stop);
SpurCfgRangeDetectorResponse spur_cfg_range_detector(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SpurRangeDetectorType, pb::int32>& detector_type, const pb::int32& detector_points);
SpurCfgRangeDetectorArrayResponse spur_cfg_range_detector_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<pb::int32>& detector_type, const std::vector<pb::int32>& detector_points);
SpurCfgRangeFrequencyResponse spur_cfg_range_frequency(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& start_frequency, const double& stop_frequency, const simple_variant<SpurRangeEnabled, pb::int32>& range_enabled);
SpurCfgRangeFrequencyArrayResponse spur_cfg_range_frequency_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<double>& start_frequency, const std::vector<double>& stop_frequency, const std::vector<pb::int32>& range_enabled);
SpurCfgRangeNumberOfSpursToReportResponse spur_cfg_range_number_of_spurs_to_report(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& number_of_spurs_to_report);
SpurCfgRangeNumberOfSpursToReportArrayResponse spur_cfg_range_number_of_spurs_to_report_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<pb::int32>& number_of_spurs_to_report);
SpurCfgRangePeakCriteriaResponse spur_cfg_range_peak_criteria(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& threshold, const double& excursion);
SpurCfgRangePeakCriteriaArrayResponse spur_cfg_range_peak_criteria_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<double>& threshold, const std::vector<double>& excursion);
SpurCfgRangeRBWArrayResponse spur_cfg_range_rbw_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<pb::int32>& rbw_auto, const std::vector<double>& rbw, const std::vector<pb::int32>& rbw_filter_type);
SpurCfgRangeRBWFilterResponse spur_cfg_range_rbw_filter(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SpurRbwAutoBandwidth, pb::int32>& rbw_auto, const double& rbw, const simple_variant<SpurRbwFilterType, pb::int32>& rbw_filter_type);
SpurCfgRangeRelativeAttenuationResponse spur_cfg_range_relative_attenuation(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& relative_attenuation);
SpurCfgRangeRelativeAttenuationArrayResponse spur_cfg_range_relative_attenuation_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<double>& relative_attenuation);
SpurCfgRangeSweepTimeResponse spur_cfg_range_sweep_time(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SpurSweepTimeAuto, pb::int32>& sweep_time_auto, const double& sweep_time_interval);
SpurCfgRangeSweepTimeArrayResponse spur_cfg_range_sweep_time_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<pb::int32>& sweep_time_auto, const std::vector<double>& sweep_time_interval);
SpurCfgRangeVBWFilterResponse spur_cfg_range_vbw_filter(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<SpurRangeVbwFilterAutoBandwidth, pb::int32>& vbw_auto, const double& vbw, const double& vbw_to_rbw_ratio);
SpurCfgRangeVBWFilterArrayResponse spur_cfg_range_vbw_filter_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const std::vector<pb::int32>& vbw_auto, const std::vector<double>& vbw, const std::vector<double>& vbw_to_rbw_ratio);
SpurCfgTraceRangeIndexResponse spur_cfg_trace_range_index(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const pb::int32& trace_range_index);
SpurFetchAllSpursResponse spur_fetch_all_spurs(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SpurFetchMeasurementStatusResponse spur_fetch_measurement_status(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SpurFetchRangeAbsoluteLimitTraceResponse spur_fetch_range_absolute_limit_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SpurFetchRangeSpectrumTraceResponse spur_fetch_range_spectrum_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SpurFetchRangeStatusResponse spur_fetch_range_status(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SpurFetchRangeStatusArrayResponse spur_fetch_range_status_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SpurFetchSpurMeasurementResponse spur_fetch_spur_measurement(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
SpurFetchSpurMeasurementArrayResponse spur_fetch_spur_measurement_array(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
TXPCfgAveragingResponse txp_cfg_averaging(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<TxpAveragingEnabled, pb::int32>& averaging_enabled, const pb::int32& averaging_count, const simple_variant<TxpAveragingType, pb::int32>& averaging_type);
TXPCfgMeasurementIntervalResponse txp_cfg_measurement_interval(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& measurement_interval);
TXPCfgRBWFilterResponse txp_cfg_rbw_filter(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& rbw, const simple_variant<TxpRbwFilterType, pb::int32>& rbw_filter_type, const double& rrc_alpha);
TXPCfgThresholdResponse txp_cfg_threshold(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<TxpThresholdEnabled, pb::int32>& threshold_enabled, const double& threshold_level, const simple_variant<TxpThresholdType, pb::int32>& threshold_type);
TXPCfgVBWFilterResponse txp_cfg_vbw_filter(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const simple_variant<TxpVbwFilterAutoBandwidth, pb::int32>& vbw_auto, const double& vbw, const double& vbw_to_rbw_ratio);
TXPFetchMeasurementResponse txp_fetch_measurement(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
TXPFetchPowerTraceResponse txp_fetch_power_trace(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
TXPReadResponse txp_read(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);
WaitForAcquisitionCompleteResponse wait_for_acquisition_complete(const StubPtr& stub, const nidevice_grpc::Session& instrument, const double& timeout);
WaitForMeasurementCompleteResponse wait_for_measurement_complete(const StubPtr& stub, const nidevice_grpc::Session& instrument, const pb::string& selector_string, const double& timeout);

} // namespace nirfmxspecan_grpc::experimental::client

#endif /* NIRFMXSPECAN_GRPC_CLIENT_H */
