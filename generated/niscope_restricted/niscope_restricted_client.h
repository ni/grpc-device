
//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// EXPERIMENTAL Client convenience wrapper for NI-SCOPE-RESTRICTED.
//---------------------------------------------------------------------
#ifndef NISCOPE_RESTRICTED_GRPC_CLIENT_H
#define NISCOPE_RESTRICTED_GRPC_CLIENT_H

#include <grpcpp/grpcpp.h>

#include <niscope_restricted.grpc.pb.h>
#include <tests/utilities/client_helpers.h>

#include <memory>
#include <vector>

namespace niscope_restricted_grpc::experimental::client {

namespace pb = ::google::protobuf;
using StubPtr = std::unique_ptr<NiScopeRestricted::Stub>;
using namespace nidevice_grpc::experimental::client;


GetStartTimestampInformationResponse get_start_timestamp_information(const StubPtr& stub, const nidevice_grpc::Session& vi);
GetStartTimestampInformationWithChannelsResponse get_start_timestamp_information_with_channels(const StubPtr& stub, const nidevice_grpc::Session& vi, const std::string& channel_list, const pb::uint32& number_of_channels);
ParseNumberOfChannelsResponse parse_number_of_channels(const StubPtr& stub, const nidevice_grpc::Session& vi, const std::string& channel);

} // namespace niscope_restricted_grpc::experimental::client

#endif /* NISCOPE_RESTRICTED_GRPC_CLIENT_H */
