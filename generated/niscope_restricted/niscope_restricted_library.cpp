//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Service implementation for the NI-SCOPE-RESTRICTED Metadata
//---------------------------------------------------------------------
#include "niscope_restricted_library.h"

#if defined(_MSC_VER)
static const char* kLibraryName = "niScope_64.dll";
#else
static const char* kLibraryName = "libniscope.so";
#endif

namespace niscope_restricted_grpc {

NiScopeRestrictedLibrary::NiScopeRestrictedLibrary() : shared_library_(kLibraryName)
{
  shared_library_.load();
  bool loaded = shared_library_.is_loaded();
  memset(&function_pointers_, 0, sizeof(function_pointers_));
  if (!loaded) {
    return;
  }
  function_pointers_.GetError = reinterpret_cast<GetErrorPtr>(shared_library_.get_function_pointer("niScope_GetError"));
  function_pointers_.GetErrorMessage = reinterpret_cast<GetErrorMessagePtr>(shared_library_.get_function_pointer("niScope_GetErrorMessage"));
  function_pointers_.GetStartTimestampInformation = reinterpret_cast<GetStartTimestampInformationPtr>(shared_library_.get_function_pointer("niScope_GetStartTimestampInformation"));
}

NiScopeRestrictedLibrary::~NiScopeRestrictedLibrary()
{
}

::grpc::Status NiScopeRestrictedLibrary::check_function_exists(std::string functionName)
{
  return shared_library_.function_exists(functionName.c_str())
    ? ::grpc::Status::OK
    : ::grpc::Status(::grpc::NOT_FOUND, "Could not find the function " + functionName);
}

ViStatus NiScopeRestrictedLibrary::GetError(ViSession vi, ViStatus* errorCode, ViInt32 bufferSize, ViChar description[])
{
  if (!function_pointers_.GetError) {
    throw nidevice_grpc::LibraryLoadException("Could not find niScope_GetError.");
  }
  return function_pointers_.GetError(vi, errorCode, bufferSize, description);
}

ViStatus NiScopeRestrictedLibrary::GetErrorMessage(ViSession vi, ViStatus errorCode, ViInt32 bufferSize, ViChar errorMessage[])
{
  if (!function_pointers_.GetErrorMessage) {
    throw nidevice_grpc::LibraryLoadException("Could not find niScope_GetErrorMessage.");
  }
  return function_pointers_.GetErrorMessage(vi, errorCode, bufferSize, errorMessage);
}

ViStatus NiScopeRestrictedLibrary::GetStartTimestampInformation(ViSession vi, ViUInt32* sysTimeIn128BitsT1, ViUInt32* sysTimeIn128BitsT2, ViUInt32* sysTimeIn128BitsT3, ViUInt32* sysTimeIn128BitsT4, ViReal64* deviceTimeInAbsoluteTimeUnits)
{
  if (!function_pointers_.GetStartTimestampInformation) {
    throw nidevice_grpc::LibraryLoadException("Could not find niScope_GetStartTimestampInformation.");
  }
  return function_pointers_.GetStartTimestampInformation(vi, sysTimeIn128BitsT1, sysTimeIn128BitsT2, sysTimeIn128BitsT3, sysTimeIn128BitsT4, deviceTimeInAbsoluteTimeUnits);
}

}  // namespace niscope_restricted_grpc
