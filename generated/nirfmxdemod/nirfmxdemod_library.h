//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Real implementation of LibraryInterface for NI-rfmxdemod
//---------------------------------------------------------------------
#ifndef NIRFMXDEMOD_GRPC_LIBRARY_H
#define NIRFMXDEMOD_GRPC_LIBRARY_H

#include "nirfmxdemod_library_interface.h"

#include <server/shared_library.h>

namespace nirfmxdemod_grpc {

class NiRFmxDemodLibrary : public nirfmxdemod_grpc::NiRFmxDemodLibraryInterface {
 public:
  NiRFmxDemodLibrary();
  virtual ~NiRFmxDemodLibrary();

  ::grpc::Status check_function_exists(std::string functionName);
  int32 ADemodCfgAMCarrierSuppressed(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 amCarrierSuppressedEnabled);
  int32 ADemodCfgAudioFilter(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 audioFilterType, float64 audioFilterLowerCutoffFrequency, float64 audioFilterUpperCutoffFrequency);
  int32 ADemodCfgAveraging(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 averagingEnabled, int32 averagingCount, int32 averagingType);
  int32 ADemodCfgCarrierCorrection(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 carrierFrequencyCorrectionEnabled, int32 carrierPhaseCorrectionEnabled);
  int32 ADemodCfgFMDeEmphasis(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 deEmphasis);
  int32 ADemodCfgMeasurementInterval(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 measurementInterval);
  int32 ADemodCfgModulationType(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 modulationType);
  int32 ADemodCfgRBWFilter(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 rbw, int32 rbwFilterType, float64 rbwrrcAlpha);
  int32 ADemodFetchAMMaximumModulationDepth(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* maximumModulationDepth, float64* maximumHalfPeakToPeak, float64* maximumRMS, float64* maximumPositivePeak, float64* maximumNegativePeak);
  int32 ADemodFetchAMMeanModulationDepth(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* meanModulationDepth, float64* meanHalfPeakToPeak, float64* meanRMS, float64* meanPositivePeak, float64* meanNegativePeak);
  int32 ADemodFetchCarrierMeasurement(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* meanCarrierFrequencyError, float64* meanCarrierPower);
  int32 ADemodFetchDemodSignalTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 demodulatedSignal[], int32 arraySize, int32* actualArraySize);
  int32 ADemodFetchDemodSpectrumTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 demodulatedSpectrum[], int32 arraySize, int32* actualArraySize);
  int32 ADemodFetchDistortions(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* averageSINAD, float64* averageSNR, float64* averageTHD, float64* averageTHDWithNoise);
  int32 ADemodFetchFMMaximumDeviation(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* maximumDeviation, float64* maximumHalfPeakToPeak, float64* maximumRMS, float64* maximumPositivePeak, float64* maximumNegativePeak);
  int32 ADemodFetchFMMeanDeviation(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* meanDeviation, float64* meanHalfPeakToPeak, float64* meanRMS, float64* meanPositivePeak, float64* meanNegativePeak);
  int32 ADemodFetchMeanModulationFrequency(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* meanModulationFrequency);
  int32 ADemodFetchPMMaximumDeviation(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* maximumDeviation, float64* maximumHalfPeakToPeak, float64* maximumRMS, float64* maximumPositivePeak, float64* maximumNegativePeak);
  int32 ADemodFetchPMMeanDeviation(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* meanDeviation, float64* meanHalfPeakToPeak, float64* meanRMS, float64* meanPositivePeak, float64* meanNegativePeak);
  int32 ADemodReadAM(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* meanModulationDepth, float64* meanCarrierPower);
  int32 ADemodReadFM(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* meanDeviation, float64* meanCarrierFrequencyError);
  int32 ADemodReadPM(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* meanDeviation, float64* meanCarrierFrequencyError);
  int32 AbortMeasurements(niRFmxInstrHandle instrumentHandle, char selectorString[]);
  int32 AnalyzeIQ1Waveform(niRFmxInstrHandle instrumentHandle, char selectorString[], char resultName[], float64 x0, float64 dx, NIComplexSingle iq[], int32 arraySize, int32 reset, int64 reserved);
  int32 AutoLevel(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 bandwidth, float64 measurementInterval, float64* referenceLevel);
  int32 BuildSignalString(char signalName[], char resultName[], int32 selectorStringLength, char selectorString[]);
  int32 CfgDigitalEdgeTrigger(niRFmxInstrHandle instrumentHandle, char selectorString[], char digitalEdgeSource[], int32 digitalEdge, float64 triggerDelay, int32 enableTrigger);
  int32 CfgExternalAttenuation(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 externalAttenuation);
  int32 CfgFrequency(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 centerFrequency);
  int32 CfgFrequencyReference(niRFmxInstrHandle instrumentHandle, char channelName[], char frequencyReferenceSource[], float64 frequencyReferenceFrequency);
  int32 CfgIQPowerEdgeTrigger(niRFmxInstrHandle instrumentHandle, char selectorString[], char iqPowerEdgeSource[], float64 iqPowerEdgeLevel, int32 iqPowerEdgeSlope, float64 triggerDelay, int32 triggerMinQuietTimeMode, float64 triggerMinQuietTimeDuration, int32 enableTrigger);
  int32 CfgMechanicalAttenuation(niRFmxInstrHandle instrumentHandle, char channelName[], int32 mechanicalAttenuationAuto, float64 mechanicalAttenuationValue);
  int32 CfgRF(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 centerFrequency, float64 referenceLevel, float64 externalAttenuation);
  int32 CfgRFAttenuation(niRFmxInstrHandle instrumentHandle, char channelName[], int32 rfAttenuationAuto, float64 rfAttenuationValue);
  int32 CfgReferenceLevel(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 referenceLevel);
  int32 CfgSoftwareEdgeTrigger(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 triggerDelay, int32 enableTrigger);
  int32 CheckMeasurementStatus(niRFmxInstrHandle instrumentHandle, char selectorString[], int32* isDone);
  int32 ClearAllNamedResults(niRFmxInstrHandle instrumentHandle, char selectorString[]);
  int32 ClearNamedResult(niRFmxInstrHandle instrumentHandle, char selectorString[]);
  int32 CloneSignalConfiguration(niRFmxInstrHandle instrumentHandle, char oldSignalName[], char newSignalName[]);
  int32 Close(niRFmxInstrHandle instrumentHandle, int32 forceDestroy);
  int32 Commit(niRFmxInstrHandle instrumentHandle, char selectorString[]);
  int32 CreateSignalConfiguration(niRFmxInstrHandle instrumentHandle, char signalName[]);
  int32 DDemodCfgAveraging(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 averagingEnabled, int32 averagingCount);
  int32 DDemodCfgEVMNormalizationReference(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 evmNormRef);
  int32 DDemodCfgEqualizer(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 equalizerMode, int32 equalizerFilterLength, float64 x0, float64 dx, NIComplexSingle equalizerInitialCoefficients[], int32 equalizerTrainingCount, float64 equalizerConvergenceFactor, int32 arraySize);
  int32 DDemodCfgEqualizerInitialCoefficients(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 x0, float64 dx, NIComplexSingle equalizerInitialCoefficients[], int32 arraySize);
  int32 DDemodCfgFSKDeviation(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 fskDeviation, int32 fskRefCompEnabled);
  int32 DDemodCfgM(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 m);
  int32 DDemodCfgMeasurementFilter(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 measurementFilterType, float64 x0, float64 dx, float32 measurementFilterCustomCoefficients[], int32 arraySize);
  int32 DDemodCfgMeasurementFilterCustomCoefficients(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 x0, float64 dx, float32 measurementFilterCustomCoefficients[], int32 arraySize);
  int32 DDemodCfgModulationType(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 modulationType, int32 m, int32 differentialEnabled);
  int32 DDemodCfgNumberOfSymbols(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 numberOfSymbols);
  int32 DDemodCfgPSKFormat(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 pskFormat);
  int32 DDemodCfgPulseShapingFilter(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 pulseShapingFilterType, float64 pulseShapingFilterParameter, float64 x0, float64 dx, float32 pulseShapingFilterCustomCoefficients[], int32 arraySize);
  int32 DDemodCfgPulseShapingFilterCustomCoefficients(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 x0, float64 dx, float32 pulseShapingFilterCustomCoefficients[], int32 arraySize);
  int32 DDemodCfgSamplesPerSymbol(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 samplesPerSymbol);
  int32 DDemodCfgSignalStructure(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 signalStructure);
  int32 DDemodCfgSpectrumInverted(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 spectrumInverted);
  int32 DDemodCfgSymbolMap(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 symbolMapType, NIComplexSingle symbolMap[], int32 arraySize);
  int32 DDemodCfgSymbolRate(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 symbolRate);
  int32 DDemodCfgSynchronization(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 synchronizationEnabled, int8 syncBits[], int32 measurementOffset, int32 arraySize);
  int32 DDemodFetchCarrierMeasurement(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* meanFrequencyOffset, float64* meanFrequencyDrift, float64* meanPhaseError);
  int32 DDemodFetchConstellationTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, NIComplexSingle constellationTrace[], int32 arraySize, int32* actualArraySize);
  int32 DDemodFetchDemodulatedBits(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int8 demodulatedBits[], int32 arraySize, int32* actualArraySize);
  int32 DDemodFetchEVM(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* meanRMSEVM, float64* maximumRMSEVM, float64* meanModulationErrorRatio, float64* maximumPeakEVM, float64* meanPeakEVM);
  int32 DDemodFetchEVMTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 evm[], int32 arraySize, int32* actualArraySize);
  int32 DDemodFetchEqualizerCoefficients(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, NIComplexSingle equalizerCoefficients[], int32 arraySize, int32* actualArraySize);
  int32 DDemodFetchFSKDeviationTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 fskError[], int32 arraySize, int32* actualArraySize);
  int32 DDemodFetchFSKResults(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* meanFSKDeviation, float64* meanRMSFSKError, float64* maximumPeakFSKError);
  int32 DDemodFetchIQImpairments(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* meanIQGainImbalance, float64* meanQuadratureSkew, float64* meanIQOriginOffset);
  int32 DDemodFetchMagnitudeError(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* meanMagnitudeError, float64* maximumMagnitudeError);
  int32 DDemodFetchMagnitudeErrorTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 magnitudeError[], int32 arraySize, int32* actualArraySize);
  int32 DDemodFetchMeanAmplitudeDroop(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* meanAmplitudeDroop);
  int32 DDemodFetchMeanIQOriginOffset(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float32* meanIQOriginOffset);
  int32 DDemodFetchMeanQuadratureSkew(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float32* meanQuadratureSkew);
  int32 DDemodFetchMeanRhoFactor(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* meanRhoFactor);
  int32 DDemodFetchMeasurementWaveform(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, NIComplexSingle measurementWaveform[], int32 arraySize, int32* actualArraySize, int32* samplesPerSymbol, float64* symbolRate);
  int32 DDemodFetchOffsetConstellationTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, NIComplexSingle offsetConstellationTrace[], int32 arraySize, int32* actualArraySize);
  int32 DDemodFetchOffsetEVM(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* meanRMSOffsetEVM, float64* maximumRMSOffsetEVM, float64* maximumPeakOffsetEVM, float64* meanPeakOffsetEVM);
  int32 DDemodFetchOffsetEVMTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 offsetEVM[], int32 arraySize, int32* actualArraySize);
  int32 DDemodFetchPhaseError(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* meanPhaseError, float64* maximumPhaseError);
  int32 DDemodFetchPhaseErrorTrace(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, float32 phaseError[], int32 arraySize, int32* actualArraySize);
  int32 DDemodFetchReferenceWaveform(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* x0, float64* dx, NIComplexSingle referenceWaveform[], int32 arraySize, int32* actualArraySize);
  int32 DDemodFetchSyncFound(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, int32* syncFound);
  int32 DDemodGetEqualizerInitialCoefficients(niRFmxInstrHandle instrumentHandle, char selectorString[], float64* x0, float64* dx, NIComplexSingle equalizerInitialCoefficients[], int32 arraySize, int32* actualArraySize);
  int32 DDemodGetSymbolMap(niRFmxInstrHandle instrumentHandle, char selectorString[], NIComplexSingle symbolMap[], int32 arraySize, int32* actualArraySize);
  int32 DDemodRead(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout, float64* meanFrequencyOffset, float64* meanRMSEVM, float64* maximumPeakEVM, float64* meanModulationErrorRatio);
  int32 DDemodSetSymbolMap(niRFmxInstrHandle instrumentHandle, char selectorString[], NIComplexSingle attrVal[], int32 arraySize);
  int32 DeleteSignalConfiguration(niRFmxInstrHandle instrumentHandle, char signalName[]);
  int32 DisableTrigger(niRFmxInstrHandle instrumentHandle, char selectorString[]);
  int32 GetAllNamedResultNames(niRFmxInstrHandle instrumentHandle, char selectorString[], char resultNames[], int32 resultNamesBufferSize, int32* actualResultNamesSize, int32* defaultResultExists);
  int32 GetAttributeF32(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float32* attrVal);
  int32 GetAttributeF32Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float32 attrVal[], int32 arraySize, int32* actualArraySize);
  int32 GetAttributeF64(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float64* attrVal);
  int32 GetAttributeF64Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float64 attrVal[], int32 arraySize, int32* actualArraySize);
  int32 GetAttributeI16(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int16* attrVal);
  int32 GetAttributeI32(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int32* attrVal);
  int32 GetAttributeI32Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int32 attrVal[], int32 arraySize, int32* actualArraySize);
  int32 GetAttributeI64(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int64* attrVal);
  int32 GetAttributeI64Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int64 attrVal[], int32 arraySize, int32* actualArraySize);
  int32 GetAttributeI8(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int8* attrVal);
  int32 GetAttributeI8Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int8 attrVal[], int32 arraySize, int32* actualArraySize);
  int32 GetAttributeNIComplexDoubleArray(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, NIComplexDouble attrVal[], int32 arraySize, int32* actualArraySize);
  int32 GetAttributeNIComplexSingleArray(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, NIComplexSingle attrVal[], int32 arraySize, int32* actualArraySize);
  int32 GetAttributeString(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int32 arraySize, char attrVal[]);
  int32 GetAttributeU16(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt16* attrVal);
  int32 GetAttributeU32(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt32* attrVal);
  int32 GetAttributeU32Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt32 attrVal[], int32 arraySize, int32* actualArraySize);
  int32 GetAttributeU64Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt64 attrVal[], int32 arraySize, int32* actualArraySize);
  int32 GetAttributeU8(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt8* attrVal);
  int32 GetAttributeU8Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt8 attrVal[], int32 arraySize, int32* actualArraySize);
  int32 GetError(niRFmxInstrHandle instrumentHandle, int32* errorCode, int32 errorDescriptionBufferSize, char errorDescription[]);
  int32 GetErrorString(niRFmxInstrHandle instrumentHandle, int32 errorCode, int32 errorDescriptionBufferSize, char errorDescription[]);
  int32 Initialize(char resourceName[], char optionString[], niRFmxInstrHandle* handleOut, int32* isNewSession);
  int32 InitializeFromNIRFSASession(uInt32 nirfsaSession, niRFmxInstrHandle* handleOut);
  int32 Initiate(niRFmxInstrHandle instrumentHandle, char selectorString[], char resultName[]);
  int32 ResetAttribute(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID);
  int32 ResetToDefault(niRFmxInstrHandle instrumentHandle, char selectorString[]);
  int32 SelectMeasurements(niRFmxInstrHandle instrumentHandle, char selectorString[], uInt32 measurements, int32 enableAllTraces);
  int32 SendSoftwareEdgeTrigger(niRFmxInstrHandle instrumentHandle);
  int32 SetAttributeF32(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float32 attrVal);
  int32 SetAttributeF32Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float32 attrVal[], int32 arraySize);
  int32 SetAttributeF64(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float64 attrVal);
  int32 SetAttributeF64Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, float64 attrVal[], int32 arraySize);
  int32 SetAttributeI16(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int16 attrVal);
  int32 SetAttributeI32(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int32 attrVal);
  int32 SetAttributeI32Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int32 attrVal[], int32 arraySize);
  int32 SetAttributeI64(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int64 attrVal);
  int32 SetAttributeI64Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int64 attrVal[], int32 arraySize);
  int32 SetAttributeI8(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int8 attrVal);
  int32 SetAttributeI8Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, int8 attrVal[], int32 arraySize);
  int32 SetAttributeNIComplexDoubleArray(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, NIComplexDouble attrVal[], int32 arraySize);
  int32 SetAttributeNIComplexSingleArray(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, NIComplexSingle attrVal[], int32 arraySize);
  int32 SetAttributeString(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, char attrVal[]);
  int32 SetAttributeU16(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt16 attrVal);
  int32 SetAttributeU32(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt32 attrVal);
  int32 SetAttributeU32Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt32 attrVal[], int32 arraySize);
  int32 SetAttributeU64Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt64 attrVal[], int32 arraySize);
  int32 SetAttributeU8(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt8 attrVal);
  int32 SetAttributeU8Array(niRFmxInstrHandle instrumentHandle, char selectorString[], int32 attributeID, uInt8 attrVal[], int32 arraySize);
  int32 WaitForAcquisitionComplete(niRFmxInstrHandle instrumentHandle, float64 timeout);
  int32 WaitForMeasurementComplete(niRFmxInstrHandle instrumentHandle, char selectorString[], float64 timeout);

 private:
  using ADemodCfgAMCarrierSuppressedPtr = decltype(&RFmxDemod_ADemodCfgAMCarrierSuppressed);
  using ADemodCfgAudioFilterPtr = decltype(&RFmxDemod_ADemodCfgAudioFilter);
  using ADemodCfgAveragingPtr = decltype(&RFmxDemod_ADemodCfgAveraging);
  using ADemodCfgCarrierCorrectionPtr = decltype(&RFmxDemod_ADemodCfgCarrierCorrection);
  using ADemodCfgFMDeEmphasisPtr = decltype(&RFmxDemod_ADemodCfgFMDeEmphasis);
  using ADemodCfgMeasurementIntervalPtr = decltype(&RFmxDemod_ADemodCfgMeasurementInterval);
  using ADemodCfgModulationTypePtr = decltype(&RFmxDemod_ADemodCfgModulationType);
  using ADemodCfgRBWFilterPtr = decltype(&RFmxDemod_ADemodCfgRBWFilter);
  using ADemodFetchAMMaximumModulationDepthPtr = decltype(&RFmxDemod_ADemodFetchAMMaximumModulationDepth);
  using ADemodFetchAMMeanModulationDepthPtr = decltype(&RFmxDemod_ADemodFetchAMMeanModulationDepth);
  using ADemodFetchCarrierMeasurementPtr = decltype(&RFmxDemod_ADemodFetchCarrierMeasurement);
  using ADemodFetchDemodSignalTracePtr = decltype(&RFmxDemod_ADemodFetchDemodSignalTrace);
  using ADemodFetchDemodSpectrumTracePtr = decltype(&RFmxDemod_ADemodFetchDemodSpectrumTrace);
  using ADemodFetchDistortionsPtr = decltype(&RFmxDemod_ADemodFetchDistortions);
  using ADemodFetchFMMaximumDeviationPtr = decltype(&RFmxDemod_ADemodFetchFMMaximumDeviation);
  using ADemodFetchFMMeanDeviationPtr = decltype(&RFmxDemod_ADemodFetchFMMeanDeviation);
  using ADemodFetchMeanModulationFrequencyPtr = decltype(&RFmxDemod_ADemodFetchMeanModulationFrequency);
  using ADemodFetchPMMaximumDeviationPtr = decltype(&RFmxDemod_ADemodFetchPMMaximumDeviation);
  using ADemodFetchPMMeanDeviationPtr = decltype(&RFmxDemod_ADemodFetchPMMeanDeviation);
  using ADemodReadAMPtr = decltype(&RFmxDemod_ADemodReadAM);
  using ADemodReadFMPtr = decltype(&RFmxDemod_ADemodReadFM);
  using ADemodReadPMPtr = decltype(&RFmxDemod_ADemodReadPM);
  using AbortMeasurementsPtr = decltype(&RFmxDemod_AbortMeasurements);
  using AnalyzeIQ1WaveformPtr = decltype(&RFmxDemod_AnalyzeIQ1Waveform);
  using AutoLevelPtr = decltype(&RFmxDemod_AutoLevel);
  using BuildSignalStringPtr = decltype(&RFmxDemod_BuildSignalString);
  using CfgDigitalEdgeTriggerPtr = decltype(&RFmxDemod_CfgDigitalEdgeTrigger);
  using CfgExternalAttenuationPtr = decltype(&RFmxDemod_CfgExternalAttenuation);
  using CfgFrequencyPtr = decltype(&RFmxDemod_CfgFrequency);
  using CfgFrequencyReferencePtr = decltype(&RFmxDemod_CfgFrequencyReference);
  using CfgIQPowerEdgeTriggerPtr = decltype(&RFmxDemod_CfgIQPowerEdgeTrigger);
  using CfgMechanicalAttenuationPtr = decltype(&RFmxDemod_CfgMechanicalAttenuation);
  using CfgRFPtr = decltype(&RFmxDemod_CfgRF);
  using CfgRFAttenuationPtr = decltype(&RFmxDemod_CfgRFAttenuation);
  using CfgReferenceLevelPtr = decltype(&RFmxDemod_CfgReferenceLevel);
  using CfgSoftwareEdgeTriggerPtr = decltype(&RFmxDemod_CfgSoftwareEdgeTrigger);
  using CheckMeasurementStatusPtr = decltype(&RFmxDemod_CheckMeasurementStatus);
  using ClearAllNamedResultsPtr = decltype(&RFmxDemod_ClearAllNamedResults);
  using ClearNamedResultPtr = decltype(&RFmxDemod_ClearNamedResult);
  using CloneSignalConfigurationPtr = decltype(&RFmxDemod_CloneSignalConfiguration);
  using ClosePtr = decltype(&RFmxDemod_Close);
  using CommitPtr = decltype(&RFmxDemod_Commit);
  using CreateSignalConfigurationPtr = decltype(&RFmxDemod_CreateSignalConfiguration);
  using DDemodCfgAveragingPtr = decltype(&RFmxDemod_DDemodCfgAveraging);
  using DDemodCfgEVMNormalizationReferencePtr = decltype(&RFmxDemod_DDemodCfgEVMNormalizationReference);
  using DDemodCfgEqualizerPtr = decltype(&RFmxDemod_DDemodCfgEqualizer);
  using DDemodCfgEqualizerInitialCoefficientsPtr = decltype(&RFmxDemod_DDemodCfgEqualizerInitialCoefficients);
  using DDemodCfgFSKDeviationPtr = decltype(&RFmxDemod_DDemodCfgFSKDeviation);
  using DDemodCfgMPtr = decltype(&RFmxDemod_DDemodCfgM);
  using DDemodCfgMeasurementFilterPtr = decltype(&RFmxDemod_DDemodCfgMeasurementFilter);
  using DDemodCfgMeasurementFilterCustomCoefficientsPtr = decltype(&RFmxDemod_DDemodCfgMeasurementFilterCustomCoefficients);
  using DDemodCfgModulationTypePtr = decltype(&RFmxDemod_DDemodCfgModulationType);
  using DDemodCfgNumberOfSymbolsPtr = decltype(&RFmxDemod_DDemodCfgNumberOfSymbols);
  using DDemodCfgPSKFormatPtr = decltype(&RFmxDemod_DDemodCfgPSKFormat);
  using DDemodCfgPulseShapingFilterPtr = decltype(&RFmxDemod_DDemodCfgPulseShapingFilter);
  using DDemodCfgPulseShapingFilterCustomCoefficientsPtr = decltype(&RFmxDemod_DDemodCfgPulseShapingFilterCustomCoefficients);
  using DDemodCfgSamplesPerSymbolPtr = decltype(&RFmxDemod_DDemodCfgSamplesPerSymbol);
  using DDemodCfgSignalStructurePtr = decltype(&RFmxDemod_DDemodCfgSignalStructure);
  using DDemodCfgSpectrumInvertedPtr = decltype(&RFmxDemod_DDemodCfgSpectrumInverted);
  using DDemodCfgSymbolMapPtr = decltype(&RFmxDemod_DDemodCfgSymbolMap);
  using DDemodCfgSymbolRatePtr = decltype(&RFmxDemod_DDemodCfgSymbolRate);
  using DDemodCfgSynchronizationPtr = decltype(&RFmxDemod_DDemodCfgSynchronization);
  using DDemodFetchCarrierMeasurementPtr = decltype(&RFmxDemod_DDemodFetchCarrierMeasurement);
  using DDemodFetchConstellationTracePtr = decltype(&RFmxDemod_DDemodFetchConstellationTrace);
  using DDemodFetchDemodulatedBitsPtr = decltype(&RFmxDemod_DDemodFetchDemodulatedBits);
  using DDemodFetchEVMPtr = decltype(&RFmxDemod_DDemodFetchEVM);
  using DDemodFetchEVMTracePtr = decltype(&RFmxDemod_DDemodFetchEVMTrace);
  using DDemodFetchEqualizerCoefficientsPtr = decltype(&RFmxDemod_DDemodFetchEqualizerCoefficients);
  using DDemodFetchFSKDeviationTracePtr = decltype(&RFmxDemod_DDemodFetchFSKDeviationTrace);
  using DDemodFetchFSKResultsPtr = decltype(&RFmxDemod_DDemodFetchFSKResults);
  using DDemodFetchIQImpairmentsPtr = decltype(&RFmxDemod_DDemodFetchIQImpairments);
  using DDemodFetchMagnitudeErrorPtr = decltype(&RFmxDemod_DDemodFetchMagnitudeError);
  using DDemodFetchMagnitudeErrorTracePtr = decltype(&RFmxDemod_DDemodFetchMagnitudeErrorTrace);
  using DDemodFetchMeanAmplitudeDroopPtr = decltype(&RFmxDemod_DDemodFetchMeanAmplitudeDroop);
  using DDemodFetchMeanIQOriginOffsetPtr = decltype(&RFmxDemod_DDemodFetchMeanIQOriginOffset);
  using DDemodFetchMeanQuadratureSkewPtr = decltype(&RFmxDemod_DDemodFetchMeanQuadratureSkew);
  using DDemodFetchMeanRhoFactorPtr = decltype(&RFmxDemod_DDemodFetchMeanRhoFactor);
  using DDemodFetchMeasurementWaveformPtr = decltype(&RFmxDemod_DDemodFetchMeasurementWaveform);
  using DDemodFetchOffsetConstellationTracePtr = decltype(&RFmxDemod_DDemodFetchOffsetConstellationTrace);
  using DDemodFetchOffsetEVMPtr = decltype(&RFmxDemod_DDemodFetchOffsetEVM);
  using DDemodFetchOffsetEVMTracePtr = decltype(&RFmxDemod_DDemodFetchOffsetEVMTrace);
  using DDemodFetchPhaseErrorPtr = decltype(&RFmxDemod_DDemodFetchPhaseError);
  using DDemodFetchPhaseErrorTracePtr = decltype(&RFmxDemod_DDemodFetchPhaseErrorTrace);
  using DDemodFetchReferenceWaveformPtr = decltype(&RFmxDemod_DDemodFetchReferenceWaveform);
  using DDemodFetchSyncFoundPtr = decltype(&RFmxDemod_DDemodFetchSyncFound);
  using DDemodGetEqualizerInitialCoefficientsPtr = decltype(&RFmxDemod_DDemodGetEqualizerInitialCoefficients);
  using DDemodGetSymbolMapPtr = decltype(&RFmxDemod_DDemodGetSymbolMap);
  using DDemodReadPtr = decltype(&RFmxDemod_DDemodRead);
  using DDemodSetSymbolMapPtr = decltype(&RFmxDemod_DDemodSetSymbolMap);
  using DeleteSignalConfigurationPtr = decltype(&RFmxDemod_DeleteSignalConfiguration);
  using DisableTriggerPtr = decltype(&RFmxDemod_DisableTrigger);
  using GetAllNamedResultNamesPtr = decltype(&RFmxDemod_GetAllNamedResultNames);
  using GetAttributeF32Ptr = decltype(&RFmxDemod_GetAttributeF32);
  using GetAttributeF32ArrayPtr = decltype(&RFmxDemod_GetAttributeF32Array);
  using GetAttributeF64Ptr = decltype(&RFmxDemod_GetAttributeF64);
  using GetAttributeF64ArrayPtr = decltype(&RFmxDemod_GetAttributeF64Array);
  using GetAttributeI16Ptr = decltype(&RFmxDemod_GetAttributeI16);
  using GetAttributeI32Ptr = decltype(&RFmxDemod_GetAttributeI32);
  using GetAttributeI32ArrayPtr = decltype(&RFmxDemod_GetAttributeI32Array);
  using GetAttributeI64Ptr = decltype(&RFmxDemod_GetAttributeI64);
  using GetAttributeI64ArrayPtr = decltype(&RFmxDemod_GetAttributeI64Array);
  using GetAttributeI8Ptr = decltype(&RFmxDemod_GetAttributeI8);
  using GetAttributeI8ArrayPtr = decltype(&RFmxDemod_GetAttributeI8Array);
  using GetAttributeNIComplexDoubleArrayPtr = decltype(&RFmxDemod_GetAttributeNIComplexDoubleArray);
  using GetAttributeNIComplexSingleArrayPtr = decltype(&RFmxDemod_GetAttributeNIComplexSingleArray);
  using GetAttributeStringPtr = decltype(&RFmxDemod_GetAttributeString);
  using GetAttributeU16Ptr = decltype(&RFmxDemod_GetAttributeU16);
  using GetAttributeU32Ptr = decltype(&RFmxDemod_GetAttributeU32);
  using GetAttributeU32ArrayPtr = decltype(&RFmxDemod_GetAttributeU32Array);
  using GetAttributeU64ArrayPtr = decltype(&RFmxDemod_GetAttributeU64Array);
  using GetAttributeU8Ptr = decltype(&RFmxDemod_GetAttributeU8);
  using GetAttributeU8ArrayPtr = decltype(&RFmxDemod_GetAttributeU8Array);
  using GetErrorPtr = decltype(&RFmxDemod_GetError);
  using GetErrorStringPtr = decltype(&RFmxDemod_GetErrorString);
  using InitializePtr = decltype(&RFmxDemod_Initialize);
  using InitializeFromNIRFSASessionPtr = decltype(&RFmxDemod_InitializeFromNIRFSASession);
  using InitiatePtr = decltype(&RFmxDemod_Initiate);
  using ResetAttributePtr = decltype(&RFmxDemod_ResetAttribute);
  using ResetToDefaultPtr = decltype(&RFmxDemod_ResetToDefault);
  using SelectMeasurementsPtr = decltype(&RFmxDemod_SelectMeasurements);
  using SendSoftwareEdgeTriggerPtr = decltype(&RFmxDemod_SendSoftwareEdgeTrigger);
  using SetAttributeF32Ptr = decltype(&RFmxDemod_SetAttributeF32);
  using SetAttributeF32ArrayPtr = decltype(&RFmxDemod_SetAttributeF32Array);
  using SetAttributeF64Ptr = decltype(&RFmxDemod_SetAttributeF64);
  using SetAttributeF64ArrayPtr = decltype(&RFmxDemod_SetAttributeF64Array);
  using SetAttributeI16Ptr = decltype(&RFmxDemod_SetAttributeI16);
  using SetAttributeI32Ptr = decltype(&RFmxDemod_SetAttributeI32);
  using SetAttributeI32ArrayPtr = decltype(&RFmxDemod_SetAttributeI32Array);
  using SetAttributeI64Ptr = decltype(&RFmxDemod_SetAttributeI64);
  using SetAttributeI64ArrayPtr = decltype(&RFmxDemod_SetAttributeI64Array);
  using SetAttributeI8Ptr = decltype(&RFmxDemod_SetAttributeI8);
  using SetAttributeI8ArrayPtr = decltype(&RFmxDemod_SetAttributeI8Array);
  using SetAttributeNIComplexDoubleArrayPtr = decltype(&RFmxDemod_SetAttributeNIComplexDoubleArray);
  using SetAttributeNIComplexSingleArrayPtr = decltype(&RFmxDemod_SetAttributeNIComplexSingleArray);
  using SetAttributeStringPtr = decltype(&RFmxDemod_SetAttributeString);
  using SetAttributeU16Ptr = decltype(&RFmxDemod_SetAttributeU16);
  using SetAttributeU32Ptr = decltype(&RFmxDemod_SetAttributeU32);
  using SetAttributeU32ArrayPtr = decltype(&RFmxDemod_SetAttributeU32Array);
  using SetAttributeU64ArrayPtr = decltype(&RFmxDemod_SetAttributeU64Array);
  using SetAttributeU8Ptr = decltype(&RFmxDemod_SetAttributeU8);
  using SetAttributeU8ArrayPtr = decltype(&RFmxDemod_SetAttributeU8Array);
  using WaitForAcquisitionCompletePtr = decltype(&RFmxDemod_WaitForAcquisitionComplete);
  using WaitForMeasurementCompletePtr = decltype(&RFmxDemod_WaitForMeasurementComplete);

  typedef struct FunctionPointers {
    ADemodCfgAMCarrierSuppressedPtr ADemodCfgAMCarrierSuppressed;
    ADemodCfgAudioFilterPtr ADemodCfgAudioFilter;
    ADemodCfgAveragingPtr ADemodCfgAveraging;
    ADemodCfgCarrierCorrectionPtr ADemodCfgCarrierCorrection;
    ADemodCfgFMDeEmphasisPtr ADemodCfgFMDeEmphasis;
    ADemodCfgMeasurementIntervalPtr ADemodCfgMeasurementInterval;
    ADemodCfgModulationTypePtr ADemodCfgModulationType;
    ADemodCfgRBWFilterPtr ADemodCfgRBWFilter;
    ADemodFetchAMMaximumModulationDepthPtr ADemodFetchAMMaximumModulationDepth;
    ADemodFetchAMMeanModulationDepthPtr ADemodFetchAMMeanModulationDepth;
    ADemodFetchCarrierMeasurementPtr ADemodFetchCarrierMeasurement;
    ADemodFetchDemodSignalTracePtr ADemodFetchDemodSignalTrace;
    ADemodFetchDemodSpectrumTracePtr ADemodFetchDemodSpectrumTrace;
    ADemodFetchDistortionsPtr ADemodFetchDistortions;
    ADemodFetchFMMaximumDeviationPtr ADemodFetchFMMaximumDeviation;
    ADemodFetchFMMeanDeviationPtr ADemodFetchFMMeanDeviation;
    ADemodFetchMeanModulationFrequencyPtr ADemodFetchMeanModulationFrequency;
    ADemodFetchPMMaximumDeviationPtr ADemodFetchPMMaximumDeviation;
    ADemodFetchPMMeanDeviationPtr ADemodFetchPMMeanDeviation;
    ADemodReadAMPtr ADemodReadAM;
    ADemodReadFMPtr ADemodReadFM;
    ADemodReadPMPtr ADemodReadPM;
    AbortMeasurementsPtr AbortMeasurements;
    AnalyzeIQ1WaveformPtr AnalyzeIQ1Waveform;
    AutoLevelPtr AutoLevel;
    BuildSignalStringPtr BuildSignalString;
    CfgDigitalEdgeTriggerPtr CfgDigitalEdgeTrigger;
    CfgExternalAttenuationPtr CfgExternalAttenuation;
    CfgFrequencyPtr CfgFrequency;
    CfgFrequencyReferencePtr CfgFrequencyReference;
    CfgIQPowerEdgeTriggerPtr CfgIQPowerEdgeTrigger;
    CfgMechanicalAttenuationPtr CfgMechanicalAttenuation;
    CfgRFPtr CfgRF;
    CfgRFAttenuationPtr CfgRFAttenuation;
    CfgReferenceLevelPtr CfgReferenceLevel;
    CfgSoftwareEdgeTriggerPtr CfgSoftwareEdgeTrigger;
    CheckMeasurementStatusPtr CheckMeasurementStatus;
    ClearAllNamedResultsPtr ClearAllNamedResults;
    ClearNamedResultPtr ClearNamedResult;
    CloneSignalConfigurationPtr CloneSignalConfiguration;
    ClosePtr Close;
    CommitPtr Commit;
    CreateSignalConfigurationPtr CreateSignalConfiguration;
    DDemodCfgAveragingPtr DDemodCfgAveraging;
    DDemodCfgEVMNormalizationReferencePtr DDemodCfgEVMNormalizationReference;
    DDemodCfgEqualizerPtr DDemodCfgEqualizer;
    DDemodCfgEqualizerInitialCoefficientsPtr DDemodCfgEqualizerInitialCoefficients;
    DDemodCfgFSKDeviationPtr DDemodCfgFSKDeviation;
    DDemodCfgMPtr DDemodCfgM;
    DDemodCfgMeasurementFilterPtr DDemodCfgMeasurementFilter;
    DDemodCfgMeasurementFilterCustomCoefficientsPtr DDemodCfgMeasurementFilterCustomCoefficients;
    DDemodCfgModulationTypePtr DDemodCfgModulationType;
    DDemodCfgNumberOfSymbolsPtr DDemodCfgNumberOfSymbols;
    DDemodCfgPSKFormatPtr DDemodCfgPSKFormat;
    DDemodCfgPulseShapingFilterPtr DDemodCfgPulseShapingFilter;
    DDemodCfgPulseShapingFilterCustomCoefficientsPtr DDemodCfgPulseShapingFilterCustomCoefficients;
    DDemodCfgSamplesPerSymbolPtr DDemodCfgSamplesPerSymbol;
    DDemodCfgSignalStructurePtr DDemodCfgSignalStructure;
    DDemodCfgSpectrumInvertedPtr DDemodCfgSpectrumInverted;
    DDemodCfgSymbolMapPtr DDemodCfgSymbolMap;
    DDemodCfgSymbolRatePtr DDemodCfgSymbolRate;
    DDemodCfgSynchronizationPtr DDemodCfgSynchronization;
    DDemodFetchCarrierMeasurementPtr DDemodFetchCarrierMeasurement;
    DDemodFetchConstellationTracePtr DDemodFetchConstellationTrace;
    DDemodFetchDemodulatedBitsPtr DDemodFetchDemodulatedBits;
    DDemodFetchEVMPtr DDemodFetchEVM;
    DDemodFetchEVMTracePtr DDemodFetchEVMTrace;
    DDemodFetchEqualizerCoefficientsPtr DDemodFetchEqualizerCoefficients;
    DDemodFetchFSKDeviationTracePtr DDemodFetchFSKDeviationTrace;
    DDemodFetchFSKResultsPtr DDemodFetchFSKResults;
    DDemodFetchIQImpairmentsPtr DDemodFetchIQImpairments;
    DDemodFetchMagnitudeErrorPtr DDemodFetchMagnitudeError;
    DDemodFetchMagnitudeErrorTracePtr DDemodFetchMagnitudeErrorTrace;
    DDemodFetchMeanAmplitudeDroopPtr DDemodFetchMeanAmplitudeDroop;
    DDemodFetchMeanIQOriginOffsetPtr DDemodFetchMeanIQOriginOffset;
    DDemodFetchMeanQuadratureSkewPtr DDemodFetchMeanQuadratureSkew;
    DDemodFetchMeanRhoFactorPtr DDemodFetchMeanRhoFactor;
    DDemodFetchMeasurementWaveformPtr DDemodFetchMeasurementWaveform;
    DDemodFetchOffsetConstellationTracePtr DDemodFetchOffsetConstellationTrace;
    DDemodFetchOffsetEVMPtr DDemodFetchOffsetEVM;
    DDemodFetchOffsetEVMTracePtr DDemodFetchOffsetEVMTrace;
    DDemodFetchPhaseErrorPtr DDemodFetchPhaseError;
    DDemodFetchPhaseErrorTracePtr DDemodFetchPhaseErrorTrace;
    DDemodFetchReferenceWaveformPtr DDemodFetchReferenceWaveform;
    DDemodFetchSyncFoundPtr DDemodFetchSyncFound;
    DDemodGetEqualizerInitialCoefficientsPtr DDemodGetEqualizerInitialCoefficients;
    DDemodGetSymbolMapPtr DDemodGetSymbolMap;
    DDemodReadPtr DDemodRead;
    DDemodSetSymbolMapPtr DDemodSetSymbolMap;
    DeleteSignalConfigurationPtr DeleteSignalConfiguration;
    DisableTriggerPtr DisableTrigger;
    GetAllNamedResultNamesPtr GetAllNamedResultNames;
    GetAttributeF32Ptr GetAttributeF32;
    GetAttributeF32ArrayPtr GetAttributeF32Array;
    GetAttributeF64Ptr GetAttributeF64;
    GetAttributeF64ArrayPtr GetAttributeF64Array;
    GetAttributeI16Ptr GetAttributeI16;
    GetAttributeI32Ptr GetAttributeI32;
    GetAttributeI32ArrayPtr GetAttributeI32Array;
    GetAttributeI64Ptr GetAttributeI64;
    GetAttributeI64ArrayPtr GetAttributeI64Array;
    GetAttributeI8Ptr GetAttributeI8;
    GetAttributeI8ArrayPtr GetAttributeI8Array;
    GetAttributeNIComplexDoubleArrayPtr GetAttributeNIComplexDoubleArray;
    GetAttributeNIComplexSingleArrayPtr GetAttributeNIComplexSingleArray;
    GetAttributeStringPtr GetAttributeString;
    GetAttributeU16Ptr GetAttributeU16;
    GetAttributeU32Ptr GetAttributeU32;
    GetAttributeU32ArrayPtr GetAttributeU32Array;
    GetAttributeU64ArrayPtr GetAttributeU64Array;
    GetAttributeU8Ptr GetAttributeU8;
    GetAttributeU8ArrayPtr GetAttributeU8Array;
    GetErrorPtr GetError;
    GetErrorStringPtr GetErrorString;
    InitializePtr Initialize;
    InitializeFromNIRFSASessionPtr InitializeFromNIRFSASession;
    InitiatePtr Initiate;
    ResetAttributePtr ResetAttribute;
    ResetToDefaultPtr ResetToDefault;
    SelectMeasurementsPtr SelectMeasurements;
    SendSoftwareEdgeTriggerPtr SendSoftwareEdgeTrigger;
    SetAttributeF32Ptr SetAttributeF32;
    SetAttributeF32ArrayPtr SetAttributeF32Array;
    SetAttributeF64Ptr SetAttributeF64;
    SetAttributeF64ArrayPtr SetAttributeF64Array;
    SetAttributeI16Ptr SetAttributeI16;
    SetAttributeI32Ptr SetAttributeI32;
    SetAttributeI32ArrayPtr SetAttributeI32Array;
    SetAttributeI64Ptr SetAttributeI64;
    SetAttributeI64ArrayPtr SetAttributeI64Array;
    SetAttributeI8Ptr SetAttributeI8;
    SetAttributeI8ArrayPtr SetAttributeI8Array;
    SetAttributeNIComplexDoubleArrayPtr SetAttributeNIComplexDoubleArray;
    SetAttributeNIComplexSingleArrayPtr SetAttributeNIComplexSingleArray;
    SetAttributeStringPtr SetAttributeString;
    SetAttributeU16Ptr SetAttributeU16;
    SetAttributeU32Ptr SetAttributeU32;
    SetAttributeU32ArrayPtr SetAttributeU32Array;
    SetAttributeU64ArrayPtr SetAttributeU64Array;
    SetAttributeU8Ptr SetAttributeU8;
    SetAttributeU8ArrayPtr SetAttributeU8Array;
    WaitForAcquisitionCompletePtr WaitForAcquisitionComplete;
    WaitForMeasurementCompletePtr WaitForMeasurementComplete;
  } FunctionLoadStatus;

  nidevice_grpc::SharedLibrary shared_library_;
  FunctionPointers function_pointers_;
};

}  // namespace nirfmxdemod_grpc

#endif  // NIRFMXDEMOD_GRPC_LIBRARY_H
