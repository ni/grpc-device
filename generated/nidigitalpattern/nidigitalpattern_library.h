//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Real implementation of LibraryInterface for NI-Digital Pattern Driver
//---------------------------------------------------------------------
#ifndef NIDIGITALPATTERN_GRPC_LIBRARY_H
#define NIDIGITALPATTERN_GRPC_LIBRARY_H

#include "nidigitalpattern_library_interface.h"

#include <server/shared_library_interface.h>

#include <memory>

namespace nidigitalpattern_grpc {

class NiDigitalLibrary : public nidigitalpattern_grpc::NiDigitalLibraryInterface {
 public:
  NiDigitalLibrary();
  explicit NiDigitalLibrary(std::shared_ptr<nidevice_grpc::SharedLibraryInterface> shared_library);
  virtual ~NiDigitalLibrary();

  ::grpc::Status check_function_exists(std::string functionName);
  ViStatus Abort(ViSession vi) override;
  ViStatus AbortKeepAlive(ViSession vi) override;
  ViStatus ApplyLevelsAndTiming(ViSession vi, ViConstString siteList, ViConstString levelsSheet, ViConstString timingSheet, ViConstString initialStateHighPins, ViConstString initialStateLowPins, ViConstString initialStateTristatePins) override;
  ViStatus ApplyTDROffsets(ViSession vi, ViConstString channelList, ViInt32 numOffsets, ViReal64 offsets[]) override;
  ViStatus BurstPattern(ViSession vi, ViConstString siteList, ViConstString startLabel, ViBoolean selectDigitalFunction, ViBoolean waitUntilDone, ViReal64 timeout) override;
  ViStatus BurstPatternSynchronized(ViUInt32 sessionCount, ViSession sessions[], ViConstString siteList, ViConstString startLabel, ViBoolean selectDigitalFunction, ViBoolean waitUntilDone, ViReal64 timeout) override;
  ViStatus ClearError(ViSession vi) override;
  ViStatus ClockGeneratorAbort(ViSession vi, ViConstString channelList) override;
  ViStatus ClockGeneratorGenerateClock(ViSession vi, ViConstString channelList, ViReal64 frequency, ViBoolean selectDigitalFunction) override;
  ViStatus ClockGeneratorInitiate(ViSession vi, ViConstString channelList) override;
  ViStatus Close(ViSession vi) override;
  ViStatus Commit(ViSession vi) override;
  ViStatus ConfigureActiveLoadLevels(ViSession vi, ViConstString channelList, ViReal64 iol, ViReal64 ioh, ViReal64 vcom) override;
  ViStatus ConfigureCycleNumberHistoryRAMTrigger(ViSession vi, ViInt64 cycleNumber, ViInt32 pretriggerSamples) override;
  ViStatus ConfigureDigitalEdgeConditionalJumpTrigger(ViSession vi, ViConstString triggerIdentifier, ViConstString source, ViInt32 edge) override;
  ViStatus ConfigureDigitalEdgeStartTrigger(ViSession vi, ViConstString source, ViInt32 edge) override;
  ViStatus ConfigureFirstFailureHistoryRAMTrigger(ViSession vi, ViInt32 pretriggerSamples) override;
  ViStatus ConfigureHistoryRAMCyclesToAcquire(ViSession vi, ViInt32 cyclesToAcquire) override;
  ViStatus ConfigurePatternBurstSites(ViSession vi, ViConstString siteList) override;
  ViStatus ConfigurePatternLabelHistoryRAMTrigger(ViSession vi, ViConstString label, ViInt64 vectorOffset, ViInt64 cycleOffset, ViInt32 pretriggerSamples) override;
  ViStatus ConfigureSoftwareEdgeConditionalJumpTrigger(ViSession vi, ViConstString triggerIdentifier) override;
  ViStatus ConfigureSoftwareEdgeStartTrigger(ViSession vi) override;
  ViStatus ConfigureStartLabel(ViSession vi, ViConstString label) override;
  ViStatus ConfigureTerminationMode(ViSession vi, ViConstString channelList, ViInt32 mode) override;
  ViStatus ConfigureTimeSetCompareEdgesStrobe(ViSession vi, ViConstString pinList, ViConstString timeSet, ViReal64 strobeEdge) override;
  ViStatus ConfigureTimeSetCompareEdgesStrobe2x(ViSession vi, ViConstString pinList, ViConstString timeSet, ViReal64 strobeEdge, ViReal64 strobe2Edge) override;
  ViStatus ConfigureTimeSetDriveEdges(ViSession vi, ViConstString pinList, ViConstString timeSet, ViInt32 format, ViReal64 driveOnEdge, ViReal64 driveDataEdge, ViReal64 driveReturnEdge, ViReal64 driveOffEdge) override;
  ViStatus ConfigureTimeSetDriveEdges2x(ViSession vi, ViConstString pinList, ViConstString timeSet, ViInt32 format, ViReal64 driveOnEdge, ViReal64 driveDataEdge, ViReal64 driveReturnEdge, ViReal64 driveOffEdge, ViReal64 driveData2Edge, ViReal64 driveReturn2Edge) override;
  ViStatus ConfigureTimeSetDriveFormat(ViSession vi, ViConstString pinList, ViConstString timeSet, ViInt32 driveFormat) override;
  ViStatus ConfigureTimeSetEdge(ViSession vi, ViConstString pinList, ViConstString timeSet, ViInt32 edge, ViReal64 time) override;
  ViStatus ConfigureTimeSetEdgeMultiplier(ViSession vi, ViConstString pinList, ViConstString timeSet, ViInt32 edgeMultiplier) override;
  ViStatus ConfigureTimeSetPeriod(ViSession vi, ViConstString timeSet, ViReal64 period) override;
  ViStatus ConfigureVoltageLevels(ViSession vi, ViConstString channelList, ViReal64 vil, ViReal64 vih, ViReal64 vol, ViReal64 voh, ViReal64 vterm) override;
  ViStatus CreateCaptureWaveformFromFileDigicapture(ViSession vi, ViConstString waveformName, ViConstString waveformFilePath) override;
  ViStatus CreateCaptureWaveformParallel(ViSession vi, ViConstString pinList, ViConstString waveformName) override;
  ViStatus CreateCaptureWaveformSerial(ViSession vi, ViConstString pinList, ViConstString waveformName, ViUInt32 sampleWidth, ViInt32 bitOrder) override;
  ViStatus CreateChannelMap(ViSession vi, ViInt32 numSites) override;
  ViStatus CreatePinGroup(ViSession vi, ViConstString pinGroupName, ViConstString pinList) override;
  ViStatus CreatePinMap(ViSession vi, ViConstString dutPinList, ViConstString systemPinList) override;
  ViStatus CreateSourceWaveformFromFileTDMS(ViSession vi, ViConstString waveformName, ViConstString waveformFilePath, ViBoolean writeWaveformData) override;
  ViStatus CreateSourceWaveformParallel(ViSession vi, ViConstString pinList, ViConstString waveformName, ViInt32 dataMapping) override;
  ViStatus CreateSourceWaveformSerial(ViSession vi, ViConstString pinList, ViConstString waveformName, ViInt32 dataMapping, ViUInt32 sampleWidth, ViInt32 bitOrder) override;
  ViStatus CreateTimeSet(ViSession vi, ViConstString name) override;
  ViStatus DeleteAllTimeSets(ViSession vi) override;
  ViStatus DisableConditionalJumpTrigger(ViSession vi, ViConstString triggerIdentifier) override;
  ViStatus DisableSites(ViSession vi, ViConstString siteList) override;
  ViStatus DisableStartTrigger(ViSession vi) override;
  ViStatus EnableMatchFailCombination(ViUInt32 sessionCount, ViSession sessions[], ViSession syncSession) override;
  ViStatus EnableSites(ViSession vi, ViConstString siteList) override;
  ViStatus EndChannelMap(ViSession vi) override;
  ViStatus ErrorMessage(ViSession vi, ViStatus errorCode, ViChar errorMessage[256]) override;
  ViStatus ExportSignal(ViSession vi, ViInt32 signal, ViConstString signalIdentifier, ViConstString outputTerminal) override;
  ViStatus FetchCaptureWaveformU32(ViSession vi, ViConstString siteList, ViConstString waveformName, ViInt32 samplesToRead, ViReal64 timeout, ViInt32 dataBufferSize, ViUInt32 data[], ViInt32* actualNumWaveforms, ViInt32* actualSamplesPerWaveform) override;
  ViStatus FetchHistoryRAMCycleInformation(ViSession vi, ViConstString site, ViInt64 sampleIndex, ViInt32* patternIndex, ViInt32* timeSetIndex, ViInt64* vectorNumber, ViInt64* cycleNumber, ViInt32* numDutCycles) override;
  ViStatus FetchHistoryRAMCyclePinData(ViSession vi, ViConstString site, ViConstString pinList, ViInt64 sampleIndex, ViInt32 dutCycleIndex, ViInt32 pinDataBufferSize, ViUInt8 expectedPinStates[], ViUInt8 actualPinStates[], ViBoolean perPinPassFail[], ViInt32* actualNumPinData) override;
  ViStatus FetchHistoryRAMScanCycleNumber(ViSession vi, ViConstString site, ViInt64 sampleIndex, ViInt64* scanCycleNumber) override;
  ViStatus FrequencyCounterConfigureMeasurementMode(ViSession vi, ViInt32 measurementmode) override;
  ViStatus FrequencyCounterConfigureMeasurementTime(ViSession vi, ViConstString channelList, ViReal64 measurementTime) override;
  ViStatus FrequencyCounterMeasureFrequency(ViSession vi, ViConstString channelList, ViInt32 frequenciesBufferSize, ViReal64 frequencies[], ViInt32* actualNumFrequencies) override;
  ViStatus GetAttributeViBoolean(ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean* value) override;
  ViStatus GetAttributeViInt32(ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32* value) override;
  ViStatus GetAttributeViInt64(ViSession vi, ViConstString channelName, ViAttr attribute, ViInt64* value) override;
  ViStatus GetAttributeViReal64(ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64* value) override;
  ViStatus GetAttributeViSession(ViSession vi, ViConstString channelName, ViAttr attribute, ViSession* value) override;
  ViStatus GetAttributeViString(ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 bufferSize, ViChar value[]) override;
  ViStatus GetChannelName(ViSession vi, ViInt32 index, ViInt32 nameBufferSize, ViChar name[]) override;
  ViStatus GetChannelNameFromString(ViSession vi, ViConstString index, ViInt32 nameBufferSize, ViChar name[]) override;
  ViStatus GetError(ViSession vi, ViStatus* errorCode, ViInt32 errorDescriptionBufferSize, ViChar errorDescription[]) override;
  ViStatus GetFailCount(ViSession vi, ViConstString channelList, ViInt32 bufferSize, ViInt64 failureCount[], ViInt32* actualNumRead) override;
  ViStatus GetHistoryRAMSampleCount(ViSession vi, ViConstString site, ViInt64* sampleCount) override;
  ViStatus GetPatternName(ViSession vi, ViInt32 patternIndex, ViInt32 nameBufferSize, ViChar name[]) override;
  ViStatus GetPatternPinIndexes(ViSession vi, ViConstString startLabel, ViInt32 pinIndexesBufferSize, ViInt32 pinIndexes[], ViInt32* actualNumPins) override;
  ViStatus GetPatternPinList(ViSession vi, ViConstString startLabel, ViInt32 pinListBufferSize, ViChar pinList[]) override;
  ViStatus GetPinName(ViSession vi, ViInt32 pinIndex, ViInt32 nameBufferSize, ViChar name[]) override;
  ViStatus GetPinResultsPinInformation(ViSession vi, ViConstString channelList, ViInt32 bufferSize, ViInt32 pinIndexes[], ViInt32 siteNumbers[], ViInt32 channelIndexes[], ViInt32* actualNumValues) override;
  ViStatus GetSitePassFail(ViSession vi, ViConstString siteList, ViInt32 passFailBufferSize, ViBoolean passFail[], ViInt32* actualNumSites) override;
  ViStatus GetSiteResultsSiteNumbers(ViSession vi, ViConstString siteList, ViInt32 siteResultType, ViInt32 siteNumbersBufferSize, ViInt32 siteNumbers[], ViInt32* actualNumSiteNumbers) override;
  ViStatus GetTimeSetDriveFormat(ViSession vi, ViConstString pin, ViConstString timeSet, ViInt32* format) override;
  ViStatus GetTimeSetEdge(ViSession vi, ViConstString pin, ViConstString timeSet, ViInt32 edge, ViReal64* time) override;
  ViStatus GetTimeSetEdgeMultiplier(ViSession vi, ViConstString pin, ViConstString timeSet, ViInt32* edgeMultiplier) override;
  ViStatus GetTimeSetName(ViSession vi, ViInt32 timeSetIndex, ViInt32 nameBufferSize, ViChar name[]) override;
  ViStatus GetTimeSetPeriod(ViSession vi, ViConstString timeSet, ViReal64* period) override;
  ViStatus Init(ViString resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViSession* newVi) override;
  ViStatus InitWithOptions(ViString resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViConstString optionString, ViSession* newVi) override;
  ViStatus Initiate(ViSession vi) override;
  ViStatus IsDone(ViSession vi, ViBoolean* done) override;
  ViStatus IsSiteEnabled(ViSession vi, ViConstString site, ViBoolean* enable) override;
  ViStatus LoadLevels(ViSession vi, ViConstString levelsFilePath) override;
  ViStatus LoadPattern(ViSession vi, ViConstString filePath) override;
  ViStatus LoadPinMap(ViSession vi, ViConstString pinMapFilePath) override;
  ViStatus LoadSpecifications(ViSession vi, ViConstString specificationsFilePath) override;
  ViStatus LoadTiming(ViSession vi, ViConstString timingFilePath) override;
  ViStatus LockSession(ViSession vi, ViBoolean* callerHasLock) override;
  ViStatus MapPinToChannel(ViSession vi, ViConstString pin, ViInt32 site, ViConstString channel) override;
  ViStatus PPMUConfigureApertureTime(ViSession vi, ViConstString channelList, ViReal64 apertureTime, ViInt32 units) override;
  ViStatus PPMUConfigureCurrentLevel(ViSession vi, ViConstString channelList, ViReal64 currentLevel) override;
  ViStatus PPMUConfigureCurrentLevelRange(ViSession vi, ViConstString channelList, ViReal64 range) override;
  ViStatus PPMUConfigureCurrentLimit(ViSession vi, ViConstString channelList, ViInt32 behavior, ViReal64 limit) override;
  ViStatus PPMUConfigureCurrentLimitRange(ViSession vi, ViConstString channelList, ViReal64 range) override;
  ViStatus PPMUConfigureOutputFunction(ViSession vi, ViConstString channelList, ViInt32 outputFunction) override;
  ViStatus PPMUConfigureVoltageLevel(ViSession vi, ViConstString channelList, ViReal64 voltageLevel) override;
  ViStatus PPMUConfigureVoltageLimits(ViSession vi, ViConstString channelList, ViReal64 lowerVoltageLimit, ViReal64 upperVoltageLimit) override;
  ViStatus PPMUMeasure(ViSession vi, ViConstString channelList, ViInt32 measurementType, ViInt32 bufferSize, ViReal64 measurements[], ViInt32* actualNumRead) override;
  ViStatus PPMUSource(ViSession vi, ViConstString channelList) override;
  ViStatus ReadSequencerFlag(ViSession vi, ViConstString flag, ViBoolean* value) override;
  ViStatus ReadSequencerRegister(ViSession vi, ViConstString reg, ViInt32* value) override;
  ViStatus ReadStatic(ViSession vi, ViConstString channelList, ViInt32 bufferSize, ViUInt8 data[], ViInt32* actualNumRead) override;
  ViStatus Reset(ViSession vi) override;
  ViStatus ResetAttribute(ViSession vi, ViConstString channelName, ViAttr attributeId) override;
  ViStatus ResetDevice(ViSession vi) override;
  ViStatus SelectFunction(ViSession vi, ViConstString channelList, ViInt32 function) override;
  ViStatus SelfCalibrate(ViSession vi) override;
  ViStatus SelfTest(ViSession vi, ViInt16* testResult, ViChar testMessage[2048]) override;
  ViStatus SendSoftwareEdgeTrigger(ViSession vi, ViInt32 trigger, ViConstString triggerIdentifier) override;
  ViStatus SetAttributeViBoolean(ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean value) override;
  ViStatus SetAttributeViInt32(ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 value) override;
  ViStatus SetAttributeViInt64(ViSession vi, ViConstString channelName, ViAttr attribute, ViInt64 value) override;
  ViStatus SetAttributeViReal64(ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64 value) override;
  ViStatus SetAttributeViSession(ViSession vi, ViConstString channelName, ViAttr attribute, ViSession value) override;
  ViStatus SetAttributeViString(ViSession vi, ViConstString channelName, ViAttr attribute, ViConstString value) override;
  ViStatus TDR(ViSession vi, ViConstString channelList, ViBoolean applyOffsets, ViInt32 offsetsBufferSize, ViReal64 offsets[], ViInt32* actualNumOffsets) override;
  ViStatus UnloadAllPatterns(ViSession vi, ViBoolean unloadKeepAlivePattern) override;
  ViStatus UnloadSpecifications(ViSession vi, ViConstString specificationsFilePath) override;
  ViStatus UnlockSession(ViSession vi, ViBoolean* callerHasLock) override;
  ViStatus WaitUntilDone(ViSession vi, ViReal64 timeout) override;
  ViStatus WriteSequencerFlag(ViSession vi, ViConstString flag, ViBoolean value) override;
  ViStatus WriteSequencerFlagSynchronized(ViUInt32 sessionCount, ViSession sessions[], ViConstString flag, ViBoolean value) override;
  ViStatus WriteSequencerRegister(ViSession vi, ViConstString reg, ViInt32 value) override;
  ViStatus WriteSourceWaveformBroadcastU32(ViSession vi, ViConstString waveformName, ViInt32 waveformSize, ViUInt32 waveformData[]) override;
  ViStatus WriteSourceWaveformDataFromFileTDMS(ViSession vi, ViConstString waveformName, ViConstString waveformFilePath) override;
  ViStatus WriteSourceWaveformSiteUniqueU32(ViSession vi, ViConstString siteList, ViConstString waveformName, ViInt32 numWaveforms, ViInt32 samplesPerWaveform, ViUInt32 waveformData[1]) override;
  ViStatus WriteStatic(ViSession vi, ViConstString channelList, ViUInt8 state) override;
  ViStatus SetRuntimeEnvironment(ViConstString environment, ViConstString environmentVersion, ViConstString reserved1, ViConstString reserved2) override;
  bool is_runtime_environment_set() const; // needed to test that we properly call SetRuntimeEnvironment

 private:
  using AbortPtr = decltype(&niDigital_Abort);
  using AbortKeepAlivePtr = decltype(&niDigital_AbortKeepAlive);
  using ApplyLevelsAndTimingPtr = decltype(&niDigital_ApplyLevelsAndTiming);
  using ApplyTDROffsetsPtr = decltype(&niDigital_ApplyTDROffsets);
  using BurstPatternPtr = decltype(&niDigital_BurstPattern);
  using BurstPatternSynchronizedPtr = decltype(&niDigital_BurstPatternSynchronized);
  using ClearErrorPtr = decltype(&niDigital_ClearError);
  using ClockGeneratorAbortPtr = decltype(&niDigital_ClockGenerator_Abort);
  using ClockGeneratorGenerateClockPtr = decltype(&niDigital_ClockGenerator_GenerateClock);
  using ClockGeneratorInitiatePtr = decltype(&niDigital_ClockGenerator_Initiate);
  using ClosePtr = decltype(&niDigital_close);
  using CommitPtr = decltype(&niDigital_Commit);
  using ConfigureActiveLoadLevelsPtr = decltype(&niDigital_ConfigureActiveLoadLevels);
  using ConfigureCycleNumberHistoryRAMTriggerPtr = decltype(&niDigital_ConfigureCycleNumberHistoryRAMTrigger);
  using ConfigureDigitalEdgeConditionalJumpTriggerPtr = decltype(&niDigital_ConfigureDigitalEdgeConditionalJumpTrigger);
  using ConfigureDigitalEdgeStartTriggerPtr = decltype(&niDigital_ConfigureDigitalEdgeStartTrigger);
  using ConfigureFirstFailureHistoryRAMTriggerPtr = decltype(&niDigital_ConfigureFirstFailureHistoryRAMTrigger);
  using ConfigureHistoryRAMCyclesToAcquirePtr = decltype(&niDigital_ConfigureHistoryRAMCyclesToAcquire);
  using ConfigurePatternBurstSitesPtr = decltype(&niDigital_ConfigurePatternBurstSites);
  using ConfigurePatternLabelHistoryRAMTriggerPtr = decltype(&niDigital_ConfigurePatternLabelHistoryRAMTrigger);
  using ConfigureSoftwareEdgeConditionalJumpTriggerPtr = decltype(&niDigital_ConfigureSoftwareEdgeConditionalJumpTrigger);
  using ConfigureSoftwareEdgeStartTriggerPtr = decltype(&niDigital_ConfigureSoftwareEdgeStartTrigger);
  using ConfigureStartLabelPtr = decltype(&niDigital_ConfigureStartLabel);
  using ConfigureTerminationModePtr = decltype(&niDigital_ConfigureTerminationMode);
  using ConfigureTimeSetCompareEdgesStrobePtr = decltype(&niDigital_ConfigureTimeSetCompareEdgesStrobe);
  using ConfigureTimeSetCompareEdgesStrobe2xPtr = decltype(&niDigital_ConfigureTimeSetCompareEdgesStrobe2x);
  using ConfigureTimeSetDriveEdgesPtr = decltype(&niDigital_ConfigureTimeSetDriveEdges);
  using ConfigureTimeSetDriveEdges2xPtr = decltype(&niDigital_ConfigureTimeSetDriveEdges2x);
  using ConfigureTimeSetDriveFormatPtr = decltype(&niDigital_ConfigureTimeSetDriveFormat);
  using ConfigureTimeSetEdgePtr = decltype(&niDigital_ConfigureTimeSetEdge);
  using ConfigureTimeSetEdgeMultiplierPtr = decltype(&niDigital_ConfigureTimeSetEdgeMultiplier);
  using ConfigureTimeSetPeriodPtr = decltype(&niDigital_ConfigureTimeSetPeriod);
  using ConfigureVoltageLevelsPtr = decltype(&niDigital_ConfigureVoltageLevels);
  using CreateCaptureWaveformFromFileDigicapturePtr = decltype(&niDigital_CreateCaptureWaveformFromFileDigicapture);
  using CreateCaptureWaveformParallelPtr = decltype(&niDigital_CreateCaptureWaveformParallel);
  using CreateCaptureWaveformSerialPtr = decltype(&niDigital_CreateCaptureWaveformSerial);
  using CreateChannelMapPtr = decltype(&niDigital_CreateChannelMap);
  using CreatePinGroupPtr = decltype(&niDigital_CreatePinGroup);
  using CreatePinMapPtr = decltype(&niDigital_CreatePinMap);
  using CreateSourceWaveformFromFileTDMSPtr = decltype(&niDigital_CreateSourceWaveformFromFileTDMS);
  using CreateSourceWaveformParallelPtr = decltype(&niDigital_CreateSourceWaveformParallel);
  using CreateSourceWaveformSerialPtr = decltype(&niDigital_CreateSourceWaveformSerial);
  using CreateTimeSetPtr = decltype(&niDigital_CreateTimeSet);
  using DeleteAllTimeSetsPtr = decltype(&niDigital_DeleteAllTimeSets);
  using DisableConditionalJumpTriggerPtr = decltype(&niDigital_DisableConditionalJumpTrigger);
  using DisableSitesPtr = decltype(&niDigital_DisableSites);
  using DisableStartTriggerPtr = decltype(&niDigital_DisableStartTrigger);
  using EnableMatchFailCombinationPtr = decltype(&niDigital_EnableMatchFailCombination);
  using EnableSitesPtr = decltype(&niDigital_EnableSites);
  using EndChannelMapPtr = decltype(&niDigital_EndChannelMap);
  using ErrorMessagePtr = decltype(&niDigital_error_message);
  using ExportSignalPtr = decltype(&niDigital_ExportSignal);
  using FetchCaptureWaveformU32Ptr = decltype(&niDigital_FetchCaptureWaveformU32);
  using FetchHistoryRAMCycleInformationPtr = decltype(&niDigital_FetchHistoryRAMCycleInformation);
  using FetchHistoryRAMCyclePinDataPtr = decltype(&niDigital_FetchHistoryRAMCyclePinData);
  using FetchHistoryRAMScanCycleNumberPtr = decltype(&niDigital_FetchHistoryRAMScanCycleNumber);
  using FrequencyCounterConfigureMeasurementModePtr = decltype(&niDigital_FrequencyCounter_ConfigureMeasurementMode);
  using FrequencyCounterConfigureMeasurementTimePtr = decltype(&niDigital_FrequencyCounter_ConfigureMeasurementTime);
  using FrequencyCounterMeasureFrequencyPtr = decltype(&niDigital_FrequencyCounter_MeasureFrequency);
  using GetAttributeViBooleanPtr = decltype(&niDigital_GetAttributeViBoolean);
  using GetAttributeViInt32Ptr = decltype(&niDigital_GetAttributeViInt32);
  using GetAttributeViInt64Ptr = decltype(&niDigital_GetAttributeViInt64);
  using GetAttributeViReal64Ptr = decltype(&niDigital_GetAttributeViReal64);
  using GetAttributeViSessionPtr = decltype(&niDigital_GetAttributeViSession);
  using GetAttributeViStringPtr = decltype(&niDigital_GetAttributeViString);
  using GetChannelNamePtr = decltype(&niDigital_GetChannelName);
  using GetChannelNameFromStringPtr = decltype(&niDigital_GetChannelNameFromString);
  using GetErrorPtr = decltype(&niDigital_GetError);
  using GetFailCountPtr = decltype(&niDigital_GetFailCount);
  using GetHistoryRAMSampleCountPtr = decltype(&niDigital_GetHistoryRAMSampleCount);
  using GetPatternNamePtr = decltype(&niDigital_GetPatternName);
  using GetPatternPinIndexesPtr = decltype(&niDigital_GetPatternPinIndexes);
  using GetPatternPinListPtr = decltype(&niDigital_GetPatternPinList);
  using GetPinNamePtr = decltype(&niDigital_GetPinName);
  using GetPinResultsPinInformationPtr = decltype(&niDigital_GetPinResultsPinInformation);
  using GetSitePassFailPtr = decltype(&niDigital_GetSitePassFail);
  using GetSiteResultsSiteNumbersPtr = decltype(&niDigital_GetSiteResultsSiteNumbers);
  using GetTimeSetDriveFormatPtr = decltype(&niDigital_GetTimeSetDriveFormat);
  using GetTimeSetEdgePtr = decltype(&niDigital_GetTimeSetEdge);
  using GetTimeSetEdgeMultiplierPtr = decltype(&niDigital_GetTimeSetEdgeMultiplier);
  using GetTimeSetNamePtr = decltype(&niDigital_GetTimeSetName);
  using GetTimeSetPeriodPtr = decltype(&niDigital_GetTimeSetPeriod);
  using InitPtr = decltype(&niDigital_init);
  using InitWithOptionsPtr = decltype(&niDigital_InitWithOptions);
  using InitiatePtr = decltype(&niDigital_Initiate);
  using IsDonePtr = decltype(&niDigital_IsDone);
  using IsSiteEnabledPtr = decltype(&niDigital_IsSiteEnabled);
  using LoadLevelsPtr = decltype(&niDigital_LoadLevels);
  using LoadPatternPtr = decltype(&niDigital_LoadPattern);
  using LoadPinMapPtr = decltype(&niDigital_LoadPinMap);
  using LoadSpecificationsPtr = decltype(&niDigital_LoadSpecifications);
  using LoadTimingPtr = decltype(&niDigital_LoadTiming);
  using LockSessionPtr = ViStatus (*)(ViSession vi, ViBoolean* callerHasLock);
  using MapPinToChannelPtr = decltype(&niDigital_MapPinToChannel);
  using PPMUConfigureApertureTimePtr = decltype(&niDigital_PPMU_ConfigureApertureTime);
  using PPMUConfigureCurrentLevelPtr = decltype(&niDigital_PPMU_ConfigureCurrentLevel);
  using PPMUConfigureCurrentLevelRangePtr = decltype(&niDigital_PPMU_ConfigureCurrentLevelRange);
  using PPMUConfigureCurrentLimitPtr = decltype(&niDigital_PPMU_ConfigureCurrentLimit);
  using PPMUConfigureCurrentLimitRangePtr = decltype(&niDigital_PPMU_ConfigureCurrentLimitRange);
  using PPMUConfigureOutputFunctionPtr = decltype(&niDigital_PPMU_ConfigureOutputFunction);
  using PPMUConfigureVoltageLevelPtr = decltype(&niDigital_PPMU_ConfigureVoltageLevel);
  using PPMUConfigureVoltageLimitsPtr = decltype(&niDigital_PPMU_ConfigureVoltageLimits);
  using PPMUMeasurePtr = decltype(&niDigital_PPMU_Measure);
  using PPMUSourcePtr = decltype(&niDigital_PPMU_Source);
  using ReadSequencerFlagPtr = decltype(&niDigital_ReadSequencerFlag);
  using ReadSequencerRegisterPtr = decltype(&niDigital_ReadSequencerRegister);
  using ReadStaticPtr = decltype(&niDigital_ReadStatic);
  using ResetPtr = decltype(&niDigital_reset);
  using ResetAttributePtr = decltype(&niDigital_ResetAttribute);
  using ResetDevicePtr = decltype(&niDigital_ResetDevice);
  using SelectFunctionPtr = decltype(&niDigital_SelectFunction);
  using SelfCalibratePtr = decltype(&niDigital_SelfCalibrate);
  using SelfTestPtr = decltype(&niDigital_self_test);
  using SendSoftwareEdgeTriggerPtr = decltype(&niDigital_SendSoftwareEdgeTrigger);
  using SetAttributeViBooleanPtr = decltype(&niDigital_SetAttributeViBoolean);
  using SetAttributeViInt32Ptr = decltype(&niDigital_SetAttributeViInt32);
  using SetAttributeViInt64Ptr = decltype(&niDigital_SetAttributeViInt64);
  using SetAttributeViReal64Ptr = decltype(&niDigital_SetAttributeViReal64);
  using SetAttributeViSessionPtr = decltype(&niDigital_SetAttributeViSession);
  using SetAttributeViStringPtr = decltype(&niDigital_SetAttributeViString);
  using TDRPtr = decltype(&niDigital_TDR);
  using UnloadAllPatternsPtr = decltype(&niDigital_UnloadAllPatterns);
  using UnloadSpecificationsPtr = decltype(&niDigital_UnloadSpecifications);
  using UnlockSessionPtr = ViStatus (*)(ViSession vi, ViBoolean* callerHasLock);
  using WaitUntilDonePtr = decltype(&niDigital_WaitUntilDone);
  using WriteSequencerFlagPtr = decltype(&niDigital_WriteSequencerFlag);
  using WriteSequencerFlagSynchronizedPtr = decltype(&niDigital_WriteSequencerFlagSynchronized);
  using WriteSequencerRegisterPtr = decltype(&niDigital_WriteSequencerRegister);
  using WriteSourceWaveformBroadcastU32Ptr = decltype(&niDigital_WriteSourceWaveformBroadcastU32);
  using WriteSourceWaveformDataFromFileTDMSPtr = decltype(&niDigital_WriteSourceWaveformDataFromFileTDMS);
  using WriteSourceWaveformSiteUniqueU32Ptr = decltype(&niDigital_WriteSourceWaveformSiteUniqueU32);
  using WriteStaticPtr = decltype(&niDigital_WriteStatic);
  using SetRuntimeEnvironmentPtr = ViStatus (*)(ViConstString environment, ViConstString environmentVersion, ViConstString reserved1, ViConstString reserved2);

  typedef struct FunctionPointers {
    AbortPtr Abort;
    AbortKeepAlivePtr AbortKeepAlive;
    ApplyLevelsAndTimingPtr ApplyLevelsAndTiming;
    ApplyTDROffsetsPtr ApplyTDROffsets;
    BurstPatternPtr BurstPattern;
    BurstPatternSynchronizedPtr BurstPatternSynchronized;
    ClearErrorPtr ClearError;
    ClockGeneratorAbortPtr ClockGeneratorAbort;
    ClockGeneratorGenerateClockPtr ClockGeneratorGenerateClock;
    ClockGeneratorInitiatePtr ClockGeneratorInitiate;
    ClosePtr Close;
    CommitPtr Commit;
    ConfigureActiveLoadLevelsPtr ConfigureActiveLoadLevels;
    ConfigureCycleNumberHistoryRAMTriggerPtr ConfigureCycleNumberHistoryRAMTrigger;
    ConfigureDigitalEdgeConditionalJumpTriggerPtr ConfigureDigitalEdgeConditionalJumpTrigger;
    ConfigureDigitalEdgeStartTriggerPtr ConfigureDigitalEdgeStartTrigger;
    ConfigureFirstFailureHistoryRAMTriggerPtr ConfigureFirstFailureHistoryRAMTrigger;
    ConfigureHistoryRAMCyclesToAcquirePtr ConfigureHistoryRAMCyclesToAcquire;
    ConfigurePatternBurstSitesPtr ConfigurePatternBurstSites;
    ConfigurePatternLabelHistoryRAMTriggerPtr ConfigurePatternLabelHistoryRAMTrigger;
    ConfigureSoftwareEdgeConditionalJumpTriggerPtr ConfigureSoftwareEdgeConditionalJumpTrigger;
    ConfigureSoftwareEdgeStartTriggerPtr ConfigureSoftwareEdgeStartTrigger;
    ConfigureStartLabelPtr ConfigureStartLabel;
    ConfigureTerminationModePtr ConfigureTerminationMode;
    ConfigureTimeSetCompareEdgesStrobePtr ConfigureTimeSetCompareEdgesStrobe;
    ConfigureTimeSetCompareEdgesStrobe2xPtr ConfigureTimeSetCompareEdgesStrobe2x;
    ConfigureTimeSetDriveEdgesPtr ConfigureTimeSetDriveEdges;
    ConfigureTimeSetDriveEdges2xPtr ConfigureTimeSetDriveEdges2x;
    ConfigureTimeSetDriveFormatPtr ConfigureTimeSetDriveFormat;
    ConfigureTimeSetEdgePtr ConfigureTimeSetEdge;
    ConfigureTimeSetEdgeMultiplierPtr ConfigureTimeSetEdgeMultiplier;
    ConfigureTimeSetPeriodPtr ConfigureTimeSetPeriod;
    ConfigureVoltageLevelsPtr ConfigureVoltageLevels;
    CreateCaptureWaveformFromFileDigicapturePtr CreateCaptureWaveformFromFileDigicapture;
    CreateCaptureWaveformParallelPtr CreateCaptureWaveformParallel;
    CreateCaptureWaveformSerialPtr CreateCaptureWaveformSerial;
    CreateChannelMapPtr CreateChannelMap;
    CreatePinGroupPtr CreatePinGroup;
    CreatePinMapPtr CreatePinMap;
    CreateSourceWaveformFromFileTDMSPtr CreateSourceWaveformFromFileTDMS;
    CreateSourceWaveformParallelPtr CreateSourceWaveformParallel;
    CreateSourceWaveformSerialPtr CreateSourceWaveformSerial;
    CreateTimeSetPtr CreateTimeSet;
    DeleteAllTimeSetsPtr DeleteAllTimeSets;
    DisableConditionalJumpTriggerPtr DisableConditionalJumpTrigger;
    DisableSitesPtr DisableSites;
    DisableStartTriggerPtr DisableStartTrigger;
    EnableMatchFailCombinationPtr EnableMatchFailCombination;
    EnableSitesPtr EnableSites;
    EndChannelMapPtr EndChannelMap;
    ErrorMessagePtr ErrorMessage;
    ExportSignalPtr ExportSignal;
    FetchCaptureWaveformU32Ptr FetchCaptureWaveformU32;
    FetchHistoryRAMCycleInformationPtr FetchHistoryRAMCycleInformation;
    FetchHistoryRAMCyclePinDataPtr FetchHistoryRAMCyclePinData;
    FetchHistoryRAMScanCycleNumberPtr FetchHistoryRAMScanCycleNumber;
    FrequencyCounterConfigureMeasurementModePtr FrequencyCounterConfigureMeasurementMode;
    FrequencyCounterConfigureMeasurementTimePtr FrequencyCounterConfigureMeasurementTime;
    FrequencyCounterMeasureFrequencyPtr FrequencyCounterMeasureFrequency;
    GetAttributeViBooleanPtr GetAttributeViBoolean;
    GetAttributeViInt32Ptr GetAttributeViInt32;
    GetAttributeViInt64Ptr GetAttributeViInt64;
    GetAttributeViReal64Ptr GetAttributeViReal64;
    GetAttributeViSessionPtr GetAttributeViSession;
    GetAttributeViStringPtr GetAttributeViString;
    GetChannelNamePtr GetChannelName;
    GetChannelNameFromStringPtr GetChannelNameFromString;
    GetErrorPtr GetError;
    GetFailCountPtr GetFailCount;
    GetHistoryRAMSampleCountPtr GetHistoryRAMSampleCount;
    GetPatternNamePtr GetPatternName;
    GetPatternPinIndexesPtr GetPatternPinIndexes;
    GetPatternPinListPtr GetPatternPinList;
    GetPinNamePtr GetPinName;
    GetPinResultsPinInformationPtr GetPinResultsPinInformation;
    GetSitePassFailPtr GetSitePassFail;
    GetSiteResultsSiteNumbersPtr GetSiteResultsSiteNumbers;
    GetTimeSetDriveFormatPtr GetTimeSetDriveFormat;
    GetTimeSetEdgePtr GetTimeSetEdge;
    GetTimeSetEdgeMultiplierPtr GetTimeSetEdgeMultiplier;
    GetTimeSetNamePtr GetTimeSetName;
    GetTimeSetPeriodPtr GetTimeSetPeriod;
    InitPtr Init;
    InitWithOptionsPtr InitWithOptions;
    InitiatePtr Initiate;
    IsDonePtr IsDone;
    IsSiteEnabledPtr IsSiteEnabled;
    LoadLevelsPtr LoadLevels;
    LoadPatternPtr LoadPattern;
    LoadPinMapPtr LoadPinMap;
    LoadSpecificationsPtr LoadSpecifications;
    LoadTimingPtr LoadTiming;
    LockSessionPtr LockSession;
    MapPinToChannelPtr MapPinToChannel;
    PPMUConfigureApertureTimePtr PPMUConfigureApertureTime;
    PPMUConfigureCurrentLevelPtr PPMUConfigureCurrentLevel;
    PPMUConfigureCurrentLevelRangePtr PPMUConfigureCurrentLevelRange;
    PPMUConfigureCurrentLimitPtr PPMUConfigureCurrentLimit;
    PPMUConfigureCurrentLimitRangePtr PPMUConfigureCurrentLimitRange;
    PPMUConfigureOutputFunctionPtr PPMUConfigureOutputFunction;
    PPMUConfigureVoltageLevelPtr PPMUConfigureVoltageLevel;
    PPMUConfigureVoltageLimitsPtr PPMUConfigureVoltageLimits;
    PPMUMeasurePtr PPMUMeasure;
    PPMUSourcePtr PPMUSource;
    ReadSequencerFlagPtr ReadSequencerFlag;
    ReadSequencerRegisterPtr ReadSequencerRegister;
    ReadStaticPtr ReadStatic;
    ResetPtr Reset;
    ResetAttributePtr ResetAttribute;
    ResetDevicePtr ResetDevice;
    SelectFunctionPtr SelectFunction;
    SelfCalibratePtr SelfCalibrate;
    SelfTestPtr SelfTest;
    SendSoftwareEdgeTriggerPtr SendSoftwareEdgeTrigger;
    SetAttributeViBooleanPtr SetAttributeViBoolean;
    SetAttributeViInt32Ptr SetAttributeViInt32;
    SetAttributeViInt64Ptr SetAttributeViInt64;
    SetAttributeViReal64Ptr SetAttributeViReal64;
    SetAttributeViSessionPtr SetAttributeViSession;
    SetAttributeViStringPtr SetAttributeViString;
    TDRPtr TDR;
    UnloadAllPatternsPtr UnloadAllPatterns;
    UnloadSpecificationsPtr UnloadSpecifications;
    UnlockSessionPtr UnlockSession;
    WaitUntilDonePtr WaitUntilDone;
    WriteSequencerFlagPtr WriteSequencerFlag;
    WriteSequencerFlagSynchronizedPtr WriteSequencerFlagSynchronized;
    WriteSequencerRegisterPtr WriteSequencerRegister;
    WriteSourceWaveformBroadcastU32Ptr WriteSourceWaveformBroadcastU32;
    WriteSourceWaveformDataFromFileTDMSPtr WriteSourceWaveformDataFromFileTDMS;
    WriteSourceWaveformSiteUniqueU32Ptr WriteSourceWaveformSiteUniqueU32;
    WriteStaticPtr WriteStatic;
    SetRuntimeEnvironmentPtr SetRuntimeEnvironment;
  } FunctionLoadStatus;

  std::shared_ptr<nidevice_grpc::SharedLibraryInterface> shared_library_;
  FunctionPointers function_pointers_;
  bool runtime_environment_set_; // needed to test that we properly call SetRuntimeEnvironment
};

}  // namespace nidigitalpattern_grpc

#endif  // NIDIGITALPATTERN_GRPC_LIBRARY_H
