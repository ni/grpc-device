
//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// EXPERIMENTAL Client convenience wrapper for NI-Digital Pattern Driver.
//---------------------------------------------------------------------
#ifndef NIDIGITALPATTERN_GRPC_CLIENT_H
#define NIDIGITALPATTERN_GRPC_CLIENT_H

#include <grpcpp/grpcpp.h>

#include <nidigitalpattern.grpc.pb.h>
#include <tests/utilities/client_helpers.h>

#include <memory>
#include <vector>

namespace nidigitalpattern_grpc::experimental::client {

namespace pb = ::google::protobuf;
using StubPtr = std::unique_ptr<NiDigital::Stub>;
using namespace nidevice_grpc::experimental::client;


AbortResponse abort(const StubPtr& stub, const nidevice_grpc::Session& vi);
AbortKeepAliveResponse abort_keep_alive(const StubPtr& stub, const nidevice_grpc::Session& vi);
ApplyLevelsAndTimingResponse apply_levels_and_timing(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& site_list, const pb::string& levels_sheet, const pb::string& timing_sheet, const pb::string& initial_state_high_pins, const pb::string& initial_state_low_pins, const pb::string& initial_state_tristate_pins);
ApplyTDROffsetsResponse apply_tdr_offsets(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_list, const std::vector<double>& offsets);
BurstPatternResponse burst_pattern(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& site_list, const pb::string& start_label, const bool& select_digital_function, const bool& wait_until_done, const double& timeout);
ClearErrorResponse clear_error(const StubPtr& stub, const nidevice_grpc::Session& vi);
ClockGeneratorAbortResponse clock_generator_abort(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_list);
ClockGeneratorGenerateClockResponse clock_generator_generate_clock(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_list, const double& frequency, const bool& select_digital_function);
ClockGeneratorInitiateResponse clock_generator_initiate(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_list);
CommitResponse commit(const StubPtr& stub, const nidevice_grpc::Session& vi);
ConfigureActiveLoadLevelsResponse configure_active_load_levels(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_list, const double& iol, const double& ioh, const double& vcom);
ConfigurePatternBurstSitesResponse configure_pattern_burst_sites(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& site_list);
ConfigureTimeSetCompareEdgesStrobeResponse configure_time_set_compare_edges_strobe(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& pin_list, const pb::string& time_set, const double& strobe_edge);
ConfigureTimeSetCompareEdgesStrobe2XResponse configure_time_set_compare_edges_strobe2_x(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& pin_list, const pb::string& time_set, const double& strobe_edge, const double& strobe2_edge);
ConfigureTimeSetDriveEdgesResponse configure_time_set_drive_edges(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& pin_list, const pb::string& time_set, const simple_variant<DriveFormat, pb::int32>& format, const double& drive_on_edge, const double& drive_data_edge, const double& drive_return_edge, const double& drive_off_edge);
ConfigureTimeSetDriveEdges2XResponse configure_time_set_drive_edges2_x(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& pin_list, const pb::string& time_set, const simple_variant<DriveFormat, pb::int32>& format, const double& drive_on_edge, const double& drive_data_edge, const double& drive_return_edge, const double& drive_off_edge, const double& drive_data2_edge, const double& drive_return2_edge);
ConfigureTimeSetDriveFormatResponse configure_time_set_drive_format(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& pin_list, const pb::string& time_set, const simple_variant<DriveFormat, pb::int32>& drive_format);
ConfigureTimeSetEdgeResponse configure_time_set_edge(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& pin_list, const pb::string& time_set, const simple_variant<TimeSetEdgeType, pb::int32>& edge, const double& time);
ConfigureTimeSetEdgeMultiplierResponse configure_time_set_edge_multiplier(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& pin_list, const pb::string& time_set, const pb::int32& edge_multiplier);
ConfigureTimeSetPeriodResponse configure_time_set_period(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& time_set, const double& period);
ConfigureVoltageLevelsResponse configure_voltage_levels(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_list, const double& vil, const double& vih, const double& vol, const double& voh, const double& vterm);
CreateCaptureWaveformFromFileDigicaptureResponse create_capture_waveform_from_file_digicapture(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& waveform_name, const pb::string& waveform_file_path);
CreateCaptureWaveformParallelResponse create_capture_waveform_parallel(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& pin_list, const pb::string& waveform_name);
CreateCaptureWaveformSerialResponse create_capture_waveform_serial(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& pin_list, const pb::string& waveform_name, const pb::uint32& sample_width, const simple_variant<BitOrder, pb::int32>& bit_order);
CreateSourceWaveformFromFileTDMSResponse create_source_waveform_from_file_tdms(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& waveform_name, const pb::string& waveform_file_path, const bool& write_waveform_data);
CreateSourceWaveformParallelResponse create_source_waveform_parallel(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& pin_list, const pb::string& waveform_name, const simple_variant<SourceDataMapping, pb::int32>& data_mapping);
CreateSourceWaveformSerialResponse create_source_waveform_serial(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& pin_list, const pb::string& waveform_name, const simple_variant<SourceDataMapping, pb::int32>& data_mapping, const pb::uint32& sample_width, const simple_variant<BitOrder, pb::int32>& bit_order);
CreateTimeSetResponse create_time_set(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& name);
DeleteAllTimeSetsResponse delete_all_time_sets(const StubPtr& stub, const nidevice_grpc::Session& vi);
DisableSitesResponse disable_sites(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& site_list);
EnableSitesResponse enable_sites(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& site_list);
FetchCaptureWaveformU32Response fetch_capture_waveform_u32(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& site_list, const pb::string& waveform_name, const pb::int32& samples_to_read, const double& timeout);
FrequencyCounterMeasureFrequencyResponse frequency_counter_measure_frequency(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_list);
GetChannelNameResponse get_channel_name(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::int32& index);
GetChannelNameFromStringResponse get_channel_name_from_string(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& index);
GetFailCountResponse get_fail_count(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_list);
GetHistoryRAMSampleCountResponse get_history_ram_sample_count(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& site);
GetPatternPinListResponse get_pattern_pin_list(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& start_label);
GetSitePassFailResponse get_site_pass_fail(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& site_list);
GetSiteResultsSiteNumbersResponse get_site_results_site_numbers(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& site_list, const simple_variant<SiteResultType, pb::int32>& site_result_type);
GetTimeSetDriveFormatResponse get_time_set_drive_format(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& pin, const pb::string& time_set);
GetTimeSetEdgeResponse get_time_set_edge(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& pin, const pb::string& time_set, const simple_variant<TimeSetEdgeType, pb::int32>& edge);
GetTimeSetEdgeMultiplierResponse get_time_set_edge_multiplier(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& pin, const pb::string& time_set);
GetTimeSetPeriodResponse get_time_set_period(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& time_set);
InitWithOptionsResponse init_with_options(const StubPtr& stub, const pb::string& resource_name, const bool& id_query, const bool& reset_device, const pb::string& option_string);
IsDoneResponse is_done(const StubPtr& stub, const nidevice_grpc::Session& vi);
IsSiteEnabledResponse is_site_enabled(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& site);
LoadLevelsResponse load_levels(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& levels_file_path);
LoadPatternResponse load_pattern(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& file_path);
LoadPinMapResponse load_pin_map(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& pin_map_file_path);
LoadSpecificationsResponse load_specifications(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& specifications_file_path);
LoadTimingResponse load_timing(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& timing_file_path);
LockSessionResponse lock_session(const StubPtr& stub, const nidevice_grpc::Session& vi);
PPMUMeasureResponse ppmu_measure(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_list, const simple_variant<PPMUMeasurementType, pb::int32>& measurement_type);
PPMUSourceResponse ppmu_source(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_list);
ReadSequencerFlagResponse read_sequencer_flag(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<SequencerFlag, std::string>& flag);
ReadSequencerRegisterResponse read_sequencer_register(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<SequencerRegister, std::string>& reg);
ReadStaticResponse read_static(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_list);
ResetResponse reset(const StubPtr& stub, const nidevice_grpc::Session& vi);
ResetAttributeResponse reset_attribute(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_list, const NiDigitalAttribute& attribute_id);
ResetDeviceResponse reset_device(const StubPtr& stub, const nidevice_grpc::Session& vi);
SelectFunctionResponse select_function(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_list, const simple_variant<SelectedFunction, pb::int32>& function);
SelfCalibrateResponse self_calibrate(const StubPtr& stub, const nidevice_grpc::Session& vi);
SendSoftwareEdgeTriggerResponse send_software_edge_trigger(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<SoftwareTrigger, pb::int32>& trigger, const pb::string& trigger_identifier);
TDRResponse tdr(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_list, const bool& apply_offsets);
UnloadAllPatternsResponse unload_all_patterns(const StubPtr& stub, const nidevice_grpc::Session& vi, const bool& unload_keep_alive_pattern);
UnloadSpecificationsResponse unload_specifications(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& specifications_file_path);
UnlockSessionResponse unlock_session(const StubPtr& stub, const nidevice_grpc::Session& vi);
WaitUntilDoneResponse wait_until_done(const StubPtr& stub, const nidevice_grpc::Session& vi, const double& timeout);
WriteSequencerFlagResponse write_sequencer_flag(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<SequencerFlag, std::string>& flag, const bool& value);
WriteSequencerRegisterResponse write_sequencer_register(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<SequencerRegister, std::string>& reg, const pb::int32& value);
WriteSourceWaveformBroadcastU32Response write_source_waveform_broadcast_u32(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& waveform_name, const std::vector<pb::uint32>& waveform_data);
WriteSourceWaveformDataFromFileTDMSResponse write_source_waveform_data_from_file_tdms(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& waveform_name, const pb::string& waveform_file_path);
WriteStaticResponse write_static(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_list, const simple_variant<WriteStaticPinState, pb::uint32>& state);

} // namespace nidigitalpattern_grpc::experimental::client

#endif /* NIDIGITALPATTERN_GRPC_CLIENT_H */
