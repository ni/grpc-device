
//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Proto file for the NI-Digital Pattern Driver Metadata
//---------------------------------------------------------------------
syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.ni.grpc.digital";
option java_outer_classname = "NiDigital";
option csharp_namespace = "NationalInstruments.Grpc.Digital";

package nidigitalpattern_grpc;

import "session.proto";

service NiDigital {
  rpc Abort(AbortRequest) returns (AbortResponse);
  rpc AbortKeepAlive(AbortKeepAliveRequest) returns (AbortKeepAliveResponse);
  rpc ApplyLevelsAndTiming(ApplyLevelsAndTimingRequest) returns (ApplyLevelsAndTimingResponse);
  rpc ApplyTDROffsets(ApplyTDROffsetsRequest) returns (ApplyTDROffsetsResponse);
  rpc BurstPattern(BurstPatternRequest) returns (BurstPatternResponse);
  rpc ClearError(ClearErrorRequest) returns (ClearErrorResponse);
  rpc ClockGeneratorAbort(ClockGeneratorAbortRequest) returns (ClockGeneratorAbortResponse);
  rpc ClockGeneratorGenerateClock(ClockGeneratorGenerateClockRequest) returns (ClockGeneratorGenerateClockResponse);
  rpc ClockGeneratorInitiate(ClockGeneratorInitiateRequest) returns (ClockGeneratorInitiateResponse);
  rpc Commit(CommitRequest) returns (CommitResponse);
  rpc ConfigureActiveLoadLevels(ConfigureActiveLoadLevelsRequest) returns (ConfigureActiveLoadLevelsResponse);
  rpc ConfigurePatternBurstSites(ConfigurePatternBurstSitesRequest) returns (ConfigurePatternBurstSitesResponse);
  rpc ConfigureTimeSetCompareEdgesStrobe(ConfigureTimeSetCompareEdgesStrobeRequest) returns (ConfigureTimeSetCompareEdgesStrobeResponse);
  rpc ConfigureTimeSetCompareEdgesStrobe2X(ConfigureTimeSetCompareEdgesStrobe2XRequest) returns (ConfigureTimeSetCompareEdgesStrobe2XResponse);
  rpc ConfigureTimeSetDriveEdges(ConfigureTimeSetDriveEdgesRequest) returns (ConfigureTimeSetDriveEdgesResponse);
  rpc ConfigureTimeSetDriveEdges2X(ConfigureTimeSetDriveEdges2XRequest) returns (ConfigureTimeSetDriveEdges2XResponse);
  rpc ConfigureTimeSetDriveFormat(ConfigureTimeSetDriveFormatRequest) returns (ConfigureTimeSetDriveFormatResponse);
  rpc ConfigureTimeSetEdge(ConfigureTimeSetEdgeRequest) returns (ConfigureTimeSetEdgeResponse);
  rpc ConfigureTimeSetEdgeMultiplier(ConfigureTimeSetEdgeMultiplierRequest) returns (ConfigureTimeSetEdgeMultiplierResponse);
  rpc ConfigureTimeSetPeriod(ConfigureTimeSetPeriodRequest) returns (ConfigureTimeSetPeriodResponse);
  rpc ConfigureVoltageLevels(ConfigureVoltageLevelsRequest) returns (ConfigureVoltageLevelsResponse);
  rpc CreateCaptureWaveformFromFileDigicapture(CreateCaptureWaveformFromFileDigicaptureRequest) returns (CreateCaptureWaveformFromFileDigicaptureResponse);
  rpc CreateCaptureWaveformParallel(CreateCaptureWaveformParallelRequest) returns (CreateCaptureWaveformParallelResponse);
  rpc CreateCaptureWaveformSerial(CreateCaptureWaveformSerialRequest) returns (CreateCaptureWaveformSerialResponse);
  rpc CreateSourceWaveformFromFileTDMS(CreateSourceWaveformFromFileTDMSRequest) returns (CreateSourceWaveformFromFileTDMSResponse);
  rpc CreateSourceWaveformParallel(CreateSourceWaveformParallelRequest) returns (CreateSourceWaveformParallelResponse);
  rpc CreateSourceWaveformSerial(CreateSourceWaveformSerialRequest) returns (CreateSourceWaveformSerialResponse);
  rpc CreateTimeSet(CreateTimeSetRequest) returns (CreateTimeSetResponse);
  rpc DeleteAllTimeSets(DeleteAllTimeSetsRequest) returns (DeleteAllTimeSetsResponse);
  rpc DisableSites(DisableSitesRequest) returns (DisableSitesResponse);
  rpc EnableSites(EnableSitesRequest) returns (EnableSitesResponse);
  rpc FetchCaptureWaveformU32(FetchCaptureWaveformU32Request) returns (FetchCaptureWaveformU32Response);
  rpc FrequencyCounterMeasureFrequency(FrequencyCounterMeasureFrequencyRequest) returns (FrequencyCounterMeasureFrequencyResponse);
  rpc GetChannelName(GetChannelNameRequest) returns (GetChannelNameResponse);
  rpc GetChannelNameFromString(GetChannelNameFromStringRequest) returns (GetChannelNameFromStringResponse);
  rpc GetFailCount(GetFailCountRequest) returns (GetFailCountResponse);
  rpc GetHistoryRAMSampleCount(GetHistoryRAMSampleCountRequest) returns (GetHistoryRAMSampleCountResponse);
  rpc GetPatternPinList(GetPatternPinListRequest) returns (GetPatternPinListResponse);
  rpc GetSitePassFail(GetSitePassFailRequest) returns (GetSitePassFailResponse);
  rpc GetSiteResultsSiteNumbers(GetSiteResultsSiteNumbersRequest) returns (GetSiteResultsSiteNumbersResponse);
  rpc GetTimeSetDriveFormat(GetTimeSetDriveFormatRequest) returns (GetTimeSetDriveFormatResponse);
  rpc GetTimeSetEdge(GetTimeSetEdgeRequest) returns (GetTimeSetEdgeResponse);
  rpc GetTimeSetEdgeMultiplier(GetTimeSetEdgeMultiplierRequest) returns (GetTimeSetEdgeMultiplierResponse);
  rpc GetTimeSetPeriod(GetTimeSetPeriodRequest) returns (GetTimeSetPeriodResponse);
  rpc InitWithOptions(InitWithOptionsRequest) returns (InitWithOptionsResponse);
  rpc IsDone(IsDoneRequest) returns (IsDoneResponse);
  rpc IsSiteEnabled(IsSiteEnabledRequest) returns (IsSiteEnabledResponse);
  rpc LoadLevels(LoadLevelsRequest) returns (LoadLevelsResponse);
  rpc LoadPattern(LoadPatternRequest) returns (LoadPatternResponse);
  rpc LoadPinMap(LoadPinMapRequest) returns (LoadPinMapResponse);
  rpc LoadSpecifications(LoadSpecificationsRequest) returns (LoadSpecificationsResponse);
  rpc LoadTiming(LoadTimingRequest) returns (LoadTimingResponse);
  rpc LockSession(LockSessionRequest) returns (LockSessionResponse);
  rpc PPMUMeasure(PPMUMeasureRequest) returns (PPMUMeasureResponse);
  rpc PPMUSource(PPMUSourceRequest) returns (PPMUSourceResponse);
  rpc ReadSequencerFlag(ReadSequencerFlagRequest) returns (ReadSequencerFlagResponse);
  rpc ReadSequencerRegister(ReadSequencerRegisterRequest) returns (ReadSequencerRegisterResponse);
  rpc ReadStatic(ReadStaticRequest) returns (ReadStaticResponse);
  rpc Reset(ResetRequest) returns (ResetResponse);
  rpc ResetAttribute(ResetAttributeRequest) returns (ResetAttributeResponse);
  rpc ResetDevice(ResetDeviceRequest) returns (ResetDeviceResponse);
  rpc SelectFunction(SelectFunctionRequest) returns (SelectFunctionResponse);
  rpc SelfCalibrate(SelfCalibrateRequest) returns (SelfCalibrateResponse);
  rpc SendSoftwareEdgeTrigger(SendSoftwareEdgeTriggerRequest) returns (SendSoftwareEdgeTriggerResponse);
  rpc TDR(TDRRequest) returns (TDRResponse);
  rpc UnloadAllPatterns(UnloadAllPatternsRequest) returns (UnloadAllPatternsResponse);
  rpc UnloadSpecifications(UnloadSpecificationsRequest) returns (UnloadSpecificationsResponse);
  rpc UnlockSession(UnlockSessionRequest) returns (UnlockSessionResponse);
  rpc WaitUntilDone(WaitUntilDoneRequest) returns (WaitUntilDoneResponse);
  rpc WriteSequencerFlag(WriteSequencerFlagRequest) returns (WriteSequencerFlagResponse);
  rpc WriteSequencerRegister(WriteSequencerRegisterRequest) returns (WriteSequencerRegisterResponse);
  rpc WriteSourceWaveformBroadcastU32(WriteSourceWaveformBroadcastU32Request) returns (WriteSourceWaveformBroadcastU32Response);
  rpc WriteSourceWaveformDataFromFileTDMS(WriteSourceWaveformDataFromFileTDMSRequest) returns (WriteSourceWaveformDataFromFileTDMSResponse);
  rpc WriteStatic(WriteStaticRequest) returns (WriteStaticResponse);
}

enum NiDigitalAttribute {
  NIDIGITAL_ATTRIBUTE_UNSPECIFIED = 0;
  NIDIGITAL_ATTRIBUTE_RANGE_CHECK = 1050002;
  NIDIGITAL_ATTRIBUTE_QUERY_INSTRUMENT_STATUS = 1050003;
  NIDIGITAL_ATTRIBUTE_CACHE = 1050004;
  NIDIGITAL_ATTRIBUTE_SIMULATE = 1050005;
  NIDIGITAL_ATTRIBUTE_RECORD_COERCIONS = 1050006;
  NIDIGITAL_ATTRIBUTE_DRIVER_SETUP = 1050007;
  NIDIGITAL_ATTRIBUTE_INTERCHANGE_CHECK = 1050021;
  NIDIGITAL_ATTRIBUTE_CHANNEL_COUNT = 1050203;
  NIDIGITAL_ATTRIBUTE_SPECIFIC_DRIVER_PREFIX = 1050302;
  NIDIGITAL_ATTRIBUTE_IO_RESOURCE_DESCRIPTOR = 1050304;
  NIDIGITAL_ATTRIBUTE_LOGICAL_NAME = 1050305;
  NIDIGITAL_ATTRIBUTE_SUPPORTED_INSTRUMENT_MODELS = 1050327;
  NIDIGITAL_ATTRIBUTE_GROUP_CAPABILITIES = 1050401;
  NIDIGITAL_ATTRIBUTE_INSTRUMENT_FIRMWARE_REVISION = 1050510;
  NIDIGITAL_ATTRIBUTE_INSTRUMENT_MANUFACTURER = 1050511;
  NIDIGITAL_ATTRIBUTE_INSTRUMENT_MODEL = 1050512;
  NIDIGITAL_ATTRIBUTE_SPECIFIC_DRIVER_VENDOR = 1050513;
  NIDIGITAL_ATTRIBUTE_SPECIFIC_DRIVER_DESCRIPTION = 1050514;
  NIDIGITAL_ATTRIBUTE_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION = 1050515;
  NIDIGITAL_ATTRIBUTE_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION = 1050516;
  NIDIGITAL_ATTRIBUTE_SPECIFIC_DRIVER_REVISION = 1050551;
  NIDIGITAL_ATTRIBUTE_SERIAL_NUMBER = 1150001;
  NIDIGITAL_ATTRIBUTE_SELECTED_FUNCTION = 1150004;
  NIDIGITAL_ATTRIBUTE_TERMINATION_MODE = 1150006;
  NIDIGITAL_ATTRIBUTE_VIL = 1150007;
  NIDIGITAL_ATTRIBUTE_VIH = 1150008;
  NIDIGITAL_ATTRIBUTE_VOL = 1150009;
  NIDIGITAL_ATTRIBUTE_VOH = 1150010;
  NIDIGITAL_ATTRIBUTE_VTERM = 1150011;
  NIDIGITAL_ATTRIBUTE_ACTIVE_LOAD_IOL = 1150012;
  NIDIGITAL_ATTRIBUTE_ACTIVE_LOAD_IOH = 1150013;
  NIDIGITAL_ATTRIBUTE_ACTIVE_LOAD_VCOM = 1150014;
  NIDIGITAL_ATTRIBUTE_PPMU_OUTPUT_FUNCTION = 1150015;
  NIDIGITAL_ATTRIBUTE_PPMU_VOLTAGE_LEVEL = 1150016;
  NIDIGITAL_ATTRIBUTE_PPMU_CURRENT_LIMIT_RANGE = 1150017;
  NIDIGITAL_ATTRIBUTE_PPMU_CURRENT_LEVEL = 1150019;
  NIDIGITAL_ATTRIBUTE_PPMU_CURRENT_LEVEL_RANGE = 1150020;
  NIDIGITAL_ATTRIBUTE_PPMU_VOLTAGE_LIMIT_LOW = 1150021;
  NIDIGITAL_ATTRIBUTE_PPMU_VOLTAGE_LIMIT_HIGH = 1150022;
  NIDIGITAL_ATTRIBUTE_START_LABEL = 1150023;
  NIDIGITAL_ATTRIBUTE_START_TRIGGER_TYPE = 1150029;
  NIDIGITAL_ATTRIBUTE_DIGITAL_EDGE_START_TRIGGER_SOURCE = 1150030;
  NIDIGITAL_ATTRIBUTE_DIGITAL_EDGE_START_TRIGGER_EDGE = 1150031;
  NIDIGITAL_ATTRIBUTE_EXPORTED_START_TRIGGER_OUTPUT_TERMINAL = 1150032;
  NIDIGITAL_ATTRIBUTE_CONDITIONAL_JUMP_TRIGGER_TYPE = 1150033;
  NIDIGITAL_ATTRIBUTE_DIGITAL_EDGE_CONDITIONAL_JUMP_TRIGGER_SOURCE = 1150034;
  NIDIGITAL_ATTRIBUTE_DIGITAL_EDGE_CONDITIONAL_JUMP_TRIGGER_EDGE = 1150035;
  NIDIGITAL_ATTRIBUTE_EXPORTED_CONDITIONAL_JUMP_TRIGGER_OUTPUT_TERMINAL = 1150036;
  NIDIGITAL_ATTRIBUTE_PPMU_APERTURE_TIME = 1150037;
  NIDIGITAL_ATTRIBUTE_PPMU_APERTURE_TIME_UNITS = 1150038;
  NIDIGITAL_ATTRIBUTE_START_TRIGGER_TERMINAL_NAME = 1150039;
  NIDIGITAL_ATTRIBUTE_CONDITIONAL_JUMP_TRIGGER_TERMINAL_NAME = 1150040;
  NIDIGITAL_ATTRIBUTE_EXPORTED_PATTERN_OPCODE_EVENT_OUTPUT_TERMINAL = 1150041;
  NIDIGITAL_ATTRIBUTE_PATTERN_OPCODE_EVENT_TERMINAL_NAME = 1150042;
  NIDIGITAL_ATTRIBUTE_HISTORY_RAM_TRIGGER_TYPE = 1150043;
  NIDIGITAL_ATTRIBUTE_CYCLE_NUMBER_HISTORY_RAM_TRIGGER_CYCLE_NUMBER = 1150044;
  NIDIGITAL_ATTRIBUTE_PATTERN_LABEL_HISTORY_RAM_TRIGGER_CYCLE_OFFSET = 1150045;
  NIDIGITAL_ATTRIBUTE_PATTERN_LABEL_HISTORY_RAM_TRIGGER_LABEL = 1150046;
  NIDIGITAL_ATTRIBUTE_HISTORY_RAM_CYCLES_TO_ACQUIRE = 1150047;
  NIDIGITAL_ATTRIBUTE_HISTORY_RAM_PRETRIGGER_SAMPLES = 1150048;
  NIDIGITAL_ATTRIBUTE_TDR_OFFSET = 1150051;
  NIDIGITAL_ATTRIBUTE_PATTERN_LABEL_HISTORY_RAM_TRIGGER_VECTOR_OFFSET = 1150052;
  NIDIGITAL_ATTRIBUTE_PPMU_CURRENT_LIMIT = 1150054;
  NIDIGITAL_ATTRIBUTE_PPMU_CURRENT_LIMIT_SUPPORTED = 1150055;
  NIDIGITAL_ATTRIBUTE_SEQUENCER_FLAG_TERMINAL_NAME = 1150059;
  NIDIGITAL_ATTRIBUTE_MASK_COMPARE = 1150060;
  NIDIGITAL_ATTRIBUTE_HALT_ON_KEEP_ALIVE_OPCODE = 1150062;
  NIDIGITAL_ATTRIBUTE_IS_KEEP_ALIVE_ACTIVE = 1150063;
  NIDIGITAL_ATTRIBUTE_PPMU_CURRENT_LIMIT_BEHAVIOR = 1150064;
  NIDIGITAL_ATTRIBUTE_FREQUENCY_COUNTER_MEASUREMENT_TIME = 1150069;
  NIDIGITAL_ATTRIBUTE_TIMING_ABSOLUTE_DELAY_ENABLED = 1150071;
  NIDIGITAL_ATTRIBUTE_TIMING_ABSOLUTE_DELAY = 1150072;
  NIDIGITAL_ATTRIBUTE_CLOCK_GENERATOR_FREQUENCY = 1150073;
  NIDIGITAL_ATTRIBUTE_CLOCK_GENERATOR_IS_RUNNING = 1150074;
  NIDIGITAL_ATTRIBUTE_PPMU_ALLOW_EXTENDED_VOLTAGE_RANGE = 1150076;
  NIDIGITAL_ATTRIBUTE_HISTORY_RAM_MAX_SAMPLES_TO_ACQUIRE_PER_SITE = 1150077;
  NIDIGITAL_ATTRIBUTE_HISTORY_RAM_NUMBER_OF_SAMPLES_IS_FINITE = 1150078;
  NIDIGITAL_ATTRIBUTE_HISTORY_RAM_BUFFER_SIZE_PER_SITE = 1150079;
  NIDIGITAL_ATTRIBUTE_TDR_ENDPOINT_TERMINATION = 1150081;
  NIDIGITAL_ATTRIBUTE_FREQUENCY_COUNTER_MEASUREMENT_MODE = 1150084;
  NIDIGITAL_ATTRIBUTE_FREQUENCY_COUNTER_HYSTERESIS_ENABLED = 1150085;
  NIDIGITAL_ATTRIBUTE_RIO_TRIGGER_TYPE = 1150086;
  NIDIGITAL_ATTRIBUTE_DIGITAL_EDGE_RIO_TRIGGER_SOURCE = 1150087;
  NIDIGITAL_ATTRIBUTE_DIGITAL_EDGE_RIO_TRIGGER_EDGE = 1150088;
  NIDIGITAL_ATTRIBUTE_RIO_TRIGGER_TERMINAL_NAME = 1150089;
  NIDIGITAL_ATTRIBUTE_EXPORTED_RIO_EVENT_OUTPUT_TERMINAL = 1150090;
  NIDIGITAL_ATTRIBUTE_RIO_EVENT_TERMINAL_NAME = 1150091;
}

enum BitOrder {
  BIT_ORDER_UNSPECIFIED = 0;
  BIT_ORDER_NIDIGITAL_VAL_MSB_FIRST = 2500;
  BIT_ORDER_NIDIGITAL_VAL_LSB_FIRST = 2501;
}

enum DriveFormat {
  DRIVE_FORMAT_UNSPECIFIED = 0;
  DRIVE_FORMAT_NIDIGITAL_VAL_NR = 1500;
  DRIVE_FORMAT_NIDIGITAL_VAL_RL = 1501;
  DRIVE_FORMAT_NIDIGITAL_VAL_RH = 1502;
  DRIVE_FORMAT_NIDIGITAL_VAL_SBC = 1503;
}

enum NiDigitalInt32AttributeValues {
  NIDIGITAL_INT32_UNSPECIFIED = 0;
  NIDIGITAL_INT32_DIGITAL_EDGE_VAL_RISING_EDGE = 1800;
  NIDIGITAL_INT32_DIGITAL_EDGE_VAL_FALLING_EDGE = 1801;
  NIDIGITAL_INT32_FREQUENCY_MEASUREMENT_MODE_VAL_BANKED = 3700;
  NIDIGITAL_INT32_FREQUENCY_MEASUREMENT_MODE_VAL_PARALLEL = 3701;
  NIDIGITAL_INT32_HISTORY_RAM_CYCLES_TO_ACQUIRE_VAL_FAILED_CYCLES = 2303;
  NIDIGITAL_INT32_HISTORY_RAM_CYCLES_TO_ACQUIRE_VAL_ALL_CYCLES = 2304;
  NIDIGITAL_INT32_HISTORY_RAM_TRIGGER_TYPE_VAL_FIRST_FAILURE = 2200;
  NIDIGITAL_INT32_HISTORY_RAM_TRIGGER_TYPE_VAL_CYCLE_NUMBER = 2201;
  NIDIGITAL_INT32_HISTORY_RAM_TRIGGER_TYPE_VAL_PATTERN_LABEL = 2202;
  NIDIGITAL_INT32_PPMU_APERTURE_TIME_UNITS_VAL_SECONDS = 2100;
  NIDIGITAL_INT32_PPMU_CURRENT_LIMIT_BEHAVIOR_VAL_CURRENT_REGULATE = 3100;
  NIDIGITAL_INT32_PPMU_OUTPUT_FUNCTION_VAL_DC_VOLTAGE = 1300;
  NIDIGITAL_INT32_PPMU_OUTPUT_FUNCTION_VAL_DC_CURRENT = 1301;
  NIDIGITAL_INT32_SELECTED_FUNCTION_VAL_DIGITAL = 1100;
  NIDIGITAL_INT32_SELECTED_FUNCTION_VAL_PPMU = 1101;
  NIDIGITAL_INT32_SELECTED_FUNCTION_VAL_OFF = 1102;
  NIDIGITAL_INT32_SELECTED_FUNCTION_VAL_DISCONNECT = 1103;
  NIDIGITAL_INT32_SELECTED_FUNCTION_VAL_RIO = 1104;
  NIDIGITAL_INT32_TDR_ENDPOINT_TERMINATION_VAL_TDR_TO_OPEN = 3600;
  NIDIGITAL_INT32_TDR_ENDPOINT_TERMINATION_VAL_TDR_TO_SHORT_TO_GROUND = 3601;
  NIDIGITAL_INT32_TERMINATION_MODE_VAL_ACTIVE_LOAD = 1200;
  NIDIGITAL_INT32_TERMINATION_MODE_VAL_VTERM = 1201;
  NIDIGITAL_INT32_TERMINATION_MODE_VAL_HIGH_Z = 1202;
  NIDIGITAL_INT32_TRIGGER_TYPE_VAL_NONE = 1700;
  NIDIGITAL_INT32_TRIGGER_TYPE_VAL_DIGITAL_EDGE = 1701;
  NIDIGITAL_INT32_TRIGGER_TYPE_VAL_SOFTWARE = 1702;
}

enum PPMUMeasurementType {
  PPMU_MEASUREMENT_TYPE_UNSPECIFIED = 0;
  PPMU_MEASUREMENT_TYPE_NIDIGITAL_VAL_MEASURE_CURRENT = 2400;
  PPMU_MEASUREMENT_TYPE_NIDIGITAL_VAL_MEASURE_VOLTAGE = 2401;
}

enum PinState {
  PIN_STATE_NIDIGITAL_VAL_0 = 0;
  PIN_STATE_NIDIGITAL_VAL_1 = 1;
  PIN_STATE_NIDIGITAL_VAL_L = 3;
  PIN_STATE_NIDIGITAL_VAL_H = 4;
  PIN_STATE_NIDIGITAL_VAL_X = 5;
  PIN_STATE_NIDIGITAL_VAL_M = 6;
  PIN_STATE_NIDIGITAL_VAL_V = 7;
  PIN_STATE_NIDIGITAL_VAL_D = 8;
  PIN_STATE_NIDIGITAL_VAL_E = 9;
  PIN_STATE_NIDIGITAL_VAL_NOT_A_PIN_STATE = 254;
  PIN_STATE_NIDIGITAL_VAL_PIN_STATE_NOT_ACQUIRED = 255;
}

enum SelectedFunction {
  SELECTED_FUNCTION_UNSPECIFIED = 0;
  SELECTED_FUNCTION_NIDIGITAL_VAL_DIGITAL = 1100;
  SELECTED_FUNCTION_NIDIGITAL_VAL_PPMU = 1101;
  SELECTED_FUNCTION_NIDIGITAL_VAL_OFF = 1102;
  SELECTED_FUNCTION_NIDIGITAL_VAL_DISCONNECT = 1103;
  SELECTED_FUNCTION_NIDIGITAL_VAL_RIO = 1104;
}

enum SequencerFlag {
  SEQUENCER_FLAG_UNSPECIFIED = 0;
  SEQUENCER_FLAG_NIDIGITAL_VAL_SEQUENCER_FLAG0 = 1;
  SEQUENCER_FLAG_NIDIGITAL_VAL_SEQUENCER_FLAG1 = 2;
  SEQUENCER_FLAG_NIDIGITAL_VAL_SEQUENCER_FLAG2 = 3;
  SEQUENCER_FLAG_NIDIGITAL_VAL_SEQUENCER_FLAG3 = 4;
}

enum SequencerRegister {
  SEQUENCER_REGISTER_UNSPECIFIED = 0;
  SEQUENCER_REGISTER_NIDIGITAL_VAL_SEQUENCER_REGISTER0 = 1;
  SEQUENCER_REGISTER_NIDIGITAL_VAL_SEQUENCER_REGISTER1 = 2;
  SEQUENCER_REGISTER_NIDIGITAL_VAL_SEQUENCER_REGISTER2 = 3;
  SEQUENCER_REGISTER_NIDIGITAL_VAL_SEQUENCER_REGISTER3 = 4;
  SEQUENCER_REGISTER_NIDIGITAL_VAL_SEQUENCER_REGISTER4 = 5;
  SEQUENCER_REGISTER_NIDIGITAL_VAL_SEQUENCER_REGISTER5 = 6;
  SEQUENCER_REGISTER_NIDIGITAL_VAL_SEQUENCER_REGISTER6 = 7;
  SEQUENCER_REGISTER_NIDIGITAL_VAL_SEQUENCER_REGISTER7 = 8;
  SEQUENCER_REGISTER_NIDIGITAL_VAL_SEQUENCER_REGISTER8 = 9;
  SEQUENCER_REGISTER_NIDIGITAL_VAL_SEQUENCER_REGISTER9 = 10;
  SEQUENCER_REGISTER_NIDIGITAL_VAL_SEQUENCER_REGISTER10 = 11;
  SEQUENCER_REGISTER_NIDIGITAL_VAL_SEQUENCER_REGISTER11 = 12;
  SEQUENCER_REGISTER_NIDIGITAL_VAL_SEQUENCER_REGISTER12 = 13;
  SEQUENCER_REGISTER_NIDIGITAL_VAL_SEQUENCER_REGISTER13 = 14;
  SEQUENCER_REGISTER_NIDIGITAL_VAL_SEQUENCER_REGISTER14 = 15;
  SEQUENCER_REGISTER_NIDIGITAL_VAL_SEQUENCER_REGISTER15 = 16;
}

enum SiteResultType {
  SITE_RESULT_TYPE_UNSPECIFIED = 0;
  SITE_RESULT_TYPE_NIDIGITAL_VAL_PASS_FAIL = 3300;
  SITE_RESULT_TYPE_NIDIGITAL_VAL_CAPTURE_WAVEFORM = 3301;
}

enum SoftwareTrigger {
  SOFTWARE_TRIGGER_UNSPECIFIED = 0;
  SOFTWARE_TRIGGER_NIDIGITAL_VAL_START_TRIGGER = 2000;
  SOFTWARE_TRIGGER_NIDIGITAL_VAL_CONDITIONAL_JUMP_TRIGGER = 2001;
}

enum SourceDataMapping {
  SOURCE_DATA_MAPPING_UNSPECIFIED = 0;
  SOURCE_DATA_MAPPING_NIDIGITAL_VAL_BROADCAST = 2600;
  SOURCE_DATA_MAPPING_NIDIGITAL_VAL_SITE_UNIQUE = 2601;
}

enum TimeSetEdgeType {
  TIME_SET_EDGE_TYPE_UNSPECIFIED = 0;
  TIME_SET_EDGE_TYPE_NIDIGITAL_VAL_DRIVE_ON = 2800;
  TIME_SET_EDGE_TYPE_NIDIGITAL_VAL_DRIVE_DATA = 2801;
  TIME_SET_EDGE_TYPE_NIDIGITAL_VAL_DRIVE_RETURN = 2802;
  TIME_SET_EDGE_TYPE_NIDIGITAL_VAL_DRIVE_OFF = 2803;
  TIME_SET_EDGE_TYPE_NIDIGITAL_VAL_COMPARE_STROBE = 2804;
  TIME_SET_EDGE_TYPE_NIDIGITAL_VAL_DRIVE_DATA2 = 2805;
  TIME_SET_EDGE_TYPE_NIDIGITAL_VAL_DRIVE_RETURN2 = 2806;
  TIME_SET_EDGE_TYPE_NIDIGITAL_VAL_COMPARE_STROBE2 = 2807;
}

enum WriteStaticPinState {
  WRITE_STATIC_PIN_STATE_NIDIGITAL_VAL_0 = 0;
  WRITE_STATIC_PIN_STATE_NIDIGITAL_VAL_1 = 1;
  WRITE_STATIC_PIN_STATE_NIDIGITAL_VAL_X = 5;
}

message AbortRequest {
  nidevice_grpc.Session vi = 1;
}

message AbortResponse {
  int32 status = 1;
}

message AbortKeepAliveRequest {
  nidevice_grpc.Session vi = 1;
}

message AbortKeepAliveResponse {
  int32 status = 1;
}

message ApplyLevelsAndTimingRequest {
  nidevice_grpc.Session vi = 1;
  string site_list = 2;
  string levels_sheet = 3;
  string timing_sheet = 4;
  string initial_state_high_pins = 5;
  string initial_state_low_pins = 6;
  string initial_state_tristate_pins = 7;
}

message ApplyLevelsAndTimingResponse {
  int32 status = 1;
}

message ApplyTDROffsetsRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  repeated double offsets = 3;
}

message ApplyTDROffsetsResponse {
  int32 status = 1;
}

message BurstPatternRequest {
  nidevice_grpc.Session vi = 1;
  string site_list = 2;
  string start_label = 3;
  bool select_digital_function = 4;
  bool wait_until_done = 5;
  double timeout = 6;
}

message BurstPatternResponse {
  int32 status = 1;
}

message ClearErrorRequest {
  nidevice_grpc.Session vi = 1;
}

message ClearErrorResponse {
  int32 status = 1;
}

message ClockGeneratorAbortRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
}

message ClockGeneratorAbortResponse {
  int32 status = 1;
}

message ClockGeneratorGenerateClockRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  double frequency = 3;
  bool select_digital_function = 4;
}

message ClockGeneratorGenerateClockResponse {
  int32 status = 1;
}

message ClockGeneratorInitiateRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
}

message ClockGeneratorInitiateResponse {
  int32 status = 1;
}

message CommitRequest {
  nidevice_grpc.Session vi = 1;
}

message CommitResponse {
  int32 status = 1;
}

message ConfigureActiveLoadLevelsRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  double iol = 3;
  double ioh = 4;
  double vcom = 5;
}

message ConfigureActiveLoadLevelsResponse {
  int32 status = 1;
}

message ConfigurePatternBurstSitesRequest {
  nidevice_grpc.Session vi = 1;
  string site_list = 2;
}

message ConfigurePatternBurstSitesResponse {
  int32 status = 1;
}

message ConfigureTimeSetCompareEdgesStrobeRequest {
  nidevice_grpc.Session vi = 1;
  string pin_list = 2;
  string time_set = 3;
  double strobe_edge = 4;
}

message ConfigureTimeSetCompareEdgesStrobeResponse {
  int32 status = 1;
}

message ConfigureTimeSetCompareEdgesStrobe2XRequest {
  nidevice_grpc.Session vi = 1;
  string pin_list = 2;
  string time_set = 3;
  double strobe_edge = 4;
  double strobe2_edge = 5;
}

message ConfigureTimeSetCompareEdgesStrobe2XResponse {
  int32 status = 1;
}

message ConfigureTimeSetDriveEdgesRequest {
  nidevice_grpc.Session vi = 1;
  string pin_list = 2;
  string time_set = 3;
  oneof format_enum {
    DriveFormat format = 4;
    sint32 format_raw = 5;
  }
  double drive_on_edge = 6;
  double drive_data_edge = 7;
  double drive_return_edge = 8;
  double drive_off_edge = 9;
}

message ConfigureTimeSetDriveEdgesResponse {
  int32 status = 1;
}

message ConfigureTimeSetDriveEdges2XRequest {
  nidevice_grpc.Session vi = 1;
  string pin_list = 2;
  string time_set = 3;
  oneof format_enum {
    DriveFormat format = 4;
    sint32 format_raw = 5;
  }
  double drive_on_edge = 6;
  double drive_data_edge = 7;
  double drive_return_edge = 8;
  double drive_off_edge = 9;
  double drive_data2_edge = 10;
  double drive_return2_edge = 11;
}

message ConfigureTimeSetDriveEdges2XResponse {
  int32 status = 1;
}

message ConfigureTimeSetDriveFormatRequest {
  nidevice_grpc.Session vi = 1;
  string pin_list = 2;
  string time_set = 3;
  oneof drive_format_enum {
    DriveFormat drive_format = 4;
    sint32 drive_format_raw = 5;
  }
}

message ConfigureTimeSetDriveFormatResponse {
  int32 status = 1;
}

message ConfigureTimeSetEdgeRequest {
  nidevice_grpc.Session vi = 1;
  string pin_list = 2;
  string time_set = 3;
  oneof edge_enum {
    TimeSetEdgeType edge = 4;
    sint32 edge_raw = 5;
  }
  double time = 6;
}

message ConfigureTimeSetEdgeResponse {
  int32 status = 1;
}

message ConfigureTimeSetEdgeMultiplierRequest {
  nidevice_grpc.Session vi = 1;
  string pin_list = 2;
  string time_set = 3;
  sint32 edge_multiplier = 4;
}

message ConfigureTimeSetEdgeMultiplierResponse {
  int32 status = 1;
}

message ConfigureTimeSetPeriodRequest {
  nidevice_grpc.Session vi = 1;
  string time_set = 2;
  double period = 3;
}

message ConfigureTimeSetPeriodResponse {
  int32 status = 1;
}

message ConfigureVoltageLevelsRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  double vil = 3;
  double vih = 4;
  double vol = 5;
  double voh = 6;
  double vterm = 7;
}

message ConfigureVoltageLevelsResponse {
  int32 status = 1;
}

message CreateCaptureWaveformFromFileDigicaptureRequest {
  nidevice_grpc.Session vi = 1;
  string waveform_name = 2;
  string waveform_file_path = 3;
}

message CreateCaptureWaveformFromFileDigicaptureResponse {
  int32 status = 1;
}

message CreateCaptureWaveformParallelRequest {
  nidevice_grpc.Session vi = 1;
  string pin_list = 2;
  string waveform_name = 3;
}

message CreateCaptureWaveformParallelResponse {
  int32 status = 1;
}

message CreateCaptureWaveformSerialRequest {
  nidevice_grpc.Session vi = 1;
  string pin_list = 2;
  string waveform_name = 3;
  uint32 sample_width = 4;
  oneof bit_order_enum {
    BitOrder bit_order = 5;
    sint32 bit_order_raw = 6;
  }
}

message CreateCaptureWaveformSerialResponse {
  int32 status = 1;
}

message CreateSourceWaveformFromFileTDMSRequest {
  nidevice_grpc.Session vi = 1;
  string waveform_name = 2;
  string waveform_file_path = 3;
  bool write_waveform_data = 4;
}

message CreateSourceWaveformFromFileTDMSResponse {
  int32 status = 1;
}

message CreateSourceWaveformParallelRequest {
  nidevice_grpc.Session vi = 1;
  string pin_list = 2;
  string waveform_name = 3;
  oneof data_mapping_enum {
    SourceDataMapping data_mapping = 4;
    sint32 data_mapping_raw = 5;
  }
}

message CreateSourceWaveformParallelResponse {
  int32 status = 1;
}

message CreateSourceWaveformSerialRequest {
  nidevice_grpc.Session vi = 1;
  string pin_list = 2;
  string waveform_name = 3;
  oneof data_mapping_enum {
    SourceDataMapping data_mapping = 4;
    sint32 data_mapping_raw = 5;
  }
  uint32 sample_width = 6;
  oneof bit_order_enum {
    BitOrder bit_order = 7;
    sint32 bit_order_raw = 8;
  }
}

message CreateSourceWaveformSerialResponse {
  int32 status = 1;
}

message CreateTimeSetRequest {
  nidevice_grpc.Session vi = 1;
  string name = 2;
}

message CreateTimeSetResponse {
  int32 status = 1;
}

message DeleteAllTimeSetsRequest {
  nidevice_grpc.Session vi = 1;
}

message DeleteAllTimeSetsResponse {
  int32 status = 1;
}

message DisableSitesRequest {
  nidevice_grpc.Session vi = 1;
  string site_list = 2;
}

message DisableSitesResponse {
  int32 status = 1;
}

message EnableSitesRequest {
  nidevice_grpc.Session vi = 1;
  string site_list = 2;
}

message EnableSitesResponse {
  int32 status = 1;
}

message FetchCaptureWaveformU32Request {
  nidevice_grpc.Session vi = 1;
  string site_list = 2;
  string waveform_name = 3;
  sint32 samples_to_read = 4;
  double timeout = 5;
}

message FetchCaptureWaveformU32Response {
  int32 status = 1;
  repeated uint32 data = 2;
  sint32 actual_num_waveforms = 3;
  sint32 actual_samples_per_waveform = 4;
}

message FrequencyCounterMeasureFrequencyRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
}

message FrequencyCounterMeasureFrequencyResponse {
  int32 status = 1;
  repeated double frequencies = 2;
  sint32 actual_num_frequencies = 3;
}

message GetChannelNameRequest {
  nidevice_grpc.Session vi = 1;
  sint32 index = 2;
}

message GetChannelNameResponse {
  int32 status = 1;
  string name = 2;
}

message GetChannelNameFromStringRequest {
  nidevice_grpc.Session vi = 1;
  string index = 2;
}

message GetChannelNameFromStringResponse {
  int32 status = 1;
  string name = 2;
}

message GetFailCountRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
}

message GetFailCountResponse {
  int32 status = 1;
  repeated int64 failure_count = 2;
  sint32 actual_num_read = 3;
}

message GetHistoryRAMSampleCountRequest {
  nidevice_grpc.Session vi = 1;
  string site = 2;
}

message GetHistoryRAMSampleCountResponse {
  int32 status = 1;
  int64 sample_count = 2;
}

message GetPatternPinListRequest {
  nidevice_grpc.Session vi = 1;
  string start_label = 2;
}

message GetPatternPinListResponse {
  int32 status = 1;
  string pin_list = 2;
}

message GetSitePassFailRequest {
  nidevice_grpc.Session vi = 1;
  string site_list = 2;
}

message GetSitePassFailResponse {
  int32 status = 1;
  repeated bool pass_fail = 2;
  sint32 actual_num_sites = 3;
}

message GetSiteResultsSiteNumbersRequest {
  nidevice_grpc.Session vi = 1;
  string site_list = 2;
  oneof site_result_type_enum {
    SiteResultType site_result_type = 3;
    sint32 site_result_type_raw = 4;
  }
}

message GetSiteResultsSiteNumbersResponse {
  int32 status = 1;
  repeated sint32 site_numbers = 2;
  sint32 actual_num_site_numbers = 3;
}

message GetTimeSetDriveFormatRequest {
  nidevice_grpc.Session vi = 1;
  string pin = 2;
  string time_set = 3;
}

message GetTimeSetDriveFormatResponse {
  int32 status = 1;
  DriveFormat format = 2;
  sint32 format_raw = 3;
}

message GetTimeSetEdgeRequest {
  nidevice_grpc.Session vi = 1;
  string pin = 2;
  string time_set = 3;
  oneof edge_enum {
    TimeSetEdgeType edge = 4;
    sint32 edge_raw = 5;
  }
}

message GetTimeSetEdgeResponse {
  int32 status = 1;
  double time = 2;
}

message GetTimeSetEdgeMultiplierRequest {
  nidevice_grpc.Session vi = 1;
  string pin = 2;
  string time_set = 3;
}

message GetTimeSetEdgeMultiplierResponse {
  int32 status = 1;
  sint32 edge_multiplier = 2;
}

message GetTimeSetPeriodRequest {
  nidevice_grpc.Session vi = 1;
  string time_set = 2;
}

message GetTimeSetPeriodResponse {
  int32 status = 1;
  double period = 2;
}

message InitWithOptionsRequest {
  string resource_name = 1;
  bool id_query = 2;
  bool reset_device = 3;
  string option_string = 4;
}

message InitWithOptionsResponse {
  int32 status = 1;
  nidevice_grpc.Session new_vi = 2;
}

message IsDoneRequest {
  nidevice_grpc.Session vi = 1;
}

message IsDoneResponse {
  int32 status = 1;
  bool done = 2;
}

message IsSiteEnabledRequest {
  nidevice_grpc.Session vi = 1;
  string site = 2;
}

message IsSiteEnabledResponse {
  int32 status = 1;
  bool enable = 2;
}

message LoadLevelsRequest {
  nidevice_grpc.Session vi = 1;
  string levels_file_path = 2;
}

message LoadLevelsResponse {
  int32 status = 1;
}

message LoadPatternRequest {
  nidevice_grpc.Session vi = 1;
  string file_path = 2;
}

message LoadPatternResponse {
  int32 status = 1;
}

message LoadPinMapRequest {
  nidevice_grpc.Session vi = 1;
  string pin_map_file_path = 2;
}

message LoadPinMapResponse {
  int32 status = 1;
}

message LoadSpecificationsRequest {
  nidevice_grpc.Session vi = 1;
  string specifications_file_path = 2;
}

message LoadSpecificationsResponse {
  int32 status = 1;
}

message LoadTimingRequest {
  nidevice_grpc.Session vi = 1;
  string timing_file_path = 2;
}

message LoadTimingResponse {
  int32 status = 1;
}

message LockSessionRequest {
  nidevice_grpc.Session vi = 1;
}

message LockSessionResponse {
  int32 status = 1;
  bool caller_has_lock = 2;
}

message PPMUMeasureRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  oneof measurement_type_enum {
    PPMUMeasurementType measurement_type = 3;
    sint32 measurement_type_raw = 4;
  }
}

message PPMUMeasureResponse {
  int32 status = 1;
  repeated double measurements = 2;
  sint32 actual_num_read = 3;
}

message PPMUSourceRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
}

message PPMUSourceResponse {
  int32 status = 1;
}

message ReadSequencerFlagRequest {
  nidevice_grpc.Session vi = 1;
  oneof flag_enum {
    SequencerFlag flag_mapped = 2;
    string flag_raw = 3;
  }
}

message ReadSequencerFlagResponse {
  int32 status = 1;
  bool value = 2;
}

message ReadSequencerRegisterRequest {
  nidevice_grpc.Session vi = 1;
  oneof reg_enum {
    SequencerRegister reg_mapped = 2;
    string reg_raw = 3;
  }
}

message ReadSequencerRegisterResponse {
  int32 status = 1;
  sint32 value = 2;
}

message ReadStaticRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
}

message ReadStaticResponse {
  int32 status = 1;
  repeated PinState data = 2;
  bytes data_raw = 3;
  sint32 actual_num_read = 4;
}

message ResetRequest {
  nidevice_grpc.Session vi = 1;
}

message ResetResponse {
  int32 status = 1;
}

message ResetAttributeRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  NiDigitalAttribute attribute_id = 3;
}

message ResetAttributeResponse {
  int32 status = 1;
}

message ResetDeviceRequest {
  nidevice_grpc.Session vi = 1;
}

message ResetDeviceResponse {
  int32 status = 1;
}

message SelectFunctionRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  oneof function_enum {
    SelectedFunction function = 3;
    sint32 function_raw = 4;
  }
}

message SelectFunctionResponse {
  int32 status = 1;
}

message SelfCalibrateRequest {
  nidevice_grpc.Session vi = 1;
}

message SelfCalibrateResponse {
  int32 status = 1;
}

message SendSoftwareEdgeTriggerRequest {
  nidevice_grpc.Session vi = 1;
  oneof trigger_enum {
    SoftwareTrigger trigger = 2;
    sint32 trigger_raw = 3;
  }
  string trigger_identifier = 4;
}

message SendSoftwareEdgeTriggerResponse {
  int32 status = 1;
}

message TDRRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  bool apply_offsets = 3;
}

message TDRResponse {
  int32 status = 1;
  repeated double offsets = 2;
  sint32 actual_num_offsets = 3;
}

message UnloadAllPatternsRequest {
  nidevice_grpc.Session vi = 1;
  bool unload_keep_alive_pattern = 2;
}

message UnloadAllPatternsResponse {
  int32 status = 1;
}

message UnloadSpecificationsRequest {
  nidevice_grpc.Session vi = 1;
  string specifications_file_path = 2;
}

message UnloadSpecificationsResponse {
  int32 status = 1;
}

message UnlockSessionRequest {
  nidevice_grpc.Session vi = 1;
}

message UnlockSessionResponse {
  int32 status = 1;
  bool caller_has_lock = 2;
}

message WaitUntilDoneRequest {
  nidevice_grpc.Session vi = 1;
  double timeout = 2;
}

message WaitUntilDoneResponse {
  int32 status = 1;
}

message WriteSequencerFlagRequest {
  nidevice_grpc.Session vi = 1;
  oneof flag_enum {
    SequencerFlag flag_mapped = 2;
    string flag_raw = 3;
  }
  bool value = 4;
}

message WriteSequencerFlagResponse {
  int32 status = 1;
}

message WriteSequencerRegisterRequest {
  nidevice_grpc.Session vi = 1;
  oneof reg_enum {
    SequencerRegister reg_mapped = 2;
    string reg_raw = 3;
  }
  sint32 value = 4;
}

message WriteSequencerRegisterResponse {
  int32 status = 1;
}

message WriteSourceWaveformBroadcastU32Request {
  nidevice_grpc.Session vi = 1;
  string waveform_name = 2;
  repeated uint32 waveform_data = 3;
}

message WriteSourceWaveformBroadcastU32Response {
  int32 status = 1;
}

message WriteSourceWaveformDataFromFileTDMSRequest {
  nidevice_grpc.Session vi = 1;
  string waveform_name = 2;
  string waveform_file_path = 3;
}

message WriteSourceWaveformDataFromFileTDMSResponse {
  int32 status = 1;
}

message WriteStaticRequest {
  nidevice_grpc.Session vi = 1;
  string channel_list = 2;
  oneof state_enum {
    WriteStaticPinState state = 3;
    uint32 state_raw = 4;
  }
}

message WriteStaticResponse {
  int32 status = 1;
}

