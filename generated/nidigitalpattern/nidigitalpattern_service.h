
//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Service header for the NI-Digital Pattern Driver Metadata
//---------------------------------------------------------------------
#ifndef NIDIGITALPATTERN_GRPC_SERVICE_H
#define NIDIGITALPATTERN_GRPC_SERVICE_H

#include <nidigitalpattern.grpc.pb.h>
#include <condition_variable>
#include <grpcpp/grpcpp.h>
#include <grpcpp/health_check_service_interface.h>
#include <grpcpp/ext/proto_server_reflection_plugin.h>
#include <map>
#include <server/converters.h>
#include <server/feature_toggles.h>
#include <server/session_resource_repository.h>
#include <server/shared_library.h>
#include <server/exceptions.h>

#include "nidigitalpattern_library_interface.h"

namespace nidigitalpattern_grpc {

struct NiDigitalFeatureToggles
{
  using CodeReadiness = nidevice_grpc::FeatureToggles::CodeReadiness;
  NiDigitalFeatureToggles(const nidevice_grpc::FeatureToggles& feature_toggles = {});

  bool is_enabled;
};

class NiDigitalService final : public NiDigital::Service {
public:
  using ResourceRepositorySharedPtr = std::shared_ptr<nidevice_grpc::SessionResourceRepository<ViSession>>;

  NiDigitalService(
    NiDigitalLibraryInterface* library,
    ResourceRepositorySharedPtr resource_repository,
    const NiDigitalFeatureToggles& feature_toggles = {});
  virtual ~NiDigitalService();
  
  ::grpc::Status Abort(::grpc::ServerContext* context, const AbortRequest* request, AbortResponse* response) override;
  ::grpc::Status AbortKeepAlive(::grpc::ServerContext* context, const AbortKeepAliveRequest* request, AbortKeepAliveResponse* response) override;
  ::grpc::Status ApplyLevelsAndTiming(::grpc::ServerContext* context, const ApplyLevelsAndTimingRequest* request, ApplyLevelsAndTimingResponse* response) override;
  ::grpc::Status ApplyTDROffsets(::grpc::ServerContext* context, const ApplyTDROffsetsRequest* request, ApplyTDROffsetsResponse* response) override;
  ::grpc::Status BurstPattern(::grpc::ServerContext* context, const BurstPatternRequest* request, BurstPatternResponse* response) override;
  ::grpc::Status ClearError(::grpc::ServerContext* context, const ClearErrorRequest* request, ClearErrorResponse* response) override;
  ::grpc::Status ClockGeneratorAbort(::grpc::ServerContext* context, const ClockGeneratorAbortRequest* request, ClockGeneratorAbortResponse* response) override;
  ::grpc::Status ClockGeneratorGenerateClock(::grpc::ServerContext* context, const ClockGeneratorGenerateClockRequest* request, ClockGeneratorGenerateClockResponse* response) override;
  ::grpc::Status ClockGeneratorInitiate(::grpc::ServerContext* context, const ClockGeneratorInitiateRequest* request, ClockGeneratorInitiateResponse* response) override;
  ::grpc::Status Commit(::grpc::ServerContext* context, const CommitRequest* request, CommitResponse* response) override;
  ::grpc::Status ConfigureActiveLoadLevels(::grpc::ServerContext* context, const ConfigureActiveLoadLevelsRequest* request, ConfigureActiveLoadLevelsResponse* response) override;
  ::grpc::Status ConfigurePatternBurstSites(::grpc::ServerContext* context, const ConfigurePatternBurstSitesRequest* request, ConfigurePatternBurstSitesResponse* response) override;
  ::grpc::Status ConfigureTimeSetCompareEdgesStrobe(::grpc::ServerContext* context, const ConfigureTimeSetCompareEdgesStrobeRequest* request, ConfigureTimeSetCompareEdgesStrobeResponse* response) override;
  ::grpc::Status ConfigureTimeSetCompareEdgesStrobe2X(::grpc::ServerContext* context, const ConfigureTimeSetCompareEdgesStrobe2XRequest* request, ConfigureTimeSetCompareEdgesStrobe2XResponse* response) override;
  ::grpc::Status ConfigureTimeSetDriveEdges(::grpc::ServerContext* context, const ConfigureTimeSetDriveEdgesRequest* request, ConfigureTimeSetDriveEdgesResponse* response) override;
  ::grpc::Status ConfigureTimeSetDriveEdges2X(::grpc::ServerContext* context, const ConfigureTimeSetDriveEdges2XRequest* request, ConfigureTimeSetDriveEdges2XResponse* response) override;
  ::grpc::Status ConfigureTimeSetDriveFormat(::grpc::ServerContext* context, const ConfigureTimeSetDriveFormatRequest* request, ConfigureTimeSetDriveFormatResponse* response) override;
  ::grpc::Status ConfigureTimeSetEdge(::grpc::ServerContext* context, const ConfigureTimeSetEdgeRequest* request, ConfigureTimeSetEdgeResponse* response) override;
  ::grpc::Status ConfigureTimeSetEdgeMultiplier(::grpc::ServerContext* context, const ConfigureTimeSetEdgeMultiplierRequest* request, ConfigureTimeSetEdgeMultiplierResponse* response) override;
  ::grpc::Status ConfigureTimeSetPeriod(::grpc::ServerContext* context, const ConfigureTimeSetPeriodRequest* request, ConfigureTimeSetPeriodResponse* response) override;
  ::grpc::Status ConfigureVoltageLevels(::grpc::ServerContext* context, const ConfigureVoltageLevelsRequest* request, ConfigureVoltageLevelsResponse* response) override;
  ::grpc::Status CreateCaptureWaveformFromFileDigicapture(::grpc::ServerContext* context, const CreateCaptureWaveformFromFileDigicaptureRequest* request, CreateCaptureWaveformFromFileDigicaptureResponse* response) override;
  ::grpc::Status CreateCaptureWaveformParallel(::grpc::ServerContext* context, const CreateCaptureWaveformParallelRequest* request, CreateCaptureWaveformParallelResponse* response) override;
  ::grpc::Status CreateCaptureWaveformSerial(::grpc::ServerContext* context, const CreateCaptureWaveformSerialRequest* request, CreateCaptureWaveformSerialResponse* response) override;
  ::grpc::Status CreateSourceWaveformFromFileTDMS(::grpc::ServerContext* context, const CreateSourceWaveformFromFileTDMSRequest* request, CreateSourceWaveformFromFileTDMSResponse* response) override;
  ::grpc::Status CreateSourceWaveformParallel(::grpc::ServerContext* context, const CreateSourceWaveformParallelRequest* request, CreateSourceWaveformParallelResponse* response) override;
  ::grpc::Status CreateSourceWaveformSerial(::grpc::ServerContext* context, const CreateSourceWaveformSerialRequest* request, CreateSourceWaveformSerialResponse* response) override;
  ::grpc::Status CreateTimeSet(::grpc::ServerContext* context, const CreateTimeSetRequest* request, CreateTimeSetResponse* response) override;
  ::grpc::Status DeleteAllTimeSets(::grpc::ServerContext* context, const DeleteAllTimeSetsRequest* request, DeleteAllTimeSetsResponse* response) override;
  ::grpc::Status DisableSites(::grpc::ServerContext* context, const DisableSitesRequest* request, DisableSitesResponse* response) override;
  ::grpc::Status EnableSites(::grpc::ServerContext* context, const EnableSitesRequest* request, EnableSitesResponse* response) override;
  ::grpc::Status FetchCaptureWaveformU32(::grpc::ServerContext* context, const FetchCaptureWaveformU32Request* request, FetchCaptureWaveformU32Response* response) override;
  ::grpc::Status FrequencyCounterMeasureFrequency(::grpc::ServerContext* context, const FrequencyCounterMeasureFrequencyRequest* request, FrequencyCounterMeasureFrequencyResponse* response) override;
  ::grpc::Status GetAttributeViBoolean(::grpc::ServerContext* context, const GetAttributeViBooleanRequest* request, GetAttributeViBooleanResponse* response) override;
  ::grpc::Status GetAttributeViInt32(::grpc::ServerContext* context, const GetAttributeViInt32Request* request, GetAttributeViInt32Response* response) override;
  ::grpc::Status GetAttributeViInt64(::grpc::ServerContext* context, const GetAttributeViInt64Request* request, GetAttributeViInt64Response* response) override;
  ::grpc::Status GetAttributeViReal64(::grpc::ServerContext* context, const GetAttributeViReal64Request* request, GetAttributeViReal64Response* response) override;
  ::grpc::Status GetAttributeViSession(::grpc::ServerContext* context, const GetAttributeViSessionRequest* request, GetAttributeViSessionResponse* response) override;
  ::grpc::Status GetAttributeViString(::grpc::ServerContext* context, const GetAttributeViStringRequest* request, GetAttributeViStringResponse* response) override;
  ::grpc::Status GetChannelName(::grpc::ServerContext* context, const GetChannelNameRequest* request, GetChannelNameResponse* response) override;
  ::grpc::Status GetChannelNameFromString(::grpc::ServerContext* context, const GetChannelNameFromStringRequest* request, GetChannelNameFromStringResponse* response) override;
  ::grpc::Status GetFailCount(::grpc::ServerContext* context, const GetFailCountRequest* request, GetFailCountResponse* response) override;
  ::grpc::Status GetHistoryRAMSampleCount(::grpc::ServerContext* context, const GetHistoryRAMSampleCountRequest* request, GetHistoryRAMSampleCountResponse* response) override;
  ::grpc::Status GetPatternPinList(::grpc::ServerContext* context, const GetPatternPinListRequest* request, GetPatternPinListResponse* response) override;
  ::grpc::Status GetSitePassFail(::grpc::ServerContext* context, const GetSitePassFailRequest* request, GetSitePassFailResponse* response) override;
  ::grpc::Status GetSiteResultsSiteNumbers(::grpc::ServerContext* context, const GetSiteResultsSiteNumbersRequest* request, GetSiteResultsSiteNumbersResponse* response) override;
  ::grpc::Status GetTimeSetDriveFormat(::grpc::ServerContext* context, const GetTimeSetDriveFormatRequest* request, GetTimeSetDriveFormatResponse* response) override;
  ::grpc::Status GetTimeSetEdge(::grpc::ServerContext* context, const GetTimeSetEdgeRequest* request, GetTimeSetEdgeResponse* response) override;
  ::grpc::Status GetTimeSetEdgeMultiplier(::grpc::ServerContext* context, const GetTimeSetEdgeMultiplierRequest* request, GetTimeSetEdgeMultiplierResponse* response) override;
  ::grpc::Status GetTimeSetPeriod(::grpc::ServerContext* context, const GetTimeSetPeriodRequest* request, GetTimeSetPeriodResponse* response) override;
  ::grpc::Status InitWithOptions(::grpc::ServerContext* context, const InitWithOptionsRequest* request, InitWithOptionsResponse* response) override;
  ::grpc::Status IsDone(::grpc::ServerContext* context, const IsDoneRequest* request, IsDoneResponse* response) override;
  ::grpc::Status IsSiteEnabled(::grpc::ServerContext* context, const IsSiteEnabledRequest* request, IsSiteEnabledResponse* response) override;
  ::grpc::Status LoadLevels(::grpc::ServerContext* context, const LoadLevelsRequest* request, LoadLevelsResponse* response) override;
  ::grpc::Status LoadPattern(::grpc::ServerContext* context, const LoadPatternRequest* request, LoadPatternResponse* response) override;
  ::grpc::Status LoadPinMap(::grpc::ServerContext* context, const LoadPinMapRequest* request, LoadPinMapResponse* response) override;
  ::grpc::Status LoadSpecifications(::grpc::ServerContext* context, const LoadSpecificationsRequest* request, LoadSpecificationsResponse* response) override;
  ::grpc::Status LoadTiming(::grpc::ServerContext* context, const LoadTimingRequest* request, LoadTimingResponse* response) override;
  ::grpc::Status LockSession(::grpc::ServerContext* context, const LockSessionRequest* request, LockSessionResponse* response) override;
  ::grpc::Status PPMUMeasure(::grpc::ServerContext* context, const PPMUMeasureRequest* request, PPMUMeasureResponse* response) override;
  ::grpc::Status PPMUSource(::grpc::ServerContext* context, const PPMUSourceRequest* request, PPMUSourceResponse* response) override;
  ::grpc::Status ReadSequencerFlag(::grpc::ServerContext* context, const ReadSequencerFlagRequest* request, ReadSequencerFlagResponse* response) override;
  ::grpc::Status ReadSequencerRegister(::grpc::ServerContext* context, const ReadSequencerRegisterRequest* request, ReadSequencerRegisterResponse* response) override;
  ::grpc::Status ReadStatic(::grpc::ServerContext* context, const ReadStaticRequest* request, ReadStaticResponse* response) override;
  ::grpc::Status Reset(::grpc::ServerContext* context, const ResetRequest* request, ResetResponse* response) override;
  ::grpc::Status ResetAttribute(::grpc::ServerContext* context, const ResetAttributeRequest* request, ResetAttributeResponse* response) override;
  ::grpc::Status ResetDevice(::grpc::ServerContext* context, const ResetDeviceRequest* request, ResetDeviceResponse* response) override;
  ::grpc::Status SelectFunction(::grpc::ServerContext* context, const SelectFunctionRequest* request, SelectFunctionResponse* response) override;
  ::grpc::Status SelfCalibrate(::grpc::ServerContext* context, const SelfCalibrateRequest* request, SelfCalibrateResponse* response) override;
  ::grpc::Status SendSoftwareEdgeTrigger(::grpc::ServerContext* context, const SendSoftwareEdgeTriggerRequest* request, SendSoftwareEdgeTriggerResponse* response) override;
  ::grpc::Status TDR(::grpc::ServerContext* context, const TDRRequest* request, TDRResponse* response) override;
  ::grpc::Status UnloadAllPatterns(::grpc::ServerContext* context, const UnloadAllPatternsRequest* request, UnloadAllPatternsResponse* response) override;
  ::grpc::Status UnloadSpecifications(::grpc::ServerContext* context, const UnloadSpecificationsRequest* request, UnloadSpecificationsResponse* response) override;
  ::grpc::Status UnlockSession(::grpc::ServerContext* context, const UnlockSessionRequest* request, UnlockSessionResponse* response) override;
  ::grpc::Status WaitUntilDone(::grpc::ServerContext* context, const WaitUntilDoneRequest* request, WaitUntilDoneResponse* response) override;
  ::grpc::Status WriteSequencerFlag(::grpc::ServerContext* context, const WriteSequencerFlagRequest* request, WriteSequencerFlagResponse* response) override;
  ::grpc::Status WriteSequencerRegister(::grpc::ServerContext* context, const WriteSequencerRegisterRequest* request, WriteSequencerRegisterResponse* response) override;
  ::grpc::Status WriteSourceWaveformBroadcastU32(::grpc::ServerContext* context, const WriteSourceWaveformBroadcastU32Request* request, WriteSourceWaveformBroadcastU32Response* response) override;
  ::grpc::Status WriteSourceWaveformDataFromFileTDMS(::grpc::ServerContext* context, const WriteSourceWaveformDataFromFileTDMSRequest* request, WriteSourceWaveformDataFromFileTDMSResponse* response) override;
  ::grpc::Status WriteStatic(::grpc::ServerContext* context, const WriteStaticRequest* request, WriteStaticResponse* response) override;
private:
  NiDigitalLibraryInterface* library_;
  ResourceRepositorySharedPtr session_repository_;
  ::grpc::Status ConvertApiErrorStatusForViSession(::grpc::ServerContext* context, int32_t status, ViSession vi);
  void Copy(const std::vector<ViBoolean>& input, google::protobuf::RepeatedField<bool>* output);
  template <typename TEnum>
  void CopyBytesToEnums(const std::string& input, google::protobuf::RepeatedField<TEnum>* output);
  std::map<std::int32_t, std::string> sequencerflag_input_map_ { {1, "seqflag0"},{2, "seqflag1"},{3, "seqflag2"},{4, "seqflag3"}, };
  std::map<std::string, std::int32_t> sequencerflag_output_map_ { {"seqflag0", 1},{"seqflag1", 2},{"seqflag2", 3},{"seqflag3", 4}, };
  std::map<std::int32_t, std::string> sequencerregister_input_map_ { {1, "reg0"},{2, "reg1"},{3, "reg2"},{4, "reg3"},{5, "reg4"},{6, "reg5"},{7, "reg6"},{8, "reg7"},{9, "reg8"},{10, "reg9"},{11, "reg10"},{12, "reg11"},{13, "reg12"},{14, "reg13"},{15, "reg14"},{16, "reg15"}, };
  std::map<std::string, std::int32_t> sequencerregister_output_map_ { {"reg0", 1},{"reg1", 2},{"reg2", 3},{"reg3", 4},{"reg4", 5},{"reg5", 6},{"reg6", 7},{"reg7", 8},{"reg8", 9},{"reg9", 10},{"reg10", 11},{"reg11", 12},{"reg12", 13},{"reg13", 14},{"reg14", 15},{"reg15", 16}, };

  NiDigitalFeatureToggles feature_toggles_;
};

} // namespace nidigitalpattern_grpc

#endif  // NIDIGITALPATTERN_GRPC_SERVICE_H
