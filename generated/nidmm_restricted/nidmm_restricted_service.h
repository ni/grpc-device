
//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Service header for the NI-DMM-RESTRICTED Metadata
//---------------------------------------------------------------------
#ifndef NIDMM_RESTRICTED_GRPC_SERVICE_H
#define NIDMM_RESTRICTED_GRPC_SERVICE_H

#include <nidmm_restricted.grpc.pb.h>
#include <condition_variable>
#include <grpcpp/grpcpp.h>
#include <grpcpp/health_check_service_interface.h>
#include <grpcpp/ext/proto_server_reflection_plugin.h>
#include <map>
#include <server/converters.h>
#include <server/feature_toggles.h>
#include <server/session_resource_repository.h>
#include <server/shared_library.h>
#include <server/exceptions.h>

#include "nidmm_restricted_library_interface.h"

namespace nidmm_restricted_grpc {

struct NiDmmRestrictedFeatureToggles
{
  using CodeReadiness = nidevice_grpc::FeatureToggles::CodeReadiness;
  NiDmmRestrictedFeatureToggles(const nidevice_grpc::FeatureToggles& feature_toggles = {});

  bool is_enabled;
};

class NiDmmRestrictedService final : public NiDmmRestricted::Service {
public:
  using LibrarySharedPtr = std::shared_ptr<NiDmmRestrictedLibraryInterface>;
  using ResourceRepositorySharedPtr = std::shared_ptr<nidevice_grpc::SessionResourceRepository<ViSession>>;

  NiDmmRestrictedService(
    LibrarySharedPtr library,
    ResourceRepositorySharedPtr resource_repository,
    const NiDmmRestrictedFeatureToggles& feature_toggles = {});
  virtual ~NiDmmRestrictedService();

  ::grpc::Status AttributeWasSetByUser(::grpc::ServerContext* context, const AttributeWasSetByUserRequest* request, AttributeWasSetByUserResponse* response) override;
  ::grpc::Status CachedReadStatus(::grpc::ServerContext* context, const CachedReadStatusRequest* request, CachedReadStatusResponse* response) override;
  ::grpc::Status FetchMultiPointWithCaching(::grpc::ServerContext* context, const FetchMultiPointWithCachingRequest* request, FetchMultiPointWithCachingResponse* response) override;
  ::grpc::Status GetOpenSessionsInformation(::grpc::ServerContext* context, const GetOpenSessionsInformationRequest* request, GetOpenSessionsInformationResponse* response) override;
  ::grpc::Status RequestPrivilege(::grpc::ServerContext* context, const RequestPrivilegeRequest* request, RequestPrivilegeResponse* response) override;
private:
  LibrarySharedPtr library_;
  ResourceRepositorySharedPtr session_repository_;
  ::grpc::Status ConvertApiErrorStatusForViSession(::grpc::ServerContextBase* context, int32_t status, ViSession vi);

  NiDmmRestrictedFeatureToggles feature_toggles_;
};

} // namespace nidmm_restricted_grpc

#endif  // NIDMM_RESTRICTED_GRPC_SERVICE_H
