//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Real implementation of LibraryInterface for NI-DMM-RESTRICTED
//---------------------------------------------------------------------
#ifndef NIDMM_RESTRICTED_GRPC_LIBRARY_H
#define NIDMM_RESTRICTED_GRPC_LIBRARY_H

#include "nidmm_restricted_library_interface.h"

#include <server/shared_library_interface.h>

#include <memory>

namespace nidmm_restricted_grpc {

class NiDmmRestrictedLibrary : public nidmm_restricted_grpc::NiDmmRestrictedLibraryInterface {
 public:
  NiDmmRestrictedLibrary();
  explicit NiDmmRestrictedLibrary(std::shared_ptr<nidevice_grpc::SharedLibraryInterface> shared_library);
  virtual ~NiDmmRestrictedLibrary();

  ::grpc::Status check_function_exists(std::string functionName);
  ViBoolean AttributeWasSetByUser(ViSession vi, ViConstString repCapName, ViAttr attributeId) override;
  ViStatus CachedReadStatus(ViSession vi, ViInt32* acqBacklog, ViInt16* acqStatus) override;
  ViStatus FetchMultiPointWithCaching(ViSession vi, ViInt32 maxTime, ViInt32 arraySize, ViReal64 readingArray[], ViInt32* actualPts, ViBoolean isMonitoring) override;
  ViStatus GetError(ViSession vi, ViStatus* errorCode, ViInt32 bufferSize, ViChar description[]) override;
  ViStatus GetErrorMessage(ViSession vi, ViStatus errorCode, ViInt32 bufferSize, ViChar errorMessage[]) override;
  ViStatus GetOpenSessionsInformation(ViRsrc resourceName, ViString infoJson, ViUInt64 bufferSize, ViUInt64* bufferSizeNeededInBytes) override;
  ViStatus RequestPrivilege(ViSession vi, ViInt32 privilegeLevel) override;

 private:
  using AttributeWasSetByUserPtr = ViBoolean (*)(ViSession vi, ViConstString repCapName, ViAttr attributeId);
  using CachedReadStatusPtr = ViStatus (*)(ViSession vi, ViInt32* acqBacklog, ViInt16* acqStatus);
  using FetchMultiPointWithCachingPtr = ViStatus (*)(ViSession vi, ViInt32 maxTime, ViInt32 arraySize, ViReal64 readingArray[], ViInt32* actualPts, ViBoolean isMonitoring);
  using GetErrorPtr = ViStatus (*)(ViSession vi, ViStatus* errorCode, ViInt32 bufferSize, ViChar description[]);
  using GetErrorMessagePtr = ViStatus (*)(ViSession vi, ViStatus errorCode, ViInt32 bufferSize, ViChar errorMessage[]);
  using GetOpenSessionsInformationPtr = ViStatus (*)(ViRsrc resourceName, ViString infoJson, ViUInt64 bufferSize, ViUInt64* bufferSizeNeededInBytes);
  using RequestPrivilegePtr = ViStatus (*)(ViSession vi, ViInt32 privilegeLevel);

  typedef struct FunctionPointers {
    AttributeWasSetByUserPtr AttributeWasSetByUser;
    CachedReadStatusPtr CachedReadStatus;
    FetchMultiPointWithCachingPtr FetchMultiPointWithCaching;
    GetErrorPtr GetError;
    GetErrorMessagePtr GetErrorMessage;
    GetOpenSessionsInformationPtr GetOpenSessionsInformation;
    RequestPrivilegePtr RequestPrivilege;
  } FunctionLoadStatus;

  std::shared_ptr<nidevice_grpc::SharedLibraryInterface> shared_library_;
  FunctionPointers function_pointers_;
};

}  // namespace nidmm_restricted_grpc

#endif  // NIDMM_RESTRICTED_GRPC_LIBRARY_H
