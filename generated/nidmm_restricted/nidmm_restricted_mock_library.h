//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Mock of LibraryInterface for NI-DMM-RESTRICTED
//---------------------------------------------------------------------
#ifndef NIDMM_RESTRICTED_GRPC_MOCK_LIBRARY_H
#define NIDMM_RESTRICTED_GRPC_MOCK_LIBRARY_H

#include <gmock/gmock.h>
#include <gtest/gtest.h>

#include "nidmm_restricted_library_interface.h"

namespace ni {
namespace tests {
namespace unit {

class NiDmmRestrictedMockLibrary : public nidmm_restricted_grpc::NiDmmRestrictedLibraryInterface {
 public:
  MOCK_METHOD(ViBoolean, AttributeWasSetByUser, (ViSession vi, ViConstString repCapName, ViAttr attributeId), (override));
  MOCK_METHOD(ViStatus, CachedReadStatus, (ViSession vi, ViInt32* acqBacklog, ViInt16* acqStatus), (override));
  MOCK_METHOD(ViStatus, FetchMultiPointWithCaching, (ViSession vi, ViInt32 maxTime, ViInt32 arraySize, ViReal64 readingArray[], ViInt32* actualPts, ViBoolean isMonitoring), (override));
  MOCK_METHOD(ViStatus, GetError, (ViSession vi, ViStatus* errorCode, ViInt32 bufferSize, ViChar description[]), (override));
  MOCK_METHOD(ViStatus, GetErrorMessage, (ViSession vi, ViStatus errorCode, ViInt32 bufferSize, ViChar errorMessage[]), (override));
  MOCK_METHOD(ViStatus, GetOpenSessionsInformation, (ViRsrc resourceName, ViString infoJson, ViUInt64 bufferSize, ViUInt64* bufferSizeNeededInBytes), (override));
  MOCK_METHOD(ViStatus, RequestPrivilege, (ViSession vi, ViInt32 privilegeLevel), (override));
};

}  // namespace unit
}  // namespace tests
}  // namespace ni
#endif  // NIDMM_RESTRICTED_GRPC_MOCK_LIBRARY_H
