//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Compilation test for the NI-SCOPE Metadata
//---------------------------------------------------------------------
#include "niscope_library.h"

namespace niscope_grpc {

ViStatus Abort(ViSession vi)
{
  return niScope_Abort(vi);
}

ViStatus AcquisitionStatus(ViSession vi, ViInt32* acquisitionStatus)
{
  return niScope_AcquisitionStatus(vi, acquisitionStatus);
}

ViStatus ActualMeasWfmSize(ViSession vi, ViInt32 arrayMeasFunction, ViInt32* measWaveformSize)
{
  return niScope_ActualMeasWfmSize(vi, arrayMeasFunction, measWaveformSize);
}

ViStatus ActualNumWfms(ViSession vi, ViConstString channelList, ViInt32* numWfms)
{
  return niScope_ActualNumWfms(vi, channelList, numWfms);
}

ViStatus ActualRecordLength(ViSession vi, ViInt32* recordLength)
{
  return niScope_ActualRecordLength(vi, recordLength);
}

ViStatus AddWaveformProcessing(ViSession vi, ViConstString channelList, ViInt32 measFunction)
{
  return niScope_AddWaveformProcessing(vi, channelList, measFunction);
}

ViStatus AdjustSampleClockRelativeDelay(ViSession vi, ViReal64 delay)
{
  return niScope_AdjustSampleClockRelativeDelay(vi, delay);
}

ViStatus AutoSetup(ViSession vi)
{
  return niScope_AutoSetup(vi);
}

ViStatus CableSenseSignalStart(ViSession vi)
{
  return niScope_CableSenseSignalStart(vi);
}

ViStatus CableSenseSignalStop(ViSession vi)
{
  return niScope_CableSenseSignalStop(vi);
}

ViStatus CalFetchDate(ViSession vi, ViInt32 whichOne, ViInt32* year, ViInt32* month, ViInt32* day)
{
  return niScope_CalFetchDate(vi, whichOne, year, month, day);
}

ViStatus CalFetchTemperature(ViSession vi, ViInt32 whichOne, ViReal64* temperature)
{
  return niScope_CalFetchTemperature(vi, whichOne, temperature);
}

ViStatus CalSelfCalibrate(ViSession vi, ViConstString channelList, ViInt32 option)
{
  return niScope_CalSelfCalibrate(vi, channelList, option);
}

ViStatus CheckAttributeViBoolean(ViSession vi, ViConstString channelList, ViAttr attributeId, ViBoolean value)
{
  return niScope_CheckAttributeViBoolean(vi, channelList, attributeId, value);
}

ViStatus CheckAttributeViInt32(ViSession vi, ViConstString channelList, ViAttr attributeId, ViInt32 value)
{
  return niScope_CheckAttributeViInt32(vi, channelList, attributeId, value);
}

ViStatus CheckAttributeViInt64(ViSession vi, ViConstString channelList, ViAttr attributeId, ViInt64 value)
{
  return niScope_CheckAttributeViInt64(vi, channelList, attributeId, value);
}

ViStatus CheckAttributeViReal64(ViSession vi, ViConstString channelList, ViAttr attributeId, ViReal64 value)
{
  return niScope_CheckAttributeViReal64(vi, channelList, attributeId, value);
}

ViStatus CheckAttributeViSession(ViSession vi, ViConstString channelList, ViAttr attributeId, ViSession value)
{
  return niScope_CheckAttributeViSession(vi, channelList, attributeId, value);
}

ViStatus CheckAttributeViString(ViSession vi, ViConstString channelList, ViAttr attributeId, ViConstString value)
{
  return niScope_CheckAttributeViString(vi, channelList, attributeId, value);
}

ViStatus ClearWaveformMeasurementStats(ViSession vi, ViConstString channelList, ViInt32 clearableMeasurementFunction)
{
  return niScope_ClearWaveformMeasurementStats(vi, channelList, clearableMeasurementFunction);
}

ViStatus ClearWaveformProcessing(ViSession vi, ViConstString channelList)
{
  return niScope_ClearWaveformProcessing(vi, channelList);
}

ViStatus Close(ViSession vi)
{
  return niScope_close(vi);
}

ViStatus Commit(ViSession vi)
{
  return niScope_Commit(vi);
}

ViStatus ConfigureAcquisition(ViSession vi, ViInt32 acquisitionType)
{
  return niScope_ConfigureAcquisition(vi, acquisitionType);
}

ViStatus ConfigureChanCharacteristics(ViSession vi, ViConstString channelList, ViReal64 inputImpedance, ViReal64 maxInputFrequency)
{
  return niScope_ConfigureChanCharacteristics(vi, channelList, inputImpedance, maxInputFrequency);
}

ViStatus ConfigureClock(ViSession vi, ViConstString inputClockSource, ViConstString outputClockSource, ViConstString clockSyncPulseSource, ViBoolean masterEnabled)
{
  return niScope_ConfigureClock(vi, inputClockSource, outputClockSource, clockSyncPulseSource, masterEnabled);
}

ViStatus ConfigureEqualizationFilterCoefficients(ViSession vi, ViConstString channelList, ViInt32 numberOfCoefficients, ViReal64 coefficients[])
{
  return niScope_ConfigureEqualizationFilterCoefficients(vi, channelList, numberOfCoefficients, coefficients);
}

ViStatus ConfigureHorizontalTiming(ViSession vi, ViReal64 minSampleRate, ViInt32 minNumPts, ViReal64 refPosition, ViInt32 numRecords, ViBoolean enforceRealtime)
{
  return niScope_ConfigureHorizontalTiming(vi, minSampleRate, minNumPts, refPosition, numRecords, enforceRealtime);
}

ViStatus ConfigureTriggerDigital(ViSession vi, ViConstString triggerSource, ViInt32 slope, ViReal64 holdoff, ViReal64 delay)
{
  return niScope_ConfigureTriggerDigital(vi, triggerSource, slope, holdoff, delay);
}

ViStatus ConfigureTriggerEdge(ViSession vi, ViConstString triggerSource, ViReal64 level, ViInt32 slope, ViInt32 triggerCoupling, ViReal64 holdoff, ViReal64 delay)
{
  return niScope_ConfigureTriggerEdge(vi, triggerSource, level, slope, triggerCoupling, holdoff, delay);
}

ViStatus ConfigureTriggerGlitch(ViSession vi, ViConstString triggerSource, ViReal64 level, ViReal64 width, ViInt32 polarity, ViInt32 glitchCondition, ViInt32 triggerCoupling, ViReal64 holdoff, ViReal64 delay)
{
  return niScope_ConfigureTriggerGlitch(vi, triggerSource, level, width, polarity, glitchCondition, triggerCoupling, holdoff, delay);
}

ViStatus ConfigureTriggerHysteresis(ViSession vi, ViConstString triggerSource, ViReal64 level, ViReal64 hysteresis, ViInt32 slope, ViInt32 triggerCoupling, ViReal64 holdoff, ViReal64 delay)
{
  return niScope_ConfigureTriggerHysteresis(vi, triggerSource, level, hysteresis, slope, triggerCoupling, holdoff, delay);
}

ViStatus ConfigureTriggerImmediate(ViSession vi)
{
  return niScope_ConfigureTriggerImmediate(vi);
}

ViStatus ConfigureTriggerRunt(ViSession vi, ViConstString triggerSource, ViReal64 lowThreshold, ViReal64 highThreshold, ViInt32 polarity, ViInt32 triggerCoupling, ViReal64 holdoff, ViReal64 delay)
{
  return niScope_ConfigureTriggerRunt(vi, triggerSource, lowThreshold, highThreshold, polarity, triggerCoupling, holdoff, delay);
}

ViStatus ConfigureTriggerSoftware(ViSession vi, ViReal64 holdoff, ViReal64 delay)
{
  return niScope_ConfigureTriggerSoftware(vi, holdoff, delay);
}

ViStatus ConfigureTriggerVideo(ViSession vi, ViConstString triggerSource, ViBoolean enableDcRestore, ViInt32 signalFormat, ViInt32 eventParameter, ViInt32 lineNumber, ViInt32 polarity, ViInt32 triggerCoupling, ViReal64 holdoff, ViReal64 delay)
{
  return niScope_ConfigureTriggerVideo(vi, triggerSource, enableDcRestore, signalFormat, eventParameter, lineNumber, polarity, triggerCoupling, holdoff, delay);
}

ViStatus ConfigureTriggerWidth(ViSession vi, ViConstString triggerSource, ViReal64 level, ViReal64 lowThreshold, ViReal64 highThreshold, ViInt32 polarity, ViInt32 condition, ViInt32 triggerCoupling, ViReal64 holdoff, ViReal64 delay)
{
  return niScope_ConfigureTriggerWidth(vi, triggerSource, level, lowThreshold, highThreshold, polarity, condition, triggerCoupling, holdoff, delay);
}

ViStatus ConfigureTriggerWindow(ViSession vi, ViConstString triggerSource, ViReal64 lowLevel, ViReal64 highLevel, ViInt32 windowMode, ViInt32 triggerCoupling, ViReal64 holdoff, ViReal64 delay)
{
  return niScope_ConfigureTriggerWindow(vi, triggerSource, lowLevel, highLevel, windowMode, triggerCoupling, holdoff, delay);
}

ViStatus ConfigureVertical(ViSession vi, ViConstString channelList, ViReal64 range, ViReal64 offset, ViInt32 coupling, ViReal64 probeAttenuation, ViBoolean enabled)
{
  return niScope_ConfigureVertical(vi, channelList, range, offset, coupling, probeAttenuation, enabled);
}

ViStatus Disable(ViSession vi)
{
  return niScope_Disable(vi);
}

ViStatus ErrorHandler(ViSession vi, ViStatus errorCode, ViChar errorSource[55], ViChar errorDescription[642])
{
  return niScope_errorHandler(vi, errorCode, errorSource, errorDescription);
}

ViStatus ExportAttributeConfigurationBuffer(ViSession vi, ViInt32 sizeInBytes, ViInt8 configuration[])
{
  return niScope_ExportAttributeConfigurationBuffer(vi, sizeInBytes, configuration);
}

ViStatus ExportAttributeConfigurationFile(ViSession vi, ViConstString filePath)
{
  return niScope_ExportAttributeConfigurationFile(vi, filePath);
}

ViStatus ExportSignal(ViSession vi, ViInt32 signal, ViConstString signalIdentifier, ViConstString outputTerminal)
{
  return niScope_ExportSignal(vi, signal, signalIdentifier, outputTerminal);
}

ViStatus Fetch(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 numSamples, ViReal64 waveform[], niScope_wfmInfo wfmInfo[])
{
  return niScope_Fetch(vi, channelList, timeout, numSamples, waveform, wfmInfo);
}

ViStatus FetchArrayMeasurement(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 arrayMeasFunction, ViInt32 measWfmSize, ViReal64 measWfm[], niScope_wfmInfo wfmInfo[])
{
  return niScope_FetchArrayMeasurement(vi, channelList, timeout, arrayMeasFunction, measWfmSize, measWfm, wfmInfo);
}

ViStatus FetchBinary16(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 numSamples, ViInt16 waveform[], niScope_wfmInfo wfmInfo[])
{
  return niScope_FetchBinary16(vi, channelList, timeout, numSamples, waveform, wfmInfo);
}

ViStatus FetchBinary32(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 numSamples, ViInt32 waveform[], niScope_wfmInfo wfmInfo[])
{
  return niScope_FetchBinary32(vi, channelList, timeout, numSamples, waveform, wfmInfo);
}

ViStatus FetchBinary8(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 numSamples, ViInt8 waveform[], niScope_wfmInfo wfmInfo[])
{
  return niScope_FetchBinary8(vi, channelList, timeout, numSamples, waveform, wfmInfo);
}

ViStatus FetchComplex(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 numSamples, NIComplexNumber_struct wfm[], niScope_wfmInfo wfmInfo[])
{
  return niScope_FetchComplex(vi, channelList, timeout, numSamples, wfm, wfmInfo);
}

ViStatus FetchComplexBinary16(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 numSamples, NIComplexI16_struct wfm[], niScope_wfmInfo wfmInfo[])
{
  return niScope_FetchComplexBinary16(vi, channelList, timeout, numSamples, wfm, wfmInfo);
}

ViStatus FetchMeasurement(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 scalarMeasFunction, ViReal64 result[])
{
  return niScope_FetchMeasurement(vi, channelList, timeout, scalarMeasFunction, result);
}

ViStatus FetchMeasurementStats(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 scalarMeasFunction, ViReal64 result[], ViReal64 mean[], ViReal64 stdev[], ViReal64 min[], ViReal64 max[], ViInt32 numInStats[])
{
  return niScope_FetchMeasurementStats(vi, channelList, timeout, scalarMeasFunction, result, mean, stdev, min, max, numInStats);
}

ViStatus GetAttributeViBoolean(ViSession vi, ViConstString channelList, ViAttr attributeId, ViBoolean* value)
{
  return niScope_GetAttributeViBoolean(vi, channelList, attributeId, value);
}

ViStatus GetAttributeViInt32(ViSession vi, ViConstString channelList, ViAttr attributeId, ViInt32* value)
{
  return niScope_GetAttributeViInt32(vi, channelList, attributeId, value);
}

ViStatus GetAttributeViInt64(ViSession vi, ViConstString channelList, ViAttr attributeId, ViInt64* value)
{
  return niScope_GetAttributeViInt64(vi, channelList, attributeId, value);
}

ViStatus GetAttributeViReal64(ViSession vi, ViConstString channelList, ViAttr attributeId, ViReal64* value)
{
  return niScope_GetAttributeViReal64(vi, channelList, attributeId, value);
}

ViStatus GetAttributeViSession(ViSession vi, ViConstString channelList, ViAttr attributeId, ViSession* value)
{
  return niScope_GetAttributeViSession(vi, channelList, attributeId, value);
}

ViStatus GetAttributeViString(ViSession vi, ViConstString channelList, ViAttr attributeId, ViInt32 bufSize, ViChar value[])
{
  return niScope_GetAttributeViString(vi, channelList, attributeId, bufSize, value);
}

ViStatus GetChannelName(ViSession vi, ViInt32 index, ViInt32 bufferSize, ViChar channelString[])
{
  return niScope_GetChannelName(vi, index, bufferSize, channelString);
}

ViStatus GetChannelNameFromString(ViSession vi, ViConstString index, ViInt32 bufferSize, ViChar name[])
{
  return niScope_GetChannelNameFromString(vi, index, bufferSize, name);
}

ViStatus GetEqualizationFilterCoefficients(ViSession vi, ViConstString channel, ViInt32 numberOfCoefficients, ViReal64 coefficients[])
{
  return niScope_GetEqualizationFilterCoefficients(vi, channel, numberOfCoefficients, coefficients);
}

ViStatus GetError(ViSession vi, ViStatus* errorCode, ViInt32 bufferSize, ViChar description[])
{
  return niScope_GetError(vi, errorCode, bufferSize, description);
}

ViStatus GetErrorMessage(ViSession vi, ViStatus errorCode, ViInt32 bufferSize, ViChar errorMessage[])
{
  return niScope_GetErrorMessage(vi, errorCode, bufferSize, errorMessage);
}

ViStatus GetFrequencyResponse(ViSession vi, ViConstString channel, ViInt32 bufferSize, ViReal64 frequencies[], ViReal64 amplitudes[], ViReal64 phases[], ViInt32* numberOfFrequencies)
{
  return niScope_GetFrequencyResponse(vi, channel, bufferSize, frequencies, amplitudes, phases, numberOfFrequencies);
}

ViStatus GetNormalizationCoefficients(ViSession vi, ViConstString channelList, ViInt32 bufferSize, niScope_coefficientInfo coefficientInfo[], ViInt32* numberOfCoefficientSets)
{
  return niScope_GetNormalizationCoefficients(vi, channelList, bufferSize, coefficientInfo, numberOfCoefficientSets);
}

ViStatus GetScalingCoefficients(ViSession vi, ViConstString channelList, ViInt32 bufferSize, niScope_coefficientInfo coefficientInfo[], ViInt32* numberOfCoefficientSets)
{
  return niScope_GetScalingCoefficients(vi, channelList, bufferSize, coefficientInfo, numberOfCoefficientSets);
}

ViStatus GetStreamEndpointHandle(ViSession vi, ViConstString streamName, ViUInt32* writerHandle)
{
  return niScope_GetStreamEndpointHandle(vi, streamName, writerHandle);
}

ViStatus ImportAttributeConfigurationBuffer(ViSession vi, ViInt32 sizeInBytes, ViInt8 configuration[])
{
  return niScope_ImportAttributeConfigurationBuffer(vi, sizeInBytes, configuration);
}

ViStatus ImportAttributeConfigurationFile(ViSession vi, ViConstString filePath)
{
  return niScope_ImportAttributeConfigurationFile(vi, filePath);
}

ViStatus Init(ViRsrc resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViSession* vi)
{
  return niScope_init(resourceName, idQuery, resetDevice, vi);
}

ViStatus InitWithOptions(ViRsrc resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViConstString optionString, ViSession* vi)
{
  return niScope_InitWithOptions(resourceName, idQuery, resetDevice, optionString, vi);
}

ViStatus InitiateAcquisition(ViSession vi)
{
  return niScope_InitiateAcquisition(vi);
}

ViStatus ProbeCompensationSignalStart(ViSession vi)
{
  return niScope_ProbeCompensationSignalStart(vi);
}

ViStatus ProbeCompensationSignalStop(ViSession vi)
{
  return niScope_ProbeCompensationSignalStop(vi);
}

ViStatus Read(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 numSamples, ViReal64 waveform[], niScope_wfmInfo wfmInfo[])
{
  return niScope_Read(vi, channelList, timeout, numSamples, waveform, wfmInfo);
}

ViStatus ReadMeasurement(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 scalarMeasFunction, ViReal64 result[])
{
  return niScope_ReadMeasurement(vi, channelList, timeout, scalarMeasFunction, result);
}

ViStatus Reset(ViSession vi)
{
  return niScope_reset(vi);
}

ViStatus ResetDevice(ViSession vi)
{
  return niScope_ResetDevice(vi);
}

ViStatus RevisionQuery(ViSession vi, ViChar driverRevision[256], ViChar firmwareRevision[256])
{
  return niScope_revision_query(vi, driverRevision, firmwareRevision);
}

ViStatus SampleMode(ViSession vi, ViInt32* sampleMode)
{
  return niScope_SampleMode(vi, sampleMode);
}

ViStatus SampleRate(ViSession vi, ViReal64* sampleRate)
{
  return niScope_SampleRate(vi, sampleRate);
}

ViStatus SelfTest(ViSession vi, ViInt16* selfTestResult, ViChar selfTestMessage[256])
{
  return niScope_self_test(vi, selfTestResult, selfTestMessage);
}

ViStatus SendSoftwareTriggerEdge(ViSession vi, ViInt32 whichTrigger)
{
  return niScope_SendSoftwareTriggerEdge(vi, whichTrigger);
}

ViStatus SetAttributeViBoolean(ViSession vi, ViConstString channelList, ViAttr attributeId, ViBoolean value)
{
  return niScope_SetAttributeViBoolean(vi, channelList, attributeId, value);
}

ViStatus SetAttributeViInt32(ViSession vi, ViConstString channelList, ViAttr attributeId, ViInt32 value)
{
  return niScope_SetAttributeViInt32(vi, channelList, attributeId, value);
}

ViStatus SetAttributeViInt64(ViSession vi, ViConstString channelList, ViAttr attributeId, ViInt64 value)
{
  return niScope_SetAttributeViInt64(vi, channelList, attributeId, value);
}

ViStatus SetAttributeViReal64(ViSession vi, ViConstString channelList, ViAttr attributeId, ViReal64 value)
{
  return niScope_SetAttributeViReal64(vi, channelList, attributeId, value);
}

ViStatus SetAttributeViSession(ViSession vi, ViConstString channelList, ViAttr attributeId, ViSession value)
{
  return niScope_SetAttributeViSession(vi, channelList, attributeId, value);
}

ViStatus SetAttributeViString(ViSession vi, ViConstString channelList, ViAttr attributeId, ViConstString value)
{
  return niScope_SetAttributeViString(vi, channelList, attributeId, value);
}

}  // namespace niscope_grpc
