//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Real implementation of LibraryInterface for NI-SCOPE
//---------------------------------------------------------------------
#ifndef NISCOPE_GRPC_LIBRARY_H
#define NISCOPE_GRPC_LIBRARY_H

#include "niscope_library_interface.h"

#include <server/shared_library.h>

namespace niscope_grpc {

class NiScopeLibrary : public niscope_grpc::NiScopeLibraryInterface {
 public:
  NiScopeLibrary();
  virtual ~NiScopeLibrary();

  ::grpc::Status check_function_exists(std::string functionName);
  ViStatus Abort(ViSession vi);
  ViStatus AcquisitionStatus(ViSession vi, ViInt32* acquisitionStatus);
  ViStatus ActualMeasWfmSize(ViSession vi, ViInt32 arrayMeasFunction, ViInt32* measWaveformSize);
  ViStatus ActualNumWfms(ViSession vi, ViConstString channelList, ViInt32* numWfms);
  ViStatus ActualRecordLength(ViSession vi, ViInt32* recordLength);
  ViStatus AddWaveformProcessing(ViSession vi, ViConstString channelList, ViInt32 measFunction);
  ViStatus AdjustSampleClockRelativeDelay(ViSession vi, ViReal64 delay);
  ViStatus AutoSetup(ViSession vi);
  ViStatus CableSenseSignalStart(ViSession vi);
  ViStatus CableSenseSignalStop(ViSession vi);
  ViStatus CalSelfCalibrate(ViSession vi, ViConstString channelList, ViInt32 option);
  ViStatus CheckAttributeViBoolean(ViSession vi, ViConstString channelList, ViAttr attributeId, ViBoolean value);
  ViStatus CheckAttributeViInt32(ViSession vi, ViConstString channelList, ViAttr attributeId, ViInt32 value);
  ViStatus CheckAttributeViInt64(ViSession vi, ViConstString channelList, ViAttr attributeId, ViInt64 value);
  ViStatus CheckAttributeViReal64(ViSession vi, ViConstString channelList, ViAttr attributeId, ViReal64 value);
  ViStatus CheckAttributeViSession(ViSession vi, ViConstString channelList, ViAttr attributeId, ViSession value);
  ViStatus CheckAttributeViString(ViSession vi, ViConstString channelList, ViAttr attributeId, ViConstString value);
  ViStatus ClearWaveformMeasurementStats(ViSession vi, ViConstString channelList, ViInt32 clearableMeasurementFunction);
  ViStatus ClearWaveformProcessing(ViSession vi, ViConstString channelList);
  ViStatus Close(ViSession vi);
  ViStatus Commit(ViSession vi);
  ViStatus ConfigureAcquisition(ViSession vi, ViInt32 acquisitionType);
  ViStatus ConfigureChanCharacteristics(ViSession vi, ViConstString channelList, ViReal64 inputImpedance, ViReal64 maxInputFrequency);
  ViStatus ConfigureClock(ViSession vi, ViConstString inputClockSource, ViConstString outputClockSource, ViConstString clockSyncPulseSource, ViBoolean masterEnabled);
  ViStatus ConfigureEqualizationFilterCoefficients(ViSession vi, ViConstString channelList, ViInt32 numberOfCoefficients, ViReal64 coefficients[]);
  ViStatus ConfigureHorizontalTiming(ViSession vi, ViReal64 minSampleRate, ViInt32 minNumPts, ViReal64 refPosition, ViInt32 numRecords, ViBoolean enforceRealtime);
  ViStatus ConfigureTriggerDigital(ViSession vi, ViConstString triggerSource, ViInt32 slope, ViReal64 holdoff, ViReal64 delay);
  ViStatus ConfigureTriggerEdge(ViSession vi, ViConstString triggerSource, ViReal64 level, ViInt32 slope, ViInt32 triggerCoupling, ViReal64 holdoff, ViReal64 delay);
  ViStatus ConfigureTriggerGlitch(ViSession vi, ViConstString triggerSource, ViReal64 level, ViReal64 width, ViInt32 polarity, ViInt32 glitchCondition, ViInt32 triggerCoupling, ViReal64 holdoff, ViReal64 delay);
  ViStatus ConfigureTriggerHysteresis(ViSession vi, ViConstString triggerSource, ViReal64 level, ViReal64 hysteresis, ViInt32 slope, ViInt32 triggerCoupling, ViReal64 holdoff, ViReal64 delay);
  ViStatus ConfigureTriggerImmediate(ViSession vi);
  ViStatus ConfigureTriggerRunt(ViSession vi, ViConstString triggerSource, ViReal64 lowThreshold, ViReal64 highThreshold, ViInt32 polarity, ViInt32 triggerCoupling, ViReal64 holdoff, ViReal64 delay);
  ViStatus ConfigureTriggerSoftware(ViSession vi, ViReal64 holdoff, ViReal64 delay);
  ViStatus ConfigureTriggerVideo(ViSession vi, ViConstString triggerSource, ViBoolean enableDcRestore, ViInt32 signalFormat, ViInt32 eventParameter, ViInt32 lineNumber, ViInt32 polarity, ViInt32 triggerCoupling, ViReal64 holdoff, ViReal64 delay);
  ViStatus ConfigureTriggerWidth(ViSession vi, ViConstString triggerSource, ViReal64 level, ViReal64 lowThreshold, ViReal64 highThreshold, ViInt32 polarity, ViInt32 condition, ViInt32 triggerCoupling, ViReal64 holdoff, ViReal64 delay);
  ViStatus ConfigureTriggerWindow(ViSession vi, ViConstString triggerSource, ViReal64 lowLevel, ViReal64 highLevel, ViInt32 windowMode, ViInt32 triggerCoupling, ViReal64 holdoff, ViReal64 delay);
  ViStatus ConfigureVertical(ViSession vi, ViConstString channelList, ViReal64 range, ViReal64 offset, ViInt32 coupling, ViReal64 probeAttenuation, ViBoolean enabled);
  ViStatus Disable(ViSession vi);
  ViStatus ErrorHandler(ViSession vi, ViStatus errorCode, ViChar errorSource[642], ViChar errorDescription[642]);
  ViStatus ExportAttributeConfigurationBuffer(ViSession vi, ViInt32 sizeInBytes, ViInt8 configuration[]);
  ViStatus ExportAttributeConfigurationFile(ViSession vi, ViConstString filePath);
  ViStatus ExportSignal(ViSession vi, ViInt32 signal, ViConstString signalIdentifier, ViConstString outputTerminal);
  ViStatus Fetch(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 numSamples, ViReal64 waveform[], niScope_wfmInfo wfmInfo[]);
  ViStatus FetchArrayMeasurement(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 arrayMeasFunction, ViInt32 measurementWaveformSize, ViReal64 measWfm[], niScope_wfmInfo wfmInfo[]);
  ViStatus FetchBinary16(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 numSamples, ViInt16 waveform[], niScope_wfmInfo wfmInfo[]);
  ViStatus FetchBinary32(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 numSamples, ViInt32 waveform[], niScope_wfmInfo wfmInfo[]);
  ViStatus FetchBinary8(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 numSamples, ViInt8 waveform[], niScope_wfmInfo wfmInfo[]);
  ViStatus FetchComplex(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 numSamples, NIComplexNumber_struct wfm[], niScope_wfmInfo wfmInfo[]);
  ViStatus FetchComplexBinary16(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 numSamples, NIComplexI16_struct wfm[], niScope_wfmInfo wfmInfo[]);
  ViStatus FetchMeasurement(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 scalarMeasFunction, ViReal64 result[]);
  ViStatus FetchMeasurementStats(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 scalarMeasFunction, ViReal64 result[], ViReal64 mean[], ViReal64 stdev[], ViReal64 min[], ViReal64 max[], ViInt32 numInStats[]);
  ViStatus GetAttributeViBoolean(ViSession vi, ViConstString channelList, ViAttr attributeId, ViBoolean* value);
  ViStatus GetAttributeViInt32(ViSession vi, ViConstString channelList, ViAttr attributeId, ViInt32* value);
  ViStatus GetAttributeViInt64(ViSession vi, ViConstString channelList, ViAttr attributeId, ViInt64* value);
  ViStatus GetAttributeViReal64(ViSession vi, ViConstString channelList, ViAttr attributeId, ViReal64* value);
  ViStatus GetAttributeViSession(ViSession vi, ViConstString channelList, ViAttr attributeId, ViSession* value);
  ViStatus GetAttributeViString(ViSession vi, ViConstString channelList, ViAttr attributeId, ViInt32 bufSize, ViChar value[]);
  ViStatus GetChannelName(ViSession vi, ViInt32 index, ViInt32 bufferSize, ViChar channelString[]);
  ViStatus GetChannelNameFromString(ViSession vi, ViConstString index, ViInt32 bufferSize, ViChar name[]);
  ViStatus GetEqualizationFilterCoefficients(ViSession vi, ViConstString channel, ViInt32 numberOfCoefficients, ViReal64 coefficients[]);
  ViStatus GetError(ViSession vi, ViStatus* errorCode, ViInt32 bufferSize, ViChar description[]);
  ViStatus GetErrorMessage(ViSession vi, ViStatus errorCode, ViInt32 bufferSize, ViChar errorMessage[]);
  ViStatus GetFrequencyResponse(ViSession vi, ViConstString channel, ViInt32 bufferSize, ViReal64 frequencies[], ViReal64 amplitudes[], ViReal64 phases[], ViInt32* numberOfFrequencies);
  ViStatus GetNormalizationCoefficients(ViSession vi, ViConstString channelList, ViInt32 bufferSize, niScope_coefficientInfo coefficientInfo[], ViInt32* numberOfCoefficientSets);
  ViStatus GetScalingCoefficients(ViSession vi, ViConstString channelList, ViInt32 bufferSize, niScope_coefficientInfo coefficientInfo[], ViInt32* numberOfCoefficientSets);
  ViStatus GetStreamEndpointHandle(ViSession vi, ViConstString streamName, ViUInt32* writerHandle);
  ViStatus ImportAttributeConfigurationBuffer(ViSession vi, ViInt32 sizeInBytes, ViInt8 configuration[]);
  ViStatus ImportAttributeConfigurationFile(ViSession vi, ViConstString filePath);
  ViStatus Init(ViRsrc resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViSession* vi);
  ViStatus InitWithOptions(ViRsrc resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViConstString optionString, ViSession* vi);
  ViStatus InitiateAcquisition(ViSession vi);
  ViStatus LockSession(ViSession vi, ViBoolean* callerHasLock);
  ViStatus ProbeCompensationSignalStart(ViSession vi);
  ViStatus ProbeCompensationSignalStop(ViSession vi);
  ViStatus Read(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 numSamples, ViReal64 waveform[], niScope_wfmInfo wfmInfo[]);
  ViStatus ReadMeasurement(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 scalarMeasFunction, ViReal64 result[]);
  ViStatus Reset(ViSession vi);
  ViStatus ResetDevice(ViSession vi);
  ViStatus RevisionQuery(ViSession vi, ViChar driverRevision[256], ViChar firmwareRevision[256]);
  ViStatus SampleMode(ViSession vi, ViInt32* sampleMode);
  ViStatus SampleRate(ViSession vi, ViReal64* sampleRate);
  ViStatus SelfTest(ViSession vi, ViInt16* selfTestResult, ViChar selfTestMessage[256]);
  ViStatus SendSoftwareTriggerEdge(ViSession vi, ViInt32 whichTrigger);
  ViStatus SetAttributeViBoolean(ViSession vi, ViConstString channelList, ViAttr attributeId, ViBoolean value);
  ViStatus SetAttributeViInt32(ViSession vi, ViConstString channelList, ViAttr attributeId, ViInt32 value);
  ViStatus SetAttributeViInt64(ViSession vi, ViConstString channelList, ViAttr attributeId, ViInt64 value);
  ViStatus SetAttributeViReal64(ViSession vi, ViConstString channelList, ViAttr attributeId, ViReal64 value);
  ViStatus SetAttributeViSession(ViSession vi, ViConstString channelList, ViAttr attributeId, ViSession value);
  ViStatus SetAttributeViString(ViSession vi, ViConstString channelList, ViAttr attributeId, ViConstString value);
  ViStatus UnlockSession(ViSession vi, ViBoolean* callerHasLock);

 private:
  using AbortPtr = decltype(&niScope_Abort);
  using AcquisitionStatusPtr = decltype(&niScope_AcquisitionStatus);
  using ActualMeasWfmSizePtr = decltype(&niScope_ActualMeasWfmSize);
  using ActualNumWfmsPtr = decltype(&niScope_ActualNumWfms);
  using ActualRecordLengthPtr = decltype(&niScope_ActualRecordLength);
  using AddWaveformProcessingPtr = decltype(&niScope_AddWaveformProcessing);
  using AdjustSampleClockRelativeDelayPtr = decltype(&niScope_AdjustSampleClockRelativeDelay);
  using AutoSetupPtr = decltype(&niScope_AutoSetup);
  using CableSenseSignalStartPtr = decltype(&niScope_CableSenseSignalStart);
  using CableSenseSignalStopPtr = decltype(&niScope_CableSenseSignalStop);
  using CalSelfCalibratePtr = decltype(&niScope_CalSelfCalibrate);
  using CheckAttributeViBooleanPtr = decltype(&niScope_CheckAttributeViBoolean);
  using CheckAttributeViInt32Ptr = decltype(&niScope_CheckAttributeViInt32);
  using CheckAttributeViInt64Ptr = decltype(&niScope_CheckAttributeViInt64);
  using CheckAttributeViReal64Ptr = decltype(&niScope_CheckAttributeViReal64);
  using CheckAttributeViSessionPtr = decltype(&niScope_CheckAttributeViSession);
  using CheckAttributeViStringPtr = decltype(&niScope_CheckAttributeViString);
  using ClearWaveformMeasurementStatsPtr = decltype(&niScope_ClearWaveformMeasurementStats);
  using ClearWaveformProcessingPtr = decltype(&niScope_ClearWaveformProcessing);
  using ClosePtr = decltype(&niScope_close);
  using CommitPtr = decltype(&niScope_Commit);
  using ConfigureAcquisitionPtr = decltype(&niScope_ConfigureAcquisition);
  using ConfigureChanCharacteristicsPtr = decltype(&niScope_ConfigureChanCharacteristics);
  using ConfigureClockPtr = decltype(&niScope_ConfigureClock);
  using ConfigureEqualizationFilterCoefficientsPtr = decltype(&niScope_ConfigureEqualizationFilterCoefficients);
  using ConfigureHorizontalTimingPtr = decltype(&niScope_ConfigureHorizontalTiming);
  using ConfigureTriggerDigitalPtr = decltype(&niScope_ConfigureTriggerDigital);
  using ConfigureTriggerEdgePtr = decltype(&niScope_ConfigureTriggerEdge);
  using ConfigureTriggerGlitchPtr = decltype(&niScope_ConfigureTriggerGlitch);
  using ConfigureTriggerHysteresisPtr = decltype(&niScope_ConfigureTriggerHysteresis);
  using ConfigureTriggerImmediatePtr = decltype(&niScope_ConfigureTriggerImmediate);
  using ConfigureTriggerRuntPtr = decltype(&niScope_ConfigureTriggerRunt);
  using ConfigureTriggerSoftwarePtr = decltype(&niScope_ConfigureTriggerSoftware);
  using ConfigureTriggerVideoPtr = decltype(&niScope_ConfigureTriggerVideo);
  using ConfigureTriggerWidthPtr = decltype(&niScope_ConfigureTriggerWidth);
  using ConfigureTriggerWindowPtr = decltype(&niScope_ConfigureTriggerWindow);
  using ConfigureVerticalPtr = decltype(&niScope_ConfigureVertical);
  using DisablePtr = decltype(&niScope_Disable);
  using ErrorHandlerPtr = decltype(&niScope_errorHandler);
  using ExportAttributeConfigurationBufferPtr = decltype(&niScope_ExportAttributeConfigurationBuffer);
  using ExportAttributeConfigurationFilePtr = decltype(&niScope_ExportAttributeConfigurationFile);
  using ExportSignalPtr = decltype(&niScope_ExportSignal);
  using FetchPtr = decltype(&niScope_Fetch);
  using FetchArrayMeasurementPtr = decltype(&niScope_FetchArrayMeasurement);
  using FetchBinary16Ptr = decltype(&niScope_FetchBinary16);
  using FetchBinary32Ptr = decltype(&niScope_FetchBinary32);
  using FetchBinary8Ptr = decltype(&niScope_FetchBinary8);
  using FetchComplexPtr = decltype(&niScope_FetchComplex);
  using FetchComplexBinary16Ptr = decltype(&niScope_FetchComplexBinary16);
  using FetchMeasurementPtr = decltype(&niScope_FetchMeasurement);
  using FetchMeasurementStatsPtr = decltype(&niScope_FetchMeasurementStats);
  using GetAttributeViBooleanPtr = decltype(&niScope_GetAttributeViBoolean);
  using GetAttributeViInt32Ptr = decltype(&niScope_GetAttributeViInt32);
  using GetAttributeViInt64Ptr = decltype(&niScope_GetAttributeViInt64);
  using GetAttributeViReal64Ptr = decltype(&niScope_GetAttributeViReal64);
  using GetAttributeViSessionPtr = decltype(&niScope_GetAttributeViSession);
  using GetAttributeViStringPtr = decltype(&niScope_GetAttributeViString);
  using GetChannelNamePtr = decltype(&niScope_GetChannelName);
  using GetChannelNameFromStringPtr = decltype(&niScope_GetChannelNameFromString);
  using GetEqualizationFilterCoefficientsPtr = decltype(&niScope_GetEqualizationFilterCoefficients);
  using GetErrorPtr = decltype(&niScope_GetError);
  using GetErrorMessagePtr = decltype(&niScope_GetErrorMessage);
  using GetFrequencyResponsePtr = decltype(&niScope_GetFrequencyResponse);
  using GetNormalizationCoefficientsPtr = decltype(&niScope_GetNormalizationCoefficients);
  using GetScalingCoefficientsPtr = decltype(&niScope_GetScalingCoefficients);
  using GetStreamEndpointHandlePtr = decltype(&niScope_GetStreamEndpointHandle);
  using ImportAttributeConfigurationBufferPtr = decltype(&niScope_ImportAttributeConfigurationBuffer);
  using ImportAttributeConfigurationFilePtr = decltype(&niScope_ImportAttributeConfigurationFile);
  using InitPtr = decltype(&niScope_init);
  using InitWithOptionsPtr = decltype(&niScope_InitWithOptions);
  using InitiateAcquisitionPtr = decltype(&niScope_InitiateAcquisition);
  using LockSessionPtr = ViStatus (*)(ViSession vi, ViBoolean* callerHasLock);
  using ProbeCompensationSignalStartPtr = decltype(&niScope_ProbeCompensationSignalStart);
  using ProbeCompensationSignalStopPtr = decltype(&niScope_ProbeCompensationSignalStop);
  using ReadPtr = decltype(&niScope_Read);
  using ReadMeasurementPtr = decltype(&niScope_ReadMeasurement);
  using ResetPtr = decltype(&niScope_reset);
  using ResetDevicePtr = decltype(&niScope_ResetDevice);
  using RevisionQueryPtr = decltype(&niScope_revision_query);
  using SampleModePtr = decltype(&niScope_SampleMode);
  using SampleRatePtr = decltype(&niScope_SampleRate);
  using SelfTestPtr = decltype(&niScope_self_test);
  using SendSoftwareTriggerEdgePtr = decltype(&niScope_SendSoftwareTriggerEdge);
  using SetAttributeViBooleanPtr = decltype(&niScope_SetAttributeViBoolean);
  using SetAttributeViInt32Ptr = decltype(&niScope_SetAttributeViInt32);
  using SetAttributeViInt64Ptr = decltype(&niScope_SetAttributeViInt64);
  using SetAttributeViReal64Ptr = decltype(&niScope_SetAttributeViReal64);
  using SetAttributeViSessionPtr = decltype(&niScope_SetAttributeViSession);
  using SetAttributeViStringPtr = decltype(&niScope_SetAttributeViString);
  using UnlockSessionPtr = ViStatus (*)(ViSession vi, ViBoolean* callerHasLock);

  typedef struct FunctionPointers {
    AbortPtr Abort;
    AcquisitionStatusPtr AcquisitionStatus;
    ActualMeasWfmSizePtr ActualMeasWfmSize;
    ActualNumWfmsPtr ActualNumWfms;
    ActualRecordLengthPtr ActualRecordLength;
    AddWaveformProcessingPtr AddWaveformProcessing;
    AdjustSampleClockRelativeDelayPtr AdjustSampleClockRelativeDelay;
    AutoSetupPtr AutoSetup;
    CableSenseSignalStartPtr CableSenseSignalStart;
    CableSenseSignalStopPtr CableSenseSignalStop;
    CalSelfCalibratePtr CalSelfCalibrate;
    CheckAttributeViBooleanPtr CheckAttributeViBoolean;
    CheckAttributeViInt32Ptr CheckAttributeViInt32;
    CheckAttributeViInt64Ptr CheckAttributeViInt64;
    CheckAttributeViReal64Ptr CheckAttributeViReal64;
    CheckAttributeViSessionPtr CheckAttributeViSession;
    CheckAttributeViStringPtr CheckAttributeViString;
    ClearWaveformMeasurementStatsPtr ClearWaveformMeasurementStats;
    ClearWaveformProcessingPtr ClearWaveformProcessing;
    ClosePtr Close;
    CommitPtr Commit;
    ConfigureAcquisitionPtr ConfigureAcquisition;
    ConfigureChanCharacteristicsPtr ConfigureChanCharacteristics;
    ConfigureClockPtr ConfigureClock;
    ConfigureEqualizationFilterCoefficientsPtr ConfigureEqualizationFilterCoefficients;
    ConfigureHorizontalTimingPtr ConfigureHorizontalTiming;
    ConfigureTriggerDigitalPtr ConfigureTriggerDigital;
    ConfigureTriggerEdgePtr ConfigureTriggerEdge;
    ConfigureTriggerGlitchPtr ConfigureTriggerGlitch;
    ConfigureTriggerHysteresisPtr ConfigureTriggerHysteresis;
    ConfigureTriggerImmediatePtr ConfigureTriggerImmediate;
    ConfigureTriggerRuntPtr ConfigureTriggerRunt;
    ConfigureTriggerSoftwarePtr ConfigureTriggerSoftware;
    ConfigureTriggerVideoPtr ConfigureTriggerVideo;
    ConfigureTriggerWidthPtr ConfigureTriggerWidth;
    ConfigureTriggerWindowPtr ConfigureTriggerWindow;
    ConfigureVerticalPtr ConfigureVertical;
    DisablePtr Disable;
    ErrorHandlerPtr ErrorHandler;
    ExportAttributeConfigurationBufferPtr ExportAttributeConfigurationBuffer;
    ExportAttributeConfigurationFilePtr ExportAttributeConfigurationFile;
    ExportSignalPtr ExportSignal;
    FetchPtr Fetch;
    FetchArrayMeasurementPtr FetchArrayMeasurement;
    FetchBinary16Ptr FetchBinary16;
    FetchBinary32Ptr FetchBinary32;
    FetchBinary8Ptr FetchBinary8;
    FetchComplexPtr FetchComplex;
    FetchComplexBinary16Ptr FetchComplexBinary16;
    FetchMeasurementPtr FetchMeasurement;
    FetchMeasurementStatsPtr FetchMeasurementStats;
    GetAttributeViBooleanPtr GetAttributeViBoolean;
    GetAttributeViInt32Ptr GetAttributeViInt32;
    GetAttributeViInt64Ptr GetAttributeViInt64;
    GetAttributeViReal64Ptr GetAttributeViReal64;
    GetAttributeViSessionPtr GetAttributeViSession;
    GetAttributeViStringPtr GetAttributeViString;
    GetChannelNamePtr GetChannelName;
    GetChannelNameFromStringPtr GetChannelNameFromString;
    GetEqualizationFilterCoefficientsPtr GetEqualizationFilterCoefficients;
    GetErrorPtr GetError;
    GetErrorMessagePtr GetErrorMessage;
    GetFrequencyResponsePtr GetFrequencyResponse;
    GetNormalizationCoefficientsPtr GetNormalizationCoefficients;
    GetScalingCoefficientsPtr GetScalingCoefficients;
    GetStreamEndpointHandlePtr GetStreamEndpointHandle;
    ImportAttributeConfigurationBufferPtr ImportAttributeConfigurationBuffer;
    ImportAttributeConfigurationFilePtr ImportAttributeConfigurationFile;
    InitPtr Init;
    InitWithOptionsPtr InitWithOptions;
    InitiateAcquisitionPtr InitiateAcquisition;
    LockSessionPtr LockSession;
    ProbeCompensationSignalStartPtr ProbeCompensationSignalStart;
    ProbeCompensationSignalStopPtr ProbeCompensationSignalStop;
    ReadPtr Read;
    ReadMeasurementPtr ReadMeasurement;
    ResetPtr Reset;
    ResetDevicePtr ResetDevice;
    RevisionQueryPtr RevisionQuery;
    SampleModePtr SampleMode;
    SampleRatePtr SampleRate;
    SelfTestPtr SelfTest;
    SendSoftwareTriggerEdgePtr SendSoftwareTriggerEdge;
    SetAttributeViBooleanPtr SetAttributeViBoolean;
    SetAttributeViInt32Ptr SetAttributeViInt32;
    SetAttributeViInt64Ptr SetAttributeViInt64;
    SetAttributeViReal64Ptr SetAttributeViReal64;
    SetAttributeViSessionPtr SetAttributeViSession;
    SetAttributeViStringPtr SetAttributeViString;
    UnlockSessionPtr UnlockSession;
  } FunctionLoadStatus;

  nidevice_grpc::SharedLibrary shared_library_;
  FunctionPointers function_pointers_;
};

}  // namespace niscope_grpc

#endif  // NISCOPE_GRPC_LIBRARY_H
