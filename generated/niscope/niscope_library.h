//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Real implementation of LibraryInterface for NI-SCOPE
//---------------------------------------------------------------------
#ifndef NI_SCOPE_GRPC_MOCK_LIBRARY_WRAPPER_H
#define NI_SCOPE_GRPC_MOCK_LIBRARY_WRAPPER_H


#include "niscope_library_interface.h"

#include <hardware/grpc/internal/shared_library.h>

namespace ni {
namespace scope {
namespace grpc {

class NiScopeLibrary : public ni::scope::grpc::NiScopeLibraryInterface {
 public:
  NiScopeLibrary();
  virtual ~NiScopeLibrary();

  ::grpc::Status check_function_exists(std::string functionName);
  ViStatus Abort(ViSession vi);
  ViStatus AcquisitionStatus(ViSession vi, ViInt32* acquisitionStatus);
  ViStatus ActualMeasWfmSize(ViSession vi, ViInt32 arrayMeasFunction, ViInt32* measWaveformSize);
  ViStatus ActualNumWfms(ViSession vi, ViConstString channelList, ViInt32* numWfms);
  ViStatus AddWaveformProcessing(ViSession vi, ViConstString channelList, ViInt32 measFunction);
  ViStatus AutoSetup(ViSession vi);
  ViStatus CalSelfCalibrate(ViSession vi, ViConstString channelList, ViInt32 option);
  ViStatus ClearWaveformMeasurementStats(ViSession vi, ViConstString channelList, ViInt32 clearableMeasurementFunction);
  ViStatus ClearWaveformProcessing(ViSession vi, ViConstString channelList);
  ViStatus Commit(ViSession vi);
  ViStatus ConfigureChanCharacteristics(ViSession vi, ViConstString channelList, ViReal64 inputImpedance, ViReal64 maxInputFrequency);
  ViStatus ConfigureEqualizationFilterCoefficients(ViSession vi, ViConstString channelList, ViInt32 numberOfCoefficients, ViReal64 coefficients[]);
  ViStatus ConfigureHorizontalTiming(ViSession vi, ViReal64 minSampleRate, ViInt32 minNumPts, ViReal64 refPosition, ViInt32 numRecords, ViBoolean enforceRealtime);
  ViStatus ConfigureRefLevels(ViSession vi, ViReal64 low, ViReal64 mid, ViReal64 high);
  ViStatus ConfigureTriggerDigital(ViSession vi, ViConstString triggerSource, ViInt32 slope, ViReal64 holdoff, ViReal64 delay);
  ViStatus ConfigureTriggerEdge(ViSession vi, ViConstString triggerSource, ViReal64 level, ViInt32 slope, ViInt32 triggerCoupling, ViReal64 holdoff, ViReal64 delay);
  ViStatus ConfigureTriggerHysteresis(ViSession vi, ViConstString triggerSource, ViReal64 level, ViReal64 hysteresis, ViInt32 slope, ViInt32 triggerCoupling, ViReal64 holdoff, ViReal64 delay);
  ViStatus ConfigureTriggerImmediate(ViSession vi);
  ViStatus ConfigureTriggerSoftware(ViSession vi, ViReal64 holdoff, ViReal64 delay);
  ViStatus ConfigureTriggerVideo(ViSession vi, ViConstString triggerSource, ViBoolean enableDcRestore, ViInt32 signalFormat, ViInt32 eventParameter, ViInt32 lineNumber, ViInt32 polarity, ViInt32 triggerCoupling, ViReal64 holdoff, ViReal64 delay);
  ViStatus ConfigureTriggerWindow(ViSession vi, ViConstString triggerSource, ViReal64 lowLevel, ViReal64 highLevel, ViInt32 windowMode, ViInt32 triggerCoupling, ViReal64 holdoff, ViReal64 delay);
  ViStatus ConfigureVertical(ViSession vi, ViConstString channelList, ViReal64 range, ViReal64 offset, ViInt32 coupling, ViReal64 probeAttenuation, ViBoolean enabled);
  ViStatus Disable(ViSession vi);
  ViStatus ExportAttributeConfigurationBuffer(ViSession vi, ViInt32 sizeInBytes, ViInt8 configuration[]);
  ViStatus ExportAttributeConfigurationFile(ViSession vi, ViConstString filePath);
  ViStatus Fetch(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 numSamples, ViReal64 waveform[], struct niScope_wfmInfo wfmInfo[]);
  ViStatus FetchArrayMeasurement(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 arrayMeasFunction, ViInt32 measurementWaveformSize, ViReal64 measWfm[], struct niScope_wfmInfo wfmInfo[]);
  ViStatus FetchBinary16(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 numSamples, ViInt16 waveform[], struct niScope_wfmInfo wfmInfo[]);
  ViStatus FetchBinary32(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 numSamples, ViInt32 waveform[], struct niScope_wfmInfo wfmInfo[]);
  ViStatus FetchBinary8(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 numSamples, ViInt8 waveform[], struct niScope_wfmInfo wfmInfo[]);
  ViStatus FetchMeasurementStats(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 scalarMeasFunction, ViReal64 result[], ViReal64 mean[], ViReal64 stdev[], ViReal64 min[], ViReal64 max[], ViInt32 numInStats[]);
  ViStatus GetAttributeViBoolean(ViSession vi, ViConstString channelList, ViAttr attributeId, ViBoolean* value);
  ViStatus GetAttributeViInt32(ViSession vi, ViConstString channelList, ViAttr attributeId, ViInt32* value);
  ViStatus GetAttributeViInt64(ViSession vi, ViConstString channelList, ViAttr attributeId, ViInt64* value);
  ViStatus GetAttributeViReal64(ViSession vi, ViConstString channelList, ViAttr attributeId, ViReal64* value);
  ViStatus GetAttributeViString(ViSession vi, ViConstString channelList, ViAttr attributeId, ViInt32 bufSize, ViChar value[]);
  ViStatus GetEqualizationFilterCoefficients(ViSession vi, ViConstString channel, ViInt32 numberOfCoefficients, ViReal64 coefficients[]);
  ViStatus GetError(ViSession vi, ViStatus* errorCode, ViInt32 bufferSize, ViChar description[]);
  ViStatus ImportAttributeConfigurationBuffer(ViSession vi, ViInt32 sizeInBytes, ViInt8 configuration[]);
  ViStatus ImportAttributeConfigurationFile(ViSession vi, ViConstString filePath);
  ViStatus InitWithOptions(ViRsrc resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViConstString optionString, ViSession* vi);
  ViStatus InitiateAcquisition(ViSession vi);
  ViStatus LockSession(ViSession vi, ViBoolean* callerHasLock);
  ViStatus ProbeCompensationSignalStart(ViSession vi);
  ViStatus ProbeCompensationSignalStop(ViSession vi);
  ViStatus Read(ViSession vi, ViConstString channelList, ViReal64 timeout, ViInt32 numSamples, ViReal64 waveform[], struct niScope_wfmInfo wfmInfo[]);
  ViStatus ResetDevice(ViSession vi);
  ViStatus ResetWithDefaults(ViSession vi);
  ViStatus SendSoftwareTriggerEdge(ViSession vi, ViInt32 whichTrigger);
  ViStatus SetAttributeViBoolean(ViSession vi, ViConstString channelList, ViAttr attributeId, ViBoolean value);
  ViStatus SetAttributeViInt32(ViSession vi, ViConstString channelList, ViAttr attributeId, ViInt32 value);
  ViStatus SetAttributeViInt64(ViSession vi, ViConstString channelList, ViAttr attributeId, ViInt64 value);
  ViStatus SetAttributeViReal64(ViSession vi, ViConstString channelList, ViAttr attributeId, ViReal64 value);
  ViStatus SetAttributeViString(ViSession vi, ViConstString channelList, ViAttr attributeId, ViConstString value);
  ViStatus UnlockSession(ViSession vi, ViBoolean* callerHasLock);
  ViStatus close(ViSession vi);
  ViStatus error_message(ViSession vi, ViStatus errorCode, ViChar errorMessage[256]);
  ViStatus reset(ViSession vi);
  ViStatus self_test(ViSession vi, ViInt16* selfTestResult, ViChar selfTestMessage[256]);

 private:
  typedef struct FunctionLoadStatus {
    bool AbortExists;
    bool AcquisitionStatusExists;
    bool ActualMeasWfmSizeExists;
    bool ActualNumWfmsExists;
    bool AddWaveformProcessingExists;
    bool AutoSetupExists;
    bool CalSelfCalibrateExists;
    bool ClearWaveformMeasurementStatsExists;
    bool ClearWaveformProcessingExists;
    bool CommitExists;
    bool ConfigureChanCharacteristicsExists;
    bool ConfigureEqualizationFilterCoefficientsExists;
    bool ConfigureHorizontalTimingExists;
    bool ConfigureRefLevelsExists;
    bool ConfigureTriggerDigitalExists;
    bool ConfigureTriggerEdgeExists;
    bool ConfigureTriggerHysteresisExists;
    bool ConfigureTriggerImmediateExists;
    bool ConfigureTriggerSoftwareExists;
    bool ConfigureTriggerVideoExists;
    bool ConfigureTriggerWindowExists;
    bool ConfigureVerticalExists;
    bool DisableExists;
    bool ExportAttributeConfigurationBufferExists;
    bool ExportAttributeConfigurationFileExists;
    bool FetchExists;
    bool FetchArrayMeasurementExists;
    bool FetchBinary16Exists;
    bool FetchBinary32Exists;
    bool FetchBinary8Exists;
    bool FetchMeasurementStatsExists;
    bool GetAttributeViBooleanExists;
    bool GetAttributeViInt32Exists;
    bool GetAttributeViInt64Exists;
    bool GetAttributeViReal64Exists;
    bool GetAttributeViStringExists;
    bool GetEqualizationFilterCoefficientsExists;
    bool GetErrorExists;
    bool ImportAttributeConfigurationBufferExists;
    bool ImportAttributeConfigurationFileExists;
    bool InitWithOptionsExists;
    bool InitiateAcquisitionExists;
    bool LockSessionExists;
    bool ProbeCompensationSignalStartExists;
    bool ProbeCompensationSignalStopExists;
    bool ReadExists;
    bool ResetDeviceExists;
    bool ResetWithDefaultsExists;
    bool SendSoftwareTriggerEdgeExists;
    bool SetAttributeViBooleanExists;
    bool SetAttributeViInt32Exists;
    bool SetAttributeViInt64Exists;
    bool SetAttributeViReal64Exists;
    bool SetAttributeViStringExists;
    bool UnlockSessionExists;
    bool closeExists;
    bool error_messageExists;
    bool resetExists;
    bool self_testExists;
  } FunctionLoadStatus;

  ni::hardware::grpc::internal::SharedLibrary shared_library_;
  FunctionLoadStatus load_status_;
};

}  // namespace grpc
}  // namespace scope
}  // namespace ni

#endif  // NI_SCOPE_GRPC_MOCK_LIBRARY_WRAPPER_H
