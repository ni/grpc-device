
//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// EXPERIMENTAL Client convenience wrapper for NI-DMM.
//---------------------------------------------------------------------
#ifndef NIDMM_GRPC_CLIENT_H
#define NIDMM_GRPC_CLIENT_H

#include <grpcpp/grpcpp.h>

#include <nidmm.grpc.pb.h>
#include <tests/utilities/client_helpers.h>

#include <memory>
#include <vector>

namespace nidmm_grpc::experimental::client {

namespace pb = ::google::protobuf;
using StubPtr = std::unique_ptr<NiDmm::Stub>;
using namespace nidevice_grpc::experimental::client;


AbortResponse abort(const StubPtr& stub, const nidevice_grpc::Session& vi);
CheckAttributeViBooleanResponse check_attribute_vi_boolean(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_name, const NiDmmAttribute& attribute_id, const bool& attribute_value);
CheckAttributeViInt32Response check_attribute_vi_int32(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_name, const NiDmmAttribute& attribute_id, const simple_variant<NiDmmInt32AttributeValues, pb::int32>& attribute_value);
CheckAttributeViReal64Response check_attribute_vi_real64(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_name, const NiDmmAttribute& attribute_id, const simple_variant<NiDmmReal64AttributeValuesMapped, double>& attribute_value);
CheckAttributeViSessionResponse check_attribute_vi_session(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_name, const NiDmmAttribute& attribute_id, const nidevice_grpc::Session& attribute_value);
CheckAttributeViStringResponse check_attribute_vi_string(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_name, const NiDmmAttribute& attribute_id, const pb::string& attribute_value);
ClearErrorResponse clear_error(const StubPtr& stub, const nidevice_grpc::Session& vi);
ClearInterchangeWarningsResponse clear_interchange_warnings(const StubPtr& stub, const nidevice_grpc::Session& vi);
CloseResponse close(const StubPtr& stub, const nidevice_grpc::Session& vi);
ConfigureACBandwidthResponse configure_ac_bandwidth(const StubPtr& stub, const nidevice_grpc::Session& vi, const double& ac_minimum_frequency_hz, const double& ac_maximum_frequency_hz);
ConfigureADCCalibrationResponse configure_adc_calibration(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::int32& adc_calibration);
ConfigureAutoZeroModeResponse configure_auto_zero_mode(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::int32& auto_zero_mode);
ConfigureCableCompTypeResponse configure_cable_comp_type(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::int32& cable_comp_type);
ConfigureCurrentSourceResponse configure_current_source(const StubPtr& stub, const nidevice_grpc::Session& vi, const double& current_source);
ConfigureFixedRefJunctionResponse configure_fixed_ref_junction(const StubPtr& stub, const nidevice_grpc::Session& vi, const double& fixed_reference_junction);
ConfigureFrequencyVoltageRangeResponse configure_frequency_voltage_range(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<FrequencyVoltageRange, double>& voltage_range);
ConfigureMeasCompleteDestResponse configure_meas_complete_dest(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::int32& meas_complete_destination);
ConfigureMeasCompleteSlopeResponse configure_meas_complete_slope(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::int32& meas_complete_slope);
ConfigureMeasurementAbsoluteResponse configure_measurement_absolute(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<Function, pb::int32>& measurement_function, const double& range, const double& resolution_absolute);
ConfigureMeasurementDigitsResponse configure_measurement_digits(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<Function, pb::int32>& measurement_function, const double& range, const double& resolution_digits);
ConfigureMultiPointResponse configure_multi_point(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<TriggerCount, pb::int32>& trigger_count, const simple_variant<SampleCount, pb::int32>& sample_count, const simple_variant<SampleTrigger, pb::int32>& sample_trigger, const simple_variant<SampleInterval, double>& sample_interval);
ConfigureOffsetCompOhmsResponse configure_offset_comp_ohms(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<OffsetCompensatedOhms, pb::int32>& offset_comp_ohms);
ConfigureOpenCableCompValuesResponse configure_open_cable_comp_values(const StubPtr& stub, const nidevice_grpc::Session& vi, const double& conductance, const double& susceptance);
ConfigurePowerLineFrequencyResponse configure_power_line_frequency(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<PowerLineFrequencies, double>& power_line_frequency_hz);
ConfigureRTDCustomResponse configure_rtd_custom(const StubPtr& stub, const nidevice_grpc::Session& vi, const double& rtd_a, const double& rtd_b, const double& rtd_c);
ConfigureRTDTypeResponse configure_rtd_type(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<RTDType, pb::int32>& rtd_type, const double& rtd_resistance);
ConfigureSampleTriggerSlopeResponse configure_sample_trigger_slope(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<SampleTrigSlope, pb::int32>& sample_trigger_slope);
ConfigureShortCableCompValuesResponse configure_short_cable_comp_values(const StubPtr& stub, const nidevice_grpc::Session& vi, const double& resistance, const double& reactance);
ConfigureThermistorCustomResponse configure_thermistor_custom(const StubPtr& stub, const nidevice_grpc::Session& vi, const double& thermistor_a, const double& thermistor_b, const double& thermistor_c);
ConfigureThermistorTypeResponse configure_thermistor_type(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::int32& thermistor_type);
ConfigureThermocoupleResponse configure_thermocouple(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<ThermocoupleType, pb::int32>& thermocouple_type, const simple_variant<ThermocoupleReferenceJunctionType, pb::int32>& reference_junction_type);
ConfigureTransducerTypeResponse configure_transducer_type(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::int32& transducer_type);
ConfigureTriggerResponse configure_trigger(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<TriggerSource, pb::int32>& trigger_source, const simple_variant<TriggerDelays, double>& trigger_delay);
ConfigureTriggerSlopeResponse configure_trigger_slope(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<TriggerSlope, pb::int32>& trigger_slope);
ConfigureWaveformAcquisitionResponse configure_waveform_acquisition(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<Function, pb::int32>& measurement_function, const double& range, const double& rate, const pb::int32& waveform_points);
ConfigureWaveformCouplingResponse configure_waveform_coupling(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::int32& waveform_coupling);
ControlResponse control(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<ControlCommit, pb::int32>& control_action);
Control4022Response control4022(const StubPtr& stub, const pb::string& resource_name, const simple_variant<Configuration4022, pb::int32>& configuration);
DisableResponse disable(const StubPtr& stub, const nidevice_grpc::Session& vi);
ExportAttributeConfigurationBufferResponse export_attribute_configuration_buffer(const StubPtr& stub, const nidevice_grpc::Session& vi);
ExportAttributeConfigurationFileResponse export_attribute_configuration_file(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& file_path);
FetchResponse fetch(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<TimeLimit, pb::int32>& maximum_time);
FetchMultiPointResponse fetch_multi_point(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<TimeLimit, pb::int32>& maximum_time, const pb::int32& array_size);
FetchWaveformResponse fetch_waveform(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<TimeLimit, pb::int32>& maximum_time, const pb::int32& array_size);
GetApertureTimeInfoResponse get_aperture_time_info(const StubPtr& stub, const nidevice_grpc::Session& vi);
GetAttributeViBooleanResponse get_attribute_vi_boolean(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_name, const NiDmmAttribute& attribute_id);
GetAttributeViInt32Response get_attribute_vi_int32(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_name, const NiDmmAttribute& attribute_id);
GetAttributeViReal64Response get_attribute_vi_real64(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_name, const NiDmmAttribute& attribute_id);
GetAttributeViSessionResponse get_attribute_vi_session(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_name, const NiDmmAttribute& attribute_id);
GetAttributeViStringResponse get_attribute_vi_string(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_name, const NiDmmAttribute& attribute_id);
GetAutoRangeValueResponse get_auto_range_value(const StubPtr& stub, const nidevice_grpc::Session& vi);
GetCalDateAndTimeResponse get_cal_date_and_time(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<CalibrationType, pb::int32>& cal_type);
GetChannelNameResponse get_channel_name(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::int32& index);
GetDevTempResponse get_dev_temp(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& options);
GetErrorResponse get_error(const StubPtr& stub, const nidevice_grpc::Session& vi);
GetErrorMessageResponse get_error_message(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::int32& error_code);
GetExtCalRecommendedIntervalResponse get_ext_cal_recommended_interval(const StubPtr& stub, const nidevice_grpc::Session& vi);
GetLastCalTempResponse get_last_cal_temp(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<CalibrationType, pb::int32>& cal_type);
GetMeasurementPeriodResponse get_measurement_period(const StubPtr& stub, const nidevice_grpc::Session& vi);
GetNextCoercionRecordResponse get_next_coercion_record(const StubPtr& stub, const nidevice_grpc::Session& vi);
GetNextInterchangeWarningResponse get_next_interchange_warning(const StubPtr& stub, const nidevice_grpc::Session& vi);
GetSelfCalSupportedResponse get_self_cal_supported(const StubPtr& stub, const nidevice_grpc::Session& vi);
ImportAttributeConfigurationBufferResponse import_attribute_configuration_buffer(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& configuration);
ImportAttributeConfigurationFileResponse import_attribute_configuration_file(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& file_path);
InitResponse init(const StubPtr& stub, const pb::string& resource_name, const bool& id_query, const bool& reset_device);
InitWithOptionsResponse init_with_options(const StubPtr& stub, const pb::string& resource_name, const bool& id_query, const bool& reset_device, const pb::string& option_string);
InitiateResponse initiate(const StubPtr& stub, const nidevice_grpc::Session& vi);
InvalidateAllAttributesResponse invalidate_all_attributes(const StubPtr& stub, const nidevice_grpc::Session& vi);
IsOverRangeResponse is_over_range(const StubPtr& stub, const nidevice_grpc::Session& vi, const double& measurement_value);
IsUnderRangeResponse is_under_range(const StubPtr& stub, const nidevice_grpc::Session& vi, const double& measurement_value);
PerformOpenCableCompResponse perform_open_cable_comp(const StubPtr& stub, const nidevice_grpc::Session& vi);
PerformShortCableCompResponse perform_short_cable_comp(const StubPtr& stub, const nidevice_grpc::Session& vi);
ReadResponse read(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<TimeLimit, pb::int32>& maximum_time);
ReadMultiPointResponse read_multi_point(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<TimeLimit, pb::int32>& maximum_time, const pb::int32& array_size);
ReadStatusResponse read_status(const StubPtr& stub, const nidevice_grpc::Session& vi);
ReadWaveformResponse read_waveform(const StubPtr& stub, const nidevice_grpc::Session& vi, const simple_variant<TimeLimit, pb::int32>& maximum_time, const pb::int32& array_size);
ResetResponse reset(const StubPtr& stub, const nidevice_grpc::Session& vi);
ResetInterchangeCheckResponse reset_interchange_check(const StubPtr& stub, const nidevice_grpc::Session& vi);
ResetWithDefaultsResponse reset_with_defaults(const StubPtr& stub, const nidevice_grpc::Session& vi);
RevisionQueryResponse revision_query(const StubPtr& stub, const nidevice_grpc::Session& vi);
SelfCalResponse self_cal(const StubPtr& stub, const nidevice_grpc::Session& vi);
SelfTestResponse self_test(const StubPtr& stub, const nidevice_grpc::Session& vi);
SendSoftwareTriggerResponse send_software_trigger(const StubPtr& stub, const nidevice_grpc::Session& vi);
SetAttributeViBooleanResponse set_attribute_vi_boolean(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_name, const NiDmmAttribute& attribute_id, const bool& attribute_value);
SetAttributeViInt32Response set_attribute_vi_int32(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_name, const NiDmmAttribute& attribute_id, const simple_variant<NiDmmInt32AttributeValues, pb::int32>& attribute_value);
SetAttributeViReal64Response set_attribute_vi_real64(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_name, const NiDmmAttribute& attribute_id, const simple_variant<NiDmmReal64AttributeValuesMapped, double>& attribute_value);
SetAttributeViSessionResponse set_attribute_vi_session(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_name, const NiDmmAttribute& attribute_id, const nidevice_grpc::Session& attribute_value);
SetAttributeViStringResponse set_attribute_vi_string(const StubPtr& stub, const nidevice_grpc::Session& vi, const pb::string& channel_name, const NiDmmAttribute& attribute_id, const pb::string& attribute_value);

} // namespace nidmm_grpc::experimental::client

#endif /* NIDMM_GRPC_CLIENT_H */
