//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Real implementation of LibraryInterface for NI-DMM
//---------------------------------------------------------------------
#ifndef NIDMM_GRPC_LIBRARY_H
#define NIDMM_GRPC_LIBRARY_H

#include "nidmm_library_interface.h"

#include <server/shared_library.h>

namespace nidmm_grpc {

class NiDmmLibrary : public nidmm_grpc::NiDmmLibraryInterface {
 public:
  NiDmmLibrary();
  virtual ~NiDmmLibrary();

  ::grpc::Status check_function_exists(std::string functionName);
  ViStatus Control4022(ViRsrc resourceName, ViInt32 configuration);
  ViStatus Abort(ViSession vi);
  ViStatus CheckAttributeViBoolean(ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean attributeValue);
  ViStatus CheckAttributeViInt32(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 attributeValue);
  ViStatus CheckAttributeViReal64(ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64 attributeValue);
  ViStatus CheckAttributeViSession(ViSession vi, ViConstString channelName, ViAttr attributeId, ViSession attributeValue);
  ViStatus CheckAttributeViString(ViSession vi, ViConstString channelName, ViAttr attributeId, ViString attributeValue);
  ViStatus ClearError(ViSession vi);
  ViStatus ClearInterchangeWarnings(ViSession vi);
  ViStatus Close(ViSession vi);
  ViStatus ConfigureACBandwidth(ViSession vi, ViReal64 acMinimumFrequencyHz, ViReal64 acMaximumFrequencyHz);
  ViStatus ConfigureADCCalibration(ViSession vi, ViInt32 adcCalibration);
  ViStatus ConfigureAutoZeroMode(ViSession vi, ViInt32 autoZeroMode);
  ViStatus ConfigureCableCompType(ViSession vi, ViInt32 cableCompType);
  ViStatus ConfigureCurrentSource(ViSession vi, ViReal64 currentSource);
  ViStatus ConfigureFixedRefJunction(ViSession vi, ViReal64 fixedReferenceJunction);
  ViStatus ConfigureFrequencyVoltageRange(ViSession vi, ViReal64 voltageRange);
  ViStatus ConfigureMeasCompleteDest(ViSession vi, ViInt32 measCompleteDestination);
  ViStatus ConfigureMeasurementAbsolute(ViSession vi, ViInt32 measurementFunction, ViReal64 range, ViReal64 resolutionAbsolute);
  ViStatus ConfigureMeasCompleteSlope(ViSession vi, ViInt32 measCompleteSlope);
  ViStatus ConfigureMeasurementDigits(ViSession vi, ViInt32 measurementFunction, ViReal64 range, ViReal64 resolutionDigits);
  ViStatus ConfigureMultiPoint(ViSession vi, ViInt32 triggerCount, ViInt32 sampleCount, ViInt32 sampleTrigger, ViReal64 sampleInterval);
  ViStatus ConfigureOffsetCompOhms(ViSession vi, ViInt32 offsetCompOhms);
  ViStatus ConfigureOpenCableCompValues(ViSession vi, ViReal64 conductance, ViReal64 susceptance);
  ViStatus ConfigurePowerLineFrequency(ViSession vi, ViReal64 powerLineFrequencyHz);
  ViStatus ConfigureShortCableCompValues(ViSession vi, ViReal64 resistance, ViReal64 reactance);
  ViStatus ConfigureRTDCustom(ViSession vi, ViReal64 rtdA, ViReal64 rtdB, ViReal64 rtdC);
  ViStatus ConfigureRTDType(ViSession vi, ViInt32 rtdType, ViReal64 rtdResistance);
  ViStatus ConfigureSampleTriggerSlope(ViSession vi, ViInt32 sampleTriggerSlope);
  ViStatus ConfigureThermistorCustom(ViSession vi, ViReal64 thermistorA, ViReal64 thermistorB, ViReal64 thermistorC);
  ViStatus ConfigureThermocouple(ViSession vi, ViInt32 thermocoupleType, ViInt32 referenceJunctionType);
  ViStatus ConfigureThermistorType(ViSession vi, ViInt32 thermistorType);
  ViStatus ConfigureTransducerType(ViSession vi, ViInt32 transducerType);
  ViStatus ConfigureTrigger(ViSession vi, ViInt32 triggerSource, ViReal64 triggerDelay);
  ViStatus ConfigureTriggerSlope(ViSession vi, ViInt32 triggerSlope);
  ViStatus ConfigureWaveformAcquisition(ViSession vi, ViInt32 measurementFunction, ViReal64 range, ViReal64 rate, ViInt32 waveformPoints);
  ViStatus ConfigureWaveformCoupling(ViSession vi, ViInt32 waveformCoupling);
  ViStatus Control(ViSession vi, ViInt32 controlAction);
  ViStatus Disable(ViSession vi);
  ViStatus ExportAttributeConfigurationBuffer(ViSession vi, ViInt32 size, ViInt8 configuration[]);
  ViStatus ExportAttributeConfigurationFile(ViSession vi, ViConstString filePath);
  ViStatus Fetch(ViSession vi, ViInt32 maximumTime, ViReal64* reading);
  ViStatus FetchMultiPoint(ViSession vi, ViInt32 maximumTime, ViInt32 arraySize, ViReal64 readingArray[], ViInt32* actualNumberOfPoints);
  ViStatus FetchWaveform(ViSession vi, ViInt32 maximumTime, ViInt32 arraySize, ViReal64 waveformArray[], ViInt32* actualNumberOfPoints);
  ViStatus GetApertureTimeInfo(ViSession vi, ViReal64* apertureTime, ViInt32* apertureTimeUnits);
  ViStatus GetAttributeViBoolean(ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean* attributeValue);
  ViStatus GetAttributeViInt32(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32* attributeValue);
  ViStatus GetAttributeViReal64(ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64* attributeValue);
  ViStatus GetAttributeViSession(ViSession vi, ViConstString channelName, ViAttr attributeId, ViSession* attributeValue);
  ViStatus GetAttributeViString(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 bufferSize, ViChar attributeValue[]);
  ViStatus GetAutoRangeValue(ViSession vi, ViReal64* actualRange);
  ViStatus GetCalDateAndTime(ViSession vi, ViInt32 calType, ViInt32* month, ViInt32* day, ViInt32* year, ViInt32* hour, ViInt32* minute);
  ViStatus GetChannelName(ViSession vi, ViInt32 index, ViInt32 bufferSize, ViChar channelString[]);
  ViStatus GetDevTemp(ViSession vi, ViString options, ViReal64* temperature);
  ViStatus GetError(ViSession vi, ViStatus* errorCode, ViInt32 bufferSize, ViChar description[]);
  ViStatus GetErrorMessage(ViSession vi, ViStatus errorCode, ViInt32 bufferSize, ViChar errorMessage[]);
  ViStatus GetExtCalRecommendedInterval(ViSession vi, ViInt32* months);
  ViStatus GetLastCalTemp(ViSession vi, ViInt32 calType, ViReal64* temperature);
  ViStatus GetMeasurementPeriod(ViSession vi, ViReal64* period);
  ViStatus GetNextCoercionRecord(ViSession vi, ViInt32 bufferSize, ViChar coercionRecord[]);
  ViStatus GetNextInterchangeWarning(ViSession vi, ViInt32 bufferSize, ViChar interchangeWarning[]);
  ViStatus GetSelfCalSupported(ViSession vi, ViBoolean* selfCalSupported);
  ViStatus ImportAttributeConfigurationBuffer(ViSession vi, ViInt32 size, ViInt8 configuration[]);
  ViStatus ImportAttributeConfigurationFile(ViSession vi, ViConstString filePath);
  ViStatus Init(ViRsrc resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViSession* vi);
  ViStatus InitWithOptions(ViString resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViString optionString, ViSession* vi);
  ViStatus Initiate(ViSession vi);
  ViStatus InvalidateAllAttributes(ViSession vi);
  ViStatus IsOverRange(ViSession vi, ViReal64 measurementValue, ViBoolean* isOverRange);
  ViStatus IsUnderRange(ViSession vi, ViReal64 measurementValue, ViBoolean* isUnderRange);
  ViStatus LockSession(ViSession vi, ViBoolean* callerHasLock);
  ViStatus PerformOpenCableComp(ViSession vi, ViReal64* conductance, ViReal64* susceptance);
  ViStatus PerformShortCableComp(ViSession vi, ViReal64* resistance, ViReal64* reactance);
  ViStatus Read(ViSession vi, ViInt32 maximumTime, ViReal64* reading);
  ViStatus ReadMultiPoint(ViSession vi, ViInt32 maximumTime, ViInt32 arraySize, ViReal64 readingArray[], ViInt32* actualNumberOfPoints);
  ViStatus ReadStatus(ViSession vi, ViInt32* acquisitionBacklog, ViInt16* acquisitionStatus);
  ViStatus ReadWaveform(ViSession vi, ViInt32 maximumTime, ViInt32 arraySize, ViReal64 waveformArray[], ViInt32* actualNumberOfPoints);
  ViStatus Reset(ViSession vi);
  ViStatus ResetInterchangeCheck(ViSession vi);
  ViStatus ResetWithDefaults(ViSession vi);
  ViStatus RevisionQuery(ViSession vi, ViChar instrumentDriverRevision[256], ViChar firmwareRevision[256]);
  ViStatus SelfCal(ViSession vi);
  ViStatus SelfTest(ViSession vi, ViInt16* selfTestResult, ViChar selfTestMessage[256]);
  ViStatus SendSoftwareTrigger(ViSession vi);
  ViStatus SetAttributeViBoolean(ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean attributeValue);
  ViStatus SetAttributeViInt32(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 attributeValue);
  ViStatus SetAttributeViReal64(ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64 attributeValue);
  ViStatus SetAttributeViSession(ViSession vi, ViConstString channelName, ViAttr attributeId, ViSession attributeValue);
  ViStatus SetAttributeViString(ViSession vi, ViConstString channelName, ViAttr attributeId, ViString attributeValue);
  ViStatus UnlockSession(ViSession vi, ViBoolean* callerHasLock);

 private:
  using Control4022Ptr = ViStatus (*)(ViRsrc resourceName, ViInt32 configuration);
  using AbortPtr = ViStatus (*)(ViSession vi);
  using CheckAttributeViBooleanPtr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean attributeValue);
  using CheckAttributeViInt32Ptr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 attributeValue);
  using CheckAttributeViReal64Ptr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64 attributeValue);
  using CheckAttributeViSessionPtr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViSession attributeValue);
  using CheckAttributeViStringPtr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViString attributeValue);
  using ClearErrorPtr = ViStatus (*)(ViSession vi);
  using ClearInterchangeWarningsPtr = ViStatus (*)(ViSession vi);
  using ClosePtr = ViStatus (*)(ViSession vi);
  using ConfigureACBandwidthPtr = ViStatus (*)(ViSession vi, ViReal64 acMinimumFrequencyHz, ViReal64 acMaximumFrequencyHz);
  using ConfigureADCCalibrationPtr = ViStatus (*)(ViSession vi, ViInt32 adcCalibration);
  using ConfigureAutoZeroModePtr = ViStatus (*)(ViSession vi, ViInt32 autoZeroMode);
  using ConfigureCableCompTypePtr = ViStatus (*)(ViSession vi, ViInt32 cableCompType);
  using ConfigureCurrentSourcePtr = ViStatus (*)(ViSession vi, ViReal64 currentSource);
  using ConfigureFixedRefJunctionPtr = ViStatus (*)(ViSession vi, ViReal64 fixedReferenceJunction);
  using ConfigureFrequencyVoltageRangePtr = ViStatus (*)(ViSession vi, ViReal64 voltageRange);
  using ConfigureMeasCompleteDestPtr = ViStatus (*)(ViSession vi, ViInt32 measCompleteDestination);
  using ConfigureMeasurementAbsolutePtr = ViStatus (*)(ViSession vi, ViInt32 measurementFunction, ViReal64 range, ViReal64 resolutionAbsolute);
  using ConfigureMeasCompleteSlopePtr = ViStatus (*)(ViSession vi, ViInt32 measCompleteSlope);
  using ConfigureMeasurementDigitsPtr = ViStatus (*)(ViSession vi, ViInt32 measurementFunction, ViReal64 range, ViReal64 resolutionDigits);
  using ConfigureMultiPointPtr = ViStatus (*)(ViSession vi, ViInt32 triggerCount, ViInt32 sampleCount, ViInt32 sampleTrigger, ViReal64 sampleInterval);
  using ConfigureOffsetCompOhmsPtr = ViStatus (*)(ViSession vi, ViInt32 offsetCompOhms);
  using ConfigureOpenCableCompValuesPtr = ViStatus (*)(ViSession vi, ViReal64 conductance, ViReal64 susceptance);
  using ConfigurePowerLineFrequencyPtr = ViStatus (*)(ViSession vi, ViReal64 powerLineFrequencyHz);
  using ConfigureShortCableCompValuesPtr = ViStatus (*)(ViSession vi, ViReal64 resistance, ViReal64 reactance);
  using ConfigureRTDCustomPtr = ViStatus (*)(ViSession vi, ViReal64 rtdA, ViReal64 rtdB, ViReal64 rtdC);
  using ConfigureRTDTypePtr = ViStatus (*)(ViSession vi, ViInt32 rtdType, ViReal64 rtdResistance);
  using ConfigureSampleTriggerSlopePtr = ViStatus (*)(ViSession vi, ViInt32 sampleTriggerSlope);
  using ConfigureThermistorCustomPtr = ViStatus (*)(ViSession vi, ViReal64 thermistorA, ViReal64 thermistorB, ViReal64 thermistorC);
  using ConfigureThermocouplePtr = ViStatus (*)(ViSession vi, ViInt32 thermocoupleType, ViInt32 referenceJunctionType);
  using ConfigureThermistorTypePtr = ViStatus (*)(ViSession vi, ViInt32 thermistorType);
  using ConfigureTransducerTypePtr = ViStatus (*)(ViSession vi, ViInt32 transducerType);
  using ConfigureTriggerPtr = ViStatus (*)(ViSession vi, ViInt32 triggerSource, ViReal64 triggerDelay);
  using ConfigureTriggerSlopePtr = ViStatus (*)(ViSession vi, ViInt32 triggerSlope);
  using ConfigureWaveformAcquisitionPtr = ViStatus (*)(ViSession vi, ViInt32 measurementFunction, ViReal64 range, ViReal64 rate, ViInt32 waveformPoints);
  using ConfigureWaveformCouplingPtr = ViStatus (*)(ViSession vi, ViInt32 waveformCoupling);
  using ControlPtr = ViStatus (*)(ViSession vi, ViInt32 controlAction);
  using DisablePtr = ViStatus (*)(ViSession vi);
  using ExportAttributeConfigurationBufferPtr = ViStatus (*)(ViSession vi, ViInt32 size, ViInt8 configuration[]);
  using ExportAttributeConfigurationFilePtr = ViStatus (*)(ViSession vi, ViConstString filePath);
  using FetchPtr = ViStatus (*)(ViSession vi, ViInt32 maximumTime, ViReal64* reading);
  using FetchMultiPointPtr = ViStatus (*)(ViSession vi, ViInt32 maximumTime, ViInt32 arraySize, ViReal64 readingArray[], ViInt32* actualNumberOfPoints);
  using FetchWaveformPtr = ViStatus (*)(ViSession vi, ViInt32 maximumTime, ViInt32 arraySize, ViReal64 waveformArray[], ViInt32* actualNumberOfPoints);
  using GetApertureTimeInfoPtr = ViStatus (*)(ViSession vi, ViReal64* apertureTime, ViInt32* apertureTimeUnits);
  using GetAttributeViBooleanPtr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean* attributeValue);
  using GetAttributeViInt32Ptr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32* attributeValue);
  using GetAttributeViReal64Ptr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64* attributeValue);
  using GetAttributeViSessionPtr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViSession* attributeValue);
  using GetAttributeViStringPtr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 bufferSize, ViChar attributeValue[]);
  using GetAutoRangeValuePtr = ViStatus (*)(ViSession vi, ViReal64* actualRange);
  using GetCalDateAndTimePtr = ViStatus (*)(ViSession vi, ViInt32 calType, ViInt32* month, ViInt32* day, ViInt32* year, ViInt32* hour, ViInt32* minute);
  using GetChannelNamePtr = ViStatus (*)(ViSession vi, ViInt32 index, ViInt32 bufferSize, ViChar channelString[]);
  using GetDevTempPtr = ViStatus (*)(ViSession vi, ViString options, ViReal64* temperature);
  using GetErrorPtr = ViStatus (*)(ViSession vi, ViStatus* errorCode, ViInt32 bufferSize, ViChar description[]);
  using GetErrorMessagePtr = ViStatus (*)(ViSession vi, ViStatus errorCode, ViInt32 bufferSize, ViChar errorMessage[]);
  using GetExtCalRecommendedIntervalPtr = ViStatus (*)(ViSession vi, ViInt32* months);
  using GetLastCalTempPtr = ViStatus (*)(ViSession vi, ViInt32 calType, ViReal64* temperature);
  using GetMeasurementPeriodPtr = ViStatus (*)(ViSession vi, ViReal64* period);
  using GetNextCoercionRecordPtr = ViStatus (*)(ViSession vi, ViInt32 bufferSize, ViChar coercionRecord[]);
  using GetNextInterchangeWarningPtr = ViStatus (*)(ViSession vi, ViInt32 bufferSize, ViChar interchangeWarning[]);
  using GetSelfCalSupportedPtr = ViStatus (*)(ViSession vi, ViBoolean* selfCalSupported);
  using ImportAttributeConfigurationBufferPtr = ViStatus (*)(ViSession vi, ViInt32 size, ViInt8 configuration[]);
  using ImportAttributeConfigurationFilePtr = ViStatus (*)(ViSession vi, ViConstString filePath);
  using InitPtr = ViStatus (*)(ViRsrc resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViSession* vi);
  using InitWithOptionsPtr = ViStatus (*)(ViString resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViString optionString, ViSession* vi);
  using InitiatePtr = ViStatus (*)(ViSession vi);
  using InvalidateAllAttributesPtr = ViStatus (*)(ViSession vi);
  using IsOverRangePtr = ViStatus (*)(ViSession vi, ViReal64 measurementValue, ViBoolean* isOverRange);
  using IsUnderRangePtr = ViStatus (*)(ViSession vi, ViReal64 measurementValue, ViBoolean* isUnderRange);
  using LockSessionPtr = ViStatus (*)(ViSession vi, ViBoolean* callerHasLock);
  using PerformOpenCableCompPtr = ViStatus (*)(ViSession vi, ViReal64* conductance, ViReal64* susceptance);
  using PerformShortCableCompPtr = ViStatus (*)(ViSession vi, ViReal64* resistance, ViReal64* reactance);
  using ReadPtr = ViStatus (*)(ViSession vi, ViInt32 maximumTime, ViReal64* reading);
  using ReadMultiPointPtr = ViStatus (*)(ViSession vi, ViInt32 maximumTime, ViInt32 arraySize, ViReal64 readingArray[], ViInt32* actualNumberOfPoints);
  using ReadStatusPtr = ViStatus (*)(ViSession vi, ViInt32* acquisitionBacklog, ViInt16* acquisitionStatus);
  using ReadWaveformPtr = ViStatus (*)(ViSession vi, ViInt32 maximumTime, ViInt32 arraySize, ViReal64 waveformArray[], ViInt32* actualNumberOfPoints);
  using ResetPtr = ViStatus (*)(ViSession vi);
  using ResetInterchangeCheckPtr = ViStatus (*)(ViSession vi);
  using ResetWithDefaultsPtr = ViStatus (*)(ViSession vi);
  using RevisionQueryPtr = ViStatus (*)(ViSession vi, ViChar instrumentDriverRevision[256], ViChar firmwareRevision[256]);
  using SelfCalPtr = ViStatus (*)(ViSession vi);
  using SelfTestPtr = ViStatus (*)(ViSession vi, ViInt16* selfTestResult, ViChar selfTestMessage[256]);
  using SendSoftwareTriggerPtr = ViStatus (*)(ViSession vi);
  using SetAttributeViBooleanPtr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean attributeValue);
  using SetAttributeViInt32Ptr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 attributeValue);
  using SetAttributeViReal64Ptr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64 attributeValue);
  using SetAttributeViSessionPtr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViSession attributeValue);
  using SetAttributeViStringPtr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attributeId, ViString attributeValue);
  using UnlockSessionPtr = ViStatus (*)(ViSession vi, ViBoolean* callerHasLock);

  typedef struct FunctionPointers {
    Control4022Ptr Control4022;
    AbortPtr Abort;
    CheckAttributeViBooleanPtr CheckAttributeViBoolean;
    CheckAttributeViInt32Ptr CheckAttributeViInt32;
    CheckAttributeViReal64Ptr CheckAttributeViReal64;
    CheckAttributeViSessionPtr CheckAttributeViSession;
    CheckAttributeViStringPtr CheckAttributeViString;
    ClearErrorPtr ClearError;
    ClearInterchangeWarningsPtr ClearInterchangeWarnings;
    ClosePtr Close;
    ConfigureACBandwidthPtr ConfigureACBandwidth;
    ConfigureADCCalibrationPtr ConfigureADCCalibration;
    ConfigureAutoZeroModePtr ConfigureAutoZeroMode;
    ConfigureCableCompTypePtr ConfigureCableCompType;
    ConfigureCurrentSourcePtr ConfigureCurrentSource;
    ConfigureFixedRefJunctionPtr ConfigureFixedRefJunction;
    ConfigureFrequencyVoltageRangePtr ConfigureFrequencyVoltageRange;
    ConfigureMeasCompleteDestPtr ConfigureMeasCompleteDest;
    ConfigureMeasurementAbsolutePtr ConfigureMeasurementAbsolute;
    ConfigureMeasCompleteSlopePtr ConfigureMeasCompleteSlope;
    ConfigureMeasurementDigitsPtr ConfigureMeasurementDigits;
    ConfigureMultiPointPtr ConfigureMultiPoint;
    ConfigureOffsetCompOhmsPtr ConfigureOffsetCompOhms;
    ConfigureOpenCableCompValuesPtr ConfigureOpenCableCompValues;
    ConfigurePowerLineFrequencyPtr ConfigurePowerLineFrequency;
    ConfigureShortCableCompValuesPtr ConfigureShortCableCompValues;
    ConfigureRTDCustomPtr ConfigureRTDCustom;
    ConfigureRTDTypePtr ConfigureRTDType;
    ConfigureSampleTriggerSlopePtr ConfigureSampleTriggerSlope;
    ConfigureThermistorCustomPtr ConfigureThermistorCustom;
    ConfigureThermocouplePtr ConfigureThermocouple;
    ConfigureThermistorTypePtr ConfigureThermistorType;
    ConfigureTransducerTypePtr ConfigureTransducerType;
    ConfigureTriggerPtr ConfigureTrigger;
    ConfigureTriggerSlopePtr ConfigureTriggerSlope;
    ConfigureWaveformAcquisitionPtr ConfigureWaveformAcquisition;
    ConfigureWaveformCouplingPtr ConfigureWaveformCoupling;
    ControlPtr Control;
    DisablePtr Disable;
    ExportAttributeConfigurationBufferPtr ExportAttributeConfigurationBuffer;
    ExportAttributeConfigurationFilePtr ExportAttributeConfigurationFile;
    FetchPtr Fetch;
    FetchMultiPointPtr FetchMultiPoint;
    FetchWaveformPtr FetchWaveform;
    GetApertureTimeInfoPtr GetApertureTimeInfo;
    GetAttributeViBooleanPtr GetAttributeViBoolean;
    GetAttributeViInt32Ptr GetAttributeViInt32;
    GetAttributeViReal64Ptr GetAttributeViReal64;
    GetAttributeViSessionPtr GetAttributeViSession;
    GetAttributeViStringPtr GetAttributeViString;
    GetAutoRangeValuePtr GetAutoRangeValue;
    GetCalDateAndTimePtr GetCalDateAndTime;
    GetChannelNamePtr GetChannelName;
    GetDevTempPtr GetDevTemp;
    GetErrorPtr GetError;
    GetErrorMessagePtr GetErrorMessage;
    GetExtCalRecommendedIntervalPtr GetExtCalRecommendedInterval;
    GetLastCalTempPtr GetLastCalTemp;
    GetMeasurementPeriodPtr GetMeasurementPeriod;
    GetNextCoercionRecordPtr GetNextCoercionRecord;
    GetNextInterchangeWarningPtr GetNextInterchangeWarning;
    GetSelfCalSupportedPtr GetSelfCalSupported;
    ImportAttributeConfigurationBufferPtr ImportAttributeConfigurationBuffer;
    ImportAttributeConfigurationFilePtr ImportAttributeConfigurationFile;
    InitPtr Init;
    InitWithOptionsPtr InitWithOptions;
    InitiatePtr Initiate;
    InvalidateAllAttributesPtr InvalidateAllAttributes;
    IsOverRangePtr IsOverRange;
    IsUnderRangePtr IsUnderRange;
    LockSessionPtr LockSession;
    PerformOpenCableCompPtr PerformOpenCableComp;
    PerformShortCableCompPtr PerformShortCableComp;
    ReadPtr Read;
    ReadMultiPointPtr ReadMultiPoint;
    ReadStatusPtr ReadStatus;
    ReadWaveformPtr ReadWaveform;
    ResetPtr Reset;
    ResetInterchangeCheckPtr ResetInterchangeCheck;
    ResetWithDefaultsPtr ResetWithDefaults;
    RevisionQueryPtr RevisionQuery;
    SelfCalPtr SelfCal;
    SelfTestPtr SelfTest;
    SendSoftwareTriggerPtr SendSoftwareTrigger;
    SetAttributeViBooleanPtr SetAttributeViBoolean;
    SetAttributeViInt32Ptr SetAttributeViInt32;
    SetAttributeViReal64Ptr SetAttributeViReal64;
    SetAttributeViSessionPtr SetAttributeViSession;
    SetAttributeViStringPtr SetAttributeViString;
    UnlockSessionPtr UnlockSession;
  } FunctionLoadStatus;

  nidevice_grpc::SharedLibrary shared_library_;
  FunctionPointers function_pointers_;
};

}  // namespace nidmm_grpc

#endif  // NIDMM_GRPC_LIBRARY_H
