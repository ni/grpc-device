//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Real implementation of LibraryInterface for NI-DMM
//---------------------------------------------------------------------
#ifndef NIDMM_GRPC_LIBRARY_H
#define NIDMM_GRPC_LIBRARY_H

#include "nidmm_library_interface.h"

#include <server/shared_library.h>

namespace nidmm_grpc {

class NiDmmLibrary : public nidmm_grpc::NiDmmLibraryInterface {
 public:
  NiDmmLibrary();
  virtual ~NiDmmLibrary();

  ::grpc::Status check_function_exists(std::string functionName);
  ViStatus Abort(ViSession vi);
  ViStatus CheckAttributeViBoolean(ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean attributeValue);
  ViStatus CheckAttributeViInt32(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 attributeValue);
  ViStatus CheckAttributeViReal64(ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64 attributeValue);
  ViStatus CheckAttributeViSession(ViSession vi, ViConstString channelName, ViAttr attributeId, ViSession attributeValue);
  ViStatus CheckAttributeViString(ViSession vi, ViConstString channelName, ViAttr attributeId, ViString attributeValue);
  ViStatus ClearError(ViSession vi);
  ViStatus ClearInterchangeWarnings(ViSession vi);
  ViStatus Close(ViSession vi);
  ViStatus ConfigureACBandwidth(ViSession vi, ViReal64 acMinimumFrequencyHz, ViReal64 acMaximumFrequencyHz);
  ViStatus ConfigureADCCalibration(ViSession vi, ViInt32 adcCalibration);
  ViStatus ConfigureAutoZeroMode(ViSession vi, ViInt32 autoZeroMode);
  ViStatus ConfigureCableCompType(ViSession vi, ViInt32 cableCompType);
  ViStatus ConfigureCurrentSource(ViSession vi, ViReal64 currentSource);
  ViStatus ConfigureFixedRefJunction(ViSession vi, ViReal64 fixedReferenceJunction);
  ViStatus ConfigureFrequencyVoltageRange(ViSession vi, ViReal64 voltageRange);
  ViStatus ConfigureMeasCompleteDest(ViSession vi, ViInt32 measCompleteDestination);
  ViStatus ConfigureMeasCompleteSlope(ViSession vi, ViInt32 measCompleteSlope);
  ViStatus ConfigureMeasurementAbsolute(ViSession vi, ViInt32 measurementFunction, ViReal64 range, ViReal64 resolutionAbsolute);
  ViStatus ConfigureMeasurementDigits(ViSession vi, ViInt32 measurementFunction, ViReal64 range, ViReal64 resolutionDigits);
  ViStatus ConfigureMultiPoint(ViSession vi, ViInt32 triggerCount, ViInt32 sampleCount, ViInt32 sampleTrigger, ViReal64 sampleInterval);
  ViStatus ConfigureOffsetCompOhms(ViSession vi, ViInt32 offsetCompOhms);
  ViStatus ConfigureOpenCableCompValues(ViSession vi, ViReal64 conductance, ViReal64 susceptance);
  ViStatus ConfigurePowerLineFrequency(ViSession vi, ViReal64 powerLineFrequencyHz);
  ViStatus ConfigureRTDCustom(ViSession vi, ViReal64 rtdA, ViReal64 rtdB, ViReal64 rtdC);
  ViStatus ConfigureRTDType(ViSession vi, ViInt32 rtdType, ViReal64 rtdResistance);
  ViStatus ConfigureSampleTriggerSlope(ViSession vi, ViInt32 sampleTriggerSlope);
  ViStatus ConfigureShortCableCompValues(ViSession vi, ViReal64 resistance, ViReal64 reactance);
  ViStatus ConfigureThermistorCustom(ViSession vi, ViReal64 thermistorA, ViReal64 thermistorB, ViReal64 thermistorC);
  ViStatus ConfigureThermistorType(ViSession vi, ViInt32 thermistorType);
  ViStatus ConfigureThermocouple(ViSession vi, ViInt32 thermocoupleType, ViInt32 referenceJunctionType);
  ViStatus ConfigureTransducerType(ViSession vi, ViInt32 transducerType);
  ViStatus ConfigureTrigger(ViSession vi, ViInt32 triggerSource, ViReal64 triggerDelay);
  ViStatus ConfigureTriggerSlope(ViSession vi, ViInt32 triggerSlope);
  ViStatus ConfigureWaveformAcquisition(ViSession vi, ViInt32 measurementFunction, ViReal64 range, ViReal64 rate, ViInt32 waveformPoints);
  ViStatus ConfigureWaveformCoupling(ViSession vi, ViInt32 waveformCoupling);
  ViStatus Control(ViSession vi, ViInt32 controlAction);
  ViStatus Control4022(ViRsrc resourceName, ViInt32 configuration);
  ViStatus Disable(ViSession vi);
  ViStatus ExportAttributeConfigurationBuffer(ViSession vi, ViInt32 size, ViInt8 configuration[]);
  ViStatus ExportAttributeConfigurationFile(ViSession vi, ViConstString filePath);
  ViStatus Fetch(ViSession vi, ViInt32 maximumTime, ViReal64* reading);
  ViStatus FetchMultiPoint(ViSession vi, ViInt32 maximumTime, ViInt32 arraySize, ViReal64 readingArray[], ViInt32* actualNumberOfPoints);
  ViStatus FetchWaveform(ViSession vi, ViInt32 maximumTime, ViInt32 arraySize, ViReal64 waveformArray[], ViInt32* actualNumberOfPoints);
  ViStatus GetApertureTimeInfo(ViSession vi, ViReal64* apertureTime, ViInt32* apertureTimeUnits);
  ViStatus GetAttributeViBoolean(ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean* attributeValue);
  ViStatus GetAttributeViInt32(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32* attributeValue);
  ViStatus GetAttributeViReal64(ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64* attributeValue);
  ViStatus GetAttributeViSession(ViSession vi, ViConstString channelName, ViAttr attributeId, ViSession* attributeValue);
  ViStatus GetAttributeViString(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 bufferSize, ViChar attributeValue[]);
  ViStatus GetAutoRangeValue(ViSession vi, ViReal64* actualRange);
  ViStatus GetCalDateAndTime(ViSession vi, ViInt32 calType, ViInt32* month, ViInt32* day, ViInt32* year, ViInt32* hour, ViInt32* minute);
  ViStatus GetChannelName(ViSession vi, ViInt32 index, ViInt32 bufferSize, ViChar channelString[]);
  ViStatus GetDevTemp(ViSession vi, ViString options, ViReal64* temperature);
  ViStatus GetError(ViSession vi, ViStatus* errorCode, ViInt32 bufferSize, ViChar description[]);
  ViStatus GetErrorMessage(ViSession vi, ViStatus errorCode, ViInt32 bufferSize, ViChar errorMessage[]);
  ViStatus GetExtCalRecommendedInterval(ViSession vi, ViInt32* months);
  ViStatus GetLastCalTemp(ViSession vi, ViInt32 calType, ViReal64* temperature);
  ViStatus GetMeasurementPeriod(ViSession vi, ViReal64* period);
  ViStatus GetNextCoercionRecord(ViSession vi, ViInt32 bufferSize, ViChar coercionRecord[]);
  ViStatus GetNextInterchangeWarning(ViSession vi, ViInt32 bufferSize, ViChar interchangeWarning[]);
  ViStatus GetSelfCalSupported(ViSession vi, ViBoolean* selfCalSupported);
  ViStatus ImportAttributeConfigurationBuffer(ViSession vi, ViInt32 size, ViInt8 configuration[]);
  ViStatus ImportAttributeConfigurationFile(ViSession vi, ViConstString filePath);
  ViStatus Init(ViString resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViSession* vi);
  ViStatus InitWithOptions(ViString resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViString optionString, ViSession* vi);
  ViStatus Initiate(ViSession vi);
  ViStatus InvalidateAllAttributes(ViSession vi);
  ViStatus IsOverRange(ViSession vi, ViReal64 measurementValue, ViBoolean* isOverRange);
  ViStatus IsUnderRange(ViSession vi, ViReal64 measurementValue, ViBoolean* isUnderRange);
  ViStatus PerformOpenCableComp(ViSession vi, ViReal64* conductance, ViReal64* susceptance);
  ViStatus PerformShortCableComp(ViSession vi, ViReal64* resistance, ViReal64* reactance);
  ViStatus Read(ViSession vi, ViInt32 maximumTime, ViReal64* reading);
  ViStatus ReadMultiPoint(ViSession vi, ViInt32 maximumTime, ViInt32 arraySize, ViReal64 readingArray[], ViInt32* actualNumberOfPoints);
  ViStatus ReadStatus(ViSession vi, ViInt32* acquisitionBacklog, ViInt16* acquisitionStatus);
  ViStatus ReadWaveform(ViSession vi, ViInt32 maximumTime, ViInt32 arraySize, ViReal64 waveformArray[], ViInt32* actualNumberOfPoints);
  ViStatus Reset(ViSession vi);
  ViStatus ResetInterchangeCheck(ViSession vi);
  ViStatus ResetWithDefaults(ViSession vi);
  ViStatus RevisionQuery(ViSession vi, ViChar instrumentDriverRevision[256], ViChar firmwareRevision[256]);
  ViStatus SelfCal(ViSession vi);
  ViStatus SelfTest(ViSession vi, ViInt16* selfTestResult, ViChar selfTestMessage[256]);
  ViStatus SendSoftwareTrigger(ViSession vi);
  ViStatus SetAttributeViBoolean(ViSession vi, ViConstString channelName, ViAttr attributeId, ViBoolean attributeValue);
  ViStatus SetAttributeViInt32(ViSession vi, ViConstString channelName, ViAttr attributeId, ViInt32 attributeValue);
  ViStatus SetAttributeViReal64(ViSession vi, ViConstString channelName, ViAttr attributeId, ViReal64 attributeValue);
  ViStatus SetAttributeViSession(ViSession vi, ViConstString channelName, ViAttr attributeId, ViSession attributeValue);
  ViStatus SetAttributeViString(ViSession vi, ViConstString channelName, ViAttr attributeId, ViString attributeValue);

 private:
  using AbortPtr = decltype(&niDMM_Abort);
  using CheckAttributeViBooleanPtr = decltype(&niDMM_CheckAttributeViBoolean);
  using CheckAttributeViInt32Ptr = decltype(&niDMM_CheckAttributeViInt32);
  using CheckAttributeViReal64Ptr = decltype(&niDMM_CheckAttributeViReal64);
  using CheckAttributeViSessionPtr = decltype(&niDMM_CheckAttributeViSession);
  using CheckAttributeViStringPtr = decltype(&niDMM_CheckAttributeViString);
  using ClearErrorPtr = decltype(&niDMM_ClearError);
  using ClearInterchangeWarningsPtr = decltype(&niDMM_ClearInterchangeWarnings);
  using ClosePtr = decltype(&niDMM_close);
  using ConfigureACBandwidthPtr = decltype(&niDMM_ConfigureACBandwidth);
  using ConfigureADCCalibrationPtr = decltype(&niDMM_ConfigureADCCalibration);
  using ConfigureAutoZeroModePtr = decltype(&niDMM_ConfigureAutoZeroMode);
  using ConfigureCableCompTypePtr = decltype(&niDMM_ConfigureCableCompType);
  using ConfigureCurrentSourcePtr = decltype(&niDMM_ConfigureCurrentSource);
  using ConfigureFixedRefJunctionPtr = decltype(&niDMM_ConfigureFixedRefJunction);
  using ConfigureFrequencyVoltageRangePtr = decltype(&niDMM_ConfigureFrequencyVoltageRange);
  using ConfigureMeasCompleteDestPtr = decltype(&niDMM_ConfigureMeasCompleteDest);
  using ConfigureMeasCompleteSlopePtr = decltype(&niDMM_ConfigureMeasCompleteSlope);
  using ConfigureMeasurementAbsolutePtr = decltype(&niDMM_ConfigureMeasurementAbsolute);
  using ConfigureMeasurementDigitsPtr = decltype(&niDMM_ConfigureMeasurementDigits);
  using ConfigureMultiPointPtr = decltype(&niDMM_ConfigureMultiPoint);
  using ConfigureOffsetCompOhmsPtr = decltype(&niDMM_ConfigureOffsetCompOhms);
  using ConfigureOpenCableCompValuesPtr = decltype(&niDMM_ConfigureOpenCableCompValues);
  using ConfigurePowerLineFrequencyPtr = decltype(&niDMM_ConfigurePowerLineFrequency);
  using ConfigureRTDCustomPtr = decltype(&niDMM_ConfigureRTDCustom);
  using ConfigureRTDTypePtr = decltype(&niDMM_ConfigureRTDType);
  using ConfigureSampleTriggerSlopePtr = decltype(&niDMM_ConfigureSampleTriggerSlope);
  using ConfigureShortCableCompValuesPtr = decltype(&niDMM_ConfigureShortCableCompValues);
  using ConfigureThermistorCustomPtr = decltype(&niDMM_ConfigureThermistorCustom);
  using ConfigureThermistorTypePtr = decltype(&niDMM_ConfigureThermistorType);
  using ConfigureThermocouplePtr = decltype(&niDMM_ConfigureThermocouple);
  using ConfigureTransducerTypePtr = decltype(&niDMM_ConfigureTransducerType);
  using ConfigureTriggerPtr = decltype(&niDMM_ConfigureTrigger);
  using ConfigureTriggerSlopePtr = decltype(&niDMM_ConfigureTriggerSlope);
  using ConfigureWaveformAcquisitionPtr = decltype(&niDMM_ConfigureWaveformAcquisition);
  using ConfigureWaveformCouplingPtr = decltype(&niDMM_ConfigureWaveformCoupling);
  using ControlPtr = decltype(&niDMM_Control);
  using Control4022Ptr = decltype(&niDMM_4022Control);
  using DisablePtr = decltype(&niDMM_Disable);
  using ExportAttributeConfigurationBufferPtr = decltype(&niDMM_ExportAttributeConfigurationBuffer);
  using ExportAttributeConfigurationFilePtr = decltype(&niDMM_ExportAttributeConfigurationFile);
  using FetchPtr = decltype(&niDMM_Fetch);
  using FetchMultiPointPtr = decltype(&niDMM_FetchMultiPoint);
  using FetchWaveformPtr = decltype(&niDMM_FetchWaveform);
  using GetApertureTimeInfoPtr = decltype(&niDMM_GetApertureTimeInfo);
  using GetAttributeViBooleanPtr = decltype(&niDMM_GetAttributeViBoolean);
  using GetAttributeViInt32Ptr = decltype(&niDMM_GetAttributeViInt32);
  using GetAttributeViReal64Ptr = decltype(&niDMM_GetAttributeViReal64);
  using GetAttributeViSessionPtr = decltype(&niDMM_GetAttributeViSession);
  using GetAttributeViStringPtr = decltype(&niDMM_GetAttributeViString);
  using GetAutoRangeValuePtr = decltype(&niDMM_GetAutoRangeValue);
  using GetCalDateAndTimePtr = decltype(&niDMM_GetCalDateAndTime);
  using GetChannelNamePtr = decltype(&niDMM_GetChannelName);
  using GetDevTempPtr = decltype(&niDMM_GetDevTemp);
  using GetErrorPtr = decltype(&niDMM_GetError);
  using GetErrorMessagePtr = decltype(&niDMM_GetErrorMessage);
  using GetExtCalRecommendedIntervalPtr = decltype(&niDMM_GetExtCalRecommendedInterval);
  using GetLastCalTempPtr = decltype(&niDMM_GetLastCalTemp);
  using GetMeasurementPeriodPtr = decltype(&niDMM_GetMeasurementPeriod);
  using GetNextCoercionRecordPtr = decltype(&niDMM_GetNextCoercionRecord);
  using GetNextInterchangeWarningPtr = decltype(&niDMM_GetNextInterchangeWarning);
  using GetSelfCalSupportedPtr = decltype(&niDMM_GetSelfCalSupported);
  using ImportAttributeConfigurationBufferPtr = decltype(&niDMM_ImportAttributeConfigurationBuffer);
  using ImportAttributeConfigurationFilePtr = decltype(&niDMM_ImportAttributeConfigurationFile);
  using InitPtr = decltype(&niDMM_init);
  using InitWithOptionsPtr = decltype(&niDMM_InitWithOptions);
  using InitiatePtr = decltype(&niDMM_Initiate);
  using InvalidateAllAttributesPtr = decltype(&niDMM_InvalidateAllAttributes);
  using IsOverRangePtr = decltype(&niDMM_IsOverRange);
  using IsUnderRangePtr = decltype(&niDMM_IsUnderRange);
  using PerformOpenCableCompPtr = decltype(&niDMM_PerformOpenCableComp);
  using PerformShortCableCompPtr = decltype(&niDMM_PerformShortCableComp);
  using ReadPtr = decltype(&niDMM_Read);
  using ReadMultiPointPtr = decltype(&niDMM_ReadMultiPoint);
  using ReadStatusPtr = decltype(&niDMM_ReadStatus);
  using ReadWaveformPtr = decltype(&niDMM_ReadWaveform);
  using ResetPtr = decltype(&niDMM_reset);
  using ResetInterchangeCheckPtr = decltype(&niDMM_ResetInterchangeCheck);
  using ResetWithDefaultsPtr = decltype(&niDMM_ResetWithDefaults);
  using RevisionQueryPtr = decltype(&niDMM_revision_query);
  using SelfCalPtr = decltype(&niDMM_SelfCal);
  using SelfTestPtr = decltype(&niDMM_self_test);
  using SendSoftwareTriggerPtr = decltype(&niDMM_SendSoftwareTrigger);
  using SetAttributeViBooleanPtr = decltype(&niDMM_SetAttributeViBoolean);
  using SetAttributeViInt32Ptr = decltype(&niDMM_SetAttributeViInt32);
  using SetAttributeViReal64Ptr = decltype(&niDMM_SetAttributeViReal64);
  using SetAttributeViSessionPtr = decltype(&niDMM_SetAttributeViSession);
  using SetAttributeViStringPtr = decltype(&niDMM_SetAttributeViString);

  typedef struct FunctionPointers {
    AbortPtr Abort;
    CheckAttributeViBooleanPtr CheckAttributeViBoolean;
    CheckAttributeViInt32Ptr CheckAttributeViInt32;
    CheckAttributeViReal64Ptr CheckAttributeViReal64;
    CheckAttributeViSessionPtr CheckAttributeViSession;
    CheckAttributeViStringPtr CheckAttributeViString;
    ClearErrorPtr ClearError;
    ClearInterchangeWarningsPtr ClearInterchangeWarnings;
    ClosePtr Close;
    ConfigureACBandwidthPtr ConfigureACBandwidth;
    ConfigureADCCalibrationPtr ConfigureADCCalibration;
    ConfigureAutoZeroModePtr ConfigureAutoZeroMode;
    ConfigureCableCompTypePtr ConfigureCableCompType;
    ConfigureCurrentSourcePtr ConfigureCurrentSource;
    ConfigureFixedRefJunctionPtr ConfigureFixedRefJunction;
    ConfigureFrequencyVoltageRangePtr ConfigureFrequencyVoltageRange;
    ConfigureMeasCompleteDestPtr ConfigureMeasCompleteDest;
    ConfigureMeasCompleteSlopePtr ConfigureMeasCompleteSlope;
    ConfigureMeasurementAbsolutePtr ConfigureMeasurementAbsolute;
    ConfigureMeasurementDigitsPtr ConfigureMeasurementDigits;
    ConfigureMultiPointPtr ConfigureMultiPoint;
    ConfigureOffsetCompOhmsPtr ConfigureOffsetCompOhms;
    ConfigureOpenCableCompValuesPtr ConfigureOpenCableCompValues;
    ConfigurePowerLineFrequencyPtr ConfigurePowerLineFrequency;
    ConfigureRTDCustomPtr ConfigureRTDCustom;
    ConfigureRTDTypePtr ConfigureRTDType;
    ConfigureSampleTriggerSlopePtr ConfigureSampleTriggerSlope;
    ConfigureShortCableCompValuesPtr ConfigureShortCableCompValues;
    ConfigureThermistorCustomPtr ConfigureThermistorCustom;
    ConfigureThermistorTypePtr ConfigureThermistorType;
    ConfigureThermocouplePtr ConfigureThermocouple;
    ConfigureTransducerTypePtr ConfigureTransducerType;
    ConfigureTriggerPtr ConfigureTrigger;
    ConfigureTriggerSlopePtr ConfigureTriggerSlope;
    ConfigureWaveformAcquisitionPtr ConfigureWaveformAcquisition;
    ConfigureWaveformCouplingPtr ConfigureWaveformCoupling;
    ControlPtr Control;
    Control4022Ptr Control4022;
    DisablePtr Disable;
    ExportAttributeConfigurationBufferPtr ExportAttributeConfigurationBuffer;
    ExportAttributeConfigurationFilePtr ExportAttributeConfigurationFile;
    FetchPtr Fetch;
    FetchMultiPointPtr FetchMultiPoint;
    FetchWaveformPtr FetchWaveform;
    GetApertureTimeInfoPtr GetApertureTimeInfo;
    GetAttributeViBooleanPtr GetAttributeViBoolean;
    GetAttributeViInt32Ptr GetAttributeViInt32;
    GetAttributeViReal64Ptr GetAttributeViReal64;
    GetAttributeViSessionPtr GetAttributeViSession;
    GetAttributeViStringPtr GetAttributeViString;
    GetAutoRangeValuePtr GetAutoRangeValue;
    GetCalDateAndTimePtr GetCalDateAndTime;
    GetChannelNamePtr GetChannelName;
    GetDevTempPtr GetDevTemp;
    GetErrorPtr GetError;
    GetErrorMessagePtr GetErrorMessage;
    GetExtCalRecommendedIntervalPtr GetExtCalRecommendedInterval;
    GetLastCalTempPtr GetLastCalTemp;
    GetMeasurementPeriodPtr GetMeasurementPeriod;
    GetNextCoercionRecordPtr GetNextCoercionRecord;
    GetNextInterchangeWarningPtr GetNextInterchangeWarning;
    GetSelfCalSupportedPtr GetSelfCalSupported;
    ImportAttributeConfigurationBufferPtr ImportAttributeConfigurationBuffer;
    ImportAttributeConfigurationFilePtr ImportAttributeConfigurationFile;
    InitPtr Init;
    InitWithOptionsPtr InitWithOptions;
    InitiatePtr Initiate;
    InvalidateAllAttributesPtr InvalidateAllAttributes;
    IsOverRangePtr IsOverRange;
    IsUnderRangePtr IsUnderRange;
    PerformOpenCableCompPtr PerformOpenCableComp;
    PerformShortCableCompPtr PerformShortCableComp;
    ReadPtr Read;
    ReadMultiPointPtr ReadMultiPoint;
    ReadStatusPtr ReadStatus;
    ReadWaveformPtr ReadWaveform;
    ResetPtr Reset;
    ResetInterchangeCheckPtr ResetInterchangeCheck;
    ResetWithDefaultsPtr ResetWithDefaults;
    RevisionQueryPtr RevisionQuery;
    SelfCalPtr SelfCal;
    SelfTestPtr SelfTest;
    SendSoftwareTriggerPtr SendSoftwareTrigger;
    SetAttributeViBooleanPtr SetAttributeViBoolean;
    SetAttributeViInt32Ptr SetAttributeViInt32;
    SetAttributeViReal64Ptr SetAttributeViReal64;
    SetAttributeViSessionPtr SetAttributeViSession;
    SetAttributeViStringPtr SetAttributeViString;
  } FunctionLoadStatus;

  nidevice_grpc::SharedLibrary shared_library_;
  FunctionPointers function_pointers_;
};

}  // namespace nidmm_grpc

#endif  // NIDMM_GRPC_LIBRARY_H
