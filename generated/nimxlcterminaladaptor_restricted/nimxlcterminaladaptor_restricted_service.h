
//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Service header for the NI-MXLCTERMINALADAPTOR-RESTRICTED Metadata
//---------------------------------------------------------------------
#ifndef NIMXLCTERMINALADAPTOR_RESTRICTED_GRPC_SERVICE_H
#define NIMXLCTERMINALADAPTOR_RESTRICTED_GRPC_SERVICE_H

#include <nimxlcterminaladaptor_restricted.grpc.pb.h>
#include <condition_variable>
#include <grpcpp/grpcpp.h>
#include <grpcpp/health_check_service_interface.h>
#include <grpcpp/ext/proto_server_reflection_plugin.h>
#include <map>
#include <server/converters.h>
#include <server/feature_toggles.h>
#include <server/session_resource_repository.h>
#include <server/shared_library.h>
#include <server/exceptions.h>

#include "nimxlcterminaladaptor_restricted_library_interface.h"

namespace nimxlcterminaladaptor_restricted_grpc {

struct NimxlcTerminalAdaptorRestrictedFeatureToggles
{
  using CodeReadiness = nidevice_grpc::FeatureToggles::CodeReadiness;
  NimxlcTerminalAdaptorRestrictedFeatureToggles(const nidevice_grpc::FeatureToggles& feature_toggles = {});

  bool is_enabled;
};

class NimxlcTerminalAdaptorRestrictedService final : public NimxlcTerminalAdaptorRestricted::Service {
public:
  using ResourceRepositorySharedPtr = std::shared_ptr<nidevice_grpc::SessionResourceRepository<nimxlc_Session>>;

  NimxlcTerminalAdaptorRestrictedService(
    NimxlcTerminalAdaptorRestrictedLibraryInterface* library,
    ResourceRepositorySharedPtr resource_repository,
    const NimxlcTerminalAdaptorRestrictedFeatureToggles& feature_toggles = {});
  virtual ~NimxlcTerminalAdaptorRestrictedService();
  
  ::grpc::Status CreateSession(::grpc::ServerContext* context, const CreateSessionRequest* request, CreateSessionResponse* response) override;
  ::grpc::Status DestroySession(::grpc::ServerContext* context, const DestroySessionRequest* request, DestroySessionResponse* response) override;
  ::grpc::Status RefreshTerminalCache(::grpc::ServerContext* context, const RefreshTerminalCacheRequest* request, RefreshTerminalCacheResponse* response) override;
  ::grpc::Status HasTerminalInformationChanged(::grpc::ServerContext* context, const HasTerminalInformationChangedRequest* request, HasTerminalInformationChangedResponse* response) override;
  ::grpc::Status GetSystemChangeNumber(::grpc::ServerContext* context, const GetSystemChangeNumberRequest* request, GetSystemChangeNumberResponse* response) override;
  ::grpc::Status GetDeviceContainer(::grpc::ServerContext* context, const GetDeviceContainerRequest* request, GetDeviceContainerResponse* response) override;
private:
  NimxlcTerminalAdaptorRestrictedLibraryInterface* library_;
  ResourceRepositorySharedPtr session_repository_;
  ::grpc::Status ConvertApiErrorStatusForNimxlc_Session(::grpc::ServerContextBase* context, int32_t status, nimxlc_Session session);

  NimxlcTerminalAdaptorRestrictedFeatureToggles feature_toggles_;
};

} // namespace nimxlcterminaladaptor_restricted_grpc

#endif  // NIMXLCTERMINALADAPTOR_RESTRICTED_GRPC_SERVICE_H
